digraph "" {
	numpy -> "using-a-baseline.ipynb"	[label=importedBy];
	"np(0)" -> numpy	[label=assignedFrom];
	"np(0)" -> "using-a-baseline.ipynb"	[label=appearsIn];
	pandas -> "using-a-baseline.ipynb"	[label=importedBy];
	"pd(0)" -> "using-a-baseline.ipynb"	[label=appearsIn];
	"pd(0)" -> pandas	[label=assignedFrom];
	numba -> "using-a-baseline.ipynb"	[label=importedBy];
	njit -> numba	[label=importedBy];
	"njit(0)" -> "using-a-baseline.ipynb"	[label=appearsIn];
	"njit(0)" -> njit	[label=assignedFrom];
	itertools -> "using-a-baseline.ipynb"	[label=importedBy];
	"itertools(0)" -> "using-a-baseline.ipynb"	[label=appearsIn];
	"itertools(0)" -> itertools	[label=assignedFrom];
	multiprocessing -> "using-a-baseline.ipynb"	[label=importedBy];
	Pool -> multiprocessing	[label=importedBy];
	"Pool(0)" -> "using-a-baseline.ipynb"	[label=appearsIn];
	"Pool(0)" -> Pool	[label=assignedFrom];
	cpu_count -> multiprocessing	[label=importedBy];
	"cpu_count(0)" -> "using-a-baseline.ipynb"	[label=appearsIn];
	"cpu_count(0)" -> cpu_count	[label=assignedFrom];
	"fam(0)$0" -> "pd(0)"	[label=read_csv];
	"fam(0)$0" -> "../input/santa-workshop-tour-2019/family_data.csv(0)"	[label=read_csv];
	"../input/santa-workshop-tour-2019/family_data.csv(0)" -> "using-a-baseline.ipynb"	[label=appearsIn];
	"sub(0)$0" -> "pd(0)"	[label=read_csv];
	"sub(0)$0" -> "../input/santa-ip/submission.csv(0)"	[label=read_csv];
	"../input/santa-ip/submission.csv(0)" -> "using-a-baseline.ipynb"	[label=appearsIn];
	"fam(0)$1" -> "pd(0)"	[label=merge];
	"fam(0)$1" -> "sub(0)$0"	[label=merge];
	"fam(0)$1" -> "fam(0)$1"	[label=merge];
	"fam(0)$1" -> "left(0)"	[label=merge];
	"fam(0)$1" -> "family_id(0)"	[label=merge];
	"left(0)" -> "using-a-baseline.ipynb"	[label=appearsIn];
	"family_id(0)" -> "using-a-baseline.ipynb"	[label=appearsIn];
	"choices(0)$0" -> "fam(0)$1"	[label=assignedFrom];
	"choices(0)$0" -> "choice_(0)"	[label=assignedFrom];
	"choices(0)$0" -> "str(0)"	[label=assignedFrom];
	"choices(0)$0" -> "i(0)"	[label=assignedFrom];
	"choices(0)$0" -> "range(0)"	[label=assignedFrom];
	"choices(0)$0" -> "10(0)"	[label=assignedFrom];
	"choice_(0)" -> "using-a-baseline.ipynb"	[label=appearsIn];
	"str(0)" -> "using-a-baseline.ipynb"	[label=appearsIn];
	"i(0)" -> "using-a-baseline.ipynb"	[label=appearsIn];
	"i(0)" -> "range(0)"	[label=iteratorOf];
	"i(0)" -> "30(0)"	[label=iteratorOf];
	"i(0)" -> "5(0)"	[label=iteratorOf];
	"i(0)" -> "2(0)"	[label=iteratorOf];
	"range(0)" -> "using-a-baseline.ipynb"	[label=appearsIn];
	"10(0)" -> "using-a-baseline.ipynb"	[label=appearsIn];
	"30(0)" -> "using-a-baseline.ipynb"	[label=appearsIn];
	"5(0)" -> "using-a-baseline.ipynb"	[label=appearsIn];
	"2(0)" -> "using-a-baseline.ipynb"	[label=appearsIn];
	"fam(0)$2" -> "fam(0)$1"	[label=assignedFrom];
	"fam(0)$2" -> "[<_ast.Constant object at 0x7fd4c04ffb80>, <_ast.Constant object at 0x7fd4c04ffee0>](0)"	[label=assignedFrom];
	"[<_ast.Constant object at 0x7fd4c04ffb80>, <_ast.Constant object at 0x7fd4c04ffee0>](0)" -> "using-a-baseline.ipynb"	[label=appearsIn];
	"fam_costs(0)$0" -> "np(0)"	[label=zeros];
	"fam_costs(0)$0" -> "5000(0)"	[label=zeros];
	"fam_costs(0)$0" -> "101(0)"	[label=zeros];
	"5000(0)" -> "using-a-baseline.ipynb"	[label=appearsIn];
	"101(0)" -> "using-a-baseline.ipynb"	[label=appearsIn];
	"f(0)" -> "using-a-baseline.ipynb"	[label=appearsIn];
	"f(0)" -> "range(0)"	[label=iteratorOf];
	"f(0)" -> "5000(0)"	[label=iteratorOf];
	"d(0)" -> "using-a-baseline.ipynb"	[label=appearsIn];
	"d(0)" -> "range(0)"	[label=iteratorOf];
	"d(0)" -> "101(0)"	[label=iteratorOf];
	"d(0)" -> "1(0)"	[label=iteratorOf];
	"1(0)" -> "using-a-baseline.ipynb"	[label=appearsIn];
	"l(0)$0" -> "choices(0)$0"	[label=list];
	"l(0)$0" -> "f(0)"	[label=list];
	"0(0)" -> "using-a-baseline.ipynb"	[label=appearsIn];
	"fam_costs(0)$1" -> "fam_costs(0)$0"	[label=assignedFrom];
	"fam_costs(0)$1" -> "0(0)"	[label=assignedFrom];
	"50(0)" -> "using-a-baseline.ipynb"	[label=appearsIn];
	"fam_costs(0)$2" -> "fam_costs(0)$1"	[label=assignedFrom];
	"fam_costs(0)$2" -> "50(0)"	[label=assignedFrom];
	"fam_costs(0)$3" -> "fam(0)$2"	[label=Add];
	"fam_costs(0)$3" -> "f(0)"	[label=Add];
	"fam_costs(0)$3" -> "0(0)"	[label=Add];
	"fam_costs(0)$3" -> "50(0)"	[label=Add];
	"fam_costs(0)$3" -> "fam_costs(0)$2"	[label=Add];
	"fam_costs(0)$3" -> "9(0)"	[label=Add];
	"9(0)" -> "using-a-baseline.ipynb"	[label=appearsIn];
	"100(0)" -> "using-a-baseline.ipynb"	[label=appearsIn];
	"fam_costs(0)$4" -> "fam(0)$2"	[label=Add];
	"fam_costs(0)$4" -> "f(0)"	[label=Add];
	"fam_costs(0)$4" -> "0(0)"	[label=Add];
	"fam_costs(0)$4" -> "fam_costs(0)$3"	[label=Add];
	"fam_costs(0)$4" -> "9(0)"	[label=Add];
	"fam_costs(0)$4" -> "100(0)"	[label=Add];
	"200(0)" -> "using-a-baseline.ipynb"	[label=appearsIn];
	"fam_costs(0)$5" -> "fam(0)$2"	[label=Add];
	"fam_costs(0)$5" -> "f(0)"	[label=Add];
	"fam_costs(0)$5" -> "0(0)"	[label=Add];
	"fam_costs(0)$5" -> "9(0)"	[label=Add];
	"fam_costs(0)$5" -> "fam_costs(0)$4"	[label=Add];
	"fam_costs(0)$5" -> "200(0)"	[label=Add];
	"fam_costs(0)$6" -> "fam(0)$2"	[label=Add];
	"fam_costs(0)$6" -> "f(0)"	[label=Add];
	"fam_costs(0)$6" -> "0(0)"	[label=Add];
	"fam_costs(0)$6" -> "200(0)"	[label=Add];
	"fam_costs(0)$6" -> "fam_costs(0)$5"	[label=Add];
	"fam_costs(0)$6" -> "18(0)"	[label=Add];
	"18(0)" -> "using-a-baseline.ipynb"	[label=appearsIn];
	"300(0)" -> "using-a-baseline.ipynb"	[label=appearsIn];
	"fam_costs(0)$7" -> "fam(0)$2"	[label=Add];
	"fam_costs(0)$7" -> "f(0)"	[label=Add];
	"fam_costs(0)$7" -> "0(0)"	[label=Add];
	"fam_costs(0)$7" -> "fam_costs(0)$6"	[label=Add];
	"fam_costs(0)$7" -> "18(0)"	[label=Add];
	"fam_costs(0)$7" -> "300(0)"	[label=Add];
	"fam_costs(0)$8" -> "fam(0)$2"	[label=Add];
	"fam_costs(0)$8" -> "f(0)"	[label=Add];
	"fam_costs(0)$8" -> "0(0)"	[label=Add];
	"fam_costs(0)$8" -> "300(0)"	[label=Add];
	"fam_costs(0)$8" -> "fam_costs(0)$7"	[label=Add];
	"fam_costs(0)$8" -> "36(0)"	[label=Add];
	"36(0)" -> "using-a-baseline.ipynb"	[label=appearsIn];
	"400(0)" -> "using-a-baseline.ipynb"	[label=appearsIn];
	"fam_costs(0)$9" -> "fam(0)$2"	[label=Add];
	"fam_costs(0)$9" -> "f(0)"	[label=Add];
	"fam_costs(0)$9" -> "0(0)"	[label=Add];
	"fam_costs(0)$9" -> "fam_costs(0)$8"	[label=Add];
	"fam_costs(0)$9" -> "36(0)"	[label=Add];
	"fam_costs(0)$9" -> "400(0)"	[label=Add];
	"500(0)" -> "using-a-baseline.ipynb"	[label=appearsIn];
	"fam_costs(0)$10" -> "fam(0)$2"	[label=Add];
	"fam_costs(0)$10" -> "f(0)"	[label=Add];
	"fam_costs(0)$10" -> "0(0)"	[label=Add];
	"fam_costs(0)$10" -> "fam_costs(0)$9"	[label=Add];
	"fam_costs(0)$10" -> "500(0)"	[label=Add];
	"fam_costs(0)$10" -> "235(0)"	[label=Add];
	"235(0)" -> "using-a-baseline.ipynb"	[label=appearsIn];
	"fam_costs(0)$11" -> "fam(0)$2"	[label=Add];
	"fam_costs(0)$11" -> "f(0)"	[label=Add];
	"fam_costs(0)$11" -> "0(0)"	[label=Add];
	"fam_costs(0)$11" -> "500(0)"	[label=Add];
	"fam_costs(0)$11" -> "fam_costs(0)$10"	[label=Add];
	"fam_costs(0)$11" -> "434(0)"	[label=Add];
	"434(0)" -> "using-a-baseline.ipynb"	[label=appearsIn];
	"p(1)" -> "fclip[0]"	[label=_argToVar];
	"l(1)" -> "fclip[1]"	[label=_argToVar];
	"i(1)" -> "p(1)"	[label=iteratorOf];
	"i(1)" -> "range(1)"	[label=iteratorOf];
	"i(1)" -> "len(1)"	[label=iteratorOf];
	"p(1)$0" -> "p(1)"	[label=assignedFrom];
	"p(1)$0" -> "l(1)"	[label=assignedFrom];
	"pred(2)" -> "cost_function[0]"	[label=_argToVar];
	"p1(2)" -> "cost_function[1]"	[label=_argToVar];
	"p2(2)" -> "cost_function[2]"	[label=_argToVar];
	"days(2)$0" -> "np(2)"	[label=array];
	"days(2)$0" -> "list(2)"	[label=array];
	"days(2)$0" -> "range(2)"	[label=array];
	"days(2)$0" -> "100(2)"	[label=array];
	"days(2)$0" -> "0(2)"	[label=array];
	"days(2)$0" -> "1(2)"	[label=array];
	"daily_occupancy(2)$0" -> "np(2)"	[label=zeros];
	"daily_occupancy(2)$0" -> "101(2)"	[label=zeros];
	"penalty(2)$0" -> "0(2)"	[label=assignedFrom];
	"i(2)" -> "range(2)"	[label=iteratorOf];
	"i(2)" -> "5000(2)"	[label=iteratorOf];
	"penalty(2)$1" -> "pred(2)"	[label=Add];
	"penalty(2)$1" -> "1(2)"	[label=Add];
	"penalty(2)$1" -> "penalty(2)$0"	[label=Add];
	"penalty(2)$1" -> "i(2)"	[label=Add];
	"penalty(2)$1" -> "fam_costs(2)"	[label=Add];
	"daily_occupancy(2)$1" -> "pred(2)"	[label=Add];
	"daily_occupancy(2)$1" -> "0(2)"	[label=Add];
	"daily_occupancy(2)$1" -> "daily_occupancy(2)$0"	[label=Add];
	"daily_occupancy(2)$1" -> "i(2)"	[label=Add];
	"v(2)" -> "1(2)"	[label=iteratorOf];
	"v(2)" -> "daily_occupancy(2)$1"	[label=iteratorOf];
	"penalty(2)$2" -> "p1(2)"	[label=Add];
	"penalty(2)$2" -> "p2(2)"	[label=Add];
	"penalty(2)$2" -> "penalty(2)$1"	[label=Add];
	"penalty(2)$2" -> "v(2)"	[label=Add];
	"penalty(2)$2" -> "abs(2)"	[label=Add];
	"penalty(2)$2" -> "300(2)"	[label=Add];
	"penalty(2)$3" -> "p1(2)"	[label=Add];
	"penalty(2)$3" -> "p2(2)"	[label=Add];
	"penalty(2)$3" -> "v(2)"	[label=Add];
	"penalty(2)$3" -> "penalty(2)$2"	[label=Add];
	"penalty(2)$3" -> "abs(2)"	[label=Add];
	"penalty(2)$3" -> "125(2)"	[label=Add];
	"penalty(2)$4" -> "days(2)$0"	[label=Add];
	"penalty(2)$4" -> "0(2)"	[label=Add];
	"penalty(2)$4" -> "daily_occupancy(2)$1"	[label=Add];
	"penalty(2)$4" -> "penalty(2)$3"	[label=Add];
	"penalty(2)$4" -> "max(2)"	[label=Add];
	"penalty(2)$4" -> "125.0(2)"	[label=Add];
	"penalty(2)$4" -> "400.0(2)"	[label=Add];
	"penalty(2)$4" -> "0.5(2)"	[label=Add];
	"do(2)$0" -> "1(2)"	[label=assignedFrom];
	"do(2)$0" -> "daily_occupancy(2)$1"	[label=assignedFrom];
	"p(2)$0" -> "np(2)"	[label=Mult];
	"p(2)$0" -> "1(2)"	[label=Mult];
	"p(2)$0" -> "125.0(2)"	[label=Mult];
	"p(2)$0" -> "400.0(2)"	[label=Mult];
	"p(2)$0" -> "0.5(2)"	[label=Mult];
	"p(2)$0" -> "do(2)$0"	[label=Mult];
	"p(2)$0" -> "50.0(2)"	[label=Mult];
	"penalty(2)$5" -> "np(2)"	[label=Add];
	"penalty(2)$5" -> "penalty(2)$4"	[label=Add];
	"penalty(2)$5" -> "p(2)$0"	[label=Add];
	"penalty(2)$5" -> "fclip(2)"	[label=Add];
	"best(0)$0" -> "fam(0)$2"	[label=cost_function];
	"d(3)" -> "penalty_score_[0]"	[label=_argToVar];
	"cp(3)" -> "penalty_score_[1]"	[label=_argToVar];
	"dc(3)" -> "penalty_score_[2]"	[label=_argToVar];
	"penalty(3)$0" -> "0(3)"	[label=assignedFrom];
	"yc(3)$0" -> "d(3)"	[label=assignedFrom];
	"yc(3)$0" -> "cp(3)"	[label=assignedFrom];
	"yc(3)$0" -> "dc(3)"	[label=assignedFrom];
	"yc(3)$0" -> "1(3)"	[label=assignedFrom];
	"tc(3)$0" -> "d(3)"	[label=assignedFrom];
	"tc(3)$0" -> "cp(3)"	[label=assignedFrom];
	"tc(3)$0" -> "dc(3)"	[label=assignedFrom];
	"tc(3)$0" -> "1(3)"	[label=assignedFrom];
	"penalty(3)$1" -> "penalty(3)$0"	[label=Add];
	"penalty(3)$1" -> "0(3)"	[label=Add];
	"penalty(3)$1" -> "yc(3)$0"	[label=Add];
	"penalty(3)$1" -> "tc(3)$0"	[label=Add];
	"penalty(3)$1" -> "max(3)"	[label=Add];
	"penalty(3)$1" -> "125.0(3)"	[label=Add];
	"penalty(3)$1" -> "400.0(3)"	[label=Add];
	"penalty(3)$1" -> "0.5(3)"	[label=Add];
	"penalty(3)$1" -> "abs(3)"	[label=Add];
	"penalty(3)$1" -> "50.0(3)"	[label=Add];
	"yc(3)$1" -> "d(3)"	[label=assignedFrom];
	"yc(3)$1" -> "cp(3)"	[label=assignedFrom];
	"yc(3)$1" -> "dc(3)"	[label=assignedFrom];
	"yc(3)$1" -> "1(3)"	[label=assignedFrom];
	"tc(3)$1" -> "d(3)"	[label=assignedFrom];
	"tc(3)$1" -> "cp(3)"	[label=assignedFrom];
	"tc(3)$1" -> "dc(3)"	[label=assignedFrom];
	"tc(3)$1" -> "1(3)"	[label=assignedFrom];
	"penalty(3)$2" -> "0(3)"	[label=Add];
	"penalty(3)$2" -> "penalty(3)$1"	[label=Add];
	"penalty(3)$2" -> "max(3)"	[label=Add];
	"penalty(3)$2" -> "125.0(3)"	[label=Add];
	"penalty(3)$2" -> "400.0(3)"	[label=Add];
	"penalty(3)$2" -> "0.5(3)"	[label=Add];
	"penalty(3)$2" -> "abs(3)"	[label=Add];
	"penalty(3)$2" -> "50.0(3)"	[label=Add];
	"penalty(3)$2" -> "yc(3)$1"	[label=Add];
	"penalty(3)$2" -> "tc(3)$1"	[label=Add];
	"f(4)" -> "penalty_score[0]"	[label=_argToVar];
	"cd(4)" -> "penalty_score[1]"	[label=_argToVar];
	"d(4)" -> "penalty_score[2]"	[label=_argToVar];
	"cp(4)" -> "penalty_score[3]"	[label=_argToVar];
	"dc(4)" -> "penalty_score[4]"	[label=_argToVar];
	"old(4)$0" -> "f(4)"	[label=Add];
	"old(4)$0" -> "cd(4)"	[label=Add];
	"old(4)$0" -> "d(4)"	[label=Add];
	"old(4)$0" -> "dc(4)"	[label=Add];
	"old(4)$0" -> "penalty_score_(4)"	[label=Add];
	"old(4)$0" -> "int(4)"	[label=Add];
	"old(4)$0" -> "0(4)"	[label=Add];
	"old(4)$0" -> "fam_costs(4)"	[label=Add];
	"new(4)$0" -> "f(4)"	[label=Add];
	"new(4)$0" -> "cd(4)"	[label=Add];
	"new(4)$0" -> "d(4)"	[label=Add];
	"new(4)$0" -> "cp(4)"	[label=Add];
	"new(4)$0" -> "dc(4)"	[label=Add];
	"new(4)$0" -> "penalty_score_(4)"	[label=Add];
	"new(4)$0" -> "int(4)"	[label=Add];
	"new(4)$0" -> "fam_costs(4)"	[label=Add];
	"f1(5)" -> "penalty_score2[0]"	[label=_argToVar];
	"f2(5)" -> "penalty_score2[1]"	[label=_argToVar];
	"d1(5)" -> "penalty_score2[2]"	[label=_argToVar];
	"d2(5)" -> "penalty_score2[3]"	[label=_argToVar];
	"c1(5)" -> "penalty_score2[4]"	[label=_argToVar];
	"c2(5)" -> "penalty_score2[5]"	[label=_argToVar];
	"dc(5)" -> "penalty_score2[6]"	[label=_argToVar];
	"old(5)$0" -> "f1(5)"	[label=Add];
	"old(5)$0" -> "f2(5)"	[label=Add];
	"old(5)$0" -> "d1(5)"	[label=Add];
	"old(5)$0" -> "d2(5)"	[label=Add];
	"old(5)$0" -> "dc(5)"	[label=Add];
	"old(5)$0" -> "penalty_score_(5)"	[label=Add];
	"old(5)$0" -> "int(5)"	[label=Add];
	"old(5)$0" -> "0(5)"	[label=Add];
	"old(5)$0" -> "fam_costs(5)"	[label=Add];
	"new(5)$0" -> "f1(5)"	[label=Add];
	"new(5)$0" -> "f2(5)"	[label=Add];
	"new(5)$0" -> "d1(5)"	[label=Add];
	"new(5)$0" -> "d2(5)"	[label=Add];
	"new(5)$0" -> "c1(5)"	[label=Add];
	"new(5)$0" -> "c2(5)"	[label=Add];
	"new(5)$0" -> "dc(5)"	[label=Add];
	"new(5)$0" -> "penalty_score_(5)"	[label=Add];
	"new(5)$0" -> "int(5)"	[label=Add];
	"new(5)$0" -> "fam_costs(5)"	[label=Add];
	"pred(6)" -> "optimizer[0]"	[label=_argToVar];
	"days(6)$0" -> "np(6)"	[label=array];
	"days(6)$0" -> "list(6)"	[label=array];
	"days(6)$0" -> "range(6)"	[label=array];
	"days(6)$0" -> "100(6)"	[label=array];
	"days(6)$0" -> "1(6)"	[label=array];
	"days_count(6)$0" -> "np(6)"	[label=zeros];
	"days_count(6)$0" -> "101(6)"	[label=zeros];
	"i(6)" -> "range(6)"	[label=iteratorOf];
	"i(6)" -> "5000(6)"	[label=iteratorOf];
	"days_count(6)$1" -> "pred(6)"	[label=Add];
	"days_count(6)$1" -> "days_count(6)$0"	[label=Add];
	"days_count(6)$1" -> "i(6)"	[label=Add];
	"days_count(6)$1" -> "0(6)"	[label=Add];
	"f(6)" -> "range(6)"	[label=iteratorOf];
	"f(6)" -> "5000(6)"	[label=iteratorOf];
	"cd(6)$0" -> "pred(6)"	[label=int];
	"cd(6)$0" -> "1(6)"	[label=int];
	"cd(6)$0" -> "f(6)"	[label=int];
	"cp(6)$0" -> "pred(6)"	[label=int];
	"cp(6)$0" -> "0(6)"	[label=int];
	"cp(6)$0" -> "f(6)"	[label=int];
	"d(6)" -> "days(6)$0"	[label=iteratorOf];
	"d(6)" -> "1(6)"	[label=iteratorOf];
	"days_count(6)$2" -> "days_count(6)$1"	[label=Add];
	"days_count(6)$2" -> "cp(6)$0"	[label=Add];
	"days_count(6)$3" -> "cp(6)$0"	[label=Sub];
	"days_count(6)$3" -> "days_count(6)$2"	[label=Sub];
	"pred(6)$0" -> "pred(6)"	[label=int];
	"pred(6)$0" -> "d(6)"	[label=int];
	"cd(6)$1" -> "d(6)"	[label=int];
	"dtf(6)$0" -> "range(6)"	[label=assignedFrom];
	"dtf(6)$0" -> "1(6)"	[label=assignedFrom];
	"dtf(6)$0" -> "5000(6)"	[label=assignedFrom];
	"dtf(6)$0" -> "0(6)"	[label=assignedFrom];
	"dtf(6)$0" -> "cp(6)$0"	[label=assignedFrom];
	"dtf(6)$0" -> "d(6)"	[label=assignedFrom];
	"dtf(6)$0" -> "pred(6)$0"	[label=assignedFrom];
	"dtf(6)$0" -> "fx(6)"	[label=assignedFrom];
	"j(6)" -> "dtf(6)$0"	[label=iteratorOf];
	"pred(6)$1" -> "d(6)"	[label=int];
	"pred(6)$1" -> "pred(6)$0"	[label=int];
	"pred(6)$2" -> "cd(6)$1"	[label=int];
	"pred(6)$2" -> "pred(6)$1"	[label=int];
	"cd(6)$2" -> "d(6)"	[label=int];
	"pred(7)" -> "optimizer_a[0]"	[label=_argToVar];
	"annealing(7)" -> "optimizer_a[1]"	[label=_argToVar];
	"seed(7)" -> "optimizer_a[2]"	[label=_argToVar];
	"np(7)$0" -> "seed(7)"	[label=seed];
	"np(7)$0" -> "np(7)"	[label=seed];
	"days(7)$0" -> "np(7)$0"	[label=array];
	"days(7)$0" -> "list(7)"	[label=array];
	"days(7)$0" -> "range(7)"	[label=array];
	"days(7)$0" -> "100(7)"	[label=array];
	"days(7)$0" -> "1(7)"	[label=array];
	"days_count(7)$0" -> "np(7)$0"	[label=zeros];
	"days_count(7)$0" -> "101(7)"	[label=zeros];
	"i(7)" -> "range(7)"	[label=iteratorOf];
	"i(7)" -> "5000(7)"	[label=iteratorOf];
	"days_count(7)$1" -> "pred(7)"	[label=Add];
	"days_count(7)$1" -> "days_count(7)$0"	[label=Add];
	"days_count(7)$1" -> "i(7)"	[label=Add];
	"days_count(7)$1" -> "0(7)"	[label=Add];
	"f(7)" -> "range(7)"	[label=iteratorOf];
	"f(7)" -> "1(7)"	[label=iteratorOf];
	"f(7)" -> "0(7)"	[label=iteratorOf];
	"f(7)" -> "4999(7)"	[label=iteratorOf];
	"cd(7)$0" -> "pred(7)"	[label=int];
	"cd(7)$0" -> "1(7)"	[label=int];
	"cd(7)$0" -> "f(7)"	[label=int];
	"cp(7)$0" -> "pred(7)"	[label=int];
	"cp(7)$0" -> "0(7)"	[label=int];
	"cp(7)$0" -> "f(7)"	[label=int];
	"d(7)" -> "days(7)$0"	[label=iteratorOf];
	"d(7)" -> "1(7)"	[label=iteratorOf];
	"days_count(7)$2" -> "days_count(7)$1"	[label=Add];
	"days_count(7)$2" -> "cp(7)$0"	[label=Add];
	"days_count(7)$3" -> "cp(7)$0"	[label=Sub];
	"days_count(7)$3" -> "days_count(7)$2"	[label=Sub];
	"pred(7)$0" -> "pred(7)"	[label=int];
	"pred(7)$0" -> "d(7)"	[label=int];
	"cd(7)$1" -> "d(7)"	[label=int];
	"dtf(7)$0" -> "range(7)"	[label=assignedFrom];
	"dtf(7)$0" -> "1(7)"	[label=assignedFrom];
	"dtf(7)$0" -> "5000(7)"	[label=assignedFrom];
	"dtf(7)$0" -> "0(7)"	[label=assignedFrom];
	"dtf(7)$0" -> "cp(7)$0"	[label=assignedFrom];
	"dtf(7)$0" -> "d(7)"	[label=assignedFrom];
	"dtf(7)$0" -> "pred(7)$0"	[label=assignedFrom];
	"dtf(7)$0" -> "fx(7)"	[label=assignedFrom];
	"j(7)" -> "dtf(7)$0"	[label=iteratorOf];
	"pred(7)$1" -> "d(7)"	[label=int];
	"pred(7)$1" -> "pred(7)$0"	[label=int];
	"pred(7)$2" -> "cd(7)$1"	[label=int];
	"pred(7)$2" -> "pred(7)$1"	[label=int];
	"cd(7)$2" -> "d(7)"	[label=int];
	"fam(8)" -> "optimizer_a2[0]"	[label=_argToVar];
	"annealing(8)" -> "optimizer_a2[1]"	[label=_argToVar];
	"seed(8)" -> "optimizer_a2[2]"	[label=_argToVar];
	"np(8)$0" -> "seed(8)"	[label=seed];
	"np(8)$0" -> "np(8)"	[label=seed];
	"days_count(8)$0" -> "np(8)$0"	[label=zeros];
	"days_count(8)$0" -> "101(8)"	[label=zeros];
	"i(8)" -> "range(8)"	[label=iteratorOf];
	"i(8)" -> "5000(8)"	[label=iteratorOf];
	"days_count(8)$1" -> "fam(8)"	[label=Add];
	"days_count(8)$1" -> "days_count(8)$0"	[label=Add];
	"days_count(8)$1" -> "i(8)"	[label=Add];
	"days_count(8)$1" -> "0(8)"	[label=Add];
	"f1(8)" -> "range(8)"	[label=iteratorOf];
	"f1(8)" -> "5000(8)"	[label=iteratorOf];
	"f1(8)" -> "0(8)"	[label=iteratorOf];
	"f1(8)" -> "1(8)"	[label=iteratorOf];
	"f2(8)" -> "range(8)"	[label=iteratorOf];
	"f2(8)" -> "5000(8)"	[label=iteratorOf];
	"f2(8)" -> "f1(8)"	[label=iteratorOf];
	"f2(8)" -> "1(8)"	[label=iteratorOf];
	"d1(8)$0" -> "fam(8)"	[label=assignedFrom];
	"d1(8)$0" -> "f1(8)"	[label=assignedFrom];
	"d1(8)$0" -> "1(8)"	[label=assignedFrom];
	"d1(8)$0" -> "f2(8)"	[label=assignedFrom];
	"d1(8)$0" -> "int(8)"	[label=assignedFrom];
	"d2(8)$0" -> "fam(8)"	[label=assignedFrom];
	"d2(8)$0" -> "f1(8)"	[label=assignedFrom];
	"d2(8)$0" -> "1(8)"	[label=assignedFrom];
	"d2(8)$0" -> "f2(8)"	[label=assignedFrom];
	"d2(8)$0" -> "int(8)"	[label=assignedFrom];
	"c1(8)$0" -> "fam(8)"	[label=assignedFrom];
	"c1(8)$0" -> "0(8)"	[label=assignedFrom];
	"c1(8)$0" -> "f1(8)"	[label=assignedFrom];
	"c1(8)$0" -> "f2(8)"	[label=assignedFrom];
	"c1(8)$0" -> "int(8)"	[label=assignedFrom];
	"c2(8)$0" -> "fam(8)"	[label=assignedFrom];
	"c2(8)$0" -> "0(8)"	[label=assignedFrom];
	"c2(8)$0" -> "f1(8)"	[label=assignedFrom];
	"c2(8)$0" -> "f2(8)"	[label=assignedFrom];
	"c2(8)$0" -> "int(8)"	[label=assignedFrom];
	"days_count(8)$2" -> "days_count(8)$1"	[label=Add];
	"days_count(8)$2" -> "c1(8)$0"	[label=Add];
	"days_count(8)$2" -> "c2(8)$0"	[label=Add];
	"days_count(8)$3" -> "c1(8)$0"	[label=Add];
	"days_count(8)$3" -> "c2(8)$0"	[label=Add];
	"days_count(8)$3" -> "days_count(8)$2"	[label=Add];
	"fam(8)$0" -> "fam(8)"	[label=int];
	"fam(8)$0" -> "d2(8)$0"	[label=int];
	"fam(8)$1" -> "d1(8)$0"	[label=int];
	"fam(8)$1" -> "fam(8)$0"	[label=int];
	"d1(8)$1" -> "d2(8)$0"	[label=int];
	"fam(9)" -> "optimizer_a3[0]"	[label=_argToVar];
	"p1(9)" -> "optimizer_a3[1]"	[label=_argToVar];
	"p2(9)" -> "optimizer_a3[2]"	[label=_argToVar];
	"f1(9)" -> "range(9)"	[label=iteratorOf];
	"f1(9)" -> "5000(9)"	[label=iteratorOf];
	"d(9)" -> "range(9)"	[label=iteratorOf];
	"d(9)" -> "1(9)"	[label=iteratorOf];
	"d(9)" -> "101(9)"	[label=iteratorOf];
	"temp(9)$0" -> "fam(9)"	[label=copy];
	"temp(9)$1" -> "d(9)"	[label=assignedFrom];
	"temp(9)$1" -> "temp(9)$0"	[label=assignedFrom];
	"fam(9)$0" -> "temp(9)$1"	[label=copy];
	"print[185/12]" -> "f1(9)"	[label=print];
	"print[185/12]" -> "fam(9)$0"	[label=print];
	"print[185/12]" -> "...(9)"	[label=print];
	"print[185/12]" -> "cost_function(9)"	[label=print];
	"best_fam(0)$0" -> "fam(0)$2"	[label=copy];
	"j(0)" -> "using-a-baseline.ipynb"	[label=appearsIn];
	"j(0)" -> "range(0)"	[label=iteratorOf];
	"j(0)" -> "4(0)"	[label=iteratorOf];
	"4(0)" -> "using-a-baseline.ipynb"	[label=appearsIn];
	"fam(0)$3" -> "10(0)"	[label=optimizer_a3];
	"fam(0)$3" -> "fam(0)$2"	[label=optimizer_a3];
	"fam(0)$3" -> "100(0)"	[label=optimizer_a3];
	"fam(0)$4" -> "100(0)"	[label=optimizer_a3];
	"fam(0)$4" -> "fam(0)$3"	[label=optimizer_a3];
	"print[192/4]" -> "j(0)"	[label=print];
	"print[192/4]" -> "fam(0)$4"	[label=print];
	"print[192/4]" -> "cost_function(0)"	[label=print];
	"cost_function(0)" -> "using-a-baseline.ipynb"	[label=appearsIn];
	"th(0)$0" -> "i(0)"	[label=Mult];
	"th(0)$0" -> "10(0)"	[label=Mult];
	"df(0)$0" -> "i(0)"	[label=optimizer_a];
	"df(0)$0" -> "1(0)"	[label=optimizer_a];
	"df(0)$0" -> "fam(0)$4"	[label=optimizer_a];
	"df(0)$0" -> "3(0)"	[label=optimizer_a];
	"3(0)" -> "using-a-baseline.ipynb"	[label=appearsIn];
	"new(0)$0" -> "df(0)$0"	[label=cost_function];
	"fam(0)$5" -> "df(0)$0"	[label=optimizer_a];
	"fam(0)$6" -> "i(0)"	[label=optimizer_a2];
	"fam(0)$6" -> "10(0)"	[label=optimizer_a2];
	"fam(0)$6" -> "1(0)"	[label=optimizer_a2];
	"fam(0)$6" -> "fam(0)$5"	[label=optimizer_a2];
	"fam(0)$7" -> "df(0)$0"	[label=optimizer];
	"new(0)$1" -> "fam(0)$7"	[label=cost_function];
	"print[203/12]" -> "i(0)"	[label=print];
	"print[203/12]" -> "best(0)$0"	[label=print];
	"print[203/12]" -> "j(0)"	[label=print];
	"print[203/12]" -> "new(0)$1"	[label=print];
	"best(0)$1" -> "new(0)$1"	[label=assignedFrom];
	"best_fam(0)$1" -> "fam(0)$7"	[label=copy];
	"fam(0)$8" -> "best_fam(0)$1"	[label=optimizer];
	"best(0)$2" -> "fam(0)$8"	[label=cost_function];
	"pd(0)$0" -> "pd(0)"	[label=to_csv];
	"pd(0)$0" -> "best(0)$2"	[label=to_csv];
	"pd(0)$0" -> "submission_(0)"	[label=to_csv];
	"pd(0)$0" -> ".csv(0)"	[label=to_csv];
	"submission_(0)" -> "using-a-baseline.ipynb"	[label=appearsIn];
	".csv(0)" -> "using-a-baseline.ipynb"	[label=appearsIn];
}
