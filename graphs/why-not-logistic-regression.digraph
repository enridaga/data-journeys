digraph "" {
	pandas -> "why-not-logistic-regression.ipynb"	[label=importedBy];
	"pd(0)" -> pandas	[label=assignedFrom];
	"pd(0)" -> "why-not-logistic-regression.ipynb"	[label=appearsIn];
	numpy -> "why-not-logistic-regression.ipynb"	[label=importedBy];
	"np(0)" -> "why-not-logistic-regression.ipynb"	[label=appearsIn];
	"np(0)" -> numpy	[label=assignedFrom];
	"train(0)$0" -> "pd(0)"	[label=read_csv];
	"train(0)$0" -> "../input/cat-in-the-dat/train.csv(0)"	[label=read_csv];
	"../input/cat-in-the-dat/train.csv(0)" -> "why-not-logistic-regression.ipynb"	[label=appearsIn];
	"test(0)$0" -> "pd(0)"	[label=read_csv];
	"test(0)$0" -> "../input/cat-in-the-dat/test.csv(0)"	[label=read_csv];
	"../input/cat-in-the-dat/test.csv(0)" -> "why-not-logistic-regression.ipynb"	[label=appearsIn];
	"print[11/0]" -> "train(0)$0"	[label=print];
	"print[12/0]" -> "test(0)$0"	[label=print];
	"target(0)$0" -> "train(0)$0"	[label=assignedFrom];
	"target(0)$0" -> "target(0)$0"	[label=assignedFrom];
	"train_id(0)$0" -> "train(0)$0"	[label=assignedFrom];
	"train_id(0)$0" -> "id(0)"	[label=assignedFrom];
	"id(0)" -> "why-not-logistic-regression.ipynb"	[label=appearsIn];
	"test_id(0)$0" -> "test(0)$0"	[label=assignedFrom];
	"test_id(0)$0" -> "id(0)"	[label=assignedFrom];
	"train(0)$1" -> "train(0)$0"	[label=drop];
	"train(0)$1" -> "[<_ast.Constant object at 0x7fd4902ab820>, <_ast.Constant object at 0x7fd4902aba60>](0)"	[label=drop];
	"[<_ast.Constant object at 0x7fd4902ab820>, <_ast.Constant object at 0x7fd4902aba60>](0)" -> "why-not-logistic-regression.ipynb"	[label=appearsIn];
	"test(0)$1" -> "test(0)$0"	[label=drop];
	"test(0)$1" -> "id(0)"	[label=drop];
	"print[22/0]" -> "train(0)$1"	[label=print];
	"print[23/0]" -> "test(0)$1"	[label=print];
	"traintest(0)$0" -> "pd(0)"	[label=concat];
	"traintest(0)$0" -> "[<_ast.Name object at 0x7fd4902abeb0>, <_ast.Name object at 0x7fd4902abb50>](0)"	[label=concat];
	"[<_ast.Name object at 0x7fd4902abeb0>, <_ast.Name object at 0x7fd4902abb50>](0)" -> "why-not-logistic-regression.ipynb"	[label=appearsIn];
	"dummies(0)$0" -> "pd(0)"	[label=get_dummies];
	"dummies(0)$0" -> "traintest(0)$0"	[label=get_dummies];
	"dummies(0)$0" -> "True(0)"	[label=get_dummies];
	"True(0)" -> "why-not-logistic-regression.ipynb"	[label=appearsIn];
	"train_ohe(0)$0" -> "train(0)$1"	[label=assignedFrom];
	"train_ohe(0)$0" -> "dummies(0)$0"	[label=assignedFrom];
	"train_ohe(0)$0" -> "0(0)"	[label=assignedFrom];
	"0(0)" -> "why-not-logistic-regression.ipynb"	[label=appearsIn];
	"test_ohe(0)$0" -> "train(0)$1"	[label=assignedFrom];
	"test_ohe(0)$0" -> "dummies(0)$0"	[label=assignedFrom];
	"test_ohe(0)$0" -> "0(0)"	[label=assignedFrom];
	"print[32/0]" -> "train_ohe(0)$0"	[label=print];
	"print[33/0]" -> "test_ohe(0)$0"	[label=print];
	"train_ohe(0)$1" -> "train_ohe(0)$0"	[label=tocsr];
	"test_ohe(0)$1" -> "test_ohe(0)$0"	[label=tocsr];
	"sklearn.model_selection" -> "why-not-logistic-regression.ipynb"	[label=importedBy];
	KFold -> "sklearn.model_selection"	[label=importedBy];
	"KFold(0)" -> "why-not-logistic-regression.ipynb"	[label=appearsIn];
	"KFold(0)" -> KFold	[label=assignedFrom];
	"sklearn.metrics" -> "why-not-logistic-regression.ipynb"	[label=importedBy];
	roc_auc_score -> "sklearn.metrics"	[label=importedBy];
	"auc(0)" -> "why-not-logistic-regression.ipynb"	[label=appearsIn];
	"auc(0)" -> roc_auc_score	[label=assignedFrom];
	"sklearn.linear_model" -> "why-not-logistic-regression.ipynb"	[label=importedBy];
	LogisticRegression -> "sklearn.linear_model"	[label=importedBy];
	"LogisticRegression(0)" -> "why-not-logistic-regression.ipynb"	[label=appearsIn];
	"LogisticRegression(0)" -> LogisticRegression	[label=assignedFrom];
	"train(1)" -> "run_cv_model[0]"	[label=_argToVar];
	"test(1)" -> "run_cv_model[1]"	[label=_argToVar];
	"target(1)" -> "run_cv_model[2]"	[label=_argToVar];
	"model_fn(1)" -> "run_cv_model[3]"	[label=_argToVar];
	"params(1)" -> "run_cv_model[4]"	[label=_argToVar];
	"eval_fn(1)" -> "run_cv_model[5]"	[label=_argToVar];
	"label(1)" -> "run_cv_model[6]"	[label=_argToVar];
	"kf(1)$0" -> "5(1)"	[label=KFold];
	"fold_splits(1)$0" -> "train(1)"	[label=split];
	"fold_splits(1)$0" -> "target(1)"	[label=split];
	"fold_splits(1)$0" -> "kf(1)$0"	[label=split];
	"cv_scores(1)$0" -> "[](1)"	[label=assignedFrom];
	"pred_full_test(1)$0" -> "0(1)"	[label=assignedFrom];
	"pred_train(1)$0" -> "train(1)"	[label=zeros];
	"pred_train(1)$0" -> "0(1)"	[label=zeros];
	"pred_train(1)$0" -> "np(1)"	[label=zeros];
	"i(1)$0" -> "1(1)"	[label=assignedFrom];
	"dev_index(1)" -> "fold_splits(1)$0"	[label=iteratorOf];
	"val_index(1)" -> "fold_splits(1)$0"	[label=iteratorOf];
	"print[60/8]" -> "label(1)"	[label=print];
	"print[60/8]" -> "i(1)$0"	[label=print];
	"print[60/8]" -> "Started (1)"	[label=print];
	"print[60/8]" -> " fold (1)"	[label=print];
	"print[60/8]" -> "str(1)"	[label=print];
	"print[60/8]" -> "/5(1)"	[label=print];
	"dev_X(1)$0" -> "train(1)"	[label=assignedFrom];
	"dev_X(1)$0" -> "dev_index(1)"	[label=assignedFrom];
	"dev_X(1)$0" -> "val_index(1)"	[label=assignedFrom];
	"val_X(1)$0" -> "train(1)"	[label=assignedFrom];
	"val_X(1)$0" -> "dev_index(1)"	[label=assignedFrom];
	"val_X(1)$0" -> "val_index(1)"	[label=assignedFrom];
	"dev_y(1)$0" -> "target(1)"	[label=assignedFrom];
	"dev_y(1)$0" -> "dev_index(1)"	[label=assignedFrom];
	"dev_y(1)$0" -> "val_index(1)"	[label=assignedFrom];
	"val_y(1)$0" -> "target(1)"	[label=assignedFrom];
	"val_y(1)$0" -> "dev_index(1)"	[label=assignedFrom];
	"val_y(1)$0" -> "val_index(1)"	[label=assignedFrom];
	"params2(1)$0" -> "params(1)"	[label=copy];
	"pred_val_y(1)$0" -> "test(1)"	[label=model_fn];
	"pred_val_y(1)$0" -> "dev_X(1)$0"	[label=model_fn];
	"pred_val_y(1)$0" -> "val_X(1)$0"	[label=model_fn];
	"pred_val_y(1)$0" -> "dev_y(1)$0"	[label=model_fn];
	"pred_val_y(1)$0" -> "val_y(1)$0"	[label=model_fn];
	"pred_val_y(1)$0" -> "params2(1)$0"	[label=model_fn];
	"pred_test_y(1)$0" -> "test(1)"	[label=model_fn];
	"pred_test_y(1)$0" -> "dev_X(1)$0"	[label=model_fn];
	"pred_test_y(1)$0" -> "val_X(1)$0"	[label=model_fn];
	"pred_test_y(1)$0" -> "dev_y(1)$0"	[label=model_fn];
	"pred_test_y(1)$0" -> "val_y(1)$0"	[label=model_fn];
	"pred_test_y(1)$0" -> "params2(1)$0"	[label=model_fn];
	"pred_full_test(1)$1" -> "pred_full_test(1)$0"	[label=Add];
	"pred_full_test(1)$1" -> "pred_test_y(1)$0"	[label=Add];
	"pred_train(1)$1" -> "pred_train(1)$0"	[label=assignedFrom];
	"pred_train(1)$1" -> "pred_val_y(1)$0"	[label=assignedFrom];
	"cv_score(1)$0" -> "val_y(1)$0"	[label=eval_fn];
	"cv_score(1)$0" -> "pred_val_y(1)$0"	[label=eval_fn];
	"cv_scores(1)$1" -> "cv_scores(1)$0"	[label=append];
	"cv_scores(1)$1" -> "cv_score(1)$0"	[label=append];
	"print[70/12]" -> "label(1)"	[label=print];
	"print[70/12]" -> "i(1)$0"	[label=print];
	"print[70/12]" -> "cv_score(1)$0"	[label=print];
	"print[70/12]" -> " cv score {}: {}(1)"	[label=print];
	"i(1)$1" -> "i(1)$0"	[label=Add];
	"i(1)$1" -> "1(1)"	[label=Add];
	"print[72/4]" -> "label(1)"	[label=print];
	"print[72/4]" -> "cv_scores(1)$1"	[label=print];
	"print[72/4]" -> "{} cv scores : {}(1)"	[label=print];
	"print[73/4]" -> "label(1)"	[label=print];
	"print[73/4]" -> "np(1)"	[label=print];
	"print[73/4]" -> "cv_scores(1)$1"	[label=print];
	"print[73/4]" -> "{} cv mean score : {}(1)"	[label=print];
	"print[74/4]" -> "label(1)"	[label=print];
	"print[74/4]" -> "np(1)"	[label=print];
	"print[74/4]" -> "cv_scores(1)$1"	[label=print];
	"print[74/4]" -> "{} cv std score : {}(1)"	[label=print];
	"pred_full_test(1)$2" -> "pred_full_test(1)$1"	[label=Div];
	"pred_full_test(1)$2" -> "5.0(1)"	[label=Div];
	"results(1)$0" -> "train(1)"	[label=assignedFrom];
	"results(1)$0" -> "test(1)"	[label=assignedFrom];
	"results(1)$0" -> "label(1)"	[label=assignedFrom];
	"results(1)$0" -> "pred_train(1)$1"	[label=assignedFrom];
	"results(1)$0" -> "cv_scores(1)$1"	[label=assignedFrom];
	"results(1)$0" -> "pred_full_test(1)$2"	[label=assignedFrom];
	"results(1)$0" -> "cv(1)"	[label=assignedFrom];
	"train_X(2)" -> "runLR[0]"	[label=_argToVar];
	"train_y(2)" -> "runLR[1]"	[label=_argToVar];
	"test_X(2)" -> "runLR[2]"	[label=_argToVar];
	"test_y(2)" -> "runLR[3]"	[label=_argToVar];
	"test_X2(2)" -> "runLR[4]"	[label=_argToVar];
	"params(2)" -> "runLR[5]"	[label=_argToVar];
	"print[83/4]" -> "Train LR(2)"	[label=print];
	"model(2)$0" -> "params(2)"	[label=LogisticRegression];
	"model(2)$1" -> "train_X(2)"	[label=fit];
	"model(2)$1" -> "train_y(2)"	[label=fit];
	"model(2)$1" -> "model(2)$0"	[label=fit];
	"print[86/4]" -> "Predict 1/2(2)"	[label=print];
	"pred_test_y(2)$0" -> "test_X(2)"	[label=assignedFrom];
	"pred_test_y(2)$0" -> "model(2)$1"	[label=assignedFrom];
	"pred_test_y(2)$0" -> "1(2)"	[label=assignedFrom];
	"print[88/4]" -> "Predict 2/2(2)"	[label=print];
	"pred_test_y2(2)$0" -> "test_X2(2)"	[label=assignedFrom];
	"pred_test_y2(2)$0" -> "model(2)$1"	[label=assignedFrom];
	"pred_test_y2(2)$0" -> "1(2)"	[label=assignedFrom];
	"solver(0)" -> "why-not-logistic-regression.ipynb"	[label=appearsIn];
	"lr_params(0)$0" -> "solver(0)"	[label=assignedFrom];
	"lr_params(0)$0" -> "C(0)"	[label=assignedFrom];
	"lr_params(0)$0" -> "lbfgs(0)"	[label=assignedFrom];
	"lr_params(0)$0" -> "0.1(0)"	[label=assignedFrom];
	"C(0)" -> "why-not-logistic-regression.ipynb"	[label=appearsIn];
	"lbfgs(0)" -> "why-not-logistic-regression.ipynb"	[label=appearsIn];
	"0.1(0)" -> "why-not-logistic-regression.ipynb"	[label=appearsIn];
	"results(0)$0" -> "target(0)$0"	[label=run_cv_model];
	"results(0)$0" -> "train_ohe(0)$1"	[label=run_cv_model];
	"results(0)$0" -> "test_ohe(0)$1"	[label=run_cv_model];
	"results(0)$0" -> "auc(0)"	[label=run_cv_model];
	"results(0)$0" -> "lr_params(0)$0"	[label=run_cv_model];
	"results(0)$0" -> "runLR(0)"	[label=run_cv_model];
	"results(0)$0" -> "lr(0)"	[label=run_cv_model];
	"runLR(0)" -> "why-not-logistic-regression.ipynb"	[label=appearsIn];
	"lr(0)" -> "why-not-logistic-regression.ipynb"	[label=appearsIn];
	"submission(0)$0" -> "pd(0)"	[label=DataFrame];
	"submission(0)$0" -> "target(0)$0"	[label=DataFrame];
	"submission(0)$0" -> "id(0)"	[label=DataFrame];
	"submission(0)$0" -> "test_id(0)$0"	[label=DataFrame];
	"submission(0)$0" -> "test(0)$1"	[label=DataFrame];
	"submission(0)$0" -> "results(0)$0"	[label=DataFrame];
	"submission(0)$1" -> "submission(0)$0"	[label=to_csv];
	"submission(0)$1" -> "submission.csv(0)"	[label=to_csv];
	"submission.csv(0)" -> "why-not-logistic-regression.ipynb"	[label=appearsIn];
}
