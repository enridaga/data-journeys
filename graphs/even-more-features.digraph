digraph "" {
	numpy -> "even-more-features.ipynb"	[label=importedBy];
	"np(0)" -> numpy	[label=assignedFrom];
	"np(0)" -> "even-more-features.ipynb"	[label=appearsIn];
	pandas -> "even-more-features.ipynb"	[label=importedBy];
	"pd(0)" -> "even-more-features.ipynb"	[label=appearsIn];
	"pd(0)" -> pandas	[label=assignedFrom];
	os -> "even-more-features.ipynb"	[label=importedBy];
	"os(0)" -> "even-more-features.ipynb"	[label=appearsIn];
	"os(0)" -> os	[label=assignedFrom];
	"matplotlib.pyplot" -> "even-more-features.ipynb"	[label=importedBy];
	"plt(0)" -> "even-more-features.ipynb"	[label=appearsIn];
	"plt(0)" -> "matplotlib.pyplot"	[label=assignedFrom];
	tqdm -> "even-more-features.ipynb"	[label=importedBy];
	tqdm_notebook -> tqdm	[label=importedBy];
	"tqdm_notebook(0)" -> "even-more-features.ipynb"	[label=appearsIn];
	"tqdm_notebook(0)" -> tqdm_notebook	[label=assignedFrom];
	"sklearn.preprocessing" -> "even-more-features.ipynb"	[label=importedBy];
	StandardScaler -> "sklearn.preprocessing"	[label=importedBy];
	"StandardScaler(0)" -> "even-more-features.ipynb"	[label=appearsIn];
	"StandardScaler(0)" -> StandardScaler	[label=assignedFrom];
	"sklearn.svm" -> "even-more-features.ipynb"	[label=importedBy];
	NuSVR -> "sklearn.svm"	[label=importedBy];
	"NuSVR(0)" -> "even-more-features.ipynb"	[label=appearsIn];
	"NuSVR(0)" -> NuSVR	[label=assignedFrom];
	SVR -> "sklearn.svm"	[label=importedBy];
	"SVR(0)" -> "even-more-features.ipynb"	[label=appearsIn];
	"SVR(0)" -> SVR	[label=assignedFrom];
	"sklearn.metrics" -> "even-more-features.ipynb"	[label=importedBy];
	mean_absolute_error -> "sklearn.metrics"	[label=importedBy];
	"mean_absolute_error(0)" -> "even-more-features.ipynb"	[label=appearsIn];
	"mean_absolute_error(0)" -> mean_absolute_error	[label=assignedFrom];
	"15(0)" -> "even-more-features.ipynb"	[label=appearsIn];
	"pd(0)$0" -> "pd(0)"	[label=assignedFrom];
	"pd(0)$0" -> "15(0)"	[label=assignedFrom];
	lightgbm -> "even-more-features.ipynb"	[label=importedBy];
	"lgb(0)" -> "even-more-features.ipynb"	[label=appearsIn];
	"lgb(0)" -> lightgbm	[label=assignedFrom];
	xgboost -> "even-more-features.ipynb"	[label=importedBy];
	"xgb(0)" -> "even-more-features.ipynb"	[label=appearsIn];
	"xgb(0)" -> xgboost	[label=assignedFrom];
	time -> "even-more-features.ipynb"	[label=importedBy];
	"time(0)" -> "even-more-features.ipynb"	[label=appearsIn];
	"time(0)" -> time	[label=assignedFrom];
	datetime -> "even-more-features.ipynb"	[label=importedBy];
	"datetime(0)" -> "even-more-features.ipynb"	[label=appearsIn];
	"datetime(0)" -> datetime	[label=assignedFrom];
	catboost -> "even-more-features.ipynb"	[label=importedBy];
	CatBoostRegressor -> catboost	[label=importedBy];
	"CatBoostRegressor(0)" -> "even-more-features.ipynb"	[label=appearsIn];
	"CatBoostRegressor(0)" -> CatBoostRegressor	[label=assignedFrom];
	LabelEncoder -> "sklearn.preprocessing"	[label=importedBy];
	"LabelEncoder(0)" -> "even-more-features.ipynb"	[label=appearsIn];
	"LabelEncoder(0)" -> LabelEncoder	[label=assignedFrom];
	"sklearn.model_selection" -> "even-more-features.ipynb"	[label=importedBy];
	StratifiedKFold -> "sklearn.model_selection"	[label=importedBy];
	"StratifiedKFold(0)" -> "even-more-features.ipynb"	[label=appearsIn];
	"StratifiedKFold(0)" -> StratifiedKFold	[label=assignedFrom];
	KFold -> "sklearn.model_selection"	[label=importedBy];
	"KFold(0)" -> "even-more-features.ipynb"	[label=appearsIn];
	"KFold(0)" -> KFold	[label=assignedFrom];
	RepeatedKFold -> "sklearn.model_selection"	[label=importedBy];
	"RepeatedKFold(0)" -> "even-more-features.ipynb"	[label=appearsIn];
	"RepeatedKFold(0)" -> RepeatedKFold	[label=assignedFrom];
	"sklearn.linear_model" -> "even-more-features.ipynb"	[label=importedBy];
	LinearRegression -> "sklearn.linear_model"	[label=importedBy];
	"LinearRegression(0)" -> "even-more-features.ipynb"	[label=appearsIn];
	"LinearRegression(0)" -> LinearRegression	[label=assignedFrom];
	gc -> "even-more-features.ipynb"	[label=importedBy];
	"gc(0)" -> "even-more-features.ipynb"	[label=appearsIn];
	"gc(0)" -> gc	[label=assignedFrom];
	seaborn -> "even-more-features.ipynb"	[label=importedBy];
	"sns(0)" -> "even-more-features.ipynb"	[label=appearsIn];
	"sns(0)" -> seaborn	[label=assignedFrom];
	warnings -> "even-more-features.ipynb"	[label=importedBy];
	"warnings(0)" -> "even-more-features.ipynb"	[label=appearsIn];
	"warnings(0)" -> warnings	[label=assignedFrom];
	"warnings(0)$0" -> "warnings(0)"	[label=filterwarnings];
	"warnings(0)$0" -> "ignore(0)"	[label=filterwarnings];
	"ignore(0)" -> "even-more-features.ipynb"	[label=appearsIn];
	"scipy.signal" -> "even-more-features.ipynb"	[label=importedBy];
	hilbert -> "scipy.signal"	[label=importedBy];
	"hilbert(0)" -> "even-more-features.ipynb"	[label=appearsIn];
	"hilbert(0)" -> hilbert	[label=assignedFrom];
	hann -> "scipy.signal"	[label=importedBy];
	"hann(0)" -> "even-more-features.ipynb"	[label=appearsIn];
	"hann(0)" -> hann	[label=assignedFrom];
	convolve -> "scipy.signal"	[label=importedBy];
	"convolve(0)" -> "even-more-features.ipynb"	[label=appearsIn];
	"convolve(0)" -> convolve	[label=assignedFrom];
	scipy -> "even-more-features.ipynb"	[label=importedBy];
	stats -> scipy	[label=importedBy];
	"stats(0)" -> "even-more-features.ipynb"	[label=appearsIn];
	"stats(0)" -> stats	[label=assignedFrom];
	"sklearn.kernel_ridge" -> "even-more-features.ipynb"	[label=importedBy];
	KernelRidge -> "sklearn.kernel_ridge"	[label=importedBy];
	"KernelRidge(0)" -> "even-more-features.ipynb"	[label=appearsIn];
	"KernelRidge(0)" -> KernelRidge	[label=assignedFrom];
	itertools -> "even-more-features.ipynb"	[label=importedBy];
	product -> itertools	[label=importedBy];
	"product(0)" -> "even-more-features.ipynb"	[label=appearsIn];
	"product(0)" -> product	[label=assignedFrom];
	"tsfresh.feature_extraction" -> "even-more-features.ipynb"	[label=importedBy];
	feature_calculators -> "tsfresh.feature_extraction"	[label=importedBy];
	"feature_calculators(0)" -> "even-more-features.ipynb"	[label=appearsIn];
	"feature_calculators(0)" -> feature_calculators	[label=assignedFrom];
	joblib -> "even-more-features.ipynb"	[label=importedBy];
	Parallel -> joblib	[label=importedBy];
	"Parallel(0)" -> "even-more-features.ipynb"	[label=appearsIn];
	"Parallel(0)" -> Parallel	[label=assignedFrom];
	delayed -> joblib	[label=importedBy];
	"delayed(0)" -> "even-more-features.ipynb"	[label=appearsIn];
	"delayed(0)" -> delayed	[label=assignedFrom];
	"arr(1)" -> "add_trend_feature[0]"	[label=_argToVar];
	"abs_values(1)" -> "add_trend_feature[1]"	[label=_argToVar];
	"idx(1)$0" -> "arr(1)"	[label=array];
	"idx(1)$0" -> "np(1)"	[label=array];
	"idx(1)$0" -> "range(1)"	[label=array];
	"idx(1)$0" -> "len(1)"	[label=array];
	"arr(1)$0" -> "np(1)"	[label=abs];
	"arr(1)$0" -> "arr(1)$0"	[label=abs];
	"lr(1)$0" -> "idx(1)$0"	[label=fit];
	"lr(1)$0" -> "arr(1)$0"	[label=fit];
	"lr(1)$0" -> "lr(1)"	[label=fit];
	"lr(1)$0" -> "1(1)"	[label=fit];
	"x(2)" -> "classic_sta_lta[0]"	[label=_argToVar];
	"length_sta(2)" -> "classic_sta_lta[1]"	[label=_argToVar];
	"length_lta(2)" -> "classic_sta_lta[2]"	[label=_argToVar];
	"sta(2)$0" -> "x(2)"	[label=cumsum];
	"sta(2)$0" -> "np(2)"	[label=cumsum];
	"sta(2)$0" -> "2(2)"	[label=cumsum];
	"sta(2)$1" -> "np(2)"	[label=require];
	"sta(2)$1" -> "sta(2)$1"	[label=require];
	"lta(2)$0" -> "sta(2)$1"	[label=copy];
	"sta(2)$2" -> "length_sta(2)"	[label=Sub];
	"sta(2)$2" -> "sta(2)$1"	[label=Sub];
	"sta(2)$2" -> "sta(2)$2"	[label=Sub];
	"sta(2)$3" -> "length_sta(2)"	[label=Div];
	"sta(2)$3" -> "sta(2)$2"	[label=Div];
	"lta(2)$1" -> "length_lta(2)"	[label=Sub];
	"lta(2)$1" -> "lta(2)$0"	[label=Sub];
	"lta(2)$1" -> "lta(2)$1"	[label=Sub];
	"lta(2)$2" -> "length_lta(2)"	[label=Div];
	"lta(2)$2" -> "lta(2)$1"	[label=Div];
	"sta(2)$4" -> "sta(2)$3"	[label=assignedFrom];
	"sta(2)$4" -> "0(2)"	[label=assignedFrom];
	"dtiny(2)$0" -> "np(2)"	[label=assignedFrom];
	"dtiny(2)$0" -> "0.0(2)"	[label=assignedFrom];
	"idx(2)$0" -> "lta(2)$2"	[label=assignedFrom];
	"idx(2)$0" -> "dtiny(2)$0"	[label=assignedFrom];
	"lta(2)$3" -> "lta(2)$2"	[label=assignedFrom];
	"lta(2)$3" -> "dtiny(2)$0"	[label=assignedFrom];
	"x(3)" -> "calc_change_rate[0]"	[label=_argToVar];
	"change(3)$0" -> "x(3)"	[label=assignedFrom];
	"change(3)$0" -> "np(3)"	[label=assignedFrom];
	"change(3)$0" -> "1(3)"	[label=assignedFrom];
	"change(3)$1" -> "change(3)$0"	[label=assignedFrom];
	"change(3)$1" -> "np(3)"	[label=assignedFrom];
	"change(3)$1" -> "change(3)$1"	[label=assignedFrom];
	"change(3)$1" -> "0(3)"	[label=assignedFrom];
	"change(3)$2" -> "np(3)"	[label=assignedFrom];
	"change(3)$2" -> "change(3)$1"	[label=assignedFrom];
	"change(3)$2" -> "change(3)$2"	[label=assignedFrom];
	"change(3)$3" -> "np(3)"	[label=assignedFrom];
	"change(3)$3" -> "change(3)$2"	[label=assignedFrom];
	"change(3)$3" -> "change(3)$3"	[label=assignedFrom];
	"change(3)$4" -> "np(3)"	[label=assignedFrom];
	"change(3)$4" -> "change(3)$3"	[label=assignedFrom];
	"change(3)$4" -> "change(3)$4"	[label=assignedFrom];
	"self(5)" -> "__init__[0]"	[label=_argToVar];
	"dtype(5)" -> "__init__[1]"	[label=_argToVar];
	"n_jobs(5)" -> "__init__[2]"	[label=_argToVar];
	"chunk_size(5)" -> "__init__[3]"	[label=_argToVar];
	"self(5)$0" -> "self(5)"	[label=assignedFrom];
	"self(5)$0" -> "chunk_size(5)"	[label=assignedFrom];
	"self(5)$1" -> "dtype(5)"	[label=assignedFrom];
	"self(5)$1" -> "self(5)$0"	[label=assignedFrom];
	"self(5)$2" -> "self(5)$1"	[label=assignedFrom];
	"self(5)$2" -> "None(5)"	[label=assignedFrom];
	"self(5)$3" -> "n_jobs(5)"	[label=assignedFrom];
	"self(5)$3" -> "self(5)$2"	[label=assignedFrom];
	"self(5)$4" -> "self(5)$3"	[label=assignedFrom];
	"self(5)$4" -> "[](5)"	[label=assignedFrom];
	"self(5)$5" -> "self(5)$4"	[label=assignedFrom];
	"self(5)$5" -> "../input/train.csv(5)"	[label=assignedFrom];
	"self(5)$6" -> "self(5)$5"	[label=int];
	"self(5)$6" -> "self(5)$6"	[label=int];
	"self(5)$6" -> "629145481(5)"	[label=int];
	"submission(5)$0" -> "pd(5)"	[label=read_csv];
	"submission(5)$0" -> "../input/sample_submission.csv(5)"	[label=read_csv];
	"seg_id(5)" -> "submission(5)$0"	[label=iteratorOf];
	"self(5)$7" -> "self(5)$6"	[label=append];
	"self(5)$7" -> "seg_id(5)"	[label=append];
	"self(5)$7" -> "../input/test/(5)"	[label=append];
	"self(5)$7" -> ".csv(5)"	[label=append];
	"self(5)$8" -> "submission(5)$0"	[label=int];
	"self(5)$8" -> "self(5)$7"	[label=int];
	"self(5)$8" -> "len(5)"	[label=int];
	"self(6)" -> "read_chunks[0]"	[label=_argToVar];
	"iter_df(6)$0" -> "self(6)"	[label=read_csv];
	"iter_df(6)$0" -> "pd(6)"	[label=read_csv];
	"iter_df(6)$0" -> "True(6)"	[label=read_csv];
	"iter_df(6)$0" -> "acoustic_data(6)"	[label=read_csv];
	"iter_df(6)$0" -> "time_to_failure(6)"	[label=read_csv];
	"iter_df(6)$0" -> "np(6)"	[label=read_csv];
	"counter(6)" -> "iter_df(6)$0"	[label=iteratorOf];
	"counter(6)" -> "enumerate(6)"	[label=iteratorOf];
	"df(6)" -> "iter_df(6)$0"	[label=iteratorOf];
	"df(6)" -> "enumerate(6)"	[label=iteratorOf];
	"x(6)$0" -> "df(6)"	[label=assignedFrom];
	"y(6)$0" -> "df(6)"	[label=assignedFrom];
	"y(6)$0" -> "1(6)"	[label=assignedFrom];
	"seg_id(6)$0" -> "self(6)"	[label=iteratorOf];
	"seg_id(6)$0" -> "counter(6)"	[label=Add];
	"seg_id(6)$0" -> "train_(6)"	[label=Add];
	"seg_id(6)$0" -> "str(6)"	[label=Add];
	"f(6)" -> "self(6)"	[label=iteratorOf];
	"df(6)$0" -> "pd(6)"	[label=read_csv];
	"df(6)$0" -> "acoustic_data(6)"	[label=read_csv];
	"df(6)$0" -> "np(6)"	[label=read_csv];
	"df(6)$0" -> "f(6)"	[label=read_csv];
	"x(6)$1" -> "self(6)"	[label=assignedFrom];
	"x(6)$1" -> "df(6)$0"	[label=assignedFrom];
	"self(7)" -> "get_features[0]"	[label=_argToVar];
	"x(7)" -> "get_features[1]"	[label=_argToVar];
	"y(7)" -> "get_features[2]"	[label=_argToVar];
	"seg_id(7)" -> "get_features[3]"	[label=_argToVar];
	"x(7)$0" -> "x(7)$0"	[label=Series];
	"x(7)$0" -> "pd(7)"	[label=Series];
	"zc(7)$0" -> "x(7)$0"	[label=fft];
	"zc(7)$0" -> "np(7)"	[label=fft];
	"realFFT(7)$0" -> "pd(7)"	[label=Series];
	"realFFT(7)$0" -> "zc(7)$0"	[label=Series];
	"realFFT(7)$0" -> "np(7)"	[label=Series];
	"imagFFT(7)$0" -> "pd(7)"	[label=Series];
	"imagFFT(7)$0" -> "zc(7)$0"	[label=Series];
	"imagFFT(7)$0" -> "np(7)"	[label=Series];
	"main_dict(7)$0" -> "self(7)"	[label=features];
	"main_dict(7)$0" -> "y(7)"	[label=features];
	"main_dict(7)$0" -> "seg_id(7)"	[label=features];
	"main_dict(7)$0" -> "x(7)$0"	[label=features];
	"r_dict(7)$0" -> "self(7)"	[label=features];
	"r_dict(7)$0" -> "y(7)"	[label=features];
	"r_dict(7)$0" -> "seg_id(7)"	[label=features];
	"r_dict(7)$0" -> "realFFT(7)$0"	[label=features];
	"i_dict(7)$0" -> "self(7)"	[label=features];
	"i_dict(7)$0" -> "y(7)"	[label=features];
	"i_dict(7)$0" -> "seg_id(7)"	[label=features];
	"i_dict(7)$0" -> "imagFFT(7)$0"	[label=features];
	"k(7)" -> "r_dict(7)$0"	[label=iteratorOf];
	"k(7)" -> "i_dict(7)$0"	[label=iteratorOf];
	"v(7)" -> "r_dict(7)$0"	[label=iteratorOf];
	"v(7)" -> "i_dict(7)$0"	[label=iteratorOf];
	"main_dict(7)$1" -> "main_dict(7)$0"	[label=assignedFrom];
	"main_dict(7)$1" -> "v(7)"	[label=assignedFrom];
	"main_dict(7)$2" -> "v(7)"	[label=assignedFrom];
	"main_dict(7)$2" -> "main_dict(7)$1"	[label=assignedFrom];
	"self(8)" -> "features[0]"	[label=_argToVar];
	"x(8)" -> "features[1]"	[label=_argToVar];
	"y(8)" -> "features[2]"	[label=_argToVar];
	"seg_id(8)" -> "features[3]"	[label=_argToVar];
	"feature_dict(8)$0" -> "y(8)"	[label=assignedFrom];
	"feature_dict(8)$0" -> "feature_dict(8)"	[label=assignedFrom];
	"feature_dict(8)$1" -> "seg_id(8)"	[label=assignedFrom];
	"feature_dict(8)$1" -> "feature_dict(8)$0"	[label=assignedFrom];
	"percentiles(8)$0" -> "[<_ast.Constant object at 0x7fd500832bb0>, <_ast.Constant object at 0x7fd500832fd0>, <_ast.Constant object at 0x7fd500832340>, <_\
ast.Constant object at 0x7fd500832c40>, <_ast.Constant object at 0x7fd500832130>, <_ast.Constant object at 0x7fd500832ee0>, <_ast.Constant \
object at 0x7fd5008321c0>, <_ast.Constant object at 0x7fd500832be0>, <_ast.Constant object at 0x7fd500832f70>, <_ast.Constant object \
at 0x7fd500832160>, <_ast.Constant object at 0x7fd500832100>, <_ast.Constant object at 0x7fd500832310>, <_ast.Constant object at \
0x7fd5008327f0>, <_ast.Constant object at 0x7fd500832a30>, <_ast.Constant object at 0x7fd500832550>](8)"	[label=assignedFrom];
	"hann_windows(8)$0" -> "[<_ast.Constant object at 0x7fd500832220>, <_ast.Constant object at 0x7fd5008320a0>, <_ast.Constant object at 0x7fd500832940>, <_\
ast.Constant object at 0x7fd500832040>](8)"	[label=assignedFrom];
	"spans(8)$0" -> "[<_ast.Constant object at 0x7fd5008323d0>, <_ast.Constant object at 0x7fd500832670>, <_ast.Constant object at 0x7fd500832880>, <_\
ast.Constant object at 0x7fd500832190>](8)"	[label=assignedFrom];
	"windows(8)$0" -> "[<_ast.Constant object at 0x7fd4c04ee0d0>, <_ast.Constant object at 0x7fd4c04ee160>, <_ast.Constant object at 0x7fd4c04ee2e0>, <_\
ast.Constant object at 0x7fd4c04ee340>, <_ast.Constant object at 0x7fd4c04ee4f0>, <_ast.Constant object at 0x7fd4c04ee370>](8)"	[label=assignedFrom];
	"borders(8)$0" -> "range(8)"	[label=list];
	"borders(8)$0" -> "4000(8)"	[label=list];
	"borders(8)$0" -> "4001(8)"	[label=list];
	"borders(8)$0" -> "1000(8)"	[label=list];
	"peaks(8)$0" -> "[<_ast.Constant object at 0x7fd4c04ee670>, <_ast.Constant object at 0x7fd4c04ee4c0>, <_ast.Constant object at 0x7fd4c04ee6d0>, <_\
ast.Constant object at 0x7fd4c04ee700>](8)"	[label=assignedFrom];
	"coefs(8)$0" -> "[<_ast.Constant object at 0x7fd4c04ee550>, <_ast.Constant object at 0x7fd4c04ee5b0>, <_ast.Constant object at 0x7fd4c04ee610>, <_\
ast.Constant object at 0x7fd4c04ee5e0>, <_ast.Constant object at 0x7fd4c04ee580>](8)"	[label=assignedFrom];
	"lags(8)$0" -> "[<_ast.Constant object at 0x7fd4c04ee970>, <_ast.Constant object at 0x7fd4c04ee820>, <_ast.Constant object at 0x7fd4c04ee8e0>, <_\
ast.Constant object at 0x7fd4c04ee910>](8)"	[label=assignedFrom];
	"autocorr_lags(8)$0" -> "[<_ast.Constant object at 0x7fd4c04eeac0>, <_ast.Constant object at 0x7fd4c04eea90>, <_ast.Constant object at 0x7fd4c04eeaf0>, <_\
ast.Constant object at 0x7fd4c04eea00>, <_ast.Constant object at 0x7fd4c04eea30>, <_ast.Constant object at 0x7fd4c04eeb20>, <_ast.Constant \
object at 0x7fd4c04eecd0>, <_ast.Constant object at 0x7fd4c04eef40>](8)"	[label=assignedFrom];
	"feature_dict(8)$2" -> "x(8)"	[label=mean];
	"feature_dict(8)$2" -> "feature_dict(8)$1"	[label=mean];
	"feature_dict(8)$3" -> "x(8)"	[label=std];
	"feature_dict(8)$3" -> "feature_dict(8)$2"	[label=std];
	"feature_dict(8)$4" -> "x(8)"	[label=max];
	"feature_dict(8)$4" -> "feature_dict(8)$3"	[label=max];
	"feature_dict(8)$5" -> "x(8)"	[label=min];
	"feature_dict(8)$5" -> "feature_dict(8)$4"	[label=min];
	"feature_dict(8)$6" -> "x(8)"	[label=mean];
	"feature_dict(8)$6" -> "feature_dict(8)$5"	[label=mean];
	"feature_dict(8)$6" -> "np(8)"	[label=mean];
	"feature_dict(8)$7" -> "x(8)"	[label=max];
	"feature_dict(8)$7" -> "feature_dict(8)$6"	[label=max];
	"feature_dict(8)$7" -> "np(8)"	[label=max];
	"feature_dict(8)$8" -> "x(8)"	[label=mean];
	"feature_dict(8)$8" -> "np(8)"	[label=mean];
	"feature_dict(8)$8" -> "feature_dict(8)$7"	[label=mean];
	"feature_dict(8)$9" -> "x(8)"	[label=std];
	"feature_dict(8)$9" -> "np(8)"	[label=std];
	"feature_dict(8)$9" -> "feature_dict(8)$8"	[label=std];
	"feature_dict(8)$10" -> "x(8)"	[label=hmean];
	"feature_dict(8)$10" -> "np(8)"	[label=hmean];
	"feature_dict(8)$10" -> "feature_dict(8)$9"	[label=hmean];
	"feature_dict(8)$10" -> "stats(8)"	[label=hmean];
	"feature_dict(8)$10" -> "0(8)"	[label=hmean];
	"feature_dict(8)$11" -> "x(8)"	[label=gmean];
	"feature_dict(8)$11" -> "np(8)"	[label=gmean];
	"feature_dict(8)$11" -> "feature_dict(8)$10"	[label=gmean];
	"feature_dict(8)$11" -> "stats(8)"	[label=gmean];
	"feature_dict(8)$11" -> "0(8)"	[label=gmean];
	"i(8)" -> "borders(8)$0"	[label=iteratorOf];
	"i(8)" -> "range(8)"	[label=iteratorOf];
	"i(8)" -> "1(8)"	[label=iteratorOf];
	"i(8)" -> "5(8)"	[label=iteratorOf];
	"i(8)" -> "[<_ast.Constant object at 0x7fd4c04afbb0>, <_ast.Constant object at 0x7fd4c04afbe0>](8)"	[label=iteratorOf];
	"i(8)" -> "zip(8)"	[label=iteratorOf];
	"feature_dict(8)$12" -> "x(8)"	[label=kstat];
	"feature_dict(8)$12" -> "stats(8)"	[label=kstat];
	"feature_dict(8)$12" -> "feature_dict(8)$11"	[label=kstat];
	"feature_dict(8)$12" -> "i(8)"	[label=kstat];
	"feature_dict(8)$13" -> "x(8)"	[label=moment];
	"feature_dict(8)$13" -> "stats(8)"	[label=moment];
	"feature_dict(8)$13" -> "i(8)"	[label=moment];
	"feature_dict(8)$13" -> "feature_dict(8)$12"	[label=moment];
	"feature_dict(8)$14" -> "x(8)"	[label=kstatvar];
	"feature_dict(8)$14" -> "stats(8)"	[label=kstatvar];
	"feature_dict(8)$14" -> "i(8)"	[label=kstatvar];
	"feature_dict(8)$14" -> "feature_dict(8)$13"	[label=kstatvar];
	"agg_type(8)" -> "product(8)"	[label=iteratorOf];
	"agg_type(8)" -> "[<_ast.Constant object at 0x7fd5009d70a0>, <_ast.Constant object at 0x7fd5009d70d0>, <_ast.Constant object at 0x7fd5009d7100>, <_\
ast.Constant object at 0x7fd5009d7130>](8)"	[label=iteratorOf];
	"agg_type(8)" -> "[<_ast.Constant object at 0x7fd5009d7190>, <_ast.Constant object at 0x7fd5009d71c0>, <_ast.Constant object at 0x7fd5009d71f0>](8)"	[label=iteratorOf];
	"agg_type(8)" -> "[<_ast.Constant object at 0x7fd5009d7250>, <_ast.Constant object at 0x7fd5009d7280>](8)"	[label=iteratorOf];
	"slice_length(8)" -> "product(8)"	[label=iteratorOf];
	"slice_length(8)" -> "[<_ast.Constant object at 0x7fd5009d70a0>, <_ast.Constant object at 0x7fd5009d70d0>, <_ast.Constant object at 0x7fd5009d7100>, <_\
ast.Constant object at 0x7fd5009d7130>](8)"	[label=iteratorOf];
	"slice_length(8)" -> "[<_ast.Constant object at 0x7fd5009d7190>, <_ast.Constant object at 0x7fd5009d71c0>, <_ast.Constant object at 0x7fd5009d71f0>](8)"	[label=iteratorOf];
	"slice_length(8)" -> "[<_ast.Constant object at 0x7fd5009d7250>, <_ast.Constant object at 0x7fd5009d7280>](8)"	[label=iteratorOf];
	"slice_length(8)" -> "[<_ast.Constant object at 0x7fd5009b1bb0>, <_ast.Constant object at 0x7fd5009b1be0>, <_ast.Constant object at 0x7fd5009b1c10>](8)"	[label=iteratorOf];
	"slice_length(8)" -> "[<_ast.Constant object at 0x7fd5009b1c70>, <_ast.Constant object at 0x7fd5009b1ca0>](8)"	[label=iteratorOf];
	"slice_length(8)" -> "[<_ast.Constant object at 0x7fd5009a4430>, <_ast.Constant object at 0x7fd5009a4460>, <_ast.Constant object at 0x7fd5009a4490>](8)"	[label=iteratorOf];
	"slice_length(8)" -> "[<_ast.Constant object at 0x7fd5009a4520>, <_ast.Constant object at 0x7fd5009a4550>, <_ast.Constant object at 0x7fd5009a4580>, <_\
ast.Constant object at 0x7fd5009a45b0>, <_ast.Constant object at 0x7fd5009a45e0>](8)"	[label=iteratorOf];
	"direction(8)" -> "product(8)"	[label=iteratorOf];
	"direction(8)" -> "[<_ast.Constant object at 0x7fd5009d70a0>, <_ast.Constant object at 0x7fd5009d70d0>, <_ast.Constant object at 0x7fd5009d7100>, <_\
ast.Constant object at 0x7fd5009d7130>](8)"	[label=iteratorOf];
	"direction(8)" -> "[<_ast.Constant object at 0x7fd5009d7190>, <_ast.Constant object at 0x7fd5009d71c0>, <_ast.Constant object at 0x7fd5009d71f0>](8)"	[label=iteratorOf];
	"direction(8)" -> "[<_ast.Constant object at 0x7fd5009d7250>, <_ast.Constant object at 0x7fd5009d7280>](8)"	[label=iteratorOf];
	"direction(8)" -> "[<_ast.Constant object at 0x7fd5009b1bb0>, <_ast.Constant object at 0x7fd5009b1be0>, <_ast.Constant object at 0x7fd5009b1c10>](8)"	[label=iteratorOf];
	"direction(8)" -> "[<_ast.Constant object at 0x7fd5009b1c70>, <_ast.Constant object at 0x7fd5009b1ca0>](8)"	[label=iteratorOf];
	"feature_dict(8)$15" -> "x(8)"	[label=agg];
	"feature_dict(8)$15" -> "feature_dict(8)$14"	[label=agg];
	"feature_dict(8)$15" -> "agg_type(8)"	[label=agg];
	"feature_dict(8)$15" -> "slice_length(8)"	[label=agg];
	"feature_dict(8)$16" -> "x(8)"	[label=agg];
	"feature_dict(8)$16" -> "agg_type(8)"	[label=agg];
	"feature_dict(8)$16" -> "slice_length(8)"	[label=agg];
	"feature_dict(8)$16" -> "feature_dict(8)$15"	[label=agg];
	"feature_dict(8)$17" -> "x(8)"	[label=Div];
	"feature_dict(8)$17" -> "np(8)"	[label=Div];
	"feature_dict(8)$17" -> "feature_dict(8)$16"	[label=Div];
	"feature_dict(8)$18" -> "x(8)"	[label=Sub];
	"feature_dict(8)$18" -> "np(8)"	[label=Sub];
	"feature_dict(8)$18" -> "feature_dict(8)$17"	[label=Sub];
	"feature_dict(8)$19" -> "x(8)"	[label=len];
	"feature_dict(8)$19" -> "np(8)"	[label=len];
	"feature_dict(8)$19" -> "feature_dict(8)$18"	[label=len];
	"feature_dict(8)$19" -> "500(8)"	[label=len];
	"feature_dict(8)$20" -> "x(8)"	[label=sum];
	"feature_dict(8)$20" -> "feature_dict(8)$19"	[label=sum];
	"feature_dict(8)$21" -> "x(8)"	[label=calc_change_rate];
	"feature_dict(8)$21" -> "feature_dict(8)$20"	[label=calc_change_rate];
	"feature_dict(8)$22" -> "x(8)"	[label=calc_change_rate];
	"feature_dict(8)$22" -> "slice_length(8)"	[label=calc_change_rate];
	"feature_dict(8)$22" -> "feature_dict(8)$21"	[label=calc_change_rate];
	"feature_dict(8)$23" -> "x(8)"	[label=calc_change_rate];
	"feature_dict(8)$23" -> "slice_length(8)"	[label=calc_change_rate];
	"feature_dict(8)$23" -> "feature_dict(8)$22"	[label=calc_change_rate];
	"p(8)" -> "percentiles(8)$0"	[label=iteratorOf];
	"feature_dict(8)$24" -> "x(8)"	[label=percentile];
	"feature_dict(8)$24" -> "np(8)"	[label=percentile];
	"feature_dict(8)$24" -> "feature_dict(8)$23"	[label=percentile];
	"feature_dict(8)$24" -> "p(8)"	[label=percentile];
	"feature_dict(8)$25" -> "x(8)"	[label=percentile];
	"feature_dict(8)$25" -> "np(8)"	[label=percentile];
	"feature_dict(8)$25" -> "p(8)"	[label=percentile];
	"feature_dict(8)$25" -> "feature_dict(8)$24"	[label=percentile];
	"feature_dict(8)$26" -> "x(8)"	[label=add_trend_feature];
	"feature_dict(8)$26" -> "feature_dict(8)$25"	[label=add_trend_feature];
	"feature_dict(8)$27" -> "x(8)"	[label=add_trend_feature];
	"feature_dict(8)$27" -> "feature_dict(8)$26"	[label=add_trend_feature];
	"feature_dict(8)$27" -> "True(8)"	[label=add_trend_feature];
	"feature_dict(8)$28" -> "x(8)"	[label=mad];
	"feature_dict(8)$28" -> "feature_dict(8)$27"	[label=mad];
	"feature_dict(8)$29" -> "x(8)"	[label=kurtosis];
	"feature_dict(8)$29" -> "feature_dict(8)$28"	[label=kurtosis];
	"feature_dict(8)$30" -> "x(8)"	[label=skew];
	"feature_dict(8)$30" -> "feature_dict(8)$29"	[label=skew];
	"feature_dict(8)$31" -> "x(8)"	[label=median];
	"feature_dict(8)$31" -> "feature_dict(8)$30"	[label=median];
	"feature_dict(8)$32" -> "x(8)"	[label=mean];
	"feature_dict(8)$32" -> "np(8)"	[label=mean];
	"feature_dict(8)$32" -> "feature_dict(8)$31"	[label=mean];
	"feature_dict(8)$32" -> "hilbert(8)"	[label=mean];
	"hw(8)" -> "hann_windows(8)$0"	[label=iteratorOf];
	"feature_dict(8)$33" -> "x(8)"	[label=mean];
	"feature_dict(8)$33" -> "feature_dict(8)$32"	[label=mean];
	"feature_dict(8)$33" -> "hw(8)"	[label=mean];
	"feature_dict(8)$33" -> "convolve(8)"	[label=mean];
	"feature_dict(8)$33" -> "hann(8)"	[label=mean];
	"feature_dict(8)$33" -> "same(8)"	[label=mean];
	"feature_dict(8)$33" -> "sum(8)"	[label=mean];
	"feature_dict(8)$34" -> "x(8)"	[label=mean];
	"feature_dict(8)$34" -> "500(8)"	[label=mean];
	"feature_dict(8)$34" -> "feature_dict(8)$33"	[label=mean];
	"feature_dict(8)$34" -> "classic_sta_lta(8)"	[label=mean];
	"feature_dict(8)$34" -> "10000(8)"	[label=mean];
	"feature_dict(8)$35" -> "x(8)"	[label=mean];
	"feature_dict(8)$35" -> "feature_dict(8)$34"	[label=mean];
	"feature_dict(8)$35" -> "classic_sta_lta(8)"	[label=mean];
	"feature_dict(8)$35" -> "5000(8)"	[label=mean];
	"feature_dict(8)$35" -> "100000(8)"	[label=mean];
	"feature_dict(8)$36" -> "x(8)"	[label=mean];
	"feature_dict(8)$36" -> "classic_sta_lta(8)"	[label=mean];
	"feature_dict(8)$36" -> "feature_dict(8)$35"	[label=mean];
	"feature_dict(8)$36" -> "3333(8)"	[label=mean];
	"feature_dict(8)$36" -> "6666(8)"	[label=mean];
	"feature_dict(8)$37" -> "x(8)"	[label=mean];
	"feature_dict(8)$37" -> "classic_sta_lta(8)"	[label=mean];
	"feature_dict(8)$37" -> "10000(8)"	[label=mean];
	"feature_dict(8)$37" -> "feature_dict(8)$36"	[label=mean];
	"feature_dict(8)$37" -> "25000(8)"	[label=mean];
	"feature_dict(8)$38" -> "x(8)"	[label=mean];
	"feature_dict(8)$38" -> "1000(8)"	[label=mean];
	"feature_dict(8)$38" -> "classic_sta_lta(8)"	[label=mean];
	"feature_dict(8)$38" -> "feature_dict(8)$37"	[label=mean];
	"feature_dict(8)$38" -> "50(8)"	[label=mean];
	"feature_dict(8)$39" -> "x(8)"	[label=mean];
	"feature_dict(8)$39" -> "classic_sta_lta(8)"	[label=mean];
	"feature_dict(8)$39" -> "5000(8)"	[label=mean];
	"feature_dict(8)$39" -> "feature_dict(8)$38"	[label=mean];
	"feature_dict(8)$39" -> "100(8)"	[label=mean];
	"feature_dict(8)$40" -> "x(8)"	[label=mean];
	"feature_dict(8)$40" -> "classic_sta_lta(8)"	[label=mean];
	"feature_dict(8)$40" -> "feature_dict(8)$39"	[label=mean];
	"feature_dict(8)$40" -> "333(8)"	[label=mean];
	"feature_dict(8)$40" -> "666(8)"	[label=mean];
	"feature_dict(8)$41" -> "x(8)"	[label=mean];
	"feature_dict(8)$41" -> "4000(8)"	[label=mean];
	"feature_dict(8)$41" -> "classic_sta_lta(8)"	[label=mean];
	"feature_dict(8)$41" -> "10000(8)"	[label=mean];
	"feature_dict(8)$41" -> "feature_dict(8)$40"	[label=mean];
	"ewma(8)$0" -> "pd(8)"	[label=assignedFrom];
	"s(8)" -> "spans(8)$0"	[label=iteratorOf];
	"feature_dict(8)$42" -> "x(8)"	[label=mean];
	"feature_dict(8)$42" -> "True(8)"	[label=mean];
	"feature_dict(8)$42" -> "feature_dict(8)$41"	[label=mean];
	"feature_dict(8)$42" -> "ewma(8)$0"	[label=mean];
	"feature_dict(8)$42" -> "s(8)"	[label=mean];
	"feature_dict(8)$43" -> "x(8)"	[label=std];
	"feature_dict(8)$43" -> "True(8)"	[label=std];
	"feature_dict(8)$43" -> "ewma(8)$0"	[label=std];
	"feature_dict(8)$43" -> "s(8)"	[label=std];
	"feature_dict(8)$43" -> "feature_dict(8)$42"	[label=std];
	"feature_dict(8)$44" -> "x(8)"	[label=mean];
	"feature_dict(8)$44" -> "True(8)"	[label=mean];
	"feature_dict(8)$44" -> "ewma(8)$0"	[label=mean];
	"feature_dict(8)$44" -> "s(8)"	[label=mean];
	"feature_dict(8)$44" -> "feature_dict(8)$43"	[label=mean];
	"feature_dict(8)$45" -> "x(8)"	[label=std];
	"feature_dict(8)$45" -> "True(8)"	[label=std];
	"feature_dict(8)$45" -> "ewma(8)$0"	[label=std];
	"feature_dict(8)$45" -> "s(8)"	[label=std];
	"feature_dict(8)$45" -> "feature_dict(8)$44"	[label=std];
	"feature_dict(8)$46" -> "x(8)"	[label=subtract];
	"feature_dict(8)$46" -> "np(8)"	[label=subtract];
	"feature_dict(8)$46" -> "feature_dict(8)$45"	[label=subtract];
	"feature_dict(8)$46" -> "[<_ast.Constant object at 0x7fd5009acd00>, <_ast.Constant object at 0x7fd5009acd30>](8)"	[label=subtract];
	"feature_dict(8)$47" -> "x(8)"	[label=subtract];
	"feature_dict(8)$47" -> "np(8)"	[label=subtract];
	"feature_dict(8)$47" -> "feature_dict(8)$46"	[label=subtract];
	"feature_dict(8)$47" -> "[<_ast.Constant object at 0x7fd5009a4070>, <_ast.Constant object at 0x7fd5009a40a0>](8)"	[label=subtract];
	"feature_dict(8)$48" -> "x(8)"	[label=trim_mean];
	"feature_dict(8)$48" -> "stats(8)"	[label=trim_mean];
	"feature_dict(8)$48" -> "feature_dict(8)$47"	[label=trim_mean];
	"feature_dict(8)$48" -> "0.1(8)"	[label=trim_mean];
	"threshold(8)" -> "product(8)"	[label=iteratorOf];
	"threshold(8)" -> "[<_ast.Constant object at 0x7fd5009a4430>, <_ast.Constant object at 0x7fd5009a4460>, <_ast.Constant object at 0x7fd5009a4490>](8)"	[label=iteratorOf];
	"threshold(8)" -> "[<_ast.Constant object at 0x7fd5009a4520>, <_ast.Constant object at 0x7fd5009a4550>, <_ast.Constant object at 0x7fd5009a4580>, <_\
ast.Constant object at 0x7fd5009a45b0>, <_ast.Constant object at 0x7fd5009a45e0>](8)"	[label=iteratorOf];
	"feature_dict(8)$49" -> "x(8)"	[label=sum];
	"feature_dict(8)$49" -> "np(8)"	[label=sum];
	"feature_dict(8)$49" -> "slice_length(8)"	[label=sum];
	"feature_dict(8)$49" -> "feature_dict(8)$48"	[label=sum];
	"feature_dict(8)$49" -> "threshold(8)"	[label=sum];
	"feature_dict(8)$50" -> "x(8)"	[label=sum];
	"feature_dict(8)$50" -> "np(8)"	[label=sum];
	"feature_dict(8)$50" -> "slice_length(8)"	[label=sum];
	"feature_dict(8)$50" -> "threshold(8)"	[label=sum];
	"feature_dict(8)$50" -> "feature_dict(8)$49"	[label=sum];
	"feature_dict(8)$51" -> "x(8)"	[label=range_count];
	"feature_dict(8)$51" -> "4000(8)"	[label=range_count];
	"feature_dict(8)$51" -> "np(8)"	[label=range_count];
	"feature_dict(8)$51" -> "feature_dict(8)$50"	[label=range_count];
	"feature_dict(8)$51" -> "feature_calculators(8)"	[label=range_count];
	"feature_dict(8)$52" -> "x(8)"	[label=range_count];
	"feature_dict(8)$52" -> "4000(8)"	[label=range_count];
	"feature_dict(8)$52" -> "np(8)"	[label=range_count];
	"feature_dict(8)$52" -> "feature_dict(8)$51"	[label=range_count];
	"feature_dict(8)$52" -> "feature_calculators(8)"	[label=range_count];
	"j(8)" -> "borders(8)$0"	[label=iteratorOf];
	"j(8)" -> "1(8)"	[label=iteratorOf];
	"j(8)" -> "zip(8)"	[label=iteratorOf];
	"feature_dict(8)$53" -> "x(8)"	[label=range_count];
	"feature_dict(8)$53" -> "i(8)"	[label=range_count];
	"feature_dict(8)$53" -> "feature_calculators(8)"	[label=range_count];
	"feature_dict(8)$53" -> "feature_dict(8)$52"	[label=range_count];
	"feature_dict(8)$53" -> "j(8)"	[label=range_count];
	"autocorr_lag(8)" -> "autocorr_lags(8)$0"	[label=iteratorOf];
	"feature_dict(8)$54" -> "x(8)"	[label=autocorrelation];
	"feature_dict(8)$54" -> "feature_calculators(8)"	[label=autocorrelation];
	"feature_dict(8)$54" -> "feature_dict(8)$53"	[label=autocorrelation];
	"feature_dict(8)$54" -> "autocorr_lag(8)"	[label=autocorrelation];
	"feature_dict(8)$55" -> "x(8)"	[label=c3];
	"feature_dict(8)$55" -> "feature_calculators(8)"	[label=c3];
	"feature_dict(8)$55" -> "autocorr_lag(8)"	[label=c3];
	"feature_dict(8)$55" -> "feature_dict(8)$54"	[label=c3];
	"feature_dict(8)$56" -> "x(8)"	[label=binned_entropy];
	"feature_dict(8)$56" -> "p(8)"	[label=binned_entropy];
	"feature_dict(8)$56" -> "feature_calculators(8)"	[label=binned_entropy];
	"feature_dict(8)$56" -> "feature_dict(8)$55"	[label=binned_entropy];
	"feature_dict(8)$57" -> "x(8)"	[label=number_crossing_m];
	"feature_dict(8)$57" -> "0(8)"	[label=number_crossing_m];
	"feature_dict(8)$57" -> "feature_calculators(8)"	[label=number_crossing_m];
	"feature_dict(8)$57" -> "feature_dict(8)$56"	[label=number_crossing_m];
	"peak(8)" -> "peaks(8)$0"	[label=iteratorOf];
	"feature_dict(8)$58" -> "x(8)"	[label=number_peaks];
	"feature_dict(8)$58" -> "feature_calculators(8)"	[label=number_peaks];
	"feature_dict(8)$58" -> "feature_dict(8)$57"	[label=number_peaks];
	"feature_dict(8)$58" -> "peak(8)"	[label=number_peaks];
	"c(8)" -> "coefs(8)$0"	[label=iteratorOf];
	"feature_dict(8)$59" -> "x(8)"	[label=assignedFrom];
	"feature_dict(8)$59" -> "0(8)"	[label=assignedFrom];
	"feature_dict(8)$59" -> "1(8)"	[label=assignedFrom];
	"feature_dict(8)$59" -> "feature_calculators(8)"	[label=assignedFrom];
	"feature_dict(8)$59" -> "feature_dict(8)$58"	[label=assignedFrom];
	"feature_dict(8)$59" -> "list(8)"	[label=assignedFrom];
	"feature_dict(8)$59" -> "[<_ast.Dict object at 0x7fd500834e80>](8)"	[label=assignedFrom];
	"feature_dict(8)$60" -> "x(8)"	[label=time_reversal_asymmetry_statistic];
	"feature_dict(8)$60" -> "feature_calculators(8)"	[label=time_reversal_asymmetry_statistic];
	"feature_dict(8)$60" -> "c(8)"	[label=time_reversal_asymmetry_statistic];
	"feature_dict(8)$60" -> "feature_dict(8)$59"	[label=time_reversal_asymmetry_statistic];
	"w(8)" -> "windows(8)$0"	[label=iteratorOf];
	"x_roll_std(8)$0" -> "x(8)"	[label=assignedFrom];
	"x_roll_std(8)$0" -> "w(8)"	[label=assignedFrom];
	"x_roll_mean(8)$0" -> "x(8)"	[label=assignedFrom];
	"x_roll_mean(8)$0" -> "w(8)"	[label=assignedFrom];
	"feature_dict(8)$61" -> "feature_dict(8)$60"	[label=mean];
	"feature_dict(8)$61" -> "x_roll_std(8)$0"	[label=mean];
	"feature_dict(8)$62" -> "x_roll_std(8)$0"	[label=std];
	"feature_dict(8)$62" -> "feature_dict(8)$61"	[label=std];
	"feature_dict(8)$63" -> "x_roll_std(8)$0"	[label=max];
	"feature_dict(8)$63" -> "feature_dict(8)$62"	[label=max];
	"feature_dict(8)$64" -> "x_roll_std(8)$0"	[label=min];
	"feature_dict(8)$64" -> "feature_dict(8)$63"	[label=min];
	"feature_dict(8)$65" -> "np(8)"	[label=percentile];
	"feature_dict(8)$65" -> "p(8)"	[label=percentile];
	"feature_dict(8)$65" -> "x_roll_std(8)$0"	[label=percentile];
	"feature_dict(8)$65" -> "feature_dict(8)$64"	[label=percentile];
	"feature_dict(8)$66" -> "np(8)"	[label=mean];
	"feature_dict(8)$66" -> "x_roll_std(8)$0"	[label=mean];
	"feature_dict(8)$66" -> "feature_dict(8)$65"	[label=mean];
	"feature_dict(8)$67" -> "np(8)"	[label=mean];
	"feature_dict(8)$67" -> "0(8)"	[label=mean];
	"feature_dict(8)$67" -> "1(8)"	[label=mean];
	"feature_dict(8)$67" -> "x_roll_std(8)$0"	[label=mean];
	"feature_dict(8)$67" -> "feature_dict(8)$66"	[label=mean];
	"feature_dict(8)$68" -> "np(8)"	[label=max];
	"feature_dict(8)$68" -> "x_roll_std(8)$0"	[label=max];
	"feature_dict(8)$68" -> "feature_dict(8)$67"	[label=max];
	"feature_dict(8)$69" -> "x_roll_mean(8)$0"	[label=mean];
	"feature_dict(8)$69" -> "feature_dict(8)$68"	[label=mean];
	"feature_dict(8)$70" -> "x_roll_mean(8)$0"	[label=std];
	"feature_dict(8)$70" -> "feature_dict(8)$69"	[label=std];
	"feature_dict(8)$71" -> "x_roll_mean(8)$0"	[label=max];
	"feature_dict(8)$71" -> "feature_dict(8)$70"	[label=max];
	"feature_dict(8)$72" -> "x_roll_mean(8)$0"	[label=min];
	"feature_dict(8)$72" -> "feature_dict(8)$71"	[label=min];
	"feature_dict(8)$73" -> "np(8)"	[label=percentile];
	"feature_dict(8)$73" -> "p(8)"	[label=percentile];
	"feature_dict(8)$73" -> "x_roll_mean(8)$0"	[label=percentile];
	"feature_dict(8)$73" -> "feature_dict(8)$72"	[label=percentile];
	"feature_dict(8)$74" -> "np(8)"	[label=mean];
	"feature_dict(8)$74" -> "x_roll_mean(8)$0"	[label=mean];
	"feature_dict(8)$74" -> "feature_dict(8)$73"	[label=mean];
	"feature_dict(8)$75" -> "np(8)"	[label=mean];
	"feature_dict(8)$75" -> "0(8)"	[label=mean];
	"feature_dict(8)$75" -> "1(8)"	[label=mean];
	"feature_dict(8)$75" -> "x_roll_mean(8)$0"	[label=mean];
	"feature_dict(8)$75" -> "feature_dict(8)$74"	[label=mean];
	"feature_dict(8)$76" -> "np(8)"	[label=max];
	"feature_dict(8)$76" -> "x_roll_mean(8)$0"	[label=max];
	"feature_dict(8)$76" -> "feature_dict(8)$75"	[label=max];
	"self(9)" -> "generate[0]"	[label=_argToVar];
	"feature_list(9)$0" -> "[](9)"	[label=assignedFrom];
	"res(9)$0" -> "self(9)"	[label=assignedFrom];
	"res(9)$0" -> "Parallel(9)"	[label=assignedFrom];
	"res(9)$0" -> "threading(9)"	[label=assignedFrom];
	"res(9)$0" -> "delayed(9)"	[label=assignedFrom];
	"res(9)$0" -> "x(9)"	[label=assignedFrom];
	"res(9)$0" -> "y(9)"	[label=assignedFrom];
	"res(9)$0" -> "s(9)"	[label=assignedFrom];
	"res(9)$0" -> "tqdm_notebook(9)"	[label=assignedFrom];
	"r(9)" -> "res(9)$0"	[label=iteratorOf];
	"feature_list(9)$1" -> "feature_list(9)$0"	[label=append];
	"feature_list(9)$1" -> "r(9)"	[label=append];
	"train(0)" -> "even-more-features.ipynb"	[label=appearsIn];
	"training_fg(0)$0" -> "train(0)"	[label=FeatureGenerator];
	"training_fg(0)$0" -> "20(0)"	[label=FeatureGenerator];
	"training_fg(0)$0" -> "150000(0)"	[label=FeatureGenerator];
	"20(0)" -> "even-more-features.ipynb"	[label=appearsIn];
	"150000(0)" -> "even-more-features.ipynb"	[label=appearsIn];
	"training_data(0)$0" -> "training_fg(0)$0"	[label=generate];
	"test(0)" -> "even-more-features.ipynb"	[label=appearsIn];
	"test_fg(0)$0" -> "20(0)"	[label=FeatureGenerator];
	"test_fg(0)$0" -> "150000(0)"	[label=FeatureGenerator];
	"test_fg(0)$0" -> "test(0)"	[label=FeatureGenerator];
	"test_data(0)$0" -> "test_fg(0)$0"	[label=generate];
	"X(0)$0" -> "training_data(0)$0"	[label=drop];
	"X(0)$0" -> "[<_ast.Constant object at 0x7fd50081ff70>, <_ast.Constant object at 0x7fd50081ffa0>](0)"	[label=drop];
	"X(0)$0" -> "1(0)"	[label=drop];
	"[<_ast.Constant object at 0x7fd50081ff70>, <_ast.Constant object at 0x7fd50081ffa0>](0)" -> "even-more-features.ipynb"	[label=appearsIn];
	"1(0)" -> "even-more-features.ipynb"	[label=appearsIn];
	"X_test(0)$0" -> "test_data(0)$0"	[label=drop];
	"X_test(0)$0" -> "1(0)"	[label=drop];
	"X_test(0)$0" -> "[<_ast.Constant object at 0x7fd50082c1c0>, <_ast.Constant object at 0x7fd50082c1f0>](0)"	[label=drop];
	"[<_ast.Constant object at 0x7fd50082c1c0>, <_ast.Constant object at 0x7fd50082c1f0>](0)" -> "even-more-features.ipynb"	[label=appearsIn];
	"test_segs(0)$0" -> "test_data(0)$0"	[label=assignedFrom];
	"y(0)$0" -> "training_data(0)$0"	[label=assignedFrom];
	"np(0)$0" -> "np(0)"	[label=head];
	"np(0)$0" -> "12(0)"	[label=head];
	"12(0)" -> "even-more-features.ipynb"	[label=appearsIn];
	"col(0)" -> "even-more-features.ipynb"	[label=appearsIn];
	"col(0)" -> "X(0)$0"	[label=iteratorOf];
	"col(0)" -> "X_test(0)$0"	[label=iteratorOf];
	"print[346/8]" -> "col(0)"	[label=print];
	"mean_value(0)$0" -> "X(0)$0"	[label=mean];
	"mean_value(0)$0" -> "np(0)$0"	[label=mean];
	"mean_value(0)$0" -> "col(0)"	[label=mean];
	"X(0)$1" -> "X(0)$0"	[label=assignedFrom];
	"X(0)$1" -> "mean_value(0)$0"	[label=assignedFrom];
	"X(0)$2" -> "col(0)"	[label=fillna];
	"X(0)$2" -> "mean_value(0)$0"	[label=fillna];
	"X(0)$2" -> "X(0)$1"	[label=fillna];
	"means_dict(0)" -> "even-more-features.ipynb"	[label=appearsIn];
	"means_dict(0)$0" -> "mean_value(0)$0"	[label=assignedFrom];
	"means_dict(0)$0" -> "means_dict(0)"	[label=assignedFrom];
	"X_test(0)$1" -> "X_test(0)$0"	[label=assignedFrom];
	"X_test(0)$1" -> "col(0)"	[label=assignedFrom];
	"X_test(0)$1" -> "means_dict(0)$0"	[label=assignedFrom];
	"X_test(0)$2" -> "col(0)"	[label=fillna];
	"X_test(0)$2" -> "means_dict(0)$0"	[label=fillna];
	"X_test(0)$2" -> "X_test(0)$1"	[label=fillna];
	"5(0)" -> "even-more-features.ipynb"	[label=appearsIn];
	"n_fold(0)$0" -> "5(0)"	[label=assignedFrom];
	"folds(0)$0" -> "n_fold(0)$0"	[label=KFold];
	"folds(0)$0" -> "True(0)"	[label=KFold];
	"folds(0)$0" -> "11(0)"	[label=KFold];
	"True(0)" -> "even-more-features.ipynb"	[label=appearsIn];
	"11(0)" -> "even-more-features.ipynb"	[label=appearsIn];
	"X(10)" -> "train_model[0]"	[label=_argToVar];
	"X_test(10)" -> "train_model[1]"	[label=_argToVar];
	"y(10)" -> "train_model[2]"	[label=_argToVar];
	"params(10)" -> "train_model[3]"	[label=_argToVar];
	"folds(10)" -> "train_model[4]"	[label=_argToVar];
	"model_type(10)" -> "train_model[5]"	[label=_argToVar];
	"plot_feature_importance(10)" -> "train_model[6]"	[label=_argToVar];
	"model(10)" -> "train_model[7]"	[label=_argToVar];
	"oof(10)$0" -> "X(10)"	[label=zeros];
	"oof(10)$0" -> "np(10)"	[label=zeros];
	"oof(10)$0" -> "len(10)"	[label=zeros];
	"prediction(10)$0" -> "X_test(10)"	[label=zeros];
	"prediction(10)$0" -> "np(10)"	[label=zeros];
	"prediction(10)$0" -> "len(10)"	[label=zeros];
	"scores(10)$0" -> "[](10)"	[label=assignedFrom];
	"feature_importance(10)$0" -> "pd(10)"	[label=DataFrame];
	"fold_n(10)" -> "X(10)"	[label=iteratorOf];
	"fold_n(10)" -> "folds(10)"	[label=iteratorOf];
	"fold_n(10)" -> "enumerate(10)"	[label=iteratorOf];
	"train_index(10)" -> "X(10)"	[label=iteratorOf];
	"train_index(10)" -> "folds(10)"	[label=iteratorOf];
	"train_index(10)" -> "enumerate(10)"	[label=iteratorOf];
	"valid_index(10)" -> "X(10)"	[label=iteratorOf];
	"valid_index(10)" -> "folds(10)"	[label=iteratorOf];
	"valid_index(10)" -> "enumerate(10)"	[label=iteratorOf];
	"print[364/8]" -> "fold_n(10)"	[label=print];
	"print[364/8]" -> "Fold(10)"	[label=print];
	"print[364/8]" -> "started at(10)"	[label=print];
	"print[364/8]" -> "time(10)"	[label=print];
	"X_train(10)$0" -> "X(10)"	[label=assignedFrom];
	"X_train(10)$0" -> "train_index(10)"	[label=assignedFrom];
	"X_train(10)$0" -> "valid_index(10)"	[label=assignedFrom];
	"X_valid(10)$0" -> "X(10)"	[label=assignedFrom];
	"X_valid(10)$0" -> "train_index(10)"	[label=assignedFrom];
	"X_valid(10)$0" -> "valid_index(10)"	[label=assignedFrom];
	"y_train(10)$0" -> "y(10)"	[label=assignedFrom];
	"y_train(10)$0" -> "train_index(10)"	[label=assignedFrom];
	"y_train(10)$0" -> "valid_index(10)"	[label=assignedFrom];
	"y_valid(10)$0" -> "y(10)"	[label=assignedFrom];
	"y_valid(10)$0" -> "train_index(10)"	[label=assignedFrom];
	"y_valid(10)$0" -> "valid_index(10)"	[label=assignedFrom];
	"X_train(10)$1" -> "X(10)"	[label=assignedFrom];
	"X_train(10)$1" -> "train_index(10)"	[label=assignedFrom];
	"X_train(10)$1" -> "valid_index(10)"	[label=assignedFrom];
	"X_valid(10)$1" -> "X(10)"	[label=assignedFrom];
	"X_valid(10)$1" -> "train_index(10)"	[label=assignedFrom];
	"X_valid(10)$1" -> "valid_index(10)"	[label=assignedFrom];
	"y_train(10)$1" -> "y(10)"	[label=assignedFrom];
	"y_train(10)$1" -> "train_index(10)"	[label=assignedFrom];
	"y_train(10)$1" -> "valid_index(10)"	[label=assignedFrom];
	"y_valid(10)$1" -> "y(10)"	[label=assignedFrom];
	"y_valid(10)$1" -> "train_index(10)"	[label=assignedFrom];
	"y_valid(10)$1" -> "valid_index(10)"	[label=assignedFrom];
	"model(10)$0" -> "params(10)"	[label=LGBMRegressor];
	"model(10)$0" -> "lgb(10)"	[label=LGBMRegressor];
	"model(10)$0" -> "50000(10)"	[label=LGBMRegressor];
	"model(10)$0" -> "1(10)"	[label=LGBMRegressor];
	"model(10)$1" -> "X_train(10)$1"	[label=fit];
	"model(10)$1" -> "y_train(10)$1"	[label=fit];
	"model(10)$1" -> "model(10)$0"	[label=fit];
	"y_pred_valid(10)$0" -> "X_valid(10)$1"	[label=predict];
	"y_pred_valid(10)$0" -> "model(10)$1"	[label=predict];
	"y_pred(10)$0" -> "X_test(10)"	[label=predict];
	"y_pred(10)$0" -> "model(10)$1"	[label=predict];
	"train_data(10)$0" -> "X(10)"	[label=DMatrix];
	"train_data(10)$0" -> "X_train(10)$1"	[label=DMatrix];
	"train_data(10)$0" -> "y_train(10)$1"	[label=DMatrix];
	"train_data(10)$0" -> "xgb(10)"	[label=DMatrix];
	"valid_data(10)$0" -> "X(10)"	[label=DMatrix];
	"valid_data(10)$0" -> "X_valid(10)$1"	[label=DMatrix];
	"valid_data(10)$0" -> "y_valid(10)$1"	[label=DMatrix];
	"valid_data(10)$0" -> "xgb(10)"	[label=DMatrix];
	"watchlist(10)$0" -> "[<_ast.Tuple object at 0x7fd4c04e1130>, <_ast.Tuple object at 0x7fd4c04e11c0>](10)"	[label=assignedFrom];
	"model(10)$2" -> "params(10)"	[label=train];
	"model(10)$2" -> "train_data(10)$0"	[label=train];
	"model(10)$2" -> "xgb(10)"	[label=train];
	"model(10)$2" -> "watchlist(10)$0"	[label=train];
	"model(10)$2" -> "20000(10)"	[label=train];
	"model(10)$2" -> "200(10)"	[label=train];
	"model(10)$2" -> "500(10)"	[label=train];
	"y_pred_valid(10)$1" -> "X(10)"	[label=predict];
	"y_pred_valid(10)$1" -> "X_valid(10)$1"	[label=predict];
	"y_pred_valid(10)$1" -> "xgb(10)"	[label=predict];
	"y_pred_valid(10)$1" -> "model(10)$2"	[label=predict];
	"y_pred(10)$1" -> "X(10)"	[label=predict];
	"y_pred(10)$1" -> "X_test(10)"	[label=predict];
	"y_pred(10)$1" -> "xgb(10)"	[label=predict];
	"y_pred(10)$1" -> "model(10)$2"	[label=predict];
	"model(10)$3" -> "model(10)$2"	[label=assignedFrom];
	"model(10)$4" -> "X_train(10)$1"	[label=fit];
	"model(10)$4" -> "y_train(10)$1"	[label=fit];
	"model(10)$4" -> "model(10)$3"	[label=fit];
	"y_pred_valid(10)$2" -> "X_valid(10)$1"	[label=reshape];
	"y_pred_valid(10)$2" -> "1(10)"	[label=reshape];
	"y_pred_valid(10)$2" -> "model(10)$4"	[label=reshape];
	"score(10)$0" -> "y_valid(10)$1"	[label=mean_absolute_error];
	"score(10)$0" -> "y_pred_valid(10)$2"	[label=mean_absolute_error];
	"print[397/12]" -> "fold_n(10)"	[label=print];
	"print[397/12]" -> "score(10)$0"	[label=print];
	"print[397/12]" -> "Fold (10)"	[label=print];
	"print[397/12]" -> ". MAE: (10)"	[label=print];
	"print[397/12]" -> ".4f(10)"	[label=print];
	"print[397/12]" -> ".(10)"	[label=print];
	"print[398/12]" -> "(10)"	[label=print];
	"y_pred(10)$2" -> "X_test(10)"	[label=reshape];
	"y_pred(10)$2" -> "1(10)"	[label=reshape];
	"y_pred(10)$2" -> "model(10)$4"	[label=reshape];
	"model(10)$5" -> "params(10)"	[label=CatBoostRegressor];
	"model(10)$5" -> "20000(10)"	[label=CatBoostRegressor];
	"model(10)$5" -> "MAE(10)"	[label=CatBoostRegressor];
	"model(10)$6" -> "X_train(10)$1"	[label=fit];
	"model(10)$6" -> "y_train(10)$1"	[label=fit];
	"model(10)$6" -> "model(10)$5"	[label=fit];
	"y_pred_valid(10)$3" -> "X_valid(10)$1"	[label=predict];
	"y_pred_valid(10)$3" -> "model(10)$6"	[label=predict];
	"y_pred(10)$3" -> "X_test(10)"	[label=predict];
	"y_pred(10)$3" -> "model(10)$6"	[label=predict];
	"oof(10)$1" -> "oof(10)$0"	[label=reshape];
	"oof(10)$1" -> "1(10)"	[label=reshape];
	"oof(10)$1" -> "y_pred_valid(10)$3"	[label=reshape];
	"scores(10)$1" -> "scores(10)$0"	[label=append];
	"scores(10)$1" -> "y_valid(10)$1"	[label=append];
	"scores(10)$1" -> "y_pred_valid(10)$3"	[label=append];
	"scores(10)$1" -> "mean_absolute_error(10)"	[label=append];
	"prediction(10)$1" -> "prediction(10)$0"	[label=Add];
	"prediction(10)$1" -> "y_pred(10)$3"	[label=Add];
	"fold_importance(10)$0" -> "pd(10)"	[label=DataFrame];
	"fold_importance(10)$1" -> "X(10)"	[label=assignedFrom];
	"fold_importance(10)$1" -> "fold_importance(10)$0"	[label=assignedFrom];
	"fold_importance(10)$2" -> "model(10)$6"	[label=assignedFrom];
	"fold_importance(10)$2" -> "fold_importance(10)$1"	[label=assignedFrom];
	"fold_importance(10)$3" -> "fold_n(10)"	[label=Add];
	"fold_importance(10)$3" -> "1(10)"	[label=Add];
	"fold_importance(10)$3" -> "fold_importance(10)$2"	[label=Add];
	"feature_importance(10)$1" -> "pd(10)"	[label=concat];
	"feature_importance(10)$1" -> "[<_ast.Name object at 0x7fd4c04dbee0>, <_ast.Name object at 0x7fd4c04dbf10>](10)"	[label=concat];
	"feature_importance(10)$1" -> "0(10)"	[label=concat];
	"prediction(10)$2" -> "prediction(10)$1"	[label=Div];
	"prediction(10)$2" -> "n_fold(10)"	[label=Div];
	"print[424/4]" -> "np(10)"	[label=print];
	"print[424/4]" -> "scores(10)$1"	[label=print];
	"print[424/4]" -> "CV mean score: {0:.4f}, std: {1:.4f}.(10)"	[label=print];
	"feature_importance(10)$2" -> "feature_importance(10)$1"	[label=Div];
	"feature_importance(10)$2" -> "n_fold(10)"	[label=Div];
	"cols(10)$0" -> "feature_importance(10)$2"	[label=assignedFrom];
	"cols(10)$0" -> "[<_ast.Constant object at 0x7fd4c04f0910>, <_ast.Constant object at 0x7fd4c04f0940>](10)"	[label=assignedFrom];
	"cols(10)$0" -> "feature(10)"	[label=assignedFrom];
	"cols(10)$0" -> "importance(10)"	[label=assignedFrom];
	"cols(10)$0" -> "False(10)"	[label=assignedFrom];
	"cols(10)$0" -> "50(10)"	[label=assignedFrom];
	"best_features(10)$0" -> "feature_importance(10)$2"	[label=assignedFrom];
	"best_features(10)$0" -> "cols(10)$0"	[label=assignedFrom];
	"plt(10)$0" -> "plt(10)"	[label=figure];
	"sns(10)$0" -> "sns(10)"	[label=barplot];
	"plt(10)$1" -> "plt(10)$0"	[label=title];
	"plt(10)$1" -> "LGB Features (avg over folds)(10)"	[label=title];
	"num_leaves(0)" -> "even-more-features.ipynb"	[label=appearsIn];
	"params(0)$0" -> "1(0)"	[label=assignedFrom];
	"params(0)$0" -> "5(0)"	[label=assignedFrom];
	"params(0)$0" -> "11(0)"	[label=assignedFrom];
	"params(0)$0" -> "num_leaves(0)"	[label=assignedFrom];
	"params(0)$0" -> "min_data_in_leaf(0)"	[label=assignedFrom];
	"params(0)$0" -> "objective(0)"	[label=assignedFrom];
	"params(0)$0" -> "max_depth(0)"	[label=assignedFrom];
	"params(0)$0" -> "learning_rate(0)"	[label=assignedFrom];
	"params(0)$0" -> "boosting(0)"	[label=assignedFrom];
	"params(0)$0" -> "bagging_freq(0)"	[label=assignedFrom];
	"params(0)$0" -> "bagging_fraction(0)"	[label=assignedFrom];
	"params(0)$0" -> "bagging_seed(0)"	[label=assignedFrom];
	"params(0)$0" -> "metric(0)"	[label=assignedFrom];
	"params(0)$0" -> "verbosity(0)"	[label=assignedFrom];
	"params(0)$0" -> "reg_alpha(0)"	[label=assignedFrom];
	"params(0)$0" -> "reg_lambda(0)"	[label=assignedFrom];
	"params(0)$0" -> "feature_fraction(0)"	[label=assignedFrom];
	"params(0)$0" -> "128(0)"	[label=assignedFrom];
	"params(0)$0" -> "79(0)"	[label=assignedFrom];
	"params(0)$0" -> "gamma(0)"	[label=assignedFrom];
	"params(0)$0" -> "0.01(0)"	[label=assignedFrom];
	"params(0)$0" -> "gbdt(0)"	[label=assignedFrom];
	"params(0)$0" -> "0.8126672064208567(0)"	[label=assignedFrom];
	"params(0)$0" -> "mae(0)"	[label=assignedFrom];
	"params(0)$0" -> "0.1302650970728192(0)"	[label=assignedFrom];
	"params(0)$0" -> "0.3603427518866501(0)"	[label=assignedFrom];
	"params(0)$0" -> "0.2(0)"	[label=assignedFrom];
	"min_data_in_leaf(0)" -> "even-more-features.ipynb"	[label=appearsIn];
	"objective(0)" -> "even-more-features.ipynb"	[label=appearsIn];
	"max_depth(0)" -> "even-more-features.ipynb"	[label=appearsIn];
	"learning_rate(0)" -> "even-more-features.ipynb"	[label=appearsIn];
	"boosting(0)" -> "even-more-features.ipynb"	[label=appearsIn];
	"bagging_freq(0)" -> "even-more-features.ipynb"	[label=appearsIn];
	"bagging_fraction(0)" -> "even-more-features.ipynb"	[label=appearsIn];
	"bagging_seed(0)" -> "even-more-features.ipynb"	[label=appearsIn];
	"metric(0)" -> "even-more-features.ipynb"	[label=appearsIn];
	"verbosity(0)" -> "even-more-features.ipynb"	[label=appearsIn];
	"reg_alpha(0)" -> "even-more-features.ipynb"	[label=appearsIn];
	"reg_lambda(0)" -> "even-more-features.ipynb"	[label=appearsIn];
	"feature_fraction(0)" -> "even-more-features.ipynb"	[label=appearsIn];
	"128(0)" -> "even-more-features.ipynb"	[label=appearsIn];
	"79(0)" -> "even-more-features.ipynb"	[label=appearsIn];
	"gamma(0)" -> "even-more-features.ipynb"	[label=appearsIn];
	"0.01(0)" -> "even-more-features.ipynb"	[label=appearsIn];
	"gbdt(0)" -> "even-more-features.ipynb"	[label=appearsIn];
	"0.8126672064208567(0)" -> "even-more-features.ipynb"	[label=appearsIn];
	"mae(0)" -> "even-more-features.ipynb"	[label=appearsIn];
	"0.1302650970728192(0)" -> "even-more-features.ipynb"	[label=appearsIn];
	"0.3603427518866501(0)" -> "even-more-features.ipynb"	[label=appearsIn];
	"0.2(0)" -> "even-more-features.ipynb"	[label=appearsIn];
	"oof_lgb(0)$0" -> "lgb(0)"	[label=train_model];
	"oof_lgb(0)$0" -> "y(0)$0"	[label=train_model];
	"oof_lgb(0)$0" -> "X(0)$2"	[label=train_model];
	"oof_lgb(0)$0" -> "X_test(0)$2"	[label=train_model];
	"oof_lgb(0)$0" -> "True(0)"	[label=train_model];
	"oof_lgb(0)$0" -> "params(0)$0"	[label=train_model];
	"prediction_lgb(0)$0" -> "lgb(0)"	[label=train_model];
	"prediction_lgb(0)$0" -> "y(0)$0"	[label=train_model];
	"prediction_lgb(0)$0" -> "X(0)$2"	[label=train_model];
	"prediction_lgb(0)$0" -> "X_test(0)$2"	[label=train_model];
	"prediction_lgb(0)$0" -> "True(0)"	[label=train_model];
	"prediction_lgb(0)$0" -> "params(0)$0"	[label=train_model];
	"feature_importance(0)$0" -> "lgb(0)"	[label=train_model];
	"feature_importance(0)$0" -> "y(0)$0"	[label=train_model];
	"feature_importance(0)$0" -> "X(0)$2"	[label=train_model];
	"feature_importance(0)$0" -> "X_test(0)$2"	[label=train_model];
	"feature_importance(0)$0" -> "True(0)"	[label=train_model];
	"feature_importance(0)$0" -> "params(0)$0"	[label=train_model];
	"plt(0)$0" -> "plt(0)"	[label=figure];
	"plt(0)$1" -> "y(0)$0"	[label=plot];
	"plt(0)$1" -> "plt(0)$0"	[label=plot];
	"plt(0)$2" -> "oof_lgb(0)$0"	[label=plot];
	"plt(0)$2" -> "plt(0)$1"	[label=plot];
	"plt(0)$3" -> "plt(0)$2"	[label=legend];
	"plt(0)$4" -> "lgb(0)"	[label=title];
	"plt(0)$4" -> "plt(0)$3"	[label=title];
	"submission(0)$0" -> "pd(0)$0"	[label=read_csv];
	"submission(0)$0" -> "../input/sample_submission.csv(0)"	[label=read_csv];
	"submission(0)$0" -> "seg_id(0)"	[label=read_csv];
	"../input/sample_submission.csv(0)" -> "even-more-features.ipynb"	[label=appearsIn];
	"seg_id(0)" -> "even-more-features.ipynb"	[label=appearsIn];
	"submission(0)$1" -> "prediction_lgb(0)$0"	[label=assignedFrom];
	"submission(0)$1" -> "submission(0)$0"	[label=assignedFrom];
	"print[471/0]" -> "submission(0)$1"	[label=print];
	"submission(0)$2" -> "submission(0)$1"	[label=to_csv];
	"submission(0)$2" -> "submission.csv(0)"	[label=to_csv];
	"submission.csv(0)" -> "even-more-features.ipynb"	[label=appearsIn];
	"X(0)$3" -> "X(0)$2"	[label=to_csv];
	"X(0)$3" -> "train_features.csv(0)"	[label=to_csv];
	"train_features.csv(0)" -> "even-more-features.ipynb"	[label=appearsIn];
	"X_test(0)$3" -> "X_test(0)$2"	[label=to_csv];
	"X_test(0)$3" -> "test_features.csv(0)"	[label=to_csv];
	"test_features.csv(0)" -> "even-more-features.ipynb"	[label=appearsIn];
	"pd(0)$1" -> "pd(0)$0"	[label=to_csv];
	"pd(0)$1" -> "y.csv(0)"	[label=to_csv];
	"y.csv(0)" -> "even-more-features.ipynb"	[label=appearsIn];
}
