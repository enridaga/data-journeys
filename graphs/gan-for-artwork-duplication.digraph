digraph "" {
	tensorflow -> "gan-for-artwork-duplication.ipynb"	[label=importedBy];
	"tf(0)" -> tensorflow	[label=assignedFrom];
	"tf(0)" -> "gan-for-artwork-duplication.ipynb"	[label=appearsIn];
	"matplotlib.pyplot" -> "gan-for-artwork-duplication.ipynb"	[label=importedBy];
	"plt(0)" -> "gan-for-artwork-duplication.ipynb"	[label=appearsIn];
	"plt(0)" -> "matplotlib.pyplot"	[label=assignedFrom];
	numpy -> "gan-for-artwork-duplication.ipynb"	[label=importedBy];
	"np(0)" -> "gan-for-artwork-duplication.ipynb"	[label=appearsIn];
	"np(0)" -> numpy	[label=assignedFrom];
	pandas -> "gan-for-artwork-duplication.ipynb"	[label=importedBy];
	"pd(0)" -> "gan-for-artwork-duplication.ipynb"	[label=appearsIn];
	"pd(0)" -> pandas	[label=assignedFrom];
	os -> "gan-for-artwork-duplication.ipynb"	[label=importedBy];
	"os(0)" -> "gan-for-artwork-duplication.ipynb"	[label=appearsIn];
	"os(0)" -> os	[label=assignedFrom];
	sys -> "gan-for-artwork-duplication.ipynb"	[label=importedBy];
	"sys(0)" -> "gan-for-artwork-duplication.ipynb"	[label=appearsIn];
	"sys(0)" -> sys	[label=assignedFrom];
	tqdm -> "gan-for-artwork-duplication.ipynb"	[label=importedBy];
	tqdm -> tqdm	[label=importedBy];
	"tqdm(0)" -> "gan-for-artwork-duplication.ipynb"	[label=appearsIn];
	"tqdm(0)" -> tqdm	[label=assignedFrom];
	"skimage.transform" -> "gan-for-artwork-duplication.ipynb"	[label=importedBy];
	resize -> "skimage.transform"	[label=importedBy];
	"resize(0)" -> "gan-for-artwork-duplication.ipynb"	[label=appearsIn];
	"resize(0)" -> resize	[label=assignedFrom];
	"Reading all CSV files...(0)" -> "gan-for-artwork-duplication.ipynb"	[label=appearsIn];
	"print[11/0]" -> "Reading all CSV files...(0)"	[label=print];
	"../input/best-artworks-of-all-time/(0)" -> "gan-for-artwork-duplication.ipynb"	[label=appearsIn];
	"root_dir(0)$0" -> "../input/best-artworks-of-all-time/(0)"	[label=assignedFrom];
	"images_dir(0)$0" -> "root_dir(0)$0"	[label=Add];
	"images_dir(0)$0" -> "images/images/(0)"	[label=Add];
	"images/images/(0)" -> "gan-for-artwork-duplication.ipynb"	[label=appearsIn];
	"df(0)$0" -> "pd(0)"	[label=read_csv];
	"df(0)$0" -> "root_dir(0)$0"	[label=read_csv];
	"df(0)$0" -> "artists.csv(0)"	[label=read_csv];
	"artists.csv(0)" -> "gan-for-artwork-duplication.ipynb"	[label=appearsIn];
	"df(0)$1" -> "df(0)$0"	[label=replace];
	"df(0)$1" -> " (0)"	[label=replace];
	"df(0)$1" -> "_(0)"	[label=replace];
	" (0)" -> "gan-for-artwork-duplication.ipynb"	[label=appearsIn];
	"_(0)" -> "gan-for-artwork-duplication.ipynb"	[label=appearsIn];
	"all_authors(0)$0" -> "df(0)$1"	[label=list];
	"all_paintings(0)$0" -> "df(0)$1"	[label=list];
	random -> "gan-for-artwork-duplication.ipynb"	[label=importedBy];
	choice -> random	[label=importedBy];
	"rc(0)" -> "gan-for-artwork-duplication.ipynb"	[label=appearsIn];
	"rc(0)" -> choice	[label=assignedFrom];
	randint -> random	[label=importedBy];
	"ri(0)" -> "gan-for-artwork-duplication.ipynb"	[label=appearsIn];
	"ri(0)" -> randint	[label=assignedFrom];
	"n(1)" -> "read_input[0]"	[label=_argToVar];
	"_(1)" -> "n(1)"	[label=iteratorOf];
	"_(1)" -> "range(1)"	[label=iteratorOf];
	"path(1)$0" -> "nonexistent(1)"	[label=assignedFrom];
	"auth(1)$0" -> "all_authors(1)"	[label=rc];
	"n(1)$0" -> "auth(1)$0"	[label=ri];
	"n(1)$0" -> "all_authors(1)"	[label=ri];
	"n(1)$0" -> "1(1)"	[label=ri];
	"n(1)$0" -> "all_paintings(1)"	[label=ri];
	"path(1)$1" -> "_(1)"	[label=Add];
	"path(1)$1" -> "auth(1)$0"	[label=Add];
	"path(1)$1" -> "n(1)$0"	[label=Add];
	"path(1)$1" -> "images_dir(1)"	[label=Add];
	"path(1)$1" -> "/(1)"	[label=Add];
	"path(1)$1" -> "str(1)"	[label=Add];
	"path(1)$1" -> ".jpg(1)"	[label=Add];
	"print[31/8]" -> "auth(1)$0"	[label=print];
	"print[31/8]" -> "n(1)$0"	[label=print];
	"print[31/8]" -> "Current Author: \%s	Number: \%i(1)"	[label=print];
	"print[31/8]" -> "sys(1)"	[label=print];
	"image(1)$0" -> "path(1)$1"	[label=imread];
	"image(1)$0" -> "plt(1)"	[label=imread];
	"new_image(1)$0" -> "image(1)$0"	[label=resize];
	"new_image(1)$0" -> "512(1)"	[label=resize];
	"new_image(1)$0" -> "True(1)"	[label=resize];
	"new_image(1)$1" -> "new_image(1)$0"	[label=Div];
	"new_image(1)$1" -> "256(1)"	[label=Div];
	"tensorflow.keras.models" -> "gan-for-artwork-duplication.ipynb"	[label=importedBy];
	Model -> "tensorflow.keras.models"	[label=importedBy];
	"Model(0)" -> "gan-for-artwork-duplication.ipynb"	[label=appearsIn];
	"Model(0)" -> Model	[label=assignedFrom];
	Sequential -> "tensorflow.keras.models"	[label=importedBy];
	"Sequential(0)" -> "gan-for-artwork-duplication.ipynb"	[label=appearsIn];
	"Sequential(0)" -> Sequential	[label=assignedFrom];
	"tensorflow.keras.layers" -> "gan-for-artwork-duplication.ipynb"	[label=importedBy];
	Dense -> "tensorflow.keras.layers"	[label=importedBy];
	"Dense(0)" -> "gan-for-artwork-duplication.ipynb"	[label=appearsIn];
	"Dense(0)" -> Dense	[label=assignedFrom];
	Dropout -> "tensorflow.keras.layers"	[label=importedBy];
	"Dropout(0)" -> "gan-for-artwork-duplication.ipynb"	[label=appearsIn];
	"Dropout(0)" -> Dropout	[label=assignedFrom];
	Input -> "tensorflow.keras.layers"	[label=importedBy];
	"Input(0)" -> "gan-for-artwork-duplication.ipynb"	[label=appearsIn];
	"Input(0)" -> Input	[label=assignedFrom];
	LeakyReLU -> "tensorflow.keras.layers"	[label=importedBy];
	"LeakyReLU(0)" -> "gan-for-artwork-duplication.ipynb"	[label=appearsIn];
	"LeakyReLU(0)" -> LeakyReLU	[label=assignedFrom];
	"tensorflow.keras.optimizers" -> "gan-for-artwork-duplication.ipynb"	[label=importedBy];
	Adam -> "tensorflow.keras.optimizers"	[label=importedBy];
	"Adam(0)" -> "gan-for-artwork-duplication.ipynb"	[label=appearsIn];
	"Adam(0)" -> Adam	[label=assignedFrom];
	"generator(3)$0" -> "generator(3)"	[label=add];
	"generator(3)$0" -> "Dense(3)"	[label=add];
	"generator(3)$0" -> "256(3)"	[label=add];
	"generator(3)$0" -> "100(3)"	[label=add];
	"generator(3)$1" -> "generator(3)$0"	[label=add];
	"generator(3)$1" -> "LeakyReLU(3)"	[label=add];
	"generator(3)$1" -> "0.2(3)"	[label=add];
	"generator(3)$2" -> "Dense(3)"	[label=add];
	"generator(3)$2" -> "generator(3)$1"	[label=add];
	"generator(3)$2" -> "512(3)"	[label=add];
	"generator(3)$3" -> "LeakyReLU(3)"	[label=add];
	"generator(3)$3" -> "0.2(3)"	[label=add];
	"generator(3)$3" -> "generator(3)$2"	[label=add];
	"generator(3)$4" -> "Dense(3)"	[label=add];
	"generator(3)$4" -> "512(3)"	[label=add];
	"generator(3)$4" -> "generator(3)$3"	[label=add];
	"generator(3)$4" -> "3(3)"	[label=add];
	"generator(3)$4" -> "sigmoid(3)"	[label=add];
	"generator(3)$5" -> "generator(3)$4"	[label=compile];
	"g(0)" -> "gan-for-artwork-duplication.ipynb"	[label=appearsIn];
	"g(0)$0" -> "g(0)"	[label=summary];
	"discriminator(4)$0" -> "discriminator(4)"	[label=add];
	"discriminator(4)$0" -> "Dense(4)"	[label=add];
	"discriminator(4)$0" -> "512(4)"	[label=add];
	"discriminator(4)$0" -> "3(4)"	[label=add];
	"discriminator(4)$1" -> "discriminator(4)$0"	[label=add];
	"discriminator(4)$1" -> "LeakyReLU(4)"	[label=add];
	"discriminator(4)$1" -> "0.2(4)"	[label=add];
	"discriminator(4)$2" -> "discriminator(4)$1"	[label=add];
	"discriminator(4)$2" -> "Dropout(4)"	[label=add];
	"discriminator(4)$2" -> "0.3(4)"	[label=add];
	"discriminator(4)$3" -> "Dense(4)"	[label=add];
	"discriminator(4)$3" -> "discriminator(4)$2"	[label=add];
	"discriminator(4)$3" -> "256(4)"	[label=add];
	"discriminator(4)$4" -> "LeakyReLU(4)"	[label=add];
	"discriminator(4)$4" -> "0.2(4)"	[label=add];
	"discriminator(4)$4" -> "discriminator(4)$3"	[label=add];
	"discriminator(4)$5" -> "Dropout(4)"	[label=add];
	"discriminator(4)$5" -> "0.3(4)"	[label=add];
	"discriminator(4)$5" -> "discriminator(4)$4"	[label=add];
	"discriminator(4)$6" -> "Dense(4)"	[label=add];
	"discriminator(4)$6" -> "discriminator(4)$5"	[label=add];
	"discriminator(4)$6" -> "128(4)"	[label=add];
	"discriminator(4)$7" -> "LeakyReLU(4)"	[label=add];
	"discriminator(4)$7" -> "0.2(4)"	[label=add];
	"discriminator(4)$7" -> "discriminator(4)$6"	[label=add];
	"discriminator(4)$8" -> "Dense(4)"	[label=add];
	"discriminator(4)$8" -> "discriminator(4)$7"	[label=add];
	"discriminator(4)$8" -> "1(4)"	[label=add];
	"discriminator(4)$8" -> "sigmoid(4)"	[label=add];
	"discriminator(4)$9" -> "discriminator(4)$8"	[label=compile];
	"d(0)" -> "gan-for-artwork-duplication.ipynb"	[label=appearsIn];
	"d(0)$0" -> "d(0)"	[label=summary];
	"discriminator(5)" -> "create_gan[0]"	[label=_argToVar];
	"generator(5)" -> "create_gan[1]"	[label=_argToVar];
	"discriminator(5)$0" -> "discriminator(5)"	[label=assignedFrom];
	"discriminator(5)$0" -> "False(5)"	[label=assignedFrom];
	"gan_input(5)$0" -> "100(5)"	[label=Input];
	"x(5)$0" -> "gan_input(5)$0"	[label=generator];
	"gan_output(5)$0" -> "x(5)$0"	[label=discriminator];
	"gan(5)$0" -> "gan_input(5)$0"	[label=Model];
	"gan(5)$0" -> "gan_output(5)$0"	[label=Model];
	"gan(5)$1" -> "gan(5)$0"	[label=compile];
	"test(0)$0" -> "g(0)$0"	[label=create_gan];
	"test(0)$0" -> "d(0)$0"	[label=create_gan];
	"test(0)$1" -> "test(0)$0"	[label=summary];
	"epoch(6)" -> "plot_generated_images[0]"	[label=_argToVar];
	"generator(6)" -> "plot_generated_images[1]"	[label=_argToVar];
	"examples(6)" -> "plot_generated_images[2]"	[label=_argToVar];
	"dim(6)" -> "plot_generated_images[3]"	[label=_argToVar];
	"figsize(6)" -> "plot_generated_images[4]"	[label=_argToVar];
	"noise(6)$0" -> "np(6)"	[label=normal];
	"noise(6)$0" -> "0(6)"	[label=normal];
	"noise(6)$0" -> "1(6)"	[label=normal];
	"noise(6)$0" -> "[<_ast.Name object at 0x7fd500824be0>, <_ast.Constant object at 0x7fd500824d30>](6)"	[label=normal];
	"generated_images(6)$0" -> "generator(6)"	[label=predict];
	"generated_images(6)$0" -> "noise(6)$0"	[label=predict];
	"generated_images(6)$1" -> "examples(6)"	[label=reshape];
	"generated_images(6)$1" -> "generated_images(6)$0"	[label=reshape];
	"generated_images(6)$1" -> "512(6)"	[label=reshape];
	"generated_images(6)$1" -> "3(6)"	[label=reshape];
	"plt(6)$0" -> "plt(6)"	[label=figure];
	"i(6)" -> "0(6)"	[label=iteratorOf];
	"i(6)" -> "generated_images(6)$1"	[label=iteratorOf];
	"i(6)" -> "range(6)"	[label=iteratorOf];
	"plt(6)$1" -> "dim(6)"	[label=subplot];
	"plt(6)$1" -> "0(6)"	[label=subplot];
	"plt(6)$1" -> "1(6)"	[label=subplot];
	"plt(6)$1" -> "plt(6)$0"	[label=subplot];
	"plt(6)$1" -> "i(6)"	[label=subplot];
	"plt(6)$2" -> "generated_images(6)$1"	[label=imshow];
	"plt(6)$2" -> "i(6)"	[label=imshow];
	"plt(6)$2" -> "plt(6)$1"	[label=imshow];
	"plt(6)$3" -> "plt(6)$2"	[label=axis];
	"plt(6)$3" -> "off(6)"	[label=axis];
	"plt(6)$4" -> "plt(6)$3"	[label=tight_layout];
	"plt(6)$5" -> "epoch(6)"	[label=savefig];
	"plt(6)$5" -> "plt(6)$4"	[label=savefig];
	"plt(6)$5" -> "gan_generated_image \%d.png(6)"	[label=savefig];
	"n(7)" -> "load_data[0]"	[label=_argToVar];
	"x_train(7)$0" -> "n(7)"	[label=array];
	"x_train(7)$0" -> "np(7)"	[label=array];
	"x_train(7)$0" -> "x(7)"	[label=array];
	"x_train(7)$0" -> "read_input(7)"	[label=array];
	"y_train(7)$0" -> "n(7)"	[label=array];
	"y_train(7)$0" -> "np(7)"	[label=array];
	"y_train(7)$0" -> "x(7)"	[label=array];
	"y_train(7)$0" -> "1(7)"	[label=array];
	"y_train(7)$0" -> "range(7)"	[label=array];
	"epochs(8)" -> "training[0]"	[label=_argToVar];
	"batch_size(8)" -> "training[1]"	[label=_argToVar];
	"gan(8)$0" -> "discriminator(8)"	[label=create_gan];
	"gan(8)$0" -> "generator(8)"	[label=create_gan];
	"e(8)" -> "epochs(8)"	[label=iteratorOf];
	"e(8)" -> "range(8)"	[label=iteratorOf];
	"e(8)" -> "1(8)"	[label=iteratorOf];
	"print[107/8]" -> "e(8)"	[label=print];
	"print[107/8]" -> "Epoch \%d(8)"	[label=print];
	"X_train(8)$0" -> "batch_size(8)"	[label=load_data];
	"y_train(8)$0" -> "batch_size(8)"	[label=load_data];
	"batch_count(8)$0" -> "batch_size(8)"	[label=Div];
	"batch_count(8)$0" -> "X_train(8)$0"	[label=Div];
	"batch_count(8)$0" -> "0(8)"	[label=Div];
	"_(8)" -> "batch_size(8)"	[label=iteratorOf];
	"_(8)" -> "range(8)"	[label=iteratorOf];
	"_(8)" -> "tqdm(8)"	[label=iteratorOf];
	"noise(8)$0" -> "1(8)"	[label=normal];
	"noise(8)$0" -> "0(8)"	[label=normal];
	"noise(8)$0" -> "np(8)"	[label=normal];
	"noise(8)$0" -> "[<_ast.Name object at 0x7fd4c04abf70>, <_ast.Constant object at 0x7fd4c04abfa0>](8)"	[label=normal];
	"generated_images(8)$0" -> "generator(8)"	[label=predict];
	"generated_images(8)$0" -> "noise(8)$0"	[label=predict];
	"image_batch(8)$0" -> "X_train(8)$0"	[label=assignedFrom];
	"print[128/16]" -> "Error in shape!(8)"	[label=print];
	"image_batch(8)$1" -> "generated_images(8)$0"	[label=assignedFrom];
	"X(8)$0" -> "np(8)"	[label=concatenate];
	"X(8)$0" -> "[<_ast.Name object at 0x7fd4c04a7580>, <_ast.Name object at 0x7fd4c04a75b0>](8)"	[label=concatenate];
	"y_dis(8)$0" -> "batch_size(8)"	[label=zeros];
	"y_dis(8)$0" -> "np(8)"	[label=zeros];
	"y_dis(8)$0" -> "2(8)"	[label=zeros];
	"y_dis(8)$1" -> "y_dis(8)$0"	[label=assignedFrom];
	"y_dis(8)$1" -> "1.0(8)"	[label=assignedFrom];
	"discriminator(8)$0" -> "discriminator(8)"	[label=assignedFrom];
	"discriminator(8)$0" -> "True(8)"	[label=assignedFrom];
	"discriminator(8)$1" -> "X(8)$0"	[label=train_on_batch];
	"discriminator(8)$1" -> "y_dis(8)$1"	[label=train_on_batch];
	"discriminator(8)$1" -> "discriminator(8)$0"	[label=train_on_batch];
	"noise(8)$1" -> "1(8)"	[label=normal];
	"noise(8)$1" -> "0(8)"	[label=normal];
	"noise(8)$1" -> "np(8)"	[label=normal];
	"noise(8)$1" -> "[<_ast.Name object at 0x7fd4c04a7c70>, <_ast.Constant object at 0x7fd4c04a7ca0>](8)"	[label=normal];
	"y_gen(8)$0" -> "batch_size(8)"	[label=ones];
	"y_gen(8)$0" -> "np(8)"	[label=ones];
	"discriminator(8)$2" -> "discriminator(8)$1"	[label=assignedFrom];
	"discriminator(8)$2" -> "False(8)"	[label=assignedFrom];
	"gan(8)$1" -> "gan(8)$0"	[label=train_on_batch];
	"gan(8)$1" -> "noise(8)$1"	[label=train_on_batch];
	"gan(8)$1" -> "y_gen(8)$0"	[label=train_on_batch];
	"plot_generated_images[154/12]" -> "generator(8)"	[label=plot_generated_images];
	"plot_generated_images[154/12]" -> "e(8)"	[label=plot_generated_images];
	"500(0)" -> "gan-for-artwork-duplication.ipynb"	[label=appearsIn];
	"training[161/0]" -> "500(0)"	[label=training];
	"training[161/0]" -> "3(0)"	[label=training];
	"3(0)" -> "gan-for-artwork-duplication.ipynb"	[label=appearsIn];
}
