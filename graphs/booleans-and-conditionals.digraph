strict digraph "" {
	"True(0)" -> "booleans-and-conditionals.ipynb"	[label=appearsIn];
	"x(0)$0" -> "True(0)"	[label=assignedFrom];
	"print[4/0]" -> "x(0)$0"	[label=print];
	"type(0)" -> "booleans-and-conditionals.ipynb"	[label=appearsIn];
	"print[6/0]" -> "x(0)$0"	[label=print];
	"print[6/0]" -> "type(0)"	[label=print];
	"age(1)" -> "can_run_for_president[0]"	[label=_argToVar];
	"Can a 19-year-old run for president?(0)" -> "booleans-and-conditionals.ipynb"	[label=appearsIn];
	"print[17/0]" -> "Can a 19-year-old run for president?(0)"	[label=print];
	"print[17/0]" -> "can_run_for_president(0)"	[label=print];
	"print[17/0]" -> "19(0)"	[label=print];
	"can_run_for_president(0)" -> "booleans-and-conditionals.ipynb"	[label=appearsIn];
	"19(0)" -> "booleans-and-conditionals.ipynb"	[label=appearsIn];
	"Can a 45-year-old run for president?(0)" -> "booleans-and-conditionals.ipynb"	[label=appearsIn];
	"print[19/0]" -> "can_run_for_president(0)"	[label=print];
	"print[19/0]" -> "Can a 45-year-old run for president?(0)"	[label=print];
	"print[19/0]" -> "45(0)"	[label=print];
	"45(0)" -> "booleans-and-conditionals.ipynb"	[label=appearsIn];
	"n(2)" -> "is_odd[0]"	[label=_argToVar];
	"Is 100 odd?(0)" -> "booleans-and-conditionals.ipynb"	[label=appearsIn];
	"print[28/0]" -> "Is 100 odd?(0)"	[label=print];
	"print[28/0]" -> "is_odd(0)"	[label=print];
	"print[28/0]" -> "100(0)"	[label=print];
	"is_odd(0)" -> "booleans-and-conditionals.ipynb"	[label=appearsIn];
	"100(0)" -> "booleans-and-conditionals.ipynb"	[label=appearsIn];
	"Is -1 odd?(0)" -> "booleans-and-conditionals.ipynb"	[label=appearsIn];
	"print[30/0]" -> "is_odd(0)"	[label=print];
	"print[30/0]" -> "Is -1 odd?(0)"	[label=print];
	"print[30/0]" -> "1(0)"	[label=print];
	"1(0)" -> "booleans-and-conditionals.ipynb"	[label=appearsIn];
	"age(3)" -> "can_run_for_president[0]"	[label=_argToVar];
	"is_natural_born_citizen(3)" -> "can_run_for_president[1]"	[label=_argToVar];
	"print[41/0]" -> "True(0)"	[label=print];
	"print[41/0]" -> "can_run_for_president(0)"	[label=print];
	"print[41/0]" -> "19(0)"	[label=print];
	"print[43/0]" -> "can_run_for_president(0)"	[label=print];
	"print[43/0]" -> "55(0)"	[label=print];
	"print[43/0]" -> "False(0)"	[label=print];
	"55(0)" -> "booleans-and-conditionals.ipynb"	[label=appearsIn];
	"False(0)" -> "booleans-and-conditionals.ipynb"	[label=appearsIn];
	"print[45/0]" -> "True(0)"	[label=print];
	"print[45/0]" -> "can_run_for_president(0)"	[label=print];
	"print[45/0]" -> "55(0)"	[label=print];
	"x(4)" -> "inspect[0]"	[label=_argToVar];
	"print[51/8]" -> "x(4)"	[label=print];
	"print[51/8]" -> "is zero(4)"	[label=print];
	"print[55/8]" -> "x(4)"	[label=print];
	"print[55/8]" -> "is positive(4)"	[label=print];
	"print[59/8]" -> "x(4)"	[label=print];
	"print[59/8]" -> "is negative(4)"	[label=print];
	"print[63/8]" -> "x(4)"	[label=print];
	"print[63/8]" -> "is unlike anything I've ever seen...(4)"	[label=print];
	"0(0)" -> "booleans-and-conditionals.ipynb"	[label=appearsIn];
	"inspect[67/0]" -> "0(0)"	[label=inspect];
	"15(0)" -> "booleans-and-conditionals.ipynb"	[label=appearsIn];
	"inspect[69/0]" -> "15(0)"	[label=inspect];
	"x(5)" -> "f[0]"	[label=_argToVar];
	"print[74/8]" -> "x(5)"	[label=print];
	"print[74/8]" -> "Only printed when x is positive; x =(5)"	[label=print];
	"print[76/8]" -> "x(5)"	[label=print];
	"print[76/8]" -> "Also only printed when x is positive; x =(5)"	[label=print];
	"print[78/4]" -> "x(5)"	[label=print];
	"print[78/4]" -> "Always printed, regardless of x's value; x =(5)"	[label=print];
	"f[82/0]" -> "1(0)"	[label=f];
	"f[84/0]" -> "0(0)"	[label=f];
	"bool(0)" -> "booleans-and-conditionals.ipynb"	[label=appearsIn];
	"print[85/0]" -> "1(0)"	[label=print];
	"print[85/0]" -> "bool(0)"	[label=print];
	"print[87/0]" -> "0(0)"	[label=print];
	"print[87/0]" -> "bool(0)"	[label=print];
	"print[89/0]" -> "bool(0)"	[label=print];
	"print[89/0]" -> "asf(0)"	[label=print];
	"asf(0)" -> "booleans-and-conditionals.ipynb"	[label=appearsIn];
	"print[91/0]" -> "bool(0)"	[label=print];
	"print[91/0]" -> "(0)"	[label=print];
	"(0)" -> "booleans-and-conditionals.ipynb"	[label=appearsIn];
	"print[98/4]" -> "0(0)"	[label=print];
	"spam(0)" -> "booleans-and-conditionals.ipynb"	[label=appearsIn];
	"print[102/4]" -> "spam(0)"	[label=print];
	"grade(6)" -> "quiz_message[0]"	[label=_argToVar];
	"outcome(6)$0" -> "failed(6)"	[label=assignedFrom];
	"outcome(6)$1" -> "passed(6)"	[label=assignedFrom];
	"print[113/4]" -> "grade(6)"	[label=print];
	"print[113/4]" -> "outcome(6)$1"	[label=print];
	"print[113/4]" -> "You(6)"	[label=print];
	"print[113/4]" -> "the quiz with a grade of(6)"	[label=print];
	"80(0)" -> "booleans-and-conditionals.ipynb"	[label=appearsIn];
	"quiz_message[117/0]" -> "80(0)"	[label=quiz_message];
	"grade(7)" -> "quiz_message[0]"	[label=_argToVar];
	"outcome(7)$0" -> "grade(7)"	[label=assignedFrom];
	"outcome(7)$0" -> "50(7)"	[label=assignedFrom];
	"outcome(7)$0" -> "failed(7)"	[label=assignedFrom];
	"outcome(7)$0" -> "passed(7)"	[label=assignedFrom];
	"print[122/4]" -> "grade(7)"	[label=print];
	"print[122/4]" -> "outcome(7)$0"	[label=print];
	"print[122/4]" -> "You(7)"	[label=print];
	"print[122/4]" -> "the quiz with a grade of(7)"	[label=print];
	"quiz_message[126/0]" -> "45(0)"	[label=quiz_message];
}
