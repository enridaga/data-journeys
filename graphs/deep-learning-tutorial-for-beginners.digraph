digraph "" {
	numpy -> "deep-learning-tutorial-for-beginners.ipynb"	[label=importedBy];
	"np(0)" -> numpy	[label=assignedFrom];
	"np(0)" -> "deep-learning-tutorial-for-beginners.ipynb"	[label=appearsIn];
	pandas -> "deep-learning-tutorial-for-beginners.ipynb"	[label=importedBy];
	"pd(0)" -> "deep-learning-tutorial-for-beginners.ipynb"	[label=appearsIn];
	"pd(0)" -> pandas	[label=assignedFrom];
	"matplotlib.pyplot" -> "deep-learning-tutorial-for-beginners.ipynb"	[label=importedBy];
	"plt(0)" -> "deep-learning-tutorial-for-beginners.ipynb"	[label=appearsIn];
	"plt(0)" -> "matplotlib.pyplot"	[label=assignedFrom];
	warnings -> "deep-learning-tutorial-for-beginners.ipynb"	[label=importedBy];
	"warnings(0)" -> "deep-learning-tutorial-for-beginners.ipynb"	[label=appearsIn];
	"warnings(0)" -> warnings	[label=assignedFrom];
	"warnings(0)$0" -> "warnings(0)"	[label=filterwarnings];
	"warnings(0)$0" -> "ignore(0)"	[label=filterwarnings];
	"ignore(0)" -> "deep-learning-tutorial-for-beginners.ipynb"	[label=appearsIn];
	subprocess -> "deep-learning-tutorial-for-beginners.ipynb"	[label=importedBy];
	check_output -> subprocess	[label=importedBy];
	"check_output(0)" -> "deep-learning-tutorial-for-beginners.ipynb"	[label=appearsIn];
	"check_output(0)" -> check_output	[label=assignedFrom];
	"print[16/0]" -> "check_output(0)"	[label=print];
	"print[16/0]" -> "[<_ast.Constant object at 0x7fd4c04cc550>, <_ast.Constant object at 0x7fd4c04cc580>](0)"	[label=print];
	"print[16/0]" -> "utf8(0)"	[label=print];
	"[<_ast.Constant object at 0x7fd4c04cc550>, <_ast.Constant object at 0x7fd4c04cc580>](0)" -> "deep-learning-tutorial-for-beginners.ipynb"	[label=appearsIn];
	"utf8(0)" -> "deep-learning-tutorial-for-beginners.ipynb"	[label=appearsIn];
	"x_l(0)$0" -> "np(0)"	[label=load];
	"x_l(0)$0" -> "../input/Sign-language-digits-dataset/X.npy(0)"	[label=load];
	"../input/Sign-language-digits-dataset/X.npy(0)" -> "deep-learning-tutorial-for-beginners.ipynb"	[label=appearsIn];
	"Y_l(0)$0" -> "np(0)"	[label=load];
	"Y_l(0)$0" -> "../input/Sign-language-digits-dataset/Y.npy(0)"	[label=load];
	"../input/Sign-language-digits-dataset/Y.npy(0)" -> "deep-learning-tutorial-for-beginners.ipynb"	[label=appearsIn];
	"64(0)" -> "deep-learning-tutorial-for-beginners.ipynb"	[label=appearsIn];
	"img_size(0)$0" -> "64(0)"	[label=assignedFrom];
	"plt(0)$0" -> "plt(0)"	[label=subplot];
	"plt(0)$0" -> "1(0)"	[label=subplot];
	"plt(0)$0" -> "2(0)"	[label=subplot];
	"1(0)" -> "deep-learning-tutorial-for-beginners.ipynb"	[label=appearsIn];
	"2(0)" -> "deep-learning-tutorial-for-beginners.ipynb"	[label=appearsIn];
	"plt(0)$1" -> "x_l(0)$0"	[label=imshow];
	"plt(0)$1" -> "img_size(0)$0"	[label=imshow];
	"plt(0)$1" -> "plt(0)$0"	[label=imshow];
	"plt(0)$1" -> "260(0)"	[label=imshow];
	"260(0)" -> "deep-learning-tutorial-for-beginners.ipynb"	[label=appearsIn];
	"plt(0)$2" -> "plt(0)$1"	[label=axis];
	"plt(0)$2" -> "off(0)"	[label=axis];
	"off(0)" -> "deep-learning-tutorial-for-beginners.ipynb"	[label=appearsIn];
	"plt(0)$3" -> "1(0)"	[label=subplot];
	"plt(0)$3" -> "2(0)"	[label=subplot];
	"plt(0)$3" -> "plt(0)$2"	[label=subplot];
	"plt(0)$4" -> "x_l(0)$0"	[label=imshow];
	"plt(0)$4" -> "img_size(0)$0"	[label=imshow];
	"plt(0)$4" -> "plt(0)$3"	[label=imshow];
	"plt(0)$4" -> "900(0)"	[label=imshow];
	"900(0)" -> "deep-learning-tutorial-for-beginners.ipynb"	[label=appearsIn];
	"plt(0)$5" -> "off(0)"	[label=axis];
	"plt(0)$5" -> "plt(0)$4"	[label=axis];
	"X(0)$0" -> "np(0)"	[label=concatenate];
	"X(0)$0" -> "x_l(0)$0"	[label=concatenate];
	"X(0)$0" -> "204(0)"	[label=concatenate];
	"X(0)$0" -> "409(0)"	[label=concatenate];
	"X(0)$0" -> "822(0)"	[label=concatenate];
	"X(0)$0" -> "1027(0)"	[label=concatenate];
	"X(0)$0" -> "0(0)"	[label=concatenate];
	"204(0)" -> "deep-learning-tutorial-for-beginners.ipynb"	[label=appearsIn];
	"409(0)" -> "deep-learning-tutorial-for-beginners.ipynb"	[label=appearsIn];
	"822(0)" -> "deep-learning-tutorial-for-beginners.ipynb"	[label=appearsIn];
	"1027(0)" -> "deep-learning-tutorial-for-beginners.ipynb"	[label=appearsIn];
	"0(0)" -> "deep-learning-tutorial-for-beginners.ipynb"	[label=appearsIn];
	"z(0)$0" -> "np(0)"	[label=zeros];
	"z(0)$0" -> "205(0)"	[label=zeros];
	"205(0)" -> "deep-learning-tutorial-for-beginners.ipynb"	[label=appearsIn];
	"o(0)$0" -> "np(0)"	[label=ones];
	"o(0)$0" -> "205(0)"	[label=ones];
	"Y(0)$0" -> "np(0)"	[label=reshape];
	"Y(0)$0" -> "1(0)"	[label=reshape];
	"Y(0)$0" -> "X(0)$0"	[label=reshape];
	"Y(0)$0" -> "0(0)"	[label=reshape];
	"Y(0)$0" -> "z(0)$0"	[label=reshape];
	"Y(0)$0" -> "o(0)$0"	[label=reshape];
	"X shape: (0)" -> "deep-learning-tutorial-for-beginners.ipynb"	[label=appearsIn];
	"print[33/0]" -> "X(0)$0"	[label=print];
	"print[33/0]" -> "X shape: (0)"	[label=print];
	"Y shape: (0)" -> "deep-learning-tutorial-for-beginners.ipynb"	[label=appearsIn];
	"print[34/0]" -> "Y(0)$0"	[label=print];
	"print[34/0]" -> "Y shape: (0)"	[label=print];
	"sklearn.model_selection" -> "deep-learning-tutorial-for-beginners.ipynb"	[label=importedBy];
	train_test_split -> "sklearn.model_selection"	[label=importedBy];
	"train_test_split(0)" -> "deep-learning-tutorial-for-beginners.ipynb"	[label=appearsIn];
	"train_test_split(0)" -> train_test_split	[label=assignedFrom];
	"X_train(0)$0" -> "X(0)$0"	[label=train_test_split];
	"X_train(0)$0" -> "Y(0)$0"	[label=train_test_split];
	"X_train(0)$0" -> "0.15(0)"	[label=train_test_split];
	"X_train(0)$0" -> "42(0)"	[label=train_test_split];
	"0.15(0)" -> "deep-learning-tutorial-for-beginners.ipynb"	[label=appearsIn];
	"42(0)" -> "deep-learning-tutorial-for-beginners.ipynb"	[label=appearsIn];
	"X_test(0)$0" -> "X(0)$0"	[label=train_test_split];
	"X_test(0)$0" -> "Y(0)$0"	[label=train_test_split];
	"X_test(0)$0" -> "0.15(0)"	[label=train_test_split];
	"X_test(0)$0" -> "42(0)"	[label=train_test_split];
	"Y_train(0)$0" -> "X(0)$0"	[label=train_test_split];
	"Y_train(0)$0" -> "Y(0)$0"	[label=train_test_split];
	"Y_train(0)$0" -> "0.15(0)"	[label=train_test_split];
	"Y_train(0)$0" -> "42(0)"	[label=train_test_split];
	"Y_test(0)$0" -> "X(0)$0"	[label=train_test_split];
	"Y_test(0)$0" -> "Y(0)$0"	[label=train_test_split];
	"Y_test(0)$0" -> "0.15(0)"	[label=train_test_split];
	"Y_test(0)$0" -> "42(0)"	[label=train_test_split];
	"number_of_train(0)$0" -> "0(0)"	[label=assignedFrom];
	"number_of_train(0)$0" -> "X_train(0)$0"	[label=assignedFrom];
	"number_of_test(0)$0" -> "0(0)"	[label=assignedFrom];
	"number_of_test(0)$0" -> "X_test(0)$0"	[label=assignedFrom];
	"X_train_flatten(0)$0" -> "1(0)"	[label=reshape];
	"X_train_flatten(0)$0" -> "2(0)"	[label=reshape];
	"X_train_flatten(0)$0" -> "X_train(0)$0"	[label=reshape];
	"X_train_flatten(0)$0" -> "number_of_train(0)$0"	[label=reshape];
	"X_test_flatten(0)$0" -> "1(0)"	[label=reshape];
	"X_test_flatten(0)$0" -> "2(0)"	[label=reshape];
	"X_test_flatten(0)$0" -> "X_test(0)$0"	[label=reshape];
	"X_test_flatten(0)$0" -> "number_of_test(0)$0"	[label=reshape];
	"X train flatten(0)" -> "deep-learning-tutorial-for-beginners.ipynb"	[label=appearsIn];
	"print[42/0]" -> "X_train_flatten(0)$0"	[label=print];
	"print[42/0]" -> "X train flatten(0)"	[label=print];
	"X test flatten(0)" -> "deep-learning-tutorial-for-beginners.ipynb"	[label=appearsIn];
	"print[43/0]" -> "X_test_flatten(0)$0"	[label=print];
	"print[43/0]" -> "X test flatten(0)"	[label=print];
	"x_train(0)$0" -> "X_train_flatten(0)$0"	[label=assignedFrom];
	"x_test(0)$0" -> "X_test_flatten(0)$0"	[label=assignedFrom];
	"y_train(0)$0" -> "Y_train(0)$0"	[label=assignedFrom];
	"y_test(0)$0" -> "Y_test(0)$0"	[label=assignedFrom];
	"x train: (0)" -> "deep-learning-tutorial-for-beginners.ipynb"	[label=appearsIn];
	"print[48/0]" -> "x_train(0)$0"	[label=print];
	"print[48/0]" -> "x train: (0)"	[label=print];
	"x test: (0)" -> "deep-learning-tutorial-for-beginners.ipynb"	[label=appearsIn];
	"print[49/0]" -> "x_test(0)$0"	[label=print];
	"print[49/0]" -> "x test: (0)"	[label=print];
	"y train: (0)" -> "deep-learning-tutorial-for-beginners.ipynb"	[label=appearsIn];
	"print[50/0]" -> "y_train(0)$0"	[label=print];
	"print[50/0]" -> "y train: (0)"	[label=print];
	"y test: (0)" -> "deep-learning-tutorial-for-beginners.ipynb"	[label=appearsIn];
	"print[51/0]" -> "y_test(0)$0"	[label=print];
	"print[51/0]" -> "y test: (0)"	[label=print];
	"parameter(1)" -> "dummy[0]"	[label=_argToVar];
	"dummy_parameter(1)$0" -> "parameter(1)"	[label=Add];
	"dummy_parameter(1)$0" -> "5(1)"	[label=Add];
	"3(0)" -> "deep-learning-tutorial-for-beginners.ipynb"	[label=appearsIn];
	"result(0)$0" -> "3(0)"	[label=dummy];
	"dimension(2)" -> "initialize_weights_and_bias[0]"	[label=_argToVar];
	"w(2)$0" -> "dimension(2)"	[label=full];
	"w(2)$0" -> "np(2)"	[label=full];
	"w(2)$0" -> "1(2)"	[label=full];
	"w(2)$0" -> "0.01(2)"	[label=full];
	"b(2)$0" -> "0.0(2)"	[label=assignedFrom];
	"z(3)" -> "sigmoid[0]"	[label=_argToVar];
	"y_head(3)$0" -> "z(3)"	[label=Div];
	"y_head(3)$0" -> "1(3)"	[label=Div];
	"y_head(3)$0" -> "np(3)"	[label=Div];
	"y_head(0)$0" -> "0(0)"	[label=sigmoid];
	"w(4)" -> "forward_propagation[0]"	[label=_argToVar];
	"b(4)" -> "forward_propagation[1]"	[label=_argToVar];
	"x_train(4)" -> "forward_propagation[2]"	[label=_argToVar];
	"y_train(4)" -> "forward_propagation[3]"	[label=_argToVar];
	"z(4)$0" -> "w(4)"	[label=Add];
	"z(4)$0" -> "b(4)"	[label=Add];
	"z(4)$0" -> "x_train(4)"	[label=Add];
	"z(4)$0" -> "np(4)"	[label=Add];
	"y_head(4)$0" -> "z(4)$0"	[label=sigmoid];
	"loss(4)$0" -> "y_train(4)"	[label=Sub];
	"loss(4)$0" -> "np(4)"	[label=Sub];
	"loss(4)$0" -> "y_head(4)$0"	[label=Sub];
	"loss(4)$0" -> "1(4)"	[label=Sub];
	"cost(4)$0" -> "x_train(4)"	[label=Div];
	"cost(4)$0" -> "np(4)"	[label=Div];
	"cost(4)$0" -> "loss(4)$0"	[label=Div];
	"cost(4)$0" -> "1(4)"	[label=Div];
	"w(5)" -> "forward_backward_propagation[0]"	[label=_argToVar];
	"b(5)" -> "forward_backward_propagation[1]"	[label=_argToVar];
	"x_train(5)" -> "forward_backward_propagation[2]"	[label=_argToVar];
	"y_train(5)" -> "forward_backward_propagation[3]"	[label=_argToVar];
	"z(5)$0" -> "w(5)"	[label=Add];
	"z(5)$0" -> "b(5)"	[label=Add];
	"z(5)$0" -> "x_train(5)"	[label=Add];
	"z(5)$0" -> "np(5)"	[label=Add];
	"y_head(5)$0" -> "z(5)$0"	[label=sigmoid];
	"loss(5)$0" -> "y_train(5)"	[label=Sub];
	"loss(5)$0" -> "np(5)"	[label=Sub];
	"loss(5)$0" -> "y_head(5)$0"	[label=Sub];
	"loss(5)$0" -> "1(5)"	[label=Sub];
	"cost(5)$0" -> "x_train(5)"	[label=Div];
	"cost(5)$0" -> "np(5)"	[label=Div];
	"cost(5)$0" -> "loss(5)$0"	[label=Div];
	"cost(5)$0" -> "1(5)"	[label=Div];
	"derivative_weight(5)$0" -> "x_train(5)"	[label=Div];
	"derivative_weight(5)$0" -> "y_train(5)"	[label=Div];
	"derivative_weight(5)$0" -> "np(5)"	[label=Div];
	"derivative_weight(5)$0" -> "y_head(5)$0"	[label=Div];
	"derivative_weight(5)$0" -> "1(5)"	[label=Div];
	"derivative_bias(5)$0" -> "x_train(5)"	[label=Div];
	"derivative_bias(5)$0" -> "y_train(5)"	[label=Div];
	"derivative_bias(5)$0" -> "np(5)"	[label=Div];
	"derivative_bias(5)$0" -> "y_head(5)$0"	[label=Div];
	"derivative_bias(5)$0" -> "1(5)"	[label=Div];
	"gradients(5)$0" -> "derivative_weight(5)$0"	[label=assignedFrom];
	"gradients(5)$0" -> "derivative_bias(5)$0"	[label=assignedFrom];
	"w(6)" -> "update[0]"	[label=_argToVar];
	"b(6)" -> "update[1]"	[label=_argToVar];
	"x_train(6)" -> "update[2]"	[label=_argToVar];
	"y_train(6)" -> "update[3]"	[label=_argToVar];
	"learning_rate(6)" -> "update[4]"	[label=_argToVar];
	"number_of_iterarion(6)" -> "update[5]"	[label=_argToVar];
	"cost_list(6)$0" -> "[](6)"	[label=assignedFrom];
	"cost_list2(6)$0" -> "[](6)"	[label=assignedFrom];
	"index(6)$0" -> "[](6)"	[label=assignedFrom];
	"i(6)" -> "number_of_iterarion(6)"	[label=iteratorOf];
	"i(6)" -> "range(6)"	[label=iteratorOf];
	"cost(6)$0" -> "w(6)"	[label=forward_backward_propagation];
	"cost(6)$0" -> "b(6)"	[label=forward_backward_propagation];
	"cost(6)$0" -> "x_train(6)"	[label=forward_backward_propagation];
	"cost(6)$0" -> "y_train(6)"	[label=forward_backward_propagation];
	"gradients(6)$0" -> "w(6)"	[label=forward_backward_propagation];
	"gradients(6)$0" -> "b(6)"	[label=forward_backward_propagation];
	"gradients(6)$0" -> "x_train(6)"	[label=forward_backward_propagation];
	"gradients(6)$0" -> "y_train(6)"	[label=forward_backward_propagation];
	"cost_list(6)$1" -> "cost_list(6)$0"	[label=append];
	"cost_list(6)$1" -> "cost(6)$0"	[label=append];
	"w(6)$0" -> "w(6)"	[label=Sub];
	"w(6)$0" -> "learning_rate(6)"	[label=Sub];
	"w(6)$0" -> "gradients(6)$0"	[label=Sub];
	"w(6)$0" -> "derivative_weight(6)"	[label=Sub];
	"b(6)$0" -> "b(6)"	[label=Sub];
	"b(6)$0" -> "learning_rate(6)"	[label=Sub];
	"b(6)$0" -> "gradients(6)$0"	[label=Sub];
	"b(6)$0" -> "derivative_bias(6)"	[label=Sub];
	"cost_list2(6)$1" -> "cost_list2(6)$0"	[label=append];
	"cost_list2(6)$1" -> "cost(6)$0"	[label=append];
	"index(6)$1" -> "index(6)$0"	[label=append];
	"index(6)$1" -> "i(6)"	[label=append];
	"print[112/12]" -> "i(6)"	[label=print];
	"print[112/12]" -> "cost(6)$0"	[label=print];
	"print[112/12]" -> "Cost after iteration \%i: \%f(6)"	[label=print];
	"parameters(6)$0" -> "w(6)$0"	[label=assignedFrom];
	"parameters(6)$0" -> "b(6)$0"	[label=assignedFrom];
	"parameters(6)$0" -> "weight(6)"	[label=assignedFrom];
	"parameters(6)$0" -> "bias(6)"	[label=assignedFrom];
	"plt(6)$0" -> "cost_list2(6)$1"	[label=plot];
	"plt(6)$0" -> "index(6)$1"	[label=plot];
	"plt(6)$0" -> "plt(6)"	[label=plot];
	"plt(6)$1" -> "index(6)$1"	[label=xticks];
	"plt(6)$1" -> "plt(6)$0"	[label=xticks];
	"plt(6)$2" -> "plt(6)$1"	[label=xlabel];
	"plt(6)$2" -> "Number of Iterarion(6)"	[label=xlabel];
	"plt(6)$3" -> "plt(6)$2"	[label=ylabel];
	"plt(6)$3" -> "Cost(6)"	[label=ylabel];
	"plt(6)$4" -> "plt(6)$3"	[label=show];
	"w(7)" -> "predict[0]"	[label=_argToVar];
	"b(7)" -> "predict[1]"	[label=_argToVar];
	"x_test(7)" -> "predict[2]"	[label=_argToVar];
	"z(7)$0" -> "w(7)"	[label=sigmoid];
	"z(7)$0" -> "b(7)"	[label=sigmoid];
	"z(7)$0" -> "x_test(7)"	[label=sigmoid];
	"z(7)$0" -> "np(7)"	[label=sigmoid];
	"Y_prediction(7)$0" -> "x_test(7)"	[label=zeros];
	"Y_prediction(7)$0" -> "np(7)"	[label=zeros];
	"Y_prediction(7)$0" -> "1(7)"	[label=zeros];
	"i(7)" -> "z(7)$0"	[label=iteratorOf];
	"i(7)" -> "1(7)"	[label=iteratorOf];
	"i(7)" -> "range(7)"	[label=iteratorOf];
	"Y_prediction(7)$1" -> "Y_prediction(7)$0"	[label=assignedFrom];
	"Y_prediction(7)$1" -> "0(7)"	[label=assignedFrom];
	"Y_prediction(7)$2" -> "1(7)"	[label=assignedFrom];
	"Y_prediction(7)$2" -> "Y_prediction(7)$1"	[label=assignedFrom];
	"x_train(8)" -> "logistic_regression[0]"	[label=_argToVar];
	"y_train(8)" -> "logistic_regression[1]"	[label=_argToVar];
	"x_test(8)" -> "logistic_regression[2]"	[label=_argToVar];
	"y_test(8)" -> "logistic_regression[3]"	[label=_argToVar];
	"learning_rate(8)" -> "logistic_regression[4]"	[label=_argToVar];
	"num_iterations(8)" -> "logistic_regression[5]"	[label=_argToVar];
	"dimension(8)$0" -> "x_train(8)"	[label=assignedFrom];
	"dimension(8)$0" -> "0(8)"	[label=assignedFrom];
	"w(8)$0" -> "dimension(8)$0"	[label=initialize_weights_and_bias];
	"b(8)$0" -> "dimension(8)$0"	[label=initialize_weights_and_bias];
	"parameters(8)$0" -> "x_train(8)"	[label=update];
	"parameters(8)$0" -> "y_train(8)"	[label=update];
	"parameters(8)$0" -> "learning_rate(8)"	[label=update];
	"parameters(8)$0" -> "num_iterations(8)"	[label=update];
	"parameters(8)$0" -> "w(8)$0"	[label=update];
	"parameters(8)$0" -> "b(8)$0"	[label=update];
	"gradients(8)$0" -> "x_train(8)"	[label=update];
	"gradients(8)$0" -> "y_train(8)"	[label=update];
	"gradients(8)$0" -> "learning_rate(8)"	[label=update];
	"gradients(8)$0" -> "num_iterations(8)"	[label=update];
	"gradients(8)$0" -> "w(8)$0"	[label=update];
	"gradients(8)$0" -> "b(8)$0"	[label=update];
	"cost_list(8)$0" -> "x_train(8)"	[label=update];
	"cost_list(8)$0" -> "y_train(8)"	[label=update];
	"cost_list(8)$0" -> "learning_rate(8)"	[label=update];
	"cost_list(8)$0" -> "num_iterations(8)"	[label=update];
	"cost_list(8)$0" -> "w(8)$0"	[label=update];
	"cost_list(8)$0" -> "b(8)$0"	[label=update];
	"y_prediction_test(8)$0" -> "x_test(8)"	[label=predict];
	"y_prediction_test(8)$0" -> "parameters(8)$0"	[label=predict];
	"y_prediction_test(8)$0" -> "weight(8)"	[label=predict];
	"y_prediction_test(8)$0" -> "bias(8)"	[label=predict];
	"y_prediction_train(8)$0" -> "x_train(8)"	[label=predict];
	"y_prediction_train(8)$0" -> "parameters(8)$0"	[label=predict];
	"y_prediction_train(8)$0" -> "weight(8)"	[label=predict];
	"y_prediction_train(8)$0" -> "bias(8)"	[label=predict];
	"print[148/4]" -> "y_train(8)"	[label=print];
	"print[148/4]" -> "y_prediction_train(8)$0"	[label=print];
	"print[148/4]" -> "train accuracy: {} \%(8)"	[label=print];
	"print[148/4]" -> "100(8)"	[label=print];
	"print[148/4]" -> "np(8)"	[label=print];
	"print[149/4]" -> "y_test(8)"	[label=print];
	"print[149/4]" -> "y_prediction_test(8)$0"	[label=print];
	"print[149/4]" -> "100(8)"	[label=print];
	"print[149/4]" -> "np(8)"	[label=print];
	"print[149/4]" -> "test accuracy: {} \%(8)"	[label=print];
	"logistic_regression[151/0]" -> "x_train(0)$0"	[label=logistic_regression];
	"logistic_regression[151/0]" -> "x_test(0)$0"	[label=logistic_regression];
	"logistic_regression[151/0]" -> "y_train(0)$0"	[label=logistic_regression];
	"logistic_regression[151/0]" -> "y_test(0)$0"	[label=logistic_regression];
	"logistic_regression[151/0]" -> "0.01(0)"	[label=logistic_regression];
	"logistic_regression[151/0]" -> "150(0)"	[label=logistic_regression];
	"0.01(0)" -> "deep-learning-tutorial-for-beginners.ipynb"	[label=appearsIn];
	"150(0)" -> "deep-learning-tutorial-for-beginners.ipynb"	[label=appearsIn];
	sklearn -> "deep-learning-tutorial-for-beginners.ipynb"	[label=importedBy];
	linear_model -> sklearn	[label=importedBy];
	"linear_model(0)" -> "deep-learning-tutorial-for-beginners.ipynb"	[label=appearsIn];
	"linear_model(0)" -> linear_model	[label=assignedFrom];
	"logreg(0)$0" -> "42(0)"	[label=LogisticRegression];
	"logreg(0)$0" -> "150(0)"	[label=LogisticRegression];
	"logreg(0)$0" -> "linear_model(0)"	[label=LogisticRegression];
	"test accuracy: {} (0)" -> "deep-learning-tutorial-for-beginners.ipynb"	[label=appearsIn];
	"print[154/0]" -> "x_train(0)$0"	[label=print];
	"print[154/0]" -> "x_test(0)$0"	[label=print];
	"print[154/0]" -> "y_train(0)$0"	[label=print];
	"print[154/0]" -> "y_test(0)$0"	[label=print];
	"print[154/0]" -> "logreg(0)$0"	[label=print];
	"print[154/0]" -> "test accuracy: {} (0)"	[label=print];
	"train accuracy: {} (0)" -> "deep-learning-tutorial-for-beginners.ipynb"	[label=appearsIn];
	"print[155/0]" -> "x_train(0)$0"	[label=print];
	"print[155/0]" -> "y_train(0)$0"	[label=print];
	"print[155/0]" -> "logreg(0)$0"	[label=print];
	"print[155/0]" -> "train accuracy: {} (0)"	[label=print];
	"x_train(9)" -> "initialize_parameters_and_layer_sizes_NN[0]"	[label=_argToVar];
	"y_train(9)" -> "initialize_parameters_and_layer_sizes_NN[1]"	[label=_argToVar];
	"parameters(9)$0" -> "x_train(9)"	[label=assignedFrom];
	"parameters(9)$0" -> "y_train(9)"	[label=assignedFrom];
	"parameters(9)$0" -> "weight1(9)"	[label=assignedFrom];
	"parameters(9)$0" -> "bias1(9)"	[label=assignedFrom];
	"parameters(9)$0" -> "weight2(9)"	[label=assignedFrom];
	"parameters(9)$0" -> "bias2(9)"	[label=assignedFrom];
	"parameters(9)$0" -> "np(9)"	[label=assignedFrom];
	"parameters(9)$0" -> "3(9)"	[label=assignedFrom];
	"parameters(9)$0" -> "0(9)"	[label=assignedFrom];
	"parameters(9)$0" -> "0.1(9)"	[label=assignedFrom];
	"parameters(9)$0" -> "1(9)"	[label=assignedFrom];
	"x_train(10)" -> "forward_propagation_NN[0]"	[label=_argToVar];
	"parameters(10)" -> "forward_propagation_NN[1]"	[label=_argToVar];
	"Z1(10)$0" -> "x_train(10)"	[label=Add];
	"Z1(10)$0" -> "parameters(10)"	[label=Add];
	"Z1(10)$0" -> "np(10)"	[label=Add];
	"Z1(10)$0" -> "weight1(10)"	[label=Add];
	"Z1(10)$0" -> "bias1(10)"	[label=Add];
	"A1(10)$0" -> "Z1(10)$0"	[label=tanh];
	"A1(10)$0" -> "np(10)"	[label=tanh];
	"Z2(10)$0" -> "parameters(10)"	[label=Add];
	"Z2(10)$0" -> "np(10)"	[label=Add];
	"Z2(10)$0" -> "A1(10)$0"	[label=Add];
	"Z2(10)$0" -> "weight2(10)"	[label=Add];
	"Z2(10)$0" -> "bias2(10)"	[label=Add];
	"A2(10)$0" -> "Z2(10)$0"	[label=sigmoid];
	"cache(10)$0" -> "Z1(10)$0"	[label=assignedFrom];
	"cache(10)$0" -> "A1(10)$0"	[label=assignedFrom];
	"cache(10)$0" -> "Z2(10)$0"	[label=assignedFrom];
	"cache(10)$0" -> "A2(10)$0"	[label=assignedFrom];
	"A2(11)" -> "compute_cost_NN[0]"	[label=_argToVar];
	"Y(11)" -> "compute_cost_NN[1]"	[label=_argToVar];
	"parameters(11)" -> "compute_cost_NN[2]"	[label=_argToVar];
	"logprobs(11)$0" -> "A2(11)"	[label=multiply];
	"logprobs(11)$0" -> "Y(11)"	[label=multiply];
	"logprobs(11)$0" -> "np(11)"	[label=multiply];
	"cost(11)$0" -> "Y(11)"	[label=Div];
	"cost(11)$0" -> "logprobs(11)$0"	[label=Div];
	"cost(11)$0" -> "np(11)"	[label=Div];
	"cost(11)$0" -> "1(11)"	[label=Div];
	"parameters(12)" -> "backward_propagation_NN[0]"	[label=_argToVar];
	"cache(12)" -> "backward_propagation_NN[1]"	[label=_argToVar];
	"X(12)" -> "backward_propagation_NN[2]"	[label=_argToVar];
	"Y(12)" -> "backward_propagation_NN[3]"	[label=_argToVar];
	"dZ2(12)$0" -> "cache(12)"	[label=Sub];
	"dZ2(12)$0" -> "Y(12)"	[label=Sub];
	"dZ2(12)$0" -> "A2(12)"	[label=Sub];
	"dW2(12)$0" -> "cache(12)"	[label=Div];
	"dW2(12)$0" -> "X(12)"	[label=Div];
	"dW2(12)$0" -> "dZ2(12)$0"	[label=Div];
	"dW2(12)$0" -> "np(12)"	[label=Div];
	"dW2(12)$0" -> "A1(12)"	[label=Div];
	"dW2(12)$0" -> "1(12)"	[label=Div];
	"db2(12)$0" -> "X(12)"	[label=Div];
	"db2(12)$0" -> "dZ2(12)$0"	[label=Div];
	"db2(12)$0" -> "np(12)"	[label=Div];
	"db2(12)$0" -> "1(12)"	[label=Div];
	"db2(12)$0" -> "True(12)"	[label=Div];
	"dZ1(12)$0" -> "parameters(12)"	[label=Mult];
	"dZ1(12)$0" -> "cache(12)"	[label=Mult];
	"dZ1(12)$0" -> "dZ2(12)$0"	[label=Mult];
	"dZ1(12)$0" -> "np(12)"	[label=Mult];
	"dZ1(12)$0" -> "A1(12)"	[label=Mult];
	"dZ1(12)$0" -> "1(12)"	[label=Mult];
	"dZ1(12)$0" -> "weight2(12)"	[label=Mult];
	"dZ1(12)$0" -> "2(12)"	[label=Mult];
	"dW1(12)$0" -> "X(12)"	[label=Div];
	"dW1(12)$0" -> "np(12)"	[label=Div];
	"dW1(12)$0" -> "1(12)"	[label=Div];
	"dW1(12)$0" -> "dZ1(12)$0"	[label=Div];
	"db1(12)$0" -> "X(12)"	[label=Div];
	"db1(12)$0" -> "np(12)"	[label=Div];
	"db1(12)$0" -> "1(12)"	[label=Div];
	"db1(12)$0" -> "True(12)"	[label=Div];
	"db1(12)$0" -> "dZ1(12)$0"	[label=Div];
	"grads(12)$0" -> "dW2(12)$0"	[label=assignedFrom];
	"grads(12)$0" -> "db2(12)$0"	[label=assignedFrom];
	"grads(12)$0" -> "dW1(12)$0"	[label=assignedFrom];
	"grads(12)$0" -> "db1(12)$0"	[label=assignedFrom];
	"grads(12)$0" -> "dweight1(12)"	[label=assignedFrom];
	"grads(12)$0" -> "dbias1(12)"	[label=assignedFrom];
	"grads(12)$0" -> "dweight2(12)"	[label=assignedFrom];
	"grads(12)$0" -> "dbias2(12)"	[label=assignedFrom];
	"parameters(13)" -> "update_parameters_NN[0]"	[label=_argToVar];
	"grads(13)" -> "update_parameters_NN[1]"	[label=_argToVar];
	"learning_rate(13)" -> "update_parameters_NN[2]"	[label=_argToVar];
	"parameters(13)$0" -> "grads(13)"	[label=assignedFrom];
	"parameters(13)$0" -> "learning_rate(13)"	[label=assignedFrom];
	"parameters(13)$0" -> "parameters(13)$0"	[label=assignedFrom];
	"parameters(13)$0" -> "weight1(13)"	[label=assignedFrom];
	"parameters(13)$0" -> "bias1(13)"	[label=assignedFrom];
	"parameters(13)$0" -> "weight2(13)"	[label=assignedFrom];
	"parameters(13)$0" -> "bias2(13)"	[label=assignedFrom];
	"parameters(13)$0" -> "dweight1(13)"	[label=assignedFrom];
	"parameters(13)$0" -> "dbias1(13)"	[label=assignedFrom];
	"parameters(13)$0" -> "dweight2(13)"	[label=assignedFrom];
	"parameters(13)$0" -> "dbias2(13)"	[label=assignedFrom];
	"parameters(14)" -> "predict_NN[0]"	[label=_argToVar];
	"x_test(14)" -> "predict_NN[1]"	[label=_argToVar];
	"A2(14)$0" -> "parameters(14)"	[label=forward_propagation_NN];
	"A2(14)$0" -> "x_test(14)"	[label=forward_propagation_NN];
	"cache(14)$0" -> "parameters(14)"	[label=forward_propagation_NN];
	"cache(14)$0" -> "x_test(14)"	[label=forward_propagation_NN];
	"Y_prediction(14)$0" -> "x_test(14)"	[label=zeros];
	"Y_prediction(14)$0" -> "np(14)"	[label=zeros];
	"Y_prediction(14)$0" -> "1(14)"	[label=zeros];
	"i(14)" -> "A2(14)$0"	[label=iteratorOf];
	"i(14)" -> "1(14)"	[label=iteratorOf];
	"i(14)" -> "range(14)"	[label=iteratorOf];
	"Y_prediction(14)$1" -> "Y_prediction(14)$0"	[label=assignedFrom];
	"Y_prediction(14)$1" -> "0(14)"	[label=assignedFrom];
	"Y_prediction(14)$2" -> "1(14)"	[label=assignedFrom];
	"Y_prediction(14)$2" -> "Y_prediction(14)$1"	[label=assignedFrom];
	"x_train(15)" -> "two_layer_neural_network[0]"	[label=_argToVar];
	"y_train(15)" -> "two_layer_neural_network[1]"	[label=_argToVar];
	"x_test(15)" -> "two_layer_neural_network[2]"	[label=_argToVar];
	"y_test(15)" -> "two_layer_neural_network[3]"	[label=_argToVar];
	"num_iterations(15)" -> "two_layer_neural_network[4]"	[label=_argToVar];
	"cost_list(15)$0" -> "[](15)"	[label=assignedFrom];
	"index_list(15)$0" -> "[](15)"	[label=assignedFrom];
	"parameters(15)$0" -> "x_train(15)"	[label=initialize_parameters_and_layer_sizes_NN];
	"parameters(15)$0" -> "y_train(15)"	[label=initialize_parameters_and_layer_sizes_NN];
	"i(15)" -> "num_iterations(15)"	[label=iteratorOf];
	"i(15)" -> "range(15)"	[label=iteratorOf];
	"i(15)" -> "0(15)"	[label=iteratorOf];
	"A2(15)$0" -> "x_train(15)"	[label=forward_propagation_NN];
	"A2(15)$0" -> "parameters(15)$0"	[label=forward_propagation_NN];
	"cache(15)$0" -> "x_train(15)"	[label=forward_propagation_NN];
	"cache(15)$0" -> "parameters(15)$0"	[label=forward_propagation_NN];
	"cost(15)$0" -> "y_train(15)"	[label=compute_cost_NN];
	"cost(15)$0" -> "parameters(15)$0"	[label=compute_cost_NN];
	"cost(15)$0" -> "A2(15)$0"	[label=compute_cost_NN];
	"grads(15)$0" -> "x_train(15)"	[label=backward_propagation_NN];
	"grads(15)$0" -> "y_train(15)"	[label=backward_propagation_NN];
	"grads(15)$0" -> "parameters(15)$0"	[label=backward_propagation_NN];
	"grads(15)$0" -> "cache(15)$0"	[label=backward_propagation_NN];
	"parameters(15)$1" -> "parameters(15)$0"	[label=update_parameters_NN];
	"parameters(15)$1" -> "grads(15)$0"	[label=update_parameters_NN];
	"cost_list(15)$1" -> "cost_list(15)$0"	[label=append];
	"cost_list(15)$1" -> "cost(15)$0"	[label=append];
	"index_list(15)$1" -> "index_list(15)$0"	[label=append];
	"index_list(15)$1" -> "i(15)"	[label=append];
	"print[240/12]" -> "i(15)"	[label=print];
	"print[240/12]" -> "cost(15)$0"	[label=print];
	"print[240/12]" -> "Cost after iteration \%i: \%f(15)"	[label=print];
	"plt(15)$0" -> "cost_list(15)$1"	[label=plot];
	"plt(15)$0" -> "index_list(15)$1"	[label=plot];
	"plt(15)$0" -> "plt(15)"	[label=plot];
	"plt(15)$1" -> "index_list(15)$1"	[label=xticks];
	"plt(15)$1" -> "plt(15)$0"	[label=xticks];
	"plt(15)$2" -> "plt(15)$1"	[label=xlabel];
	"plt(15)$2" -> "Number of Iterarion(15)"	[label=xlabel];
	"plt(15)$3" -> "plt(15)$2"	[label=ylabel];
	"plt(15)$3" -> "Cost(15)"	[label=ylabel];
	"plt(15)$4" -> "plt(15)$3"	[label=show];
	"y_prediction_test(15)$0" -> "x_test(15)"	[label=predict_NN];
	"y_prediction_test(15)$0" -> "parameters(15)$1"	[label=predict_NN];
	"y_prediction_train(15)$0" -> "x_train(15)"	[label=predict_NN];
	"y_prediction_train(15)$0" -> "parameters(15)$1"	[label=predict_NN];
	"print[252/4]" -> "y_train(15)"	[label=print];
	"print[252/4]" -> "y_prediction_train(15)$0"	[label=print];
	"print[252/4]" -> "train accuracy: {} \%(15)"	[label=print];
	"print[252/4]" -> "100(15)"	[label=print];
	"print[252/4]" -> "np(15)"	[label=print];
	"print[253/4]" -> "y_test(15)"	[label=print];
	"print[253/4]" -> "y_prediction_test(15)$0"	[label=print];
	"print[253/4]" -> "100(15)"	[label=print];
	"print[253/4]" -> "np(15)"	[label=print];
	"print[253/4]" -> "test accuracy: {} \%(15)"	[label=print];
	"parameters(0)$0" -> "x_train(0)$0"	[label=two_layer_neural_network];
	"parameters(0)$0" -> "x_test(0)$0"	[label=two_layer_neural_network];
	"parameters(0)$0" -> "y_train(0)$0"	[label=two_layer_neural_network];
	"parameters(0)$0" -> "y_test(0)$0"	[label=two_layer_neural_network];
	"parameters(0)$0" -> "2500(0)"	[label=two_layer_neural_network];
	"2500(0)" -> "deep-learning-tutorial-for-beginners.ipynb"	[label=appearsIn];
	"x_train(0)$1" -> "x_train(0)$0"	[label=assignedFrom];
	"x_train(0)$1" -> "x_test(0)$1"	[label=assignedFrom];
	"x_train(0)$1" -> "y_train(0)$1"	[label=assignedFrom];
	"x_train(0)$1" -> "y_test(0)$1"	[label=assignedFrom];
	"x_test(0)$1" -> "x_train(0)$0"	[label=assignedFrom];
	"x_test(0)$1" -> "x_test(0)$1"	[label=assignedFrom];
	"x_test(0)$1" -> "y_train(0)$1"	[label=assignedFrom];
	"x_test(0)$1" -> "y_test(0)$1"	[label=assignedFrom];
	"y_train(0)$1" -> "x_train(0)$0"	[label=assignedFrom];
	"y_train(0)$1" -> "x_test(0)$1"	[label=assignedFrom];
	"y_train(0)$1" -> "y_train(0)$1"	[label=assignedFrom];
	"y_train(0)$1" -> "y_test(0)$1"	[label=assignedFrom];
	"y_test(0)$1" -> "x_train(0)$0"	[label=assignedFrom];
	"y_test(0)$1" -> "x_test(0)$1"	[label=assignedFrom];
	"y_test(0)$1" -> "y_train(0)$1"	[label=assignedFrom];
	"y_test(0)$1" -> "y_test(0)$1"	[label=assignedFrom];
	"keras.wrappers.scikit_learn" -> "deep-learning-tutorial-for-beginners.ipynb"	[label=importedBy];
	KerasClassifier -> "keras.wrappers.scikit_learn"	[label=importedBy];
	"KerasClassifier(0)" -> "deep-learning-tutorial-for-beginners.ipynb"	[label=appearsIn];
	"KerasClassifier(0)" -> KerasClassifier	[label=assignedFrom];
	cross_val_score -> "sklearn.model_selection"	[label=importedBy];
	"cross_val_score(0)" -> "deep-learning-tutorial-for-beginners.ipynb"	[label=appearsIn];
	"cross_val_score(0)" -> cross_val_score	[label=assignedFrom];
	"keras.models" -> "deep-learning-tutorial-for-beginners.ipynb"	[label=importedBy];
	Sequential -> "keras.models"	[label=importedBy];
	"Sequential(0)" -> "deep-learning-tutorial-for-beginners.ipynb"	[label=appearsIn];
	"Sequential(0)" -> Sequential	[label=assignedFrom];
	"keras.layers" -> "deep-learning-tutorial-for-beginners.ipynb"	[label=importedBy];
	Dense -> "keras.layers"	[label=importedBy];
	"Dense(0)" -> "deep-learning-tutorial-for-beginners.ipynb"	[label=appearsIn];
	"Dense(0)" -> Dense	[label=assignedFrom];
	"classifier(16)$0" -> "classifier(16)"	[label=add];
	"classifier(16)$0" -> "Dense(16)"	[label=add];
	"classifier(16)$0" -> "8(16)"	[label=add];
	"classifier(16)$0" -> "uniform(16)"	[label=add];
	"classifier(16)$0" -> "relu(16)"	[label=add];
	"classifier(16)$0" -> "x_train(16)"	[label=add];
	"classifier(16)$0" -> "1(16)"	[label=add];
	"classifier(16)$1" -> "classifier(16)$0"	[label=add];
	"classifier(16)$1" -> "Dense(16)"	[label=add];
	"classifier(16)$1" -> "uniform(16)"	[label=add];
	"classifier(16)$1" -> "relu(16)"	[label=add];
	"classifier(16)$1" -> "4(16)"	[label=add];
	"classifier(16)$2" -> "Dense(16)"	[label=add];
	"classifier(16)$2" -> "uniform(16)"	[label=add];
	"classifier(16)$2" -> "1(16)"	[label=add];
	"classifier(16)$2" -> "classifier(16)$1"	[label=add];
	"classifier(16)$2" -> "sigmoid(16)"	[label=add];
	"classifier(16)$3" -> "classifier(16)$2"	[label=compile];
	"build_classifier(0)" -> "deep-learning-tutorial-for-beginners.ipynb"	[label=appearsIn];
	"classifier(0)$0" -> "build_classifier(0)"	[label=KerasClassifier];
	"classifier(0)$0" -> "100(0)"	[label=KerasClassifier];
	"100(0)" -> "deep-learning-tutorial-for-beginners.ipynb"	[label=appearsIn];
	"accuracies(0)$0" -> "3(0)"	[label=cross_val_score];
	"accuracies(0)$0" -> "x_train(0)$1"	[label=cross_val_score];
	"accuracies(0)$0" -> "y_train(0)$1"	[label=cross_val_score];
	"accuracies(0)$0" -> "classifier(0)$0"	[label=cross_val_score];
	"mean(0)$0" -> "accuracies(0)$0"	[label=mean];
	"variance(0)$0" -> "accuracies(0)$0"	[label=std];
	"Accuracy mean: (0)" -> "deep-learning-tutorial-for-beginners.ipynb"	[label=appearsIn];
	"print[275/0]" -> "mean(0)$0"	[label=print];
	"print[275/0]" -> "Accuracy mean: (0)"	[label=print];
	"print[275/0]" -> "str(0)"	[label=print];
	"str(0)" -> "deep-learning-tutorial-for-beginners.ipynb"	[label=appearsIn];
	"Accuracy variance: (0)" -> "deep-learning-tutorial-for-beginners.ipynb"	[label=appearsIn];
	"print[276/0]" -> "variance(0)$0"	[label=print];
	"print[276/0]" -> "str(0)"	[label=print];
	"print[276/0]" -> "Accuracy variance: (0)"	[label=print];
}
