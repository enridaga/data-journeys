digraph "" {
	os -> "unet-with-resnet34-encoder-pytorch.ipynb"	[label=importedBy];
	"os(0)" -> os	[label=assignedFrom];
	"os(0)" -> "unet-with-resnet34-encoder-pytorch.ipynb"	[label=appearsIn];
	cv2 -> "unet-with-resnet34-encoder-pytorch.ipynb"	[label=importedBy];
	"cv2(0)" -> "unet-with-resnet34-encoder-pytorch.ipynb"	[label=appearsIn];
	"cv2(0)" -> cv2	[label=assignedFrom];
	pdb -> "unet-with-resnet34-encoder-pytorch.ipynb"	[label=importedBy];
	"pdb(0)" -> "unet-with-resnet34-encoder-pytorch.ipynb"	[label=appearsIn];
	"pdb(0)" -> pdb	[label=assignedFrom];
	time -> "unet-with-resnet34-encoder-pytorch.ipynb"	[label=importedBy];
	"time(0)" -> "unet-with-resnet34-encoder-pytorch.ipynb"	[label=appearsIn];
	"time(0)" -> time	[label=assignedFrom];
	warnings -> "unet-with-resnet34-encoder-pytorch.ipynb"	[label=importedBy];
	"warnings(0)" -> "unet-with-resnet34-encoder-pytorch.ipynb"	[label=appearsIn];
	"warnings(0)" -> warnings	[label=assignedFrom];
	random -> "unet-with-resnet34-encoder-pytorch.ipynb"	[label=importedBy];
	"random(0)" -> "unet-with-resnet34-encoder-pytorch.ipynb"	[label=appearsIn];
	"random(0)" -> random	[label=assignedFrom];
	numpy -> "unet-with-resnet34-encoder-pytorch.ipynb"	[label=importedBy];
	"np(0)" -> "unet-with-resnet34-encoder-pytorch.ipynb"	[label=appearsIn];
	"np(0)" -> numpy	[label=assignedFrom];
	pandas -> "unet-with-resnet34-encoder-pytorch.ipynb"	[label=importedBy];
	"pd(0)" -> "unet-with-resnet34-encoder-pytorch.ipynb"	[label=appearsIn];
	"pd(0)" -> pandas	[label=assignedFrom];
	tqdm -> "unet-with-resnet34-encoder-pytorch.ipynb"	[label=importedBy];
	tqdm_notebook -> tqdm	[label=importedBy];
	"tqdm(0)" -> "unet-with-resnet34-encoder-pytorch.ipynb"	[label=appearsIn];
	"tqdm(0)" -> tqdm_notebook	[label=assignedFrom];
	"torch.optim.lr_scheduler" -> "unet-with-resnet34-encoder-pytorch.ipynb"	[label=importedBy];
	ReduceLROnPlateau -> "torch.optim.lr_scheduler"	[label=importedBy];
	"ReduceLROnPlateau(0)" -> "unet-with-resnet34-encoder-pytorch.ipynb"	[label=appearsIn];
	"ReduceLROnPlateau(0)" -> ReduceLROnPlateau	[label=assignedFrom];
	"sklearn.model_selection" -> "unet-with-resnet34-encoder-pytorch.ipynb"	[label=importedBy];
	StratifiedKFold -> "sklearn.model_selection"	[label=importedBy];
	"StratifiedKFold(0)" -> "unet-with-resnet34-encoder-pytorch.ipynb"	[label=appearsIn];
	"StratifiedKFold(0)" -> StratifiedKFold	[label=assignedFrom];
	torch -> "unet-with-resnet34-encoder-pytorch.ipynb"	[label=importedBy];
	"torch(0)" -> "unet-with-resnet34-encoder-pytorch.ipynb"	[label=appearsIn];
	"torch(0)" -> torch	[label=assignedFrom];
	"torch.nn" -> "unet-with-resnet34-encoder-pytorch.ipynb"	[label=importedBy];
	"nn(0)" -> "unet-with-resnet34-encoder-pytorch.ipynb"	[label=appearsIn];
	"nn(0)" -> "torch.nn"	[label=assignedFrom];
	functional -> "torch.nn"	[label=importedBy];
	"F(0)" -> "unet-with-resnet34-encoder-pytorch.ipynb"	[label=appearsIn];
	"F(0)" -> functional	[label=assignedFrom];
	"torch.optim" -> "unet-with-resnet34-encoder-pytorch.ipynb"	[label=importedBy];
	"optim(0)" -> "unet-with-resnet34-encoder-pytorch.ipynb"	[label=appearsIn];
	"optim(0)" -> "torch.optim"	[label=assignedFrom];
	"torch.backends.cudnn" -> "unet-with-resnet34-encoder-pytorch.ipynb"	[label=importedBy];
	"cudnn(0)" -> "unet-with-resnet34-encoder-pytorch.ipynb"	[label=appearsIn];
	"cudnn(0)" -> "torch.backends.cudnn"	[label=assignedFrom];
	"torch.utils.data" -> "unet-with-resnet34-encoder-pytorch.ipynb"	[label=importedBy];
	DataLoader -> "torch.utils.data"	[label=importedBy];
	"DataLoader(0)" -> "unet-with-resnet34-encoder-pytorch.ipynb"	[label=appearsIn];
	"DataLoader(0)" -> DataLoader	[label=assignedFrom];
	Dataset -> "torch.utils.data"	[label=importedBy];
	"Dataset(0)" -> "unet-with-resnet34-encoder-pytorch.ipynb"	[label=appearsIn];
	"Dataset(0)" -> Dataset	[label=assignedFrom];
	sampler -> "torch.utils.data"	[label=importedBy];
	"sampler(0)" -> "unet-with-resnet34-encoder-pytorch.ipynb"	[label=appearsIn];
	"sampler(0)" -> sampler	[label=assignedFrom];
	matplotlib -> "unet-with-resnet34-encoder-pytorch.ipynb"	[label=importedBy];
	pyplot -> matplotlib	[label=importedBy];
	"plt(0)" -> "unet-with-resnet34-encoder-pytorch.ipynb"	[label=appearsIn];
	"plt(0)" -> pyplot	[label=assignedFrom];
	albumentations -> "unet-with-resnet34-encoder-pytorch.ipynb"	[label=importedBy];
	HorizontalFlip -> albumentations	[label=importedBy];
	"HorizontalFlip(0)" -> "unet-with-resnet34-encoder-pytorch.ipynb"	[label=appearsIn];
	"HorizontalFlip(0)" -> HorizontalFlip	[label=assignedFrom];
	ShiftScaleRotate -> albumentations	[label=importedBy];
	"ShiftScaleRotate(0)" -> "unet-with-resnet34-encoder-pytorch.ipynb"	[label=appearsIn];
	"ShiftScaleRotate(0)" -> ShiftScaleRotate	[label=assignedFrom];
	Normalize -> albumentations	[label=importedBy];
	"Normalize(0)" -> "unet-with-resnet34-encoder-pytorch.ipynb"	[label=appearsIn];
	"Normalize(0)" -> Normalize	[label=assignedFrom];
	Resize -> albumentations	[label=importedBy];
	"Resize(0)" -> "unet-with-resnet34-encoder-pytorch.ipynb"	[label=appearsIn];
	"Resize(0)" -> Resize	[label=assignedFrom];
	Compose -> albumentations	[label=importedBy];
	"Compose(0)" -> "unet-with-resnet34-encoder-pytorch.ipynb"	[label=appearsIn];
	"Compose(0)" -> Compose	[label=assignedFrom];
	GaussNoise -> albumentations	[label=importedBy];
	"GaussNoise(0)" -> "unet-with-resnet34-encoder-pytorch.ipynb"	[label=appearsIn];
	"GaussNoise(0)" -> GaussNoise	[label=assignedFrom];
	"albumentations.torch" -> "unet-with-resnet34-encoder-pytorch.ipynb"	[label=importedBy];
	ToTensor -> "albumentations.torch"	[label=importedBy];
	"ToTensor(0)" -> "unet-with-resnet34-encoder-pytorch.ipynb"	[label=appearsIn];
	"ToTensor(0)" -> ToTensor	[label=assignedFrom];
	"warnings(0)$0" -> "warnings(0)"	[label=filterwarnings];
	"warnings(0)$0" -> "ignore(0)"	[label=filterwarnings];
	"ignore(0)" -> "unet-with-resnet34-encoder-pytorch.ipynb"	[label=appearsIn];
	segmentation_models_pytorch -> "unet-with-resnet34-encoder-pytorch.ipynb"	[label=importedBy];
	"smp(0)" -> "unet-with-resnet34-encoder-pytorch.ipynb"	[label=appearsIn];
	"smp(0)" -> segmentation_models_pytorch	[label=assignedFrom];
	"rle(1)" -> "run_length_decode[0]"	[label=_argToVar];
	"height(1)" -> "run_length_decode[1]"	[label=_argToVar];
	"width(1)" -> "run_length_decode[2]"	[label=_argToVar];
	"fill_value(1)" -> "run_length_decode[3]"	[label=_argToVar];
	"component(1)$0" -> "height(1)"	[label=zeros];
	"component(1)$0" -> "width(1)"	[label=zeros];
	"component(1)$0" -> "np(1)"	[label=zeros];
	"component(1)$1" -> "component(1)$0"	[label=reshape];
	"component(1)$1" -> "1(1)"	[label=reshape];
	"rle(1)$0" -> "np(1)"	[label=array];
	"rle(1)$0" -> "rle(1)$0"	[label=array];
	"rle(1)$0" -> "int(1)"	[label=array];
	"rle(1)$0" -> "s(1)"	[label=array];
	"rle(1)$0" -> " (1)"	[label=array];
	"rle(1)$1" -> "1(1)"	[label=reshape];
	"rle(1)$1" -> "rle(1)$0"	[label=reshape];
	"rle(1)$1" -> "2(1)"	[label=reshape];
	"start(1)$0" -> "0(1)"	[label=assignedFrom];
	"index(1)" -> "rle(1)$1"	[label=iteratorOf];
	"length(1)" -> "rle(1)$1"	[label=iteratorOf];
	"start(1)$1" -> "start(1)$0"	[label=Add];
	"start(1)$1" -> "index(1)"	[label=Add];
	"end(1)$0" -> "length(1)"	[label=Add];
	"end(1)$0" -> "start(1)$1"	[label=Add];
	"component(1)$2" -> "fill_value(1)"	[label=assignedFrom];
	"component(1)$2" -> "component(1)$1"	[label=assignedFrom];
	"start(1)$2" -> "end(1)$0"	[label=assignedFrom];
	"component(1)$3" -> "height(1)"	[label=assignedFrom];
	"component(1)$3" -> "width(1)"	[label=assignedFrom];
	"component(1)$3" -> "component(1)$2"	[label=assignedFrom];
	"component(2)" -> "run_length_encode[0]"	[label=_argToVar];
	"component(2)$0" -> "component(2)"	[label=flatten];
	"start(2)$0" -> "component(2)$0"	[label=Add];
	"start(2)$0" -> "np(2)"	[label=Add];
	"start(2)$0" -> "1(2)"	[label=Add];
	"start(2)$0" -> "0(2)"	[label=Add];
	"end(2)$0" -> "component(2)$0"	[label=Add];
	"end(2)$0" -> "np(2)"	[label=Add];
	"end(2)$0" -> "1(2)"	[label=Add];
	"end(2)$0" -> "0(2)"	[label=Add];
	"length(2)$0" -> "start(2)$0"	[label=Sub];
	"length(2)$0" -> "end(2)$0"	[label=Sub];
	"rle(2)$0" -> "[](2)"	[label=assignedFrom];
	"i(2)" -> "length(2)$0"	[label=iteratorOf];
	"i(2)" -> "range(2)"	[label=iteratorOf];
	"i(2)" -> "len(2)"	[label=iteratorOf];
	"rle(2)$1" -> "rle(2)$0"	[label=extend];
	"rle(2)$1" -> "[<_ast.Subscript object at 0x7fd4902ab070>, <_ast.Subscript object at 0x7fd4902ab1c0>](2)"	[label=extend];
	"rle(2)$2" -> "rle(2)$1"	[label=extend];
	"rle(2)$2" -> "[<_ast.BinOp object at 0x7fd4902ab4c0>, <_ast.Subscript object at 0x7fd4902abbe0>](2)"	[label=extend];
	"rle(2)$3" -> "rle(2)$3"	[label=join];
	"rle(2)$3" -> " (2)"	[label=join];
	"rle(2)$3" -> "str(2)"	[label=join];
	"rle(2)$3" -> "r(2)"	[label=join];
	"self(4)" -> "__init__[0]"	[label=_argToVar];
	"df(4)" -> "__init__[1]"	[label=_argToVar];
	"fnames(4)" -> "__init__[2]"	[label=_argToVar];
	"data_folder(4)" -> "__init__[3]"	[label=_argToVar];
	"size(4)" -> "__init__[4]"	[label=_argToVar];
	"mean(4)" -> "__init__[5]"	[label=_argToVar];
	"std(4)" -> "__init__[6]"	[label=_argToVar];
	"phase(4)" -> "__init__[7]"	[label=_argToVar];
	"self(4)$0" -> "self(4)"	[label=assignedFrom];
	"self(4)$0" -> "df(4)"	[label=assignedFrom];
	"self(4)$1" -> "data_folder(4)"	[label=assignedFrom];
	"self(4)$1" -> "self(4)$0"	[label=assignedFrom];
	"self(4)$2" -> "size(4)"	[label=assignedFrom];
	"self(4)$2" -> "self(4)$1"	[label=assignedFrom];
	"self(4)$3" -> "mean(4)"	[label=assignedFrom];
	"self(4)$3" -> "self(4)$2"	[label=assignedFrom];
	"self(4)$4" -> "std(4)"	[label=assignedFrom];
	"self(4)$4" -> "self(4)$3"	[label=assignedFrom];
	"self(4)$5" -> "phase(4)"	[label=assignedFrom];
	"self(4)$5" -> "self(4)$4"	[label=assignedFrom];
	"self(4)$6" -> "size(4)"	[label=get_transforms];
	"self(4)$6" -> "mean(4)"	[label=get_transforms];
	"self(4)$6" -> "std(4)"	[label=get_transforms];
	"self(4)$6" -> "phase(4)"	[label=get_transforms];
	"self(4)$6" -> "self(4)$5"	[label=get_transforms];
	"self(4)$7" -> "self(4)$6"	[label=groupby];
	"self(4)$7" -> "ImageId(4)"	[label=groupby];
	"self(4)$8" -> "fnames(4)"	[label=assignedFrom];
	"self(4)$8" -> "self(4)$7"	[label=assignedFrom];
	"self(5)" -> "__getitem__[0]"	[label=_argToVar];
	"idx(5)" -> "__getitem__[1]"	[label=_argToVar];
	"image_id(5)$0" -> "self(5)"	[label=assignedFrom];
	"image_id(5)$0" -> "idx(5)"	[label=assignedFrom];
	"df(5)$0" -> "self(5)"	[label=get_group];
	"df(5)$0" -> "image_id(5)$0"	[label=get_group];
	"annotations(5)$0" -> "df(5)$0"	[label=tolist];
	"annotations(5)$0" -> " EncodedPixels(5)"	[label=tolist];
	"image_path(5)$0" -> "self(5)"	[label=join];
	"image_path(5)$0" -> "image_id(5)$0"	[label=join];
	"image_path(5)$0" -> "os(5)"	[label=join];
	"image_path(5)$0" -> ".png(5)"	[label=join];
	"image(5)$0" -> "image_path(5)$0"	[label=imread];
	"image(5)$0" -> "cv2(5)"	[label=imread];
	"mask(5)$0" -> "np(5)"	[label=zeros];
	"mask(5)$0" -> "[<_ast.Constant object at 0x7fd50080db20>, <_ast.Constant object at 0x7fd50080da00>](5)"	[label=zeros];
	"rle(5)" -> "annotations(5)$0"	[label=iteratorOf];
	"mask(5)$1" -> "mask(5)$0"	[label=Add];
	"mask(5)$1" -> "rle(5)"	[label=Add];
	"mask(5)$1" -> "run_length_decode(5)"	[label=Add];
	"mask(5)$2" -> "mask(5)$1"	[label=astype];
	"mask(5)$2" -> "1(5)"	[label=astype];
	"mask(5)$2" -> "float32(5)"	[label=astype];
	"augmented(5)$0" -> "self(5)"	[label=transforms];
	"augmented(5)$0" -> "image(5)$0"	[label=transforms];
	"augmented(5)$0" -> "mask(5)$2"	[label=transforms];
	"image(5)$1" -> "augmented(5)$0"	[label=assignedFrom];
	"image(5)$1" -> "image(5)$1"	[label=assignedFrom];
	"mask(5)$3" -> "augmented(5)$0"	[label=assignedFrom];
	"mask(5)$3" -> "mask(5)$3"	[label=assignedFrom];
	"self(6)" -> "__len__[0]"	[label=_argToVar];
	"phase(7)" -> "get_transforms[0]"	[label=_argToVar];
	"size(7)" -> "get_transforms[1]"	[label=_argToVar];
	"mean(7)" -> "get_transforms[2]"	[label=_argToVar];
	"std(7)" -> "get_transforms[3]"	[label=_argToVar];
	"list_transforms(7)$0" -> "[](7)"	[label=assignedFrom];
	"list_transforms(7)$1" -> "list_transforms(7)$0"	[label=extend];
	"list_transforms(7)$1" -> "[<_ast.Call object at 0x7fd4c04aa4f0>](7)"	[label=extend];
	"list_transforms(7)$2" -> "list_transforms(7)$1"	[label=extend];
	"list_transforms(7)$2" -> "[<_ast.Call object at 0x7fd4c04aa250>, <_ast.Call object at 0x7fd4c04aa280>, <_ast.Call object at 0x7fd4c09aa160>](7)"	[label=extend];
	"list_trfms(7)$0" -> "list_transforms(7)$2"	[label=Compose];
	"fold(8)" -> "provider[0]"	[label=_argToVar];
	"total_folds(8)" -> "provider[1]"	[label=_argToVar];
	"data_folder(8)" -> "provider[2]"	[label=_argToVar];
	"df_path(8)" -> "provider[3]"	[label=_argToVar];
	"phase(8)" -> "provider[4]"	[label=_argToVar];
	"size(8)" -> "provider[5]"	[label=_argToVar];
	"mean(8)" -> "provider[6]"	[label=_argToVar];
	"std(8)" -> "provider[7]"	[label=_argToVar];
	"batch_size(8)" -> "provider[8]"	[label=_argToVar];
	"num_workers(8)" -> "provider[9]"	[label=_argToVar];
	"df_all(8)$0" -> "df_path(8)"	[label=read_csv];
	"df_all(8)$0" -> "pd(8)"	[label=read_csv];
	"df(8)$0" -> "df_all(8)$0"	[label=drop_duplicates];
	"df(8)$0" -> "ImageId(8)"	[label=drop_duplicates];
	"df_with_mask(8)$0" -> "df(8)$0"	[label=assignedFrom];
	"df_with_mask(8)$0" -> " EncodedPixels(8)"	[label=assignedFrom];
	"df_with_mask(8)$0" -> " -1(8)"	[label=assignedFrom];
	"df_with_mask(8)$1" -> "df_with_mask(8)$0"	[label=assignedFrom];
	"df_with_mask(8)$1" -> "1(8)"	[label=assignedFrom];
	"df_without_mask(8)$0" -> "df(8)$0"	[label=assignedFrom];
	"df_without_mask(8)$0" -> " EncodedPixels(8)"	[label=assignedFrom];
	"df_without_mask(8)$0" -> " -1(8)"	[label=assignedFrom];
	"df_without_mask(8)$1" -> "df_without_mask(8)$0"	[label=assignedFrom];
	"df_without_mask(8)$1" -> "0(8)"	[label=assignedFrom];
	"df_without_mask_sampled(8)$0" -> "df_with_mask(8)$1"	[label=sample];
	"df_without_mask_sampled(8)$0" -> "df_without_mask(8)$1"	[label=sample];
	"df_without_mask_sampled(8)$0" -> "len(8)"	[label=sample];
	"df_without_mask_sampled(8)$0" -> "69(8)"	[label=sample];
	"df(8)$1" -> "pd(8)"	[label=concat];
	"df(8)$1" -> "[<_ast.Name object at 0x7fd500832a00>, <_ast.Name object at 0x7fd500832550>](8)"	[label=concat];
	"kfold(8)$0" -> "total_folds(8)"	[label=StratifiedKFold];
	"kfold(8)$0" -> "69(8)"	[label=StratifiedKFold];
	"kfold(8)$0" -> "True(8)"	[label=StratifiedKFold];
	"train_idx(8)$0" -> "fold(8)"	[label=assignedFrom];
	"train_idx(8)$0" -> "ImageId(8)"	[label=assignedFrom];
	"train_idx(8)$0" -> "df(8)$1"	[label=assignedFrom];
	"train_idx(8)$0" -> "kfold(8)$0"	[label=assignedFrom];
	"train_idx(8)$0" -> "list(8)"	[label=assignedFrom];
	"train_idx(8)$0" -> "has_mask(8)"	[label=assignedFrom];
	"val_idx(8)$0" -> "fold(8)"	[label=assignedFrom];
	"val_idx(8)$0" -> "ImageId(8)"	[label=assignedFrom];
	"val_idx(8)$0" -> "df(8)$1"	[label=assignedFrom];
	"val_idx(8)$0" -> "kfold(8)$0"	[label=assignedFrom];
	"val_idx(8)$0" -> "list(8)"	[label=assignedFrom];
	"val_idx(8)$0" -> "has_mask(8)"	[label=assignedFrom];
	"train_df(8)$0" -> "df(8)$1"	[label=assignedFrom];
	"train_df(8)$0" -> "train_idx(8)$0"	[label=assignedFrom];
	"train_df(8)$0" -> "val_idx(8)$0"	[label=assignedFrom];
	"val_df(8)$0" -> "df(8)$1"	[label=assignedFrom];
	"val_df(8)$0" -> "train_idx(8)$0"	[label=assignedFrom];
	"val_df(8)$0" -> "val_idx(8)$0"	[label=assignedFrom];
	"df(8)$2" -> "phase(8)"	[label=assignedFrom];
	"df(8)$2" -> "train_df(8)$0"	[label=assignedFrom];
	"df(8)$2" -> "val_df(8)$0"	[label=assignedFrom];
	"df(8)$2" -> "train(8)"	[label=assignedFrom];
	"fnames(8)$0" -> "ImageId(8)"	[label=assignedFrom];
	"fnames(8)$0" -> "df(8)$2"	[label=assignedFrom];
	"image_dataset(8)$0" -> "data_folder(8)"	[label=SIIMDataset];
	"image_dataset(8)$0" -> "phase(8)"	[label=SIIMDataset];
	"image_dataset(8)$0" -> "size(8)"	[label=SIIMDataset];
	"image_dataset(8)$0" -> "mean(8)"	[label=SIIMDataset];
	"image_dataset(8)$0" -> "std(8)"	[label=SIIMDataset];
	"image_dataset(8)$0" -> "df_all(8)$0"	[label=SIIMDataset];
	"image_dataset(8)$0" -> "fnames(8)$0"	[label=SIIMDataset];
	"dataloader(8)$0" -> "batch_size(8)"	[label=DataLoader];
	"dataloader(8)$0" -> "num_workers(8)"	[label=DataLoader];
	"dataloader(8)$0" -> "True(8)"	[label=DataLoader];
	"dataloader(8)$0" -> "image_dataset(8)$0"	[label=DataLoader];
	"../input/siim-stage1/sample_submission.csv(0)" -> "unet-with-resnet34-encoder-pytorch.ipynb"	[label=appearsIn];
	"sample_submission_path(0)$0" -> "../input/siim-stage1/sample_submission.csv(0)"	[label=assignedFrom];
	"../input/siim-dicom-images/train-rle.csv(0)" -> "unet-with-resnet34-encoder-pytorch.ipynb"	[label=appearsIn];
	"train_rle_path(0)$0" -> "../input/siim-dicom-images/train-rle.csv(0)"	[label=assignedFrom];
	"../input/siim-png-images/input/train_png(0)" -> "unet-with-resnet34-encoder-pytorch.ipynb"	[label=appearsIn];
	"data_folder(0)$0" -> "../input/siim-png-images/input/train_png(0)"	[label=assignedFrom];
	"../input/siim-png-images/input/test_png(0)" -> "unet-with-resnet34-encoder-pytorch.ipynb"	[label=appearsIn];
	"test_data_folder(0)$0" -> "../input/siim-png-images/input/test_png(0)"	[label=assignedFrom];
	"0(0)" -> "unet-with-resnet34-encoder-pytorch.ipynb"	[label=appearsIn];
	"dataloader(0)$0" -> "train_rle_path(0)$0"	[label=provider];
	"dataloader(0)$0" -> "data_folder(0)$0"	[label=provider];
	"dataloader(0)$0" -> "0(0)"	[label=provider];
	"dataloader(0)$0" -> "5(0)"	[label=provider];
	"dataloader(0)$0" -> "train(0)"	[label=provider];
	"dataloader(0)$0" -> "512(0)"	[label=provider];
	"dataloader(0)$0" -> "0.485(0)"	[label=provider];
	"dataloader(0)$0" -> "0.456(0)"	[label=provider];
	"dataloader(0)$0" -> "0.406(0)"	[label=provider];
	"dataloader(0)$0" -> "0.229(0)"	[label=provider];
	"dataloader(0)$0" -> "0.224(0)"	[label=provider];
	"dataloader(0)$0" -> "0.225(0)"	[label=provider];
	"dataloader(0)$0" -> "16(0)"	[label=provider];
	"dataloader(0)$0" -> "4(0)"	[label=provider];
	"5(0)" -> "unet-with-resnet34-encoder-pytorch.ipynb"	[label=appearsIn];
	"train(0)" -> "unet-with-resnet34-encoder-pytorch.ipynb"	[label=appearsIn];
	"512(0)" -> "unet-with-resnet34-encoder-pytorch.ipynb"	[label=appearsIn];
	"0.485(0)" -> "unet-with-resnet34-encoder-pytorch.ipynb"	[label=appearsIn];
	"0.456(0)" -> "unet-with-resnet34-encoder-pytorch.ipynb"	[label=appearsIn];
	"0.406(0)" -> "unet-with-resnet34-encoder-pytorch.ipynb"	[label=appearsIn];
	"0.229(0)" -> "unet-with-resnet34-encoder-pytorch.ipynb"	[label=appearsIn];
	"0.224(0)" -> "unet-with-resnet34-encoder-pytorch.ipynb"	[label=appearsIn];
	"0.225(0)" -> "unet-with-resnet34-encoder-pytorch.ipynb"	[label=appearsIn];
	"16(0)" -> "unet-with-resnet34-encoder-pytorch.ipynb"	[label=appearsIn];
	"4(0)" -> "unet-with-resnet34-encoder-pytorch.ipynb"	[label=appearsIn];
	"iter(0)" -> "unet-with-resnet34-encoder-pytorch.ipynb"	[label=appearsIn];
	"batch(0)$0" -> "tqdm(0)"	[label=iteratorOf];
	"batch(0)$0" -> "dataloader(0)$0"	[label=next];
	"batch(0)$0" -> "iter(0)"	[label=next];
	"batch(0)$0" -> "testset(0)$0"	[label=iteratorOf];
	"batch(0)$0" -> "enumerate(0)"	[label=iteratorOf];
	"testset(0)$0" -> "test_data_folder(0)$0"	[label=DataLoader];
	"testset(0)$0" -> "size(0)$0"	[label=DataLoader];
	"testset(0)$0" -> "mean(0)$0"	[label=DataLoader];
	"testset(0)$0" -> "std(0)$0"	[label=DataLoader];
	"testset(0)$0" -> "num_workers(0)$0"	[label=DataLoader];
	"testset(0)$0" -> "batch_size(0)$0"	[label=DataLoader];
	"testset(0)$0" -> "df(0)$0"	[label=DataLoader];
	"testset(0)$0" -> "TestDataset(0)"	[label=DataLoader];
	"testset(0)$0" -> "False(0)"	[label=DataLoader];
	"testset(0)$0" -> "True(0)"	[label=DataLoader];
	"enumerate(0)" -> "unet-with-resnet34-encoder-pytorch.ipynb"	[label=appearsIn];
	"images(0)$0" -> "batch(0)$0"	[label=assignedFrom];
	"masks(0)$0" -> "batch(0)$0"	[label=assignedFrom];
	"idx(0)$0" -> "random(0)"	[label=choice];
	"idx(0)$0" -> "16(0)"	[label=choice];
	"idx(0)$0" -> "range(0)"	[label=choice];
	"range(0)" -> "unet-with-resnet34-encoder-pytorch.ipynb"	[label=appearsIn];
	"plt(0)$0" -> "plt(0)"	[label=imshow];
	"plt(0)$0" -> "0(0)"	[label=imshow];
	"plt(0)$0" -> "images(0)$0"	[label=imshow];
	"plt(0)$0" -> "idx(0)$0"	[label=imshow];
	"plt(0)$1" -> "0(0)"	[label=imshow];
	"plt(0)$1" -> "masks(0)$0"	[label=imshow];
	"plt(0)$1" -> "idx(0)$0"	[label=imshow];
	"plt(0)$1" -> "plt(0)$0"	[label=imshow];
	"plt(0)$2" -> "plt(0)$1"	[label=show];
	"Chosen image has no ground truth mask, rerun the cell(0)" -> "unet-with-resnet34-encoder-pytorch.ipynb"	[label=appearsIn];
	"print[178/4]" -> "Chosen image has no ground truth mask, rerun the cell(0)"	[label=print];
	"input(9)" -> "dice_loss[0]"	[label=_argToVar];
	"target(9)" -> "dice_loss[1]"	[label=_argToVar];
	"input(9)$0" -> "input(9)$0"	[label=sigmoid];
	"input(9)$0" -> "torch(9)"	[label=sigmoid];
	"smooth(9)$0" -> "1.0(9)"	[label=assignedFrom];
	"iflat(9)$0" -> "input(9)$0"	[label=view];
	"iflat(9)$0" -> "1(9)"	[label=view];
	"tflat(9)$0" -> "target(9)"	[label=view];
	"tflat(9)$0" -> "1(9)"	[label=view];
	"intersection(9)$0" -> "iflat(9)$0"	[label=sum];
	"intersection(9)$0" -> "tflat(9)$0"	[label=sum];
	"self(11)" -> "__init__[0]"	[label=_argToVar];
	"gamma(11)" -> "__init__[1]"	[label=_argToVar];
	"super(11)$0" -> "super(11)"	[label=__init__];
	"self(11)$0" -> "self(11)"	[label=assignedFrom];
	"self(11)$0" -> "gamma(11)"	[label=assignedFrom];
	"self(12)" -> "forward[0]"	[label=_argToVar];
	"input(12)" -> "forward[1]"	[label=_argToVar];
	"target(12)" -> "forward[2]"	[label=_argToVar];
	"max_val(12)$0" -> "input(12)"	[label=clamp];
	"max_val(12)$0" -> "0(12)"	[label=clamp];
	"loss(12)$0" -> "input(12)"	[label=Add];
	"loss(12)$0" -> "target(12)"	[label=Add];
	"loss(12)$0" -> "max_val(12)$0"	[label=Add];
	"invprobs(12)$0" -> "input(12)"	[label=logsigmoid];
	"invprobs(12)$0" -> "target(12)"	[label=logsigmoid];
	"invprobs(12)$0" -> "F(12)"	[label=logsigmoid];
	"invprobs(12)$0" -> "2.0(12)"	[label=logsigmoid];
	"invprobs(12)$0" -> "1.0(12)"	[label=logsigmoid];
	"loss(12)$1" -> "self(12)"	[label=Mult];
	"loss(12)$1" -> "invprobs(12)$0"	[label=Mult];
	"loss(12)$1" -> "loss(12)$1"	[label=Mult];
	"self(14)" -> "__init__[0]"	[label=_argToVar];
	"alpha(14)" -> "__init__[1]"	[label=_argToVar];
	"gamma(14)" -> "__init__[2]"	[label=_argToVar];
	"super(14)$0" -> "super(14)"	[label=__init__];
	"self(14)$0" -> "self(14)"	[label=assignedFrom];
	"self(14)$0" -> "alpha(14)"	[label=assignedFrom];
	"self(14)$1" -> "gamma(14)"	[label=FocalLoss];
	"self(14)$1" -> "self(14)$0"	[label=FocalLoss];
	"self(15)" -> "forward[0]"	[label=_argToVar];
	"input(15)" -> "forward[1]"	[label=_argToVar];
	"target(15)" -> "forward[2]"	[label=_argToVar];
	"loss(15)$0" -> "self(15)"	[label=Sub];
	"loss(15)$0" -> "input(15)"	[label=Sub];
	"loss(15)$0" -> "target(15)"	[label=Sub];
	"loss(15)$0" -> "torch(15)"	[label=Sub];
	"loss(15)$0" -> "dice_loss(15)"	[label=Sub];
	"X(16)" -> "predict[0]"	[label=_argToVar];
	"threshold(16)" -> "predict[1]"	[label=_argToVar];
	"X_p(16)$0" -> "X(16)"	[label=copy];
	"X_p(16)$0" -> "np(16)"	[label=copy];
	"preds(16)$0" -> "threshold(16)"	[label=astype];
	"preds(16)$0" -> "X_p(16)$0"	[label=astype];
	"preds(16)$0" -> "uint8(16)"	[label=astype];
	"probability(17)" -> "metric[0]"	[label=_argToVar];
	"truth(17)" -> "metric[1]"	[label=_argToVar];
	"threshold(17)" -> "metric[2]"	[label=_argToVar];
	"reduction(17)" -> "metric[3]"	[label=_argToVar];
	"batch_size(17)$0" -> "truth(17)"	[label=len];
	"probability(17)$0" -> "probability(17)"	[label=view];
	"probability(17)$0" -> "batch_size(17)$0"	[label=view];
	"probability(17)$0" -> "1(17)"	[label=view];
	"truth(17)$0" -> "truth(17)"	[label=view];
	"truth(17)$0" -> "batch_size(17)$0"	[label=view];
	"truth(17)$0" -> "1(17)"	[label=view];
	"p(17)$0" -> "threshold(17)"	[label=float];
	"p(17)$0" -> "probability(17)$0"	[label=float];
	"t(17)$0" -> "truth(17)$0"	[label=float];
	"t(17)$0" -> "0.5(17)"	[label=float];
	"t_sum(17)$0" -> "1(17)"	[label=sum];
	"t_sum(17)$0" -> "t(17)$0"	[label=sum];
	"p_sum(17)$0" -> "1(17)"	[label=sum];
	"p_sum(17)$0" -> "p(17)$0"	[label=sum];
	"neg_index(17)$0" -> "t_sum(17)$0"	[label=nonzero];
	"neg_index(17)$0" -> "torch(17)"	[label=nonzero];
	"neg_index(17)$0" -> "0(17)"	[label=nonzero];
	"pos_index(17)$0" -> "1(17)"	[label=nonzero];
	"pos_index(17)$0" -> "t_sum(17)$0"	[label=nonzero];
	"pos_index(17)$0" -> "torch(17)"	[label=nonzero];
	"dice_neg(17)$0" -> "p_sum(17)$0"	[label=float];
	"dice_neg(17)$0" -> "0(17)"	[label=float];
	"dice_pos(17)$0" -> "1(17)"	[label=Div];
	"dice_pos(17)$0" -> "p(17)$0"	[label=Div];
	"dice_pos(17)$0" -> "t(17)$0"	[label=Div];
	"dice_pos(17)$0" -> "2(17)"	[label=Div];
	"dice_neg(17)$1" -> "neg_index(17)$0"	[label=assignedFrom];
	"dice_neg(17)$1" -> "dice_neg(17)$0"	[label=assignedFrom];
	"dice_pos(17)$1" -> "pos_index(17)$0"	[label=assignedFrom];
	"dice_pos(17)$1" -> "dice_pos(17)$0"	[label=assignedFrom];
	"dice(17)$0" -> "torch(17)"	[label=cat];
	"dice(17)$0" -> "[<_ast.Name object at 0x7fd4d0979880>, <_ast.Name object at 0x7fd4d0979970>](17)"	[label=cat];
	"num_neg(17)$0" -> "neg_index(17)$0"	[label=len];
	"num_pos(17)$0" -> "pos_index(17)$0"	[label=len];
	"self(19)" -> "__init__[0]"	[label=_argToVar];
	"phase(19)" -> "__init__[1]"	[label=_argToVar];
	"epoch(19)" -> "__init__[2]"	[label=_argToVar];
	"self(19)$0" -> "self(19)"	[label=assignedFrom];
	"self(19)$0" -> "0.5(19)"	[label=assignedFrom];
	"self(19)$1" -> "self(19)$0"	[label=assignedFrom];
	"self(19)$1" -> "[](19)"	[label=assignedFrom];
	"self(19)$2" -> "self(19)$1"	[label=assignedFrom];
	"self(19)$2" -> "[](19)"	[label=assignedFrom];
	"self(19)$3" -> "[](19)"	[label=assignedFrom];
	"self(19)$3" -> "self(19)$2"	[label=assignedFrom];
	"self(19)$4" -> "[](19)"	[label=assignedFrom];
	"self(19)$4" -> "self(19)$3"	[label=assignedFrom];
	"self(20)" -> "update[0]"	[label=_argToVar];
	"targets(20)" -> "update[1]"	[label=_argToVar];
	"outputs(20)" -> "update[2]"	[label=_argToVar];
	"probs(20)$0" -> "outputs(20)"	[label=sigmoid];
	"probs(20)$0" -> "torch(20)"	[label=sigmoid];
	"dice(20)$0" -> "self(20)"	[label=metric];
	"dice(20)$0" -> "targets(20)"	[label=metric];
	"dice(20)$0" -> "probs(20)$0"	[label=metric];
	"dice_neg(20)$0" -> "self(20)"	[label=metric];
	"dice_neg(20)$0" -> "targets(20)"	[label=metric];
	"dice_neg(20)$0" -> "probs(20)$0"	[label=metric];
	"dice_pos(20)$0" -> "self(20)"	[label=metric];
	"dice_pos(20)$0" -> "targets(20)"	[label=metric];
	"dice_pos(20)$0" -> "probs(20)$0"	[label=metric];
	"_(20)$0" -> "self(20)"	[label=metric];
	"_(20)$0" -> "targets(20)"	[label=metric];
	"_(20)$0" -> "probs(20)$0"	[label=metric];
	"self(20)$0" -> "self(20)"	[label=extend];
	"self(20)$0" -> "dice(20)$0"	[label=extend];
	"self(20)$1" -> "dice_pos(20)$0"	[label=extend];
	"self(20)$1" -> "self(20)$0"	[label=extend];
	"self(20)$2" -> "dice_neg(20)$0"	[label=extend];
	"self(20)$2" -> "self(20)$1"	[label=extend];
	"preds(20)$0" -> "probs(20)$0"	[label=predict];
	"preds(20)$0" -> "self(20)$2"	[label=predict];
	"iou(20)$0" -> "targets(20)"	[label=compute_iou_batch];
	"iou(20)$0" -> "preds(20)$0"	[label=compute_iou_batch];
	"iou(20)$0" -> "[<_ast.Constant object at 0x7fd4d0986e80>](20)"	[label=compute_iou_batch];
	"self(20)$3" -> "self(20)$2"	[label=append];
	"self(20)$3" -> "iou(20)$0"	[label=append];
	"self(21)" -> "get_metrics[0]"	[label=_argToVar];
	"dice(21)$0" -> "self(21)"	[label=nanmean];
	"dice(21)$0" -> "np(21)"	[label=nanmean];
	"dice_neg(21)$0" -> "self(21)"	[label=nanmean];
	"dice_neg(21)$0" -> "np(21)"	[label=nanmean];
	"dice_pos(21)$0" -> "self(21)"	[label=nanmean];
	"dice_pos(21)$0" -> "np(21)"	[label=nanmean];
	"dices(21)$0" -> "[<_ast.Name object at 0x7fd4d0984580>, <_ast.Name object at 0x7fd4d09845b0>, <_ast.Name object at 0x7fd4d0984610>](21)"	[label=assignedFrom];
	"iou(21)$0" -> "self(21)"	[label=nanmean];
	"iou(21)$0" -> "np(21)"	[label=nanmean];
	"phase(22)" -> "epoch_log[0]"	[label=_argToVar];
	"epoch(22)" -> "epoch_log[1]"	[label=_argToVar];
	"epoch_loss(22)" -> "epoch_log[2]"	[label=_argToVar];
	"meter(22)" -> "epoch_log[3]"	[label=_argToVar];
	"start(22)" -> "epoch_log[4]"	[label=_argToVar];
	"dices(22)$0" -> "meter(22)"	[label=get_metrics];
	"iou(22)$0" -> "meter(22)"	[label=get_metrics];
	"dice(22)$0" -> "dices(22)$0"	[label=assignedFrom];
	"dice_neg(22)$0" -> "dices(22)$0"	[label=assignedFrom];
	"dice_pos(22)$0" -> "dices(22)$0"	[label=assignedFrom];
	"print[283/4]" -> "epoch_loss(22)"	[label=print];
	"print[283/4]" -> "iou(22)$0"	[label=print];
	"print[283/4]" -> "dice(22)$0"	[label=print];
	"print[283/4]" -> "dice_neg(22)$0"	[label=print];
	"print[283/4]" -> "dice_pos(22)$0"	[label=print];
	"print[283/4]" -> "Loss: \%0.4f | dice: \%0.4f | dice_neg: \%0.4f | dice_pos: \%0.4f | IoU: \%0.4f(22)"	[label=print];
	"pred(23)" -> "compute_ious[0]"	[label=_argToVar];
	"label(23)" -> "compute_ious[1]"	[label=_argToVar];
	"classes(23)" -> "compute_ious[2]"	[label=_argToVar];
	"ignore_index(23)" -> "compute_ious[3]"	[label=_argToVar];
	"only_present(23)" -> "compute_ious[4]"	[label=_argToVar];
	"pred(23)$0" -> "pred(23)"	[label=assignedFrom];
	"pred(23)$0" -> "0(23)"	[label=assignedFrom];
	"ious(23)$0" -> "[](23)"	[label=assignedFrom];
	"c(23)" -> "classes(23)"	[label=iteratorOf];
	"label_c(23)$0" -> "label(23)"	[label=assignedFrom];
	"label_c(23)$0" -> "c(23)"	[label=assignedFrom];
	"ious(23)$1" -> "ious(23)$0"	[label=append];
	"ious(23)$1" -> "np(23)"	[label=append];
	"pred_c(23)$0" -> "pred(23)$0"	[label=assignedFrom];
	"pred_c(23)$0" -> "c(23)"	[label=assignedFrom];
	"intersection(23)$0" -> "label_c(23)$0"	[label=sum];
	"intersection(23)$0" -> "np(23)"	[label=sum];
	"intersection(23)$0" -> "pred_c(23)$0"	[label=sum];
	"union(23)$0" -> "label_c(23)$0"	[label=sum];
	"union(23)$0" -> "np(23)"	[label=sum];
	"union(23)$0" -> "pred_c(23)$0"	[label=sum];
	"ious(23)$2" -> "ious(23)$1"	[label=append];
	"ious(23)$2" -> "intersection(23)$0"	[label=append];
	"ious(23)$2" -> "union(23)$0"	[label=append];
	"outputs(24)" -> "compute_iou_batch[0]"	[label=_argToVar];
	"labels(24)" -> "compute_iou_batch[1]"	[label=_argToVar];
	"classes(24)" -> "compute_iou_batch[2]"	[label=_argToVar];
	"ious(24)$0" -> "[](24)"	[label=assignedFrom];
	"preds(24)$0" -> "outputs(24)"	[label=copy];
	"preds(24)$0" -> "np(24)"	[label=copy];
	"labels(24)$0" -> "np(24)"	[label=array];
	"labels(24)$0" -> "labels(24)$0"	[label=array];
	"pred(24)" -> "preds(24)$0"	[label=iteratorOf];
	"pred(24)" -> "labels(24)$0"	[label=iteratorOf];
	"pred(24)" -> "zip(24)"	[label=iteratorOf];
	"label(24)" -> "preds(24)$0"	[label=iteratorOf];
	"label(24)" -> "labels(24)$0"	[label=iteratorOf];
	"label(24)" -> "zip(24)"	[label=iteratorOf];
	"ious(24)$1" -> "classes(24)"	[label=append];
	"ious(24)$1" -> "ious(24)$0"	[label=append];
	"ious(24)$1" -> "np(24)"	[label=append];
	"ious(24)$1" -> "pred(24)"	[label=append];
	"ious(24)$1" -> "label(24)"	[label=append];
	"ious(24)$1" -> "compute_ious(24)"	[label=append];
	"iou(24)$0" -> "np(24)"	[label=nanmean];
	"iou(24)$0" -> "ious(24)$1"	[label=nanmean];
	"model(0)$0" -> "smp(0)"	[label=Unet];
	"model(0)$0" -> "resnet34(0)"	[label=Unet];
	"model(0)$0" -> "imagenet(0)"	[label=Unet];
	"model(0)$0" -> "None(0)"	[label=Unet];
	"resnet34(0)" -> "unet-with-resnet34-encoder-pytorch.ipynb"	[label=appearsIn];
	"imagenet(0)" -> "unet-with-resnet34-encoder-pytorch.ipynb"	[label=appearsIn];
	"None(0)" -> "unet-with-resnet34-encoder-pytorch.ipynb"	[label=appearsIn];
	"self(26)" -> "__init__[0]"	[label=_argToVar];
	"model(26)" -> "__init__[1]"	[label=_argToVar];
	"self(26)$0" -> "self(26)"	[label=assignedFrom];
	"self(26)$0" -> "1(26)"	[label=assignedFrom];
	"self(26)$1" -> "self(26)$0"	[label=assignedFrom];
	"self(26)$1" -> "5(26)"	[label=assignedFrom];
	"self(26)$2" -> "self(26)$1"	[label=assignedFrom];
	"self(26)$2" -> "6(26)"	[label=assignedFrom];
	"self(26)$3" -> "self(26)$2"	[label=assignedFrom];
	"self(26)$3" -> "train(26)"	[label=assignedFrom];
	"self(26)$3" -> "val(26)"	[label=assignedFrom];
	"self(26)$3" -> "4(26)"	[label=assignedFrom];
	"self(26)$4" -> "self(26)$3"	[label=FloorDiv];
	"self(26)$4" -> "train(26)"	[label=FloorDiv];
	"self(26)$4" -> "self(26)$4"	[label=FloorDiv];
	"self(26)$4" -> "32(26)"	[label=FloorDiv];
	"self(26)$5" -> "self(26)$4"	[label=assignedFrom];
	"self(26)$5" -> "0.0005(26)"	[label=assignedFrom];
	"self(26)$6" -> "self(26)$5"	[label=assignedFrom];
	"self(26)$6" -> "40(26)"	[label=assignedFrom];
	"self(26)$7" -> "self(26)$6"	[label=float];
	"self(26)$7" -> "inf(26)"	[label=float];
	"self(26)$8" -> "self(26)$7"	[label=assignedFrom];
	"self(26)$8" -> "[<_ast.Constant object at 0x7fd4d097cb20>, <_ast.Constant object at 0x7fd4d097cb50>](26)"	[label=assignedFrom];
	"self(26)$9" -> "self(26)$8"	[label=device];
	"self(26)$9" -> "torch(26)"	[label=device];
	"self(26)$9" -> "cuda:0(26)"	[label=device];
	"torch(26)$0" -> "torch(26)"	[label=set_default_tensor_type];
	"torch(26)$0" -> "torch.cuda.FloatTensor(26)"	[label=set_default_tensor_type];
	"self(26)$10" -> "model(26)"	[label=assignedFrom];
	"self(26)$10" -> "self(26)$9"	[label=assignedFrom];
	"self(26)$11" -> "self(26)$10"	[label=MixedLoss];
	"self(26)$11" -> "10.0(26)"	[label=MixedLoss];
	"self(26)$11" -> "2.0(26)"	[label=MixedLoss];
	"self(26)$12" -> "self(26)$11"	[label=Adam];
	"self(26)$12" -> "self(26)$12"	[label=Adam];
	"self(26)$12" -> "optim(26)"	[label=Adam];
	"self(26)$13" -> "self(26)$12"	[label=ReduceLROnPlateau];
	"self(26)$13" -> "min(26)"	[label=ReduceLROnPlateau];
	"self(26)$13" -> "3(26)"	[label=ReduceLROnPlateau];
	"self(26)$13" -> "True(26)"	[label=ReduceLROnPlateau];
	"self(26)$14" -> "self(26)$13"	[label=to];
	"self(26)$14" -> "self(26)$14"	[label=to];
	"cudnn(26)$0" -> "True(26)"	[label=assignedFrom];
	"cudnn(26)$0" -> "cudnn(26)"	[label=assignedFrom];
	"self(26)$15" -> "1(26)"	[label=assignedFrom];
	"self(26)$15" -> "5(26)"	[label=assignedFrom];
	"self(26)$15" -> "self(26)$14"	[label=assignedFrom];
	"self(26)$15" -> "self(26)$15"	[label=assignedFrom];
	"self(26)$15" -> "phase(26)"	[label=assignedFrom];
	"self(26)$15" -> "provider(26)"	[label=assignedFrom];
	"self(26)$15" -> "data_folder(26)"	[label=assignedFrom];
	"self(26)$15" -> "train_rle_path(26)"	[label=assignedFrom];
	"self(26)$15" -> "512(26)"	[label=assignedFrom];
	"self(26)$15" -> "0.485(26)"	[label=assignedFrom];
	"self(26)$15" -> "0.456(26)"	[label=assignedFrom];
	"self(26)$15" -> "0.406(26)"	[label=assignedFrom];
	"self(26)$15" -> "0.229(26)"	[label=assignedFrom];
	"self(26)$15" -> "0.224(26)"	[label=assignedFrom];
	"self(26)$15" -> "0.225(26)"	[label=assignedFrom];
	"self(26)$16" -> "self(26)$15"	[label=assignedFrom];
	"self(26)$16" -> "phase(26)"	[label=assignedFrom];
	"self(26)$16" -> "self(26)$16"	[label=assignedFrom];
	"self(26)$16" -> "[](26)"	[label=assignedFrom];
	"self(26)$17" -> "phase(26)"	[label=assignedFrom];
	"self(26)$17" -> "self(26)$16"	[label=assignedFrom];
	"self(26)$17" -> "[](26)"	[label=assignedFrom];
	"self(26)$17" -> "self(26)$17"	[label=assignedFrom];
	"self(26)$18" -> "phase(26)"	[label=assignedFrom];
	"self(26)$18" -> "[](26)"	[label=assignedFrom];
	"self(26)$18" -> "self(26)$17"	[label=assignedFrom];
	"self(26)$18" -> "self(26)$18"	[label=assignedFrom];
	"self(27)" -> "forward[0]"	[label=_argToVar];
	"images(27)" -> "forward[1]"	[label=_argToVar];
	"targets(27)" -> "forward[2]"	[label=_argToVar];
	"images(27)$0" -> "self(27)"	[label=to];
	"images(27)$0" -> "images(27)"	[label=to];
	"masks(27)$0" -> "self(27)"	[label=to];
	"masks(27)$0" -> "targets(27)"	[label=to];
	"outputs(27)$0" -> "self(27)"	[label=net];
	"outputs(27)$0" -> "images(27)$0"	[label=net];
	"loss(27)$0" -> "self(27)"	[label=criterion];
	"loss(27)$0" -> "masks(27)$0"	[label=criterion];
	"loss(27)$0" -> "outputs(27)$0"	[label=criterion];
	"self(28)" -> "iterate[0]"	[label=_argToVar];
	"epoch(28)" -> "iterate[1]"	[label=_argToVar];
	"phase(28)" -> "iterate[2]"	[label=_argToVar];
	"meter(28)$0" -> "epoch(28)"	[label=Meter];
	"meter(28)$0" -> "phase(28)"	[label=Meter];
	"start(28)$0" -> "time(28)"	[label=strftime];
	"start(28)$0" -> "\%H:\%M:\%S(28)"	[label=strftime];
	"print[364/8]" -> "epoch(28)"	[label=print];
	"print[364/8]" -> "phase(28)"	[label=print];
	"print[364/8]" -> "start(28)$0"	[label=print];
	"print[364/8]" -> "Starting epoch: (28)"	[label=print];
	"print[364/8]" -> " | phase: (28)"	[label=print];
	"print[364/8]" -> " | ⏰: (28)"	[label=print];
	"batch_size(28)$0" -> "self(28)"	[label=assignedFrom];
	"batch_size(28)$0" -> "phase(28)"	[label=assignedFrom];
	"self(28)$0" -> "self(28)"	[label=train];
	"self(28)$0" -> "phase(28)"	[label=train];
	"self(28)$0" -> "train(28)"	[label=train];
	"dataloader(28)$0" -> "phase(28)"	[label=assignedFrom];
	"dataloader(28)$0" -> "self(28)$0"	[label=assignedFrom];
	"running_loss(28)$0" -> "0.0(28)"	[label=assignedFrom];
	"total_batches(28)$0" -> "dataloader(28)$0"	[label=len];
	"self(28)$1" -> "self(28)$0"	[label=zero_grad];
	"itr(28)" -> "dataloader(28)$0"	[label=iteratorOf];
	"itr(28)" -> "enumerate(28)"	[label=iteratorOf];
	"batch(28)" -> "dataloader(28)$0"	[label=iteratorOf];
	"batch(28)" -> "enumerate(28)"	[label=iteratorOf];
	"images(28)$0" -> "batch(28)"	[label=assignedFrom];
	"targets(28)$0" -> "batch(28)"	[label=assignedFrom];
	"loss(28)$0" -> "self(28)$1"	[label=forward];
	"loss(28)$0" -> "images(28)$0"	[label=forward];
	"loss(28)$0" -> "targets(28)$0"	[label=forward];
	"outputs(28)$0" -> "self(28)$1"	[label=forward];
	"outputs(28)$0" -> "images(28)$0"	[label=forward];
	"outputs(28)$0" -> "targets(28)$0"	[label=forward];
	"loss(28)$1" -> "self(28)$1"	[label=Div];
	"loss(28)$1" -> "loss(28)$0"	[label=Div];
	"loss(28)$2" -> "loss(28)$1"	[label=backward];
	"self(28)$2" -> "self(28)$1"	[label=step];
	"self(28)$3" -> "self(28)$2"	[label=zero_grad];
	"running_loss(28)$1" -> "running_loss(28)$0"	[label=Add];
	"running_loss(28)$1" -> "loss(28)$2"	[label=Add];
	"outputs(28)$1" -> "outputs(28)$0"	[label=cpu];
	"meter(28)$1" -> "meter(28)$0"	[label=update];
	"meter(28)$1" -> "targets(28)$0"	[label=update];
	"meter(28)$1" -> "outputs(28)$1"	[label=update];
	"epoch_loss(28)$0" -> "total_batches(28)$0"	[label=Div];
	"epoch_loss(28)$0" -> "self(28)$3"	[label=Div];
	"epoch_loss(28)$0" -> "running_loss(28)$1"	[label=Div];
	"dice(28)$0" -> "epoch(28)"	[label=epoch_log];
	"dice(28)$0" -> "phase(28)"	[label=epoch_log];
	"dice(28)$0" -> "start(28)$0"	[label=epoch_log];
	"dice(28)$0" -> "meter(28)$1"	[label=epoch_log];
	"dice(28)$0" -> "epoch_loss(28)$0"	[label=epoch_log];
	"iou(28)$0" -> "epoch(28)"	[label=epoch_log];
	"iou(28)$0" -> "phase(28)"	[label=epoch_log];
	"iou(28)$0" -> "start(28)$0"	[label=epoch_log];
	"iou(28)$0" -> "meter(28)$1"	[label=epoch_log];
	"iou(28)$0" -> "epoch_loss(28)$0"	[label=epoch_log];
	"self(28)$4" -> "self(28)$3"	[label=append];
	"self(28)$4" -> "epoch_loss(28)$0"	[label=append];
	"self(28)$5" -> "dice(28)$0"	[label=append];
	"self(28)$5" -> "self(28)$4"	[label=append];
	"self(28)$6" -> "iou(28)$0"	[label=append];
	"self(28)$6" -> "self(28)$5"	[label=append];
	"torch(28)$0" -> "torch(28)"	[label=empty_cache];
	"self(29)" -> "start[0]"	[label=_argToVar];
	"epoch(29)" -> "self(29)"	[label=iteratorOf];
	"epoch(29)" -> "range(29)"	[label=iteratorOf];
	"self(29)$0" -> "self(29)"	[label=iterate];
	"self(29)$0" -> "epoch(29)"	[label=iterate];
	"self(29)$0" -> "train(29)"	[label=iterate];
	"state(29)$0" -> "epoch(29)"	[label=assignedFrom];
	"state(29)$0" -> "self(29)$0"	[label=assignedFrom];
	"state(29)$0" -> "best_loss(29)"	[label=assignedFrom];
	"state(29)$0" -> "state_dict(29)"	[label=assignedFrom];
	"state(29)$0" -> "optimizer(29)"	[label=assignedFrom];
	"val_loss(29)$0" -> "epoch(29)"	[label=iterate];
	"val_loss(29)$0" -> "self(29)$0"	[label=iterate];
	"val_loss(29)$0" -> "val(29)"	[label=iterate];
	"self(29)$1" -> "self(29)$0"	[label=step];
	"self(29)$1" -> "val_loss(29)$0"	[label=step];
	"print[405/16]" -> "******** New optimal found, saving state ********(29)"	[label=print];
	"state(29)$1" -> "state(29)$0"	[label=assignedFrom];
	"state(29)$1" -> "val_loss(29)$0"	[label=assignedFrom];
	"self(29)$2" -> "val_loss(29)$0"	[label=assignedFrom];
	"self(29)$2" -> "self(29)$1"	[label=assignedFrom];
	"torch(29)$0" -> "state(29)$1"	[label=save];
	"torch(29)$0" -> "torch(29)"	[label=save];
	"torch(29)$0" -> "./model.pth(29)"	[label=save];
	"model_trainer(0)$0" -> "model(0)$0"	[label=Trainer];
	"model_trainer(0)$1" -> "model_trainer(0)$0"	[label=start];
	"losses(0)$0" -> "model_trainer(0)$1"	[label=assignedFrom];
	"dice_scores(0)$0" -> "model_trainer(0)$1"	[label=assignedFrom];
	"iou_scores(0)$0" -> "model_trainer(0)$1"	[label=assignedFrom];
	"scores(30)" -> "plot[0]"	[label=_argToVar];
	"name(30)" -> "plot[1]"	[label=_argToVar];
	"plt(30)$0" -> "plt(30)"	[label=figure];
	"plt(30)$1" -> "scores(30)"	[label=plot];
	"plt(30)$1" -> "plt(30)$0"	[label=plot];
	"plt(30)$1" -> "range(30)"	[label=plot];
	"plt(30)$1" -> "len(30)"	[label=plot];
	"plt(30)$1" -> "train(30)"	[label=plot];
	"plt(30)$2" -> "scores(30)"	[label=plot];
	"plt(30)$2" -> "plt(30)$1"	[label=plot];
	"plt(30)$2" -> "range(30)"	[label=plot];
	"plt(30)$2" -> "len(30)"	[label=plot];
	"plt(30)$2" -> "train(30)"	[label=plot];
	"plt(30)$2" -> "val(30)"	[label=plot];
	"plt(30)$3" -> "name(30)"	[label=title];
	"plt(30)$3" -> "plt(30)$2"	[label=title];
	"plt(30)$3" -> " plot(30)"	[label=title];
	"plt(30)$4" -> "plt(30)$3"	[label=xlabel];
	"plt(30)$4" -> "Epoch(30)"	[label=xlabel];
	"plt(30)$5" -> "name(30)"	[label=ylabel];
	"plt(30)$5" -> "plt(30)$4"	[label=ylabel];
	"plt(30)$6" -> "plt(30)$5"	[label=legend];
	"plt(30)$7" -> "plt(30)$6"	[label=show];
	"plot[424/0]" -> "losses(0)$0"	[label=plot];
	"plot[424/0]" -> "BCE loss(0)"	[label=plot];
	"BCE loss(0)" -> "unet-with-resnet34-encoder-pytorch.ipynb"	[label=appearsIn];
	"plot[425/0]" -> "dice_scores(0)$0"	[label=plot];
	"plot[425/0]" -> "Dice score(0)"	[label=plot];
	"Dice score(0)" -> "unet-with-resnet34-encoder-pytorch.ipynb"	[label=appearsIn];
	"plot[426/0]" -> "iou_scores(0)$0"	[label=plot];
	"plot[426/0]" -> "IoU score(0)"	[label=plot];
	"IoU score(0)" -> "unet-with-resnet34-encoder-pytorch.ipynb"	[label=appearsIn];
	"self(32)" -> "__init__[0]"	[label=_argToVar];
	"root(32)" -> "__init__[1]"	[label=_argToVar];
	"df(32)" -> "__init__[2]"	[label=_argToVar];
	"size(32)" -> "__init__[3]"	[label=_argToVar];
	"mean(32)" -> "__init__[4]"	[label=_argToVar];
	"std(32)" -> "__init__[5]"	[label=_argToVar];
	"tta(32)" -> "__init__[6]"	[label=_argToVar];
	"self(32)$0" -> "self(32)"	[label=assignedFrom];
	"self(32)$0" -> "root(32)"	[label=assignedFrom];
	"self(32)$1" -> "size(32)"	[label=assignedFrom];
	"self(32)$1" -> "self(32)$0"	[label=assignedFrom];
	"self(32)$2" -> "df(32)"	[label=list];
	"self(32)$2" -> "self(32)$1"	[label=list];
	"self(32)$2" -> "ImageId(32)"	[label=list];
	"self(32)$3" -> "self(32)$2"	[label=len];
	"self(32)$4" -> "self(32)$3"	[label=Compose];
	"self(32)$4" -> "[<_ast.Call object at 0x7fd500822a30>, <_ast.Call object at 0x7fd500822c40>, <_ast.Call object at 0x7fd500822d00>](32)"	[label=Compose];
	"self(33)" -> "__getitem__[0]"	[label=_argToVar];
	"idx(33)" -> "__getitem__[1]"	[label=_argToVar];
	"fname(33)$0" -> "self(33)"	[label=assignedFrom];
	"fname(33)$0" -> "idx(33)"	[label=assignedFrom];
	"path(33)$0" -> "self(33)"	[label=join];
	"path(33)$0" -> "fname(33)$0"	[label=join];
	"path(33)$0" -> "os(33)"	[label=join];
	"path(33)$0" -> ".png(33)"	[label=join];
	"image(33)$0" -> "path(33)$0"	[label=imread];
	"image(33)$0" -> "cv2(33)"	[label=imread];
	"images(33)$0" -> "self(33)"	[label=assignedFrom];
	"images(33)$0" -> "image(33)$0"	[label=assignedFrom];
	"self(34)" -> "__len__[0]"	[label=_argToVar];
	"probability(35)" -> "post_process[0]"	[label=_argToVar];
	"threshold(35)" -> "post_process[1]"	[label=_argToVar];
	"min_size(35)" -> "post_process[2]"	[label=_argToVar];
	"mask(35)$0" -> "probability(35)"	[label=assignedFrom];
	"mask(35)$0" -> "threshold(35)"	[label=assignedFrom];
	"mask(35)$0" -> "cv2(35)"	[label=assignedFrom];
	"mask(35)$0" -> "1(35)"	[label=assignedFrom];
	"num_component(35)$0" -> "mask(35)$0"	[label=connectedComponents];
	"num_component(35)$0" -> "cv2(35)"	[label=connectedComponents];
	"num_component(35)$0" -> "np(35)"	[label=connectedComponents];
	"component(35)$0" -> "mask(35)$0"	[label=connectedComponents];
	"component(35)$0" -> "cv2(35)"	[label=connectedComponents];
	"component(35)$0" -> "np(35)"	[label=connectedComponents];
	"predictions(35)$0" -> "np(35)"	[label=zeros];
	"predictions(35)$0" -> "1024(35)"	[label=zeros];
	"num(35)$0" -> "0(35)"	[label=assignedFrom];
	"c(35)" -> "1(35)"	[label=iteratorOf];
	"c(35)" -> "num_component(35)$0"	[label=iteratorOf];
	"c(35)" -> "range(35)"	[label=iteratorOf];
	"p(35)$0" -> "component(35)$0"	[label=assignedFrom];
	"p(35)$0" -> "c(35)"	[label=assignedFrom];
	"predictions(35)$1" -> "1(35)"	[label=assignedFrom];
	"predictions(35)$1" -> "predictions(35)$0"	[label=assignedFrom];
	"num(35)$1" -> "1(35)"	[label=Add];
	"num(35)$1" -> "num(35)$0"	[label=Add];
	"size(0)$0" -> "512(0)"	[label=assignedFrom];
	"mean(0)$0" -> "0.485(0)"	[label=assignedFrom];
	"mean(0)$0" -> "0.456(0)"	[label=assignedFrom];
	"mean(0)$0" -> "0.406(0)"	[label=assignedFrom];
	"std(0)$0" -> "0.229(0)"	[label=assignedFrom];
	"std(0)$0" -> "0.224(0)"	[label=assignedFrom];
	"std(0)$0" -> "0.225(0)"	[label=assignedFrom];
	"8(0)" -> "unet-with-resnet34-encoder-pytorch.ipynb"	[label=appearsIn];
	"num_workers(0)$0" -> "8(0)"	[label=assignedFrom];
	"batch_size(0)$0" -> "16(0)"	[label=assignedFrom];
	"0.5(0)" -> "unet-with-resnet34-encoder-pytorch.ipynb"	[label=appearsIn];
	"best_threshold(0)$0" -> "0.5(0)"	[label=assignedFrom];
	"3500(0)" -> "unet-with-resnet34-encoder-pytorch.ipynb"	[label=appearsIn];
	"min_size(0)$0" -> "3500(0)"	[label=assignedFrom];
	"device(0)$0" -> "torch(0)"	[label=device];
	"device(0)$0" -> "cuda:0(0)"	[label=device];
	"cuda:0(0)" -> "unet-with-resnet34-encoder-pytorch.ipynb"	[label=appearsIn];
	"df(0)$0" -> "pd(0)"	[label=read_csv];
	"df(0)$0" -> "sample_submission_path(0)$0"	[label=read_csv];
	"TestDataset(0)" -> "unet-with-resnet34-encoder-pytorch.ipynb"	[label=appearsIn];
	"False(0)" -> "unet-with-resnet34-encoder-pytorch.ipynb"	[label=appearsIn];
	"True(0)" -> "unet-with-resnet34-encoder-pytorch.ipynb"	[label=appearsIn];
	"model(0)$1" -> "model_trainer(0)$1"	[label=assignedFrom];
	"model(0)$2" -> "model(0)$1"	[label=eval];
	"state(0)$0" -> "torch(0)"	[label=load];
	"state(0)$0" -> "./model.pth(0)"	[label=load];
	"state(0)$0" -> "storage(0)"	[label=load];
	"./model.pth(0)" -> "unet-with-resnet34-encoder-pytorch.ipynb"	[label=appearsIn];
	"storage(0)" -> "unet-with-resnet34-encoder-pytorch.ipynb"	[label=appearsIn];
	"model(0)$3" -> "model(0)$2"	[label=load_state_dict];
	"model(0)$3" -> "state(0)$0"	[label=load_state_dict];
	"model(0)$3" -> "state_dict(0)"	[label=load_state_dict];
	"state_dict(0)" -> "unet-with-resnet34-encoder-pytorch.ipynb"	[label=appearsIn];
	"[](0)" -> "unet-with-resnet34-encoder-pytorch.ipynb"	[label=appearsIn];
	"encoded_pixels(0)$0" -> "[](0)"	[label=assignedFrom];
	"i(0)" -> "unet-with-resnet34-encoder-pytorch.ipynb"	[label=appearsIn];
	"i(0)" -> "tqdm(0)"	[label=iteratorOf];
	"i(0)" -> "testset(0)$0"	[label=iteratorOf];
	"i(0)" -> "enumerate(0)"	[label=iteratorOf];
	"preds(0)$0" -> "torch(0)"	[label=sigmoid];
	"preds(0)$0" -> "batch(0)$0"	[label=sigmoid];
	"preds(0)$0" -> "device(0)$0"	[label=sigmoid];
	"preds(0)$0" -> "model(0)$3"	[label=sigmoid];
	"preds(0)$1" -> "0(0)"	[label=assignedFrom];
	"preds(0)$1" -> "preds(0)$0"	[label=assignedFrom];
	"probability(0)" -> "unet-with-resnet34-encoder-pytorch.ipynb"	[label=appearsIn];
	"probability(0)" -> "preds(0)$1"	[label=iteratorOf];
	"probability(0)$0" -> "cv2(0)"	[label=resize];
	"probability(0)$0" -> "probability(0)$0"	[label=resize];
	"probability(0)$0" -> "1024(0)"	[label=resize];
	"1024(0)" -> "unet-with-resnet34-encoder-pytorch.ipynb"	[label=appearsIn];
	"predict(0)$0" -> "best_threshold(0)$0"	[label=post_process];
	"predict(0)$0" -> "min_size(0)$0"	[label=post_process];
	"predict(0)$0" -> "probability(0)$0"	[label=post_process];
	"num_predict(0)$0" -> "best_threshold(0)$0"	[label=post_process];
	"num_predict(0)$0" -> "min_size(0)$0"	[label=post_process];
	"num_predict(0)$0" -> "probability(0)$0"	[label=post_process];
	"encoded_pixels(0)$1" -> "encoded_pixels(0)$0"	[label=append];
	"encoded_pixels(0)$1" -> "-1(0)"	[label=append];
	"-1(0)" -> "unet-with-resnet34-encoder-pytorch.ipynb"	[label=appearsIn];
	"r(0)$0" -> "predict(0)$0"	[label=run_length_encode];
	"encoded_pixels(0)$2" -> "encoded_pixels(0)$1"	[label=append];
	"encoded_pixels(0)$2" -> "r(0)$0"	[label=append];
	"df(0)$1" -> "df(0)$0"	[label=assignedFrom];
	"df(0)$1" -> "encoded_pixels(0)$2"	[label=assignedFrom];
	"df(0)$2" -> "df(0)$1"	[label=to_csv];
	"df(0)$2" -> "submission.csv(0)"	[label=to_csv];
	"submission.csv(0)" -> "unet-with-resnet34-encoder-pytorch.ipynb"	[label=appearsIn];
	"df(0)$3" -> "df(0)$2"	[label=head];
}
