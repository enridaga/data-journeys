digraph "" {
	pandas -> "bert-base-tf2-0-minimalistic.ipynb"	[label=importedBy];
	"pd(0)" -> pandas	[label=assignedFrom];
	"pd(0)" -> "bert-base-tf2-0-minimalistic.ipynb"	[label=appearsIn];
	numpy -> "bert-base-tf2-0-minimalistic.ipynb"	[label=importedBy];
	"np(0)" -> "bert-base-tf2-0-minimalistic.ipynb"	[label=appearsIn];
	"np(0)" -> numpy	[label=assignedFrom];
	"sklearn.model_selection" -> "bert-base-tf2-0-minimalistic.ipynb"	[label=importedBy];
	GroupKFold -> "sklearn.model_selection"	[label=importedBy];
	"GroupKFold(0)" -> "bert-base-tf2-0-minimalistic.ipynb"	[label=appearsIn];
	"GroupKFold(0)" -> GroupKFold	[label=assignedFrom];
	"matplotlib.pyplot" -> "bert-base-tf2-0-minimalistic.ipynb"	[label=importedBy];
	"plt(0)" -> "bert-base-tf2-0-minimalistic.ipynb"	[label=appearsIn];
	"plt(0)" -> "matplotlib.pyplot"	[label=assignedFrom];
	"tqdm.notebook" -> "bert-base-tf2-0-minimalistic.ipynb"	[label=importedBy];
	tqdm -> "tqdm.notebook"	[label=importedBy];
	"tqdm(0)" -> "bert-base-tf2-0-minimalistic.ipynb"	[label=appearsIn];
	"tqdm(0)" -> tqdm	[label=assignedFrom];
	tensorflow_hub -> "bert-base-tf2-0-minimalistic.ipynb"	[label=importedBy];
	"hub(0)" -> "bert-base-tf2-0-minimalistic.ipynb"	[label=appearsIn];
	"hub(0)" -> tensorflow_hub	[label=assignedFrom];
	tensorflow -> "bert-base-tf2-0-minimalistic.ipynb"	[label=importedBy];
	"tf(0)" -> "bert-base-tf2-0-minimalistic.ipynb"	[label=appearsIn];
	"tf(0)" -> tensorflow	[label=assignedFrom];
	bert_tokenization -> "bert-base-tf2-0-minimalistic.ipynb"	[label=importedBy];
	"tokenization(0)" -> "bert-base-tf2-0-minimalistic.ipynb"	[label=appearsIn];
	"tokenization(0)" -> bert_tokenization	[label=assignedFrom];
	"tensorflow.keras.backend" -> "bert-base-tf2-0-minimalistic.ipynb"	[label=importedBy];
	"K(0)" -> "bert-base-tf2-0-minimalistic.ipynb"	[label=appearsIn];
	"K(0)" -> "tensorflow.keras.backend"	[label=assignedFrom];
	gc -> "bert-base-tf2-0-minimalistic.ipynb"	[label=importedBy];
	"gc(0)" -> "bert-base-tf2-0-minimalistic.ipynb"	[label=appearsIn];
	"gc(0)" -> gc	[label=assignedFrom];
	os -> "bert-base-tf2-0-minimalistic.ipynb"	[label=importedBy];
	"os(0)" -> "bert-base-tf2-0-minimalistic.ipynb"	[label=appearsIn];
	"os(0)" -> os	[label=assignedFrom];
	"scipy.stats" -> "bert-base-tf2-0-minimalistic.ipynb"	[label=importedBy];
	spearmanr -> "scipy.stats"	[label=importedBy];
	"spearmanr(0)" -> "bert-base-tf2-0-minimalistic.ipynb"	[label=appearsIn];
	"spearmanr(0)" -> spearmanr	[label=assignedFrom];
	math -> "bert-base-tf2-0-minimalistic.ipynb"	[label=importedBy];
	floor -> math	[label=importedBy];
	"floor(0)" -> "bert-base-tf2-0-minimalistic.ipynb"	[label=appearsIn];
	"floor(0)" -> floor	[label=assignedFrom];
	ceil -> math	[label=importedBy];
	"ceil(0)" -> "bert-base-tf2-0-minimalistic.ipynb"	[label=appearsIn];
	"ceil(0)" -> ceil	[label=assignedFrom];
	"np(0)$0" -> "np(0)"	[label=set_printoptions];
	"../input/google-quest-challenge/(0)" -> "bert-base-tf2-0-minimalistic.ipynb"	[label=appearsIn];
	"PATH(0)$0" -> "../input/google-quest-challenge/(0)"	[label=assignedFrom];
	"../input/bert-base-from-tfhub/bert_en_uncased_L-12_H-768_A-12(0)" -> "bert-base-tf2-0-minimalistic.ipynb"	[label=appearsIn];
	"BERT_PATH(0)$0" -> "../input/bert-base-from-tfhub/bert_en_uncased_L-12_H-768_A-12(0)"	[label=assignedFrom];
	"tokenizer(0)$0" -> "tokenization(0)"	[label=FullTokenizer];
	"tokenizer(0)$0" -> "BERT_PATH(0)$0"	[label=FullTokenizer];
	"tokenizer(0)$0" -> "/assets/vocab.txt(0)"	[label=FullTokenizer];
	"tokenizer(0)$0" -> "True(0)"	[label=FullTokenizer];
	"/assets/vocab.txt(0)" -> "bert-base-tf2-0-minimalistic.ipynb"	[label=appearsIn];
	"True(0)" -> "bert-base-tf2-0-minimalistic.ipynb"	[label=appearsIn];
	"512(0)" -> "bert-base-tf2-0-minimalistic.ipynb"	[label=appearsIn];
	"MAX_SEQUENCE_LENGTH(0)$0" -> "512(0)"	[label=assignedFrom];
	"df_train(0)$0" -> "pd(0)"	[label=read_csv];
	"df_train(0)$0" -> "PATH(0)$0"	[label=read_csv];
	"df_train(0)$0" -> "train.csv(0)"	[label=read_csv];
	"train.csv(0)" -> "bert-base-tf2-0-minimalistic.ipynb"	[label=appearsIn];
	"df_test(0)$0" -> "pd(0)"	[label=read_csv];
	"df_test(0)$0" -> "PATH(0)$0"	[label=read_csv];
	"df_test(0)$0" -> "test.csv(0)"	[label=read_csv];
	"test.csv(0)" -> "bert-base-tf2-0-minimalistic.ipynb"	[label=appearsIn];
	"df_sub(0)$0" -> "pd(0)"	[label=read_csv];
	"df_sub(0)$0" -> "PATH(0)$0"	[label=read_csv];
	"df_sub(0)$0" -> "sample_submission.csv(0)"	[label=read_csv];
	"sample_submission.csv(0)" -> "bert-base-tf2-0-minimalistic.ipynb"	[label=appearsIn];
	"train shape =(0)" -> "bert-base-tf2-0-minimalistic.ipynb"	[label=appearsIn];
	"print[25/0]" -> "df_train(0)$0"	[label=print];
	"print[25/0]" -> "train shape =(0)"	[label=print];
	"test shape =(0)" -> "bert-base-tf2-0-minimalistic.ipynb"	[label=appearsIn];
	"print[26/0]" -> "df_test(0)$0"	[label=print];
	"print[26/0]" -> "test shape =(0)"	[label=print];
	"output_categories(0)$0" -> "df_train(0)$0"	[label=list];
	"output_categories(0)$0" -> "11(0)"	[label=list];
	"11(0)" -> "bert-base-tf2-0-minimalistic.ipynb"	[label=appearsIn];
	"input_categories(0)$0" -> "df_train(0)$0"	[label=list];
	"input_categories(0)$0" -> "[<_ast.Constant object at 0x7fd500999e80>, <_ast.Constant object at 0x7fd500999f70>, <_ast.Constant object at 0x7fd5009996d0>](0)"	[label=list];
	"[<_ast.Constant object at 0x7fd500999e80>, <_ast.Constant object at 0x7fd500999f70>, <_ast.Constant object at 0x7fd5009996d0>](0)" -> "bert-base-tf2-0-minimalistic.ipynb"	[label=appearsIn];
	"
output categories:
	(0)" -> "bert-base-tf2-0-minimalistic.ipynb"	[label=appearsIn];
	"print[30/0]" -> "output_categories(0)$0"	[label=print];
	"print[30/0]" -> "
output categories:
	(0)"	[label=print];
	"
input categories:
	(0)" -> "bert-base-tf2-0-minimalistic.ipynb"	[label=appearsIn];
	"print[31/0]" -> "input_categories(0)$0"	[label=print];
	"print[31/0]" -> "
input categories:
	(0)"	[label=print];
	"tokens(1)" -> "_get_masks[0]"	[label=_argToVar];
	"max_seq_length(1)" -> "_get_masks[1]"	[label=_argToVar];
	"tokens(2)" -> "_get_segments[0]"	[label=_argToVar];
	"max_seq_length(2)" -> "_get_segments[1]"	[label=_argToVar];
	"segments(2)$0" -> "[](2)"	[label=assignedFrom];
	"first_sep(2)$0" -> "True(2)"	[label=assignedFrom];
	"current_segment_id(2)$0" -> "0(2)"	[label=assignedFrom];
	"token(2)" -> "tokens(2)"	[label=iteratorOf];
	"segments(2)$1" -> "segments(2)$0"	[label=append];
	"segments(2)$1" -> "current_segment_id(2)$0"	[label=append];
	"first_sep(2)$1" -> "False(2)"	[label=assignedFrom];
	"current_segment_id(2)$1" -> "1(2)"	[label=assignedFrom];
	"tokens(3)" -> "_get_ids[0]"	[label=_argToVar];
	"tokenizer(3)" -> "_get_ids[1]"	[label=_argToVar];
	"max_seq_length(3)" -> "_get_ids[2]"	[label=_argToVar];
	"token_ids(3)$0" -> "tokens(3)"	[label=convert_tokens_to_ids];
	"token_ids(3)$0" -> "tokenizer(3)"	[label=convert_tokens_to_ids];
	"input_ids(3)$0" -> "max_seq_length(3)"	[label=Add];
	"input_ids(3)$0" -> "token_ids(3)$0"	[label=Add];
	"input_ids(3)$0" -> "[<_ast.Constant object at 0x7fd4902abcd0>](3)"	[label=Add];
	"input_ids(3)$0" -> "len(3)"	[label=Add];
	"title(4)" -> "_trim_input[0]"	[label=_argToVar];
	"question(4)" -> "_trim_input[1]"	[label=_argToVar];
	"answer(4)" -> "_trim_input[2]"	[label=_argToVar];
	"max_sequence_length(4)" -> "_trim_input[3]"	[label=_argToVar];
	"t_max_len(4)" -> "_trim_input[4]"	[label=_argToVar];
	"q_max_len(4)" -> "_trim_input[5]"	[label=_argToVar];
	"a_max_len(4)" -> "_trim_input[6]"	[label=_argToVar];
	"t(4)$0" -> "title(4)"	[label=tokenize];
	"t(4)$0" -> "tokenizer(4)"	[label=tokenize];
	"q(4)$0" -> "question(4)"	[label=tokenize];
	"q(4)$0" -> "tokenizer(4)"	[label=tokenize];
	"a(4)$0" -> "answer(4)"	[label=tokenize];
	"a(4)$0" -> "tokenizer(4)"	[label=tokenize];
	"t_len(4)$0" -> "t(4)$0"	[label=len];
	"q_len(4)$0" -> "q(4)$0"	[label=len];
	"a_len(4)$0" -> "a(4)$0"	[label=len];
	"t_new_len(4)$0" -> "t_len(4)$0"	[label=assignedFrom];
	"a_max_len(4)$0" -> "t_max_len(4)"	[label=Add];
	"a_max_len(4)$0" -> "a_max_len(4)"	[label=Add];
	"a_max_len(4)$0" -> "t_len(4)$0"	[label=Add];
	"a_max_len(4)$0" -> "floor(4)"	[label=Add];
	"a_max_len(4)$0" -> "2(4)"	[label=Add];
	"q_max_len(4)$0" -> "t_max_len(4)"	[label=Add];
	"q_max_len(4)$0" -> "q_max_len(4)"	[label=Add];
	"q_max_len(4)$0" -> "t_len(4)$0"	[label=Add];
	"q_max_len(4)$0" -> "2(4)"	[label=Add];
	"q_max_len(4)$0" -> "ceil(4)"	[label=Add];
	"t_new_len(4)$1" -> "t_max_len(4)"	[label=assignedFrom];
	"a_new_len(4)$0" -> "a_len(4)$0"	[label=assignedFrom];
	"q_new_len(4)$0" -> "a_len(4)$0"	[label=Add];
	"q_new_len(4)$0" -> "a_max_len(4)$0"	[label=Add];
	"q_new_len(4)$0" -> "q_max_len(4)$0"	[label=Add];
	"a_new_len(4)$1" -> "q_len(4)$0"	[label=Add];
	"a_new_len(4)$1" -> "a_max_len(4)$0"	[label=Add];
	"a_new_len(4)$1" -> "q_max_len(4)$0"	[label=Add];
	"q_new_len(4)$1" -> "q_len(4)$0"	[label=assignedFrom];
	"a_new_len(4)$2" -> "a_max_len(4)$0"	[label=assignedFrom];
	"q_new_len(4)$2" -> "q_max_len(4)$0"	[label=assignedFrom];
	"t(4)$1" -> "t(4)$0"	[label=assignedFrom];
	"t(4)$1" -> "t_new_len(4)$1"	[label=assignedFrom];
	"q(4)$1" -> "q(4)$0"	[label=assignedFrom];
	"q(4)$1" -> "q_new_len(4)$2"	[label=assignedFrom];
	"a(4)$1" -> "a(4)$0"	[label=assignedFrom];
	"a(4)$1" -> "a_new_len(4)$2"	[label=assignedFrom];
	"title(5)" -> "_convert_to_bert_inputs[0]"	[label=_argToVar];
	"question(5)" -> "_convert_to_bert_inputs[1]"	[label=_argToVar];
	"answer(5)" -> "_convert_to_bert_inputs[2]"	[label=_argToVar];
	"tokenizer(5)" -> "_convert_to_bert_inputs[3]"	[label=_argToVar];
	"max_sequence_length(5)" -> "_convert_to_bert_inputs[4]"	[label=_argToVar];
	"stoken(5)$0" -> "title(5)"	[label=Add];
	"stoken(5)$0" -> "question(5)"	[label=Add];
	"stoken(5)$0" -> "answer(5)"	[label=Add];
	"stoken(5)$0" -> "[<_ast.Constant object at 0x7fd4c04cc940>](5)"	[label=Add];
	"stoken(5)$0" -> "[<_ast.Constant object at 0x7fd4c04cc070>](5)"	[label=Add];
	"stoken(5)$0" -> "[<_ast.Constant object at 0x7fd4c04ccf40>](5)"	[label=Add];
	"stoken(5)$0" -> "[<_ast.Constant object at 0x7fd50085bd30>](5)"	[label=Add];
	"input_ids(5)$0" -> "tokenizer(5)"	[label=_get_ids];
	"input_ids(5)$0" -> "max_sequence_length(5)"	[label=_get_ids];
	"input_ids(5)$0" -> "stoken(5)$0"	[label=_get_ids];
	"input_masks(5)$0" -> "max_sequence_length(5)"	[label=_get_masks];
	"input_masks(5)$0" -> "stoken(5)$0"	[label=_get_masks];
	"input_segments(5)$0" -> "max_sequence_length(5)"	[label=_get_segments];
	"input_segments(5)$0" -> "stoken(5)$0"	[label=_get_segments];
	"df(6)" -> "compute_input_arays[0]"	[label=_argToVar];
	"columns(6)" -> "compute_input_arays[1]"	[label=_argToVar];
	"tokenizer(6)" -> "compute_input_arays[2]"	[label=_argToVar];
	"max_sequence_length(6)" -> "compute_input_arays[3]"	[label=_argToVar];
	"input_ids(6)$0" -> "[](6)"	[label=assignedFrom];
	"input_masks(6)$0" -> "[](6)"	[label=assignedFrom];
	"input_segments(6)$0" -> "[](6)"	[label=assignedFrom];
	"_(6)" -> "df(6)"	[label=iteratorOf];
	"_(6)" -> "columns(6)"	[label=iteratorOf];
	"_(6)" -> "tqdm(6)"	[label=iteratorOf];
	"instance(6)" -> "df(6)"	[label=iteratorOf];
	"instance(6)" -> "columns(6)"	[label=iteratorOf];
	"instance(6)" -> "tqdm(6)"	[label=iteratorOf];
	"t(6)$0" -> "instance(6)"	[label=assignedFrom];
	"q(6)$0" -> "instance(6)"	[label=assignedFrom];
	"a(6)$0" -> "instance(6)"	[label=assignedFrom];
	"t(6)$1" -> "max_sequence_length(6)"	[label=_trim_input];
	"t(6)$1" -> "t(6)$0"	[label=_trim_input];
	"t(6)$1" -> "q(6)$1"	[label=_trim_input];
	"t(6)$1" -> "a(6)$1"	[label=_trim_input];
	"q(6)$1" -> "max_sequence_length(6)"	[label=_trim_input];
	"q(6)$1" -> "t(6)$0"	[label=_trim_input];
	"q(6)$1" -> "q(6)$1"	[label=_trim_input];
	"q(6)$1" -> "a(6)$1"	[label=_trim_input];
	"a(6)$1" -> "max_sequence_length(6)"	[label=_trim_input];
	"a(6)$1" -> "t(6)$0"	[label=_trim_input];
	"a(6)$1" -> "q(6)$1"	[label=_trim_input];
	"a(6)$1" -> "a(6)$1"	[label=_trim_input];
	"ids(6)$0" -> "tokenizer(6)"	[label=_convert_to_bert_inputs];
	"ids(6)$0" -> "max_sequence_length(6)"	[label=_convert_to_bert_inputs];
	"ids(6)$0" -> "t(6)$1"	[label=_convert_to_bert_inputs];
	"ids(6)$0" -> "q(6)$1"	[label=_convert_to_bert_inputs];
	"ids(6)$0" -> "a(6)$1"	[label=_convert_to_bert_inputs];
	"masks(6)$0" -> "tokenizer(6)"	[label=_convert_to_bert_inputs];
	"masks(6)$0" -> "max_sequence_length(6)"	[label=_convert_to_bert_inputs];
	"masks(6)$0" -> "t(6)$1"	[label=_convert_to_bert_inputs];
	"masks(6)$0" -> "q(6)$1"	[label=_convert_to_bert_inputs];
	"masks(6)$0" -> "a(6)$1"	[label=_convert_to_bert_inputs];
	"segments(6)$0" -> "tokenizer(6)"	[label=_convert_to_bert_inputs];
	"segments(6)$0" -> "max_sequence_length(6)"	[label=_convert_to_bert_inputs];
	"segments(6)$0" -> "t(6)$1"	[label=_convert_to_bert_inputs];
	"segments(6)$0" -> "q(6)$1"	[label=_convert_to_bert_inputs];
	"segments(6)$0" -> "a(6)$1"	[label=_convert_to_bert_inputs];
	"input_ids(6)$1" -> "input_ids(6)$0"	[label=append];
	"input_ids(6)$1" -> "ids(6)$0"	[label=append];
	"input_masks(6)$1" -> "input_masks(6)$0"	[label=append];
	"input_masks(6)$1" -> "masks(6)$0"	[label=append];
	"input_segments(6)$1" -> "input_segments(6)$0"	[label=append];
	"input_segments(6)$1" -> "segments(6)$0"	[label=append];
	"df(7)" -> "compute_output_arrays[0]"	[label=_argToVar];
	"columns(7)" -> "compute_output_arrays[1]"	[label=_argToVar];
	"trues(8)" -> "compute_spearmanr[0]"	[label=_argToVar];
	"preds(8)" -> "compute_spearmanr[1]"	[label=_argToVar];
	"rhos(8)$0" -> "[](8)"	[label=assignedFrom];
	"col_trues(8)" -> "trues(8)"	[label=iteratorOf];
	"col_trues(8)" -> "preds(8)"	[label=iteratorOf];
	"col_trues(8)" -> "zip(8)"	[label=iteratorOf];
	"col_pred(8)" -> "trues(8)"	[label=iteratorOf];
	"col_pred(8)" -> "preds(8)"	[label=iteratorOf];
	"col_pred(8)" -> "zip(8)"	[label=iteratorOf];
	"rhos(8)$1" -> "rhos(8)$0"	[label=append];
	"rhos(8)$1" -> "col_trues(8)"	[label=append];
	"rhos(8)$1" -> "col_pred(8)"	[label=append];
	"rhos(8)$1" -> "spearmanr(8)"	[label=append];
	"rhos(8)$1" -> "np(8)"	[label=append];
	"rhos(8)$1" -> "0(8)"	[label=append];
	"rhos(8)$1" -> "1e-07(8)"	[label=append];
	"self(10)" -> "__init__[0]"	[label=_argToVar];
	"valid_data(10)" -> "__init__[1]"	[label=_argToVar];
	"test_data(10)" -> "__init__[2]"	[label=_argToVar];
	"batch_size(10)" -> "__init__[3]"	[label=_argToVar];
	"fold(10)" -> "__init__[4]"	[label=_argToVar];
	"self(10)$0" -> "self(10)"	[label=assignedFrom];
	"self(10)$0" -> "valid_data(10)"	[label=assignedFrom];
	"self(10)$0" -> "0(10)"	[label=assignedFrom];
	"self(10)$1" -> "valid_data(10)"	[label=assignedFrom];
	"self(10)$1" -> "self(10)$0"	[label=assignedFrom];
	"self(10)$1" -> "1(10)"	[label=assignedFrom];
	"self(10)$2" -> "test_data(10)"	[label=assignedFrom];
	"self(10)$2" -> "self(10)$1"	[label=assignedFrom];
	"self(10)$3" -> "batch_size(10)"	[label=assignedFrom];
	"self(10)$3" -> "self(10)$2"	[label=assignedFrom];
	"self(10)$4" -> "fold(10)"	[label=assignedFrom];
	"self(10)$4" -> "self(10)$3"	[label=assignedFrom];
	"self(11)" -> "on_train_begin[0]"	[label=_argToVar];
	"logs(11)" -> "on_train_begin[1]"	[label=_argToVar];
	"self(11)$0" -> "self(11)"	[label=assignedFrom];
	"self(11)$0" -> "[](11)"	[label=assignedFrom];
	"self(11)$1" -> "self(11)$0"	[label=assignedFrom];
	"self(11)$1" -> "[](11)"	[label=assignedFrom];
	"self(12)" -> "on_epoch_end[0]"	[label=_argToVar];
	"epoch(12)" -> "on_epoch_end[1]"	[label=_argToVar];
	"logs(12)" -> "on_epoch_end[2]"	[label=_argToVar];
	"self(12)$0" -> "self(12)"	[label=append];
	"self(12)$0" -> "self(12)$0"	[label=append];
	"rho_val(12)$0" -> "self(12)$0"	[label=compute_spearmanr];
	"rho_val(12)$0" -> "np(12)"	[label=compute_spearmanr];
	"rho_val(12)$0" -> "0(12)"	[label=compute_spearmanr];
	"print[161/8]" -> "rho_val(12)$0"	[label=print];
	"print[161/8]" -> "
validation rho: \%.4f(12)"	[label=print];
	"self(12)$1" -> "epoch(12)"	[label=save_weights];
	"self(12)$1" -> "self(12)$0"	[label=save_weights];
	"self(12)$1" -> "bert-base-(12)"	[label=save_weights];
	"self(12)$1" -> "fold(12)"	[label=save_weights];
	"self(12)$1" -> "-(12)"	[label=save_weights];
	"self(12)$1" -> ".h5py(12)"	[label=save_weights];
	"self(12)$2" -> "self(12)$1"	[label=append];
	"self(12)$2" -> "self(12)$2"	[label=append];
	"input_word_ids(13)$0" -> "input_word_ids(13)$0"	[label=Input];
	"input_word_ids(13)$0" -> "tf(13)"	[label=Input];
	"input_word_ids(13)$0" -> "MAX_SEQUENCE_LENGTH(13)"	[label=Input];
	"input_masks(13)$0" -> "tf(13)"	[label=Input];
	"input_masks(13)$0" -> "MAX_SEQUENCE_LENGTH(13)"	[label=Input];
	"input_masks(13)$0" -> "input_masks(13)$0"	[label=Input];
	"input_segments(13)$0" -> "tf(13)"	[label=Input];
	"input_segments(13)$0" -> "MAX_SEQUENCE_LENGTH(13)"	[label=Input];
	"input_segments(13)$0" -> "input_segments(13)$0"	[label=Input];
	"bert_layer(13)$0" -> "hub(13)"	[label=KerasLayer];
	"bert_layer(13)$0" -> "BERT_PATH(13)"	[label=KerasLayer];
	"bert_layer(13)$0" -> "True(13)"	[label=KerasLayer];
	"_(13)$0" -> "[<_ast.Name object at 0x7fd50087f100>, <_ast.Name object at 0x7fd50087f0d0>, <_ast.Name object at 0x7fd50087f070>](13)"	[label=bert_layer];
	"sequence_output(13)$0" -> "[<_ast.Name object at 0x7fd50087f100>, <_ast.Name object at 0x7fd50087f0d0>, <_ast.Name object at 0x7fd50087f070>](13)"	[label=bert_layer];
	"x(13)$0" -> "tf(13)"	[label=assignedFrom];
	"x(13)$0" -> "sequence_output(13)$0"	[label=assignedFrom];
	"x(13)$1" -> "tf(13)"	[label=assignedFrom];
	"x(13)$1" -> "x(13)$1"	[label=assignedFrom];
	"x(13)$1" -> "0.2(13)"	[label=assignedFrom];
	"out(13)$0" -> "tf(13)"	[label=assignedFrom];
	"out(13)$0" -> "x(13)$1"	[label=assignedFrom];
	"out(13)$0" -> "30(13)"	[label=assignedFrom];
	"out(13)$0" -> "sigmoid(13)"	[label=assignedFrom];
	"out(13)$0" -> "dense_output(13)"	[label=assignedFrom];
	"model(13)$0" -> "tf(13)"	[label=Model];
	"model(13)$0" -> "out(13)$0"	[label=Model];
	"model(13)$0" -> "[<_ast.Name object at 0x7fd50087f9d0>, <_ast.Name object at 0x7fd50087fa00>, <_ast.Name object at 0x7fd50087faf0>](13)"	[label=Model];
	"model(14)" -> "train_and_predict[0]"	[label=_argToVar];
	"train_data(14)" -> "train_and_predict[1]"	[label=_argToVar];
	"valid_data(14)" -> "train_and_predict[2]"	[label=_argToVar];
	"test_data(14)" -> "train_and_predict[3]"	[label=_argToVar];
	"learning_rate(14)" -> "train_and_predict[4]"	[label=_argToVar];
	"epochs(14)" -> "train_and_predict[5]"	[label=_argToVar];
	"batch_size(14)" -> "train_and_predict[6]"	[label=_argToVar];
	"loss_function(14)" -> "train_and_predict[7]"	[label=_argToVar];
	"fold(14)" -> "train_and_predict[8]"	[label=_argToVar];
	"custom_callback(14)$0" -> "valid_data(14)"	[label=CustomCallback];
	"custom_callback(14)$0" -> "test_data(14)"	[label=CustomCallback];
	"custom_callback(14)$0" -> "batch_size(14)"	[label=CustomCallback];
	"custom_callback(14)$0" -> "0(14)"	[label=CustomCallback];
	"custom_callback(14)$0" -> "1(14)"	[label=CustomCallback];
	"custom_callback(14)$0" -> "None(14)"	[label=CustomCallback];
	"optimizer(14)$0" -> "learning_rate(14)"	[label=Adam];
	"optimizer(14)$0" -> "tf(14)"	[label=Adam];
	"model(14)$0" -> "model(14)"	[label=compile];
	"model(14)$1" -> "train_data(14)"	[label=fit];
	"model(14)$1" -> "0(14)"	[label=fit];
	"model(14)$1" -> "1(14)"	[label=fit];
	"model(14)$1" -> "model(14)$0"	[label=fit];
	"gkf(0)$0" -> "GroupKFold(0)"	[label=split];
	"gkf(0)$0" -> "df_train(0)$0"	[label=split];
	"gkf(0)$0" -> "5(0)"	[label=split];
	"5(0)" -> "bert-base-tf2-0-minimalistic.ipynb"	[label=appearsIn];
	"outputs(0)$0" -> "df_train(0)$0"	[label=compute_output_arrays];
	"outputs(0)$0" -> "output_categories(0)$0"	[label=compute_output_arrays];
	"inputs(0)$0" -> "tokenizer(0)$0"	[label=compute_input_arays];
	"inputs(0)$0" -> "MAX_SEQUENCE_LENGTH(0)$0"	[label=compute_input_arays];
	"inputs(0)$0" -> "df_train(0)$0"	[label=compute_input_arays];
	"inputs(0)$0" -> "input_categories(0)$0"	[label=compute_input_arays];
	"test_inputs(0)$0" -> "tokenizer(0)$0"	[label=compute_input_arays];
	"test_inputs(0)$0" -> "MAX_SEQUENCE_LENGTH(0)$0"	[label=compute_input_arays];
	"test_inputs(0)$0" -> "df_test(0)$0"	[label=compute_input_arays];
	"test_inputs(0)$0" -> "input_categories(0)$0"	[label=compute_input_arays];
	"[](0)" -> "bert-base-tf2-0-minimalistic.ipynb"	[label=appearsIn];
	"histories(0)$0" -> "[](0)"	[label=assignedFrom];
	"enumerate(0)" -> "bert-base-tf2-0-minimalistic.ipynb"	[label=appearsIn];
	"fold(0)" -> "bert-base-tf2-0-minimalistic.ipynb"	[label=appearsIn];
	"fold(0)" -> "gkf(0)$0"	[label=iteratorOf];
	"fold(0)" -> "enumerate(0)"	[label=iteratorOf];
	"train_idx(0)" -> "bert-base-tf2-0-minimalistic.ipynb"	[label=appearsIn];
	"train_idx(0)" -> "gkf(0)$0"	[label=iteratorOf];
	"train_idx(0)" -> "enumerate(0)"	[label=iteratorOf];
	"valid_idx(0)" -> "bert-base-tf2-0-minimalistic.ipynb"	[label=appearsIn];
	"valid_idx(0)" -> "gkf(0)$0"	[label=iteratorOf];
	"valid_idx(0)" -> "enumerate(0)"	[label=iteratorOf];
	"K(0)$0" -> "K(0)"	[label=clear_session];
	"train_inputs(0)$0" -> "inputs(0)$0"	[label=assignedFrom];
	"train_inputs(0)$0" -> "train_idx(0)"	[label=assignedFrom];
	"train_inputs(0)$0" -> "i(0)"	[label=assignedFrom];
	"train_inputs(0)$0" -> "range(0)"	[label=assignedFrom];
	"train_inputs(0)$0" -> "3(0)"	[label=assignedFrom];
	"i(0)" -> "bert-base-tf2-0-minimalistic.ipynb"	[label=appearsIn];
	"range(0)" -> "bert-base-tf2-0-minimalistic.ipynb"	[label=appearsIn];
	"3(0)" -> "bert-base-tf2-0-minimalistic.ipynb"	[label=appearsIn];
	"train_outputs(0)$0" -> "outputs(0)$0"	[label=assignedFrom];
	"train_outputs(0)$0" -> "train_idx(0)"	[label=assignedFrom];
	"valid_inputs(0)$0" -> "inputs(0)$0"	[label=assignedFrom];
	"valid_inputs(0)$0" -> "valid_idx(0)"	[label=assignedFrom];
	"valid_inputs(0)$0" -> "i(0)"	[label=assignedFrom];
	"valid_inputs(0)$0" -> "range(0)"	[label=assignedFrom];
	"valid_inputs(0)$0" -> "3(0)"	[label=assignedFrom];
	"valid_outputs(0)$0" -> "outputs(0)$0"	[label=assignedFrom];
	"valid_outputs(0)$0" -> "valid_idx(0)"	[label=assignedFrom];
	"model(0)" -> "bert-base-tf2-0-minimalistic.ipynb"	[label=appearsIn];
	"history(0)$0" -> "test_inputs(0)$0"	[label=train_and_predict];
	"history(0)$0" -> "fold(0)"	[label=train_and_predict];
	"history(0)$0" -> "train_inputs(0)$0"	[label=train_and_predict];
	"history(0)$0" -> "train_outputs(0)$0"	[label=train_and_predict];
	"history(0)$0" -> "valid_inputs(0)$0"	[label=train_and_predict];
	"history(0)$0" -> "valid_outputs(0)$0"	[label=train_and_predict];
	"history(0)$0" -> "model(0)"	[label=train_and_predict];
	"history(0)$0" -> "3e-05(0)"	[label=train_and_predict];
	"history(0)$0" -> "4(0)"	[label=train_and_predict];
	"history(0)$0" -> "8(0)"	[label=train_and_predict];
	"history(0)$0" -> "binary_crossentropy(0)"	[label=train_and_predict];
	"3e-05(0)" -> "bert-base-tf2-0-minimalistic.ipynb"	[label=appearsIn];
	"4(0)" -> "bert-base-tf2-0-minimalistic.ipynb"	[label=appearsIn];
	"8(0)" -> "bert-base-tf2-0-minimalistic.ipynb"	[label=appearsIn];
	"binary_crossentropy(0)" -> "bert-base-tf2-0-minimalistic.ipynb"	[label=appearsIn];
	"histories(0)$1" -> "histories(0)$0"	[label=append];
	"histories(0)$1" -> "history(0)$0"	[label=append];
	"test_predictions(0)$0" -> "i(0)"	[label=assignedFrom];
	"test_predictions(0)$0" -> "range(0)"	[label=assignedFrom];
	"test_predictions(0)$0" -> "histories(0)$1"	[label=assignedFrom];
	"test_predictions(0)$0" -> "len(0)"	[label=assignedFrom];
	"len(0)" -> "bert-base-tf2-0-minimalistic.ipynb"	[label=appearsIn];
	"test_predictions(0)$1" -> "np(0)$0"	[label=assignedFrom];
	"test_predictions(0)$1" -> "i(0)"	[label=assignedFrom];
	"test_predictions(0)$1" -> "range(0)"	[label=assignedFrom];
	"test_predictions(0)$1" -> "len(0)"	[label=assignedFrom];
	"test_predictions(0)$1" -> "test_predictions(0)$1"	[label=assignedFrom];
	"test_predictions(0)$1" -> "0(0)"	[label=assignedFrom];
	"0(0)" -> "bert-base-tf2-0-minimalistic.ipynb"	[label=appearsIn];
	"test_predictions(0)$2" -> "np(0)$0"	[label=mean];
	"test_predictions(0)$2" -> "0(0)"	[label=mean];
	"test_predictions(0)$2" -> "test_predictions(0)$2"	[label=mean];
	"df_sub(0)$1" -> "df_sub(0)$0"	[label=assignedFrom];
	"df_sub(0)$1" -> "test_predictions(0)$2"	[label=assignedFrom];
	"df_sub(0)$2" -> "df_sub(0)$1"	[label=to_csv];
	"df_sub(0)$2" -> "submission.csv(0)"	[label=to_csv];
	"submission.csv(0)" -> "bert-base-tf2-0-minimalistic.ipynb"	[label=appearsIn];
}
