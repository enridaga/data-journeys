strict digraph "" {
	numpy -> "reducing-dataframe-memory-size-by-65.ipynb"	[label=importedBy];
	"np(0)" -> numpy	[label=assignedFrom];
	"np(0)" -> "reducing-dataframe-memory-size-by-65.ipynb"	[label=appearsIn];
	pandas -> "reducing-dataframe-memory-size-by-65.ipynb"	[label=importedBy];
	"pd(0)" -> "reducing-dataframe-memory-size-by-65.ipynb"	[label=appearsIn];
	"pd(0)" -> pandas	[label=assignedFrom];
	"props(1)" -> "reduce_mem_usage[0]"	[label=_argToVar];
	"start_mem_usg(1)$0" -> "props(1)"	[label=Div];
	"start_mem_usg(1)$0" -> "1024(1)"	[label=Div];
	"start_mem_usg(1)$0" -> "2(1)"	[label=Div];
	"print[6/4]" -> "start_mem_usg(1)$0"	[label=print];
	"print[6/4]" -> "Memory usage of properties dataframe is :(1)"	[label=print];
	"print[6/4]" -> " MB(1)"	[label=print];
	"NAlist(1)$0" -> "[](1)"	[label=assignedFrom];
	"col(1)" -> "props(1)"	[label=iteratorOf];
	"print[12/12]" -> "******************************(1)"	[label=print];
	"print[13/12]" -> "col(1)"	[label=print];
	"print[13/12]" -> "Column: (1)"	[label=print];
	"print[14/12]" -> "props(1)"	[label=print];
	"print[14/12]" -> "col(1)"	[label=print];
	"print[14/12]" -> "dtype before: (1)"	[label=print];
	"IsInt(1)$0" -> "False(1)"	[label=assignedFrom];
	"mx(1)$0" -> "props(1)"	[label=max];
	"mx(1)$0" -> "col(1)"	[label=max];
	"mn(1)$0" -> "props(1)"	[label=min];
	"mn(1)$0" -> "col(1)"	[label=min];
	"NAlist(1)$1" -> "NAlist(1)$0"	[label=append];
	"NAlist(1)$1" -> "col(1)"	[label=append];
	"props(1)$0" -> "props(1)"	[label=fillna];
	"props(1)$0" -> "mn(1)$0"	[label=fillna];
	"props(1)$0" -> "1(1)"	[label=fillna];
	"asint(1)$0" -> "col(1)"	[label=astype];
	"asint(1)$0" -> "props(1)$0"	[label=astype];
	"asint(1)$0" -> "0(1)"	[label=astype];
	"asint(1)$0" -> "np(1)"	[label=astype];
	"result(1)$0" -> "col(1)"	[label=Sub];
	"result(1)$0" -> "props(1)$0"	[label=Sub];
	"result(1)$0" -> "asint(1)$0"	[label=Sub];
	"result(1)$1" -> "result(1)$0"	[label=sum];
	"IsInt(1)$1" -> "True(1)"	[label=assignedFrom];
	"props(1)$1" -> "col(1)"	[label=astype];
	"props(1)$1" -> "props(1)$0"	[label=astype];
	"props(1)$1" -> "np(1)"	[label=astype];
	"props(1)$2" -> "col(1)"	[label=astype];
	"props(1)$2" -> "np(1)"	[label=astype];
	"props(1)$2" -> "props(1)$1"	[label=astype];
	"props(1)$3" -> "col(1)"	[label=astype];
	"props(1)$3" -> "np(1)"	[label=astype];
	"props(1)$3" -> "props(1)$2"	[label=astype];
	"props(1)$4" -> "col(1)"	[label=astype];
	"props(1)$4" -> "np(1)"	[label=astype];
	"props(1)$4" -> "props(1)$3"	[label=astype];
	"props(1)$5" -> "col(1)"	[label=astype];
	"props(1)$5" -> "np(1)"	[label=astype];
	"props(1)$5" -> "props(1)$4"	[label=astype];
	"props(1)$6" -> "col(1)"	[label=astype];
	"props(1)$6" -> "np(1)"	[label=astype];
	"props(1)$6" -> "props(1)$5"	[label=astype];
	"props(1)$7" -> "col(1)"	[label=astype];
	"props(1)$7" -> "np(1)"	[label=astype];
	"props(1)$7" -> "props(1)$6"	[label=astype];
	"props(1)$8" -> "col(1)"	[label=astype];
	"props(1)$8" -> "np(1)"	[label=astype];
	"props(1)$8" -> "props(1)$7"	[label=astype];
	"props(1)$9" -> "col(1)"	[label=astype];
	"props(1)$9" -> "np(1)"	[label=astype];
	"props(1)$9" -> "props(1)$8"	[label=astype];
	"print[60/12]" -> "col(1)"	[label=print];
	"print[60/12]" -> "props(1)$9"	[label=print];
	"print[60/12]" -> "dtype after: (1)"	[label=print];
	"print[61/12]" -> "******************************(1)"	[label=print];
	"print[64/4]" -> "___MEMORY USAGE AFTER COMPLETION:___(1)"	[label=print];
	"mem_usg(1)$0" -> "1024(1)"	[label=Div];
	"mem_usg(1)$0" -> "2(1)"	[label=Div];
	"mem_usg(1)$0" -> "props(1)$9"	[label=Div];
	"print[66/4]" -> " MB(1)"	[label=print];
	"print[66/4]" -> "mem_usg(1)$0"	[label=print];
	"print[66/4]" -> "Memory usage is: (1)"	[label=print];
	"print[67/4]" -> "start_mem_usg(1)$0"	[label=print];
	"print[67/4]" -> "mem_usg(1)$0"	[label=print];
	"print[67/4]" -> "This is (1)"	[label=print];
	"print[67/4]" -> "100(1)"	[label=print];
	"print[67/4]" -> "\% of the initial size(1)"	[label=print];
	"props(0)$0" -> "pd(0)"	[label=read_csv];
	"props(0)$0" -> "../input/properties_2016.csv(0)"	[label=read_csv];
	"../input/properties_2016.csv(0)" -> "reducing-dataframe-memory-size-by-65.ipynb"	[label=appearsIn];
	"props(0)$1" -> "props(0)$0"	[label=reduce_mem_usage];
	"NAlist(0)$0" -> "props(0)$0"	[label=reduce_mem_usage];
	"_________________(0)" -> "reducing-dataframe-memory-size-by-65.ipynb"	[label=appearsIn];
	"print[74/0]" -> "_________________(0)"	[label=print];
	"(0)" -> "reducing-dataframe-memory-size-by-65.ipynb"	[label=appearsIn];
	"print[75/0]" -> "(0)"	[label=print];
	"Warning: the following columns have missing values filled with 'df['column_name'].min() -1': (0)" -> "reducing-dataframe-memory-size-by-65.ipynb"	[label=appearsIn];
	"print[76/0]" -> "Warning: the following columns have missing values filled with 'df['column_name'].min() -1': (0)"	[label=print];
	"print[77/0]" -> "_________________(0)"	[label=print];
	"print[78/0]" -> "(0)"	[label=print];
	"print[79/0]" -> "NAlist(0)$0"	[label=print];
}
