digraph "" {
	numpy -> "loss-function-library-keras-pytorch.ipynb"	[label=importedBy];
	"numpy(0)" -> numpy	[label=assignedFrom];
	"numpy(0)" -> "loss-function-library-keras-pytorch.ipynb"	[label=appearsIn];
	torch -> "loss-function-library-keras-pytorch.ipynb"	[label=importedBy];
	"torch(0)" -> "loss-function-library-keras-pytorch.ipynb"	[label=appearsIn];
	"torch(0)" -> torch	[label=assignedFrom];
	"torch.nn" -> "loss-function-library-keras-pytorch.ipynb"	[label=importedBy];
	"nn(0)" -> "loss-function-library-keras-pytorch.ipynb"	[label=appearsIn];
	"nn(0)" -> "torch.nn"	[label=assignedFrom];
	"torch.nn.functional" -> "loss-function-library-keras-pytorch.ipynb"	[label=importedBy];
	"F(0)" -> "loss-function-library-keras-pytorch.ipynb"	[label=appearsIn];
	"F(0)" -> "torch.nn.functional"	[label=assignedFrom];
	keras -> "loss-function-library-keras-pytorch.ipynb"	[label=importedBy];
	"keras(0)" -> "loss-function-library-keras-pytorch.ipynb"	[label=appearsIn];
	"keras(0)" -> keras	[label=assignedFrom];
	"keras.backend" -> "loss-function-library-keras-pytorch.ipynb"	[label=importedBy];
	"K(0)" -> "loss-function-library-keras-pytorch.ipynb"	[label=appearsIn];
	"K(0)" -> "keras.backend"	[label=assignedFrom];
	"self(2)" -> "__init__[0]"	[label=_argToVar];
	"weight(2)" -> "__init__[1]"	[label=_argToVar];
	"size_average(2)" -> "__init__[2]"	[label=_argToVar];
	"super(2)$0" -> "super(2)"	[label=__init__];
	"self(3)" -> "forward[0]"	[label=_argToVar];
	"inputs(3)" -> "forward[1]"	[label=_argToVar];
	"targets(3)" -> "forward[2]"	[label=_argToVar];
	"smooth(3)" -> "forward[3]"	[label=_argToVar];
	"inputs(3)$0" -> "inputs(3)$0"	[label=sigmoid];
	"inputs(3)$0" -> "F(3)"	[label=sigmoid];
	"inputs(3)$1" -> "inputs(3)$0"	[label=view];
	"inputs(3)$1" -> "1(3)"	[label=view];
	"targets(3)$0" -> "targets(3)"	[label=view];
	"targets(3)$0" -> "1(3)"	[label=view];
	"intersection(3)$0" -> "inputs(3)$1"	[label=sum];
	"intersection(3)$0" -> "targets(3)$0"	[label=sum];
	"dice(3)$0" -> "smooth(3)"	[label=Div];
	"dice(3)$0" -> "inputs(3)$1"	[label=Div];
	"dice(3)$0" -> "targets(3)$0"	[label=Div];
	"dice(3)$0" -> "intersection(3)$0"	[label=Div];
	"dice(3)$0" -> "2.0(3)"	[label=Div];
	"targets(4)" -> "DiceLoss[0]"	[label=_argToVar];
	"inputs(4)" -> "DiceLoss[1]"	[label=_argToVar];
	"smooth(4)" -> "DiceLoss[2]"	[label=_argToVar];
	"inputs(4)$0" -> "inputs(4)$0"	[label=flatten];
	"inputs(4)$0" -> "K(4)"	[label=flatten];
	"targets(4)$0" -> "K(4)"	[label=flatten];
	"targets(4)$0" -> "targets(4)$0"	[label=flatten];
	"intersection(4)$0" -> "inputs(4)$0"	[label=sum];
	"intersection(4)$0" -> "K(4)"	[label=sum];
	"intersection(4)$0" -> "targets(4)$0"	[label=sum];
	"dice(4)$0" -> "smooth(4)"	[label=Div];
	"dice(4)$0" -> "inputs(4)$0"	[label=Div];
	"dice(4)$0" -> "K(4)"	[label=Div];
	"dice(4)$0" -> "targets(4)$0"	[label=Div];
	"dice(4)$0" -> "intersection(4)$0"	[label=Div];
	"dice(4)$0" -> "2(4)"	[label=Div];
	"self(6)" -> "__init__[0]"	[label=_argToVar];
	"weight(6)" -> "__init__[1]"	[label=_argToVar];
	"size_average(6)" -> "__init__[2]"	[label=_argToVar];
	"super(6)$0" -> "super(6)"	[label=__init__];
	"self(7)" -> "forward[0]"	[label=_argToVar];
	"inputs(7)" -> "forward[1]"	[label=_argToVar];
	"targets(7)" -> "forward[2]"	[label=_argToVar];
	"smooth(7)" -> "forward[3]"	[label=_argToVar];
	"inputs(7)$0" -> "inputs(7)$0"	[label=sigmoid];
	"inputs(7)$0" -> "F(7)"	[label=sigmoid];
	"inputs(7)$1" -> "inputs(7)$0"	[label=view];
	"inputs(7)$1" -> "1(7)"	[label=view];
	"targets(7)$0" -> "targets(7)"	[label=view];
	"targets(7)$0" -> "1(7)"	[label=view];
	"intersection(7)$0" -> "inputs(7)$1"	[label=sum];
	"intersection(7)$0" -> "targets(7)$0"	[label=sum];
	"dice_loss(7)$0" -> "smooth(7)"	[label=Sub];
	"dice_loss(7)$0" -> "inputs(7)$1"	[label=Sub];
	"dice_loss(7)$0" -> "1(7)"	[label=Sub];
	"dice_loss(7)$0" -> "targets(7)$0"	[label=Sub];
	"dice_loss(7)$0" -> "intersection(7)$0"	[label=Sub];
	"dice_loss(7)$0" -> "2.0(7)"	[label=Sub];
	"BCE(7)$0" -> "F(7)"	[label=binary_cross_entropy];
	"BCE(7)$0" -> "inputs(7)$1"	[label=binary_cross_entropy];
	"BCE(7)$0" -> "targets(7)$0"	[label=binary_cross_entropy];
	"BCE(7)$0" -> "mean(7)"	[label=binary_cross_entropy];
	"Dice_BCE(7)$0" -> "dice_loss(7)$0"	[label=Add];
	"Dice_BCE(7)$0" -> "BCE(7)$0"	[label=Add];
	"targets(8)" -> "DiceBCELoss[0]"	[label=_argToVar];
	"inputs(8)" -> "DiceBCELoss[1]"	[label=_argToVar];
	"smooth(8)" -> "DiceBCELoss[2]"	[label=_argToVar];
	"inputs(8)$0" -> "inputs(8)$0"	[label=flatten];
	"inputs(8)$0" -> "K(8)"	[label=flatten];
	"targets(8)$0" -> "K(8)"	[label=flatten];
	"targets(8)$0" -> "targets(8)$0"	[label=flatten];
	"BCE(8)$0" -> "inputs(8)$0"	[label=binary_crossentropy];
	"BCE(8)$0" -> "targets(8)$0"	[label=binary_crossentropy];
	"intersection(8)$0" -> "inputs(8)$0"	[label=sum];
	"intersection(8)$0" -> "K(8)"	[label=sum];
	"intersection(8)$0" -> "targets(8)$0"	[label=sum];
	"dice_loss(8)$0" -> "smooth(8)"	[label=Sub];
	"dice_loss(8)$0" -> "inputs(8)$0"	[label=Sub];
	"dice_loss(8)$0" -> "K(8)"	[label=Sub];
	"dice_loss(8)$0" -> "targets(8)$0"	[label=Sub];
	"dice_loss(8)$0" -> "intersection(8)$0"	[label=Sub];
	"dice_loss(8)$0" -> "1(8)"	[label=Sub];
	"dice_loss(8)$0" -> "2(8)"	[label=Sub];
	"Dice_BCE(8)$0" -> "BCE(8)$0"	[label=Add];
	"Dice_BCE(8)$0" -> "dice_loss(8)$0"	[label=Add];
	"self(10)" -> "__init__[0]"	[label=_argToVar];
	"weight(10)" -> "__init__[1]"	[label=_argToVar];
	"size_average(10)" -> "__init__[2]"	[label=_argToVar];
	"super(10)$0" -> "super(10)"	[label=__init__];
	"self(11)" -> "forward[0]"	[label=_argToVar];
	"inputs(11)" -> "forward[1]"	[label=_argToVar];
	"targets(11)" -> "forward[2]"	[label=_argToVar];
	"smooth(11)" -> "forward[3]"	[label=_argToVar];
	"inputs(11)$0" -> "inputs(11)$0"	[label=sigmoid];
	"inputs(11)$0" -> "F(11)"	[label=sigmoid];
	"inputs(11)$1" -> "inputs(11)$0"	[label=view];
	"inputs(11)$1" -> "1(11)"	[label=view];
	"targets(11)$0" -> "targets(11)"	[label=view];
	"targets(11)$0" -> "1(11)"	[label=view];
	"intersection(11)$0" -> "inputs(11)$1"	[label=sum];
	"intersection(11)$0" -> "targets(11)$0"	[label=sum];
	"total(11)$0" -> "inputs(11)$1"	[label=sum];
	"total(11)$0" -> "targets(11)$0"	[label=sum];
	"union(11)$0" -> "intersection(11)$0"	[label=Sub];
	"union(11)$0" -> "total(11)$0"	[label=Sub];
	"IoU(11)$0" -> "smooth(11)"	[label=Div];
	"IoU(11)$0" -> "intersection(11)$0"	[label=Div];
	"IoU(11)$0" -> "union(11)$0"	[label=Div];
	"targets(12)" -> "IoULoss[0]"	[label=_argToVar];
	"inputs(12)" -> "IoULoss[1]"	[label=_argToVar];
	"smooth(12)" -> "IoULoss[2]"	[label=_argToVar];
	"inputs(12)$0" -> "inputs(12)$0"	[label=flatten];
	"inputs(12)$0" -> "K(12)"	[label=flatten];
	"targets(12)$0" -> "K(12)"	[label=flatten];
	"targets(12)$0" -> "targets(12)$0"	[label=flatten];
	"intersection(12)$0" -> "inputs(12)$0"	[label=sum];
	"intersection(12)$0" -> "K(12)"	[label=sum];
	"intersection(12)$0" -> "targets(12)$0"	[label=sum];
	"total(12)$0" -> "inputs(12)$0"	[label=Add];
	"total(12)$0" -> "K(12)"	[label=Add];
	"total(12)$0" -> "targets(12)$0"	[label=Add];
	"union(12)$0" -> "intersection(12)$0"	[label=Sub];
	"union(12)$0" -> "total(12)$0"	[label=Sub];
	"IoU(12)$0" -> "smooth(12)"	[label=Div];
	"IoU(12)$0" -> "intersection(12)$0"	[label=Div];
	"IoU(12)$0" -> "union(12)$0"	[label=Div];
	"0.8(0)" -> "loss-function-library-keras-pytorch.ipynb"	[label=appearsIn];
	"ALPHA(0)$0" -> "0.8(0)"	[label=assignedFrom];
	"2(0)" -> "loss-function-library-keras-pytorch.ipynb"	[label=appearsIn];
	"GAMMA(0)$0" -> "2(0)"	[label=assignedFrom];
	"self(14)" -> "__init__[0]"	[label=_argToVar];
	"weight(14)" -> "__init__[1]"	[label=_argToVar];
	"size_average(14)" -> "__init__[2]"	[label=_argToVar];
	"super(14)$0" -> "super(14)"	[label=__init__];
	"self(15)" -> "forward[0]"	[label=_argToVar];
	"inputs(15)" -> "forward[1]"	[label=_argToVar];
	"targets(15)" -> "forward[2]"	[label=_argToVar];
	"alpha(15)" -> "forward[3]"	[label=_argToVar];
	"gamma(15)" -> "forward[4]"	[label=_argToVar];
	"smooth(15)" -> "forward[5]"	[label=_argToVar];
	"inputs(15)$0" -> "inputs(15)$0"	[label=sigmoid];
	"inputs(15)$0" -> "F(15)"	[label=sigmoid];
	"inputs(15)$1" -> "inputs(15)$0"	[label=view];
	"inputs(15)$1" -> "1(15)"	[label=view];
	"targets(15)$0" -> "targets(15)"	[label=view];
	"targets(15)$0" -> "1(15)"	[label=view];
	"BCE(15)$0" -> "F(15)"	[label=binary_cross_entropy];
	"BCE(15)$0" -> "inputs(15)$1"	[label=binary_cross_entropy];
	"BCE(15)$0" -> "targets(15)$0"	[label=binary_cross_entropy];
	"BCE(15)$0" -> "mean(15)"	[label=binary_cross_entropy];
	"BCE_EXP(15)$0" -> "BCE(15)$0"	[label=exp];
	"BCE_EXP(15)$0" -> "torch(15)"	[label=exp];
	"focal_loss(15)$0" -> "alpha(15)"	[label=Mult];
	"focal_loss(15)$0" -> "gamma(15)"	[label=Mult];
	"focal_loss(15)$0" -> "1(15)"	[label=Mult];
	"focal_loss(15)$0" -> "BCE(15)$0"	[label=Mult];
	"focal_loss(15)$0" -> "BCE_EXP(15)$0"	[label=Mult];
	"ALPHA(0)$1" -> "0.8(0)"	[label=assignedFrom];
	"GAMMA(0)$1" -> "2(0)"	[label=assignedFrom];
	"targets(16)" -> "FocalLoss[0]"	[label=_argToVar];
	"inputs(16)" -> "FocalLoss[1]"	[label=_argToVar];
	"alpha(16)" -> "FocalLoss[2]"	[label=_argToVar];
	"gamma(16)" -> "FocalLoss[3]"	[label=_argToVar];
	"inputs(16)$0" -> "inputs(16)$0"	[label=flatten];
	"inputs(16)$0" -> "K(16)"	[label=flatten];
	"targets(16)$0" -> "K(16)"	[label=flatten];
	"targets(16)$0" -> "targets(16)$0"	[label=flatten];
	"BCE(16)$0" -> "inputs(16)$0"	[label=binary_crossentropy];
	"BCE(16)$0" -> "K(16)"	[label=binary_crossentropy];
	"BCE(16)$0" -> "targets(16)$0"	[label=binary_crossentropy];
	"BCE_EXP(16)$0" -> "K(16)"	[label=exp];
	"BCE_EXP(16)$0" -> "BCE(16)$0"	[label=exp];
	"focal_loss(16)$0" -> "alpha(16)"	[label=mean];
	"focal_loss(16)$0" -> "gamma(16)"	[label=mean];
	"focal_loss(16)$0" -> "K(16)"	[label=mean];
	"focal_loss(16)$0" -> "BCE(16)$0"	[label=mean];
	"focal_loss(16)$0" -> "BCE_EXP(16)$0"	[label=mean];
	"focal_loss(16)$0" -> "1(16)"	[label=mean];
	"0.5(0)" -> "loss-function-library-keras-pytorch.ipynb"	[label=appearsIn];
	"ALPHA(0)$2" -> "0.5(0)"	[label=assignedFrom];
	"BETA(0)$0" -> "0.5(0)"	[label=assignedFrom];
	"self(18)" -> "__init__[0]"	[label=_argToVar];
	"weight(18)" -> "__init__[1]"	[label=_argToVar];
	"size_average(18)" -> "__init__[2]"	[label=_argToVar];
	"super(18)$0" -> "super(18)"	[label=__init__];
	"self(19)" -> "forward[0]"	[label=_argToVar];
	"inputs(19)" -> "forward[1]"	[label=_argToVar];
	"targets(19)" -> "forward[2]"	[label=_argToVar];
	"smooth(19)" -> "forward[3]"	[label=_argToVar];
	"alpha(19)" -> "forward[4]"	[label=_argToVar];
	"beta(19)" -> "forward[5]"	[label=_argToVar];
	"inputs(19)$0" -> "inputs(19)$0"	[label=sigmoid];
	"inputs(19)$0" -> "F(19)"	[label=sigmoid];
	"inputs(19)$1" -> "inputs(19)$0"	[label=view];
	"inputs(19)$1" -> "1(19)"	[label=view];
	"targets(19)$0" -> "targets(19)"	[label=view];
	"targets(19)$0" -> "1(19)"	[label=view];
	"TP(19)$0" -> "inputs(19)$1"	[label=sum];
	"TP(19)$0" -> "targets(19)$0"	[label=sum];
	"FP(19)$0" -> "inputs(19)$1"	[label=sum];
	"FP(19)$0" -> "1(19)"	[label=sum];
	"FP(19)$0" -> "targets(19)$0"	[label=sum];
	"FN(19)$0" -> "inputs(19)$1"	[label=sum];
	"FN(19)$0" -> "1(19)"	[label=sum];
	"FN(19)$0" -> "targets(19)$0"	[label=sum];
	"Tversky(19)$0" -> "smooth(19)"	[label=Div];
	"Tversky(19)$0" -> "alpha(19)"	[label=Div];
	"Tversky(19)$0" -> "beta(19)"	[label=Div];
	"Tversky(19)$0" -> "TP(19)$0"	[label=Div];
	"Tversky(19)$0" -> "FP(19)$0"	[label=Div];
	"Tversky(19)$0" -> "FN(19)$0"	[label=Div];
	"ALPHA(0)$3" -> "0.5(0)"	[label=assignedFrom];
	"BETA(0)$1" -> "0.5(0)"	[label=assignedFrom];
	"targets(20)" -> "TverskyLoss[0]"	[label=_argToVar];
	"inputs(20)" -> "TverskyLoss[1]"	[label=_argToVar];
	"alpha(20)" -> "TverskyLoss[2]"	[label=_argToVar];
	"beta(20)" -> "TverskyLoss[3]"	[label=_argToVar];
	"smooth(20)" -> "TverskyLoss[4]"	[label=_argToVar];
	"inputs(20)$0" -> "inputs(20)$0"	[label=flatten];
	"inputs(20)$0" -> "K(20)"	[label=flatten];
	"targets(20)$0" -> "K(20)"	[label=flatten];
	"targets(20)$0" -> "targets(20)$0"	[label=flatten];
	"TP(20)$0" -> "inputs(20)$0"	[label=sum];
	"TP(20)$0" -> "K(20)"	[label=sum];
	"TP(20)$0" -> "targets(20)$0"	[label=sum];
	"FP(20)$0" -> "inputs(20)$0"	[label=sum];
	"FP(20)$0" -> "K(20)"	[label=sum];
	"FP(20)$0" -> "targets(20)$0"	[label=sum];
	"FP(20)$0" -> "1(20)"	[label=sum];
	"FN(20)$0" -> "inputs(20)$0"	[label=sum];
	"FN(20)$0" -> "K(20)"	[label=sum];
	"FN(20)$0" -> "targets(20)$0"	[label=sum];
	"FN(20)$0" -> "1(20)"	[label=sum];
	"Tversky(20)$0" -> "alpha(20)"	[label=Div];
	"Tversky(20)$0" -> "beta(20)"	[label=Div];
	"Tversky(20)$0" -> "smooth(20)"	[label=Div];
	"Tversky(20)$0" -> "TP(20)$0"	[label=Div];
	"Tversky(20)$0" -> "FP(20)$0"	[label=Div];
	"Tversky(20)$0" -> "FN(20)$0"	[label=Div];
	"ALPHA(0)$4" -> "0.5(0)"	[label=assignedFrom];
	"BETA(0)$2" -> "0.5(0)"	[label=assignedFrom];
	"1(0)" -> "loss-function-library-keras-pytorch.ipynb"	[label=appearsIn];
	"GAMMA(0)$2" -> "1(0)"	[label=assignedFrom];
	"self(22)" -> "__init__[0]"	[label=_argToVar];
	"weight(22)" -> "__init__[1]"	[label=_argToVar];
	"size_average(22)" -> "__init__[2]"	[label=_argToVar];
	"super(22)$0" -> "super(22)"	[label=__init__];
	"self(23)" -> "forward[0]"	[label=_argToVar];
	"inputs(23)" -> "forward[1]"	[label=_argToVar];
	"targets(23)" -> "forward[2]"	[label=_argToVar];
	"smooth(23)" -> "forward[3]"	[label=_argToVar];
	"alpha(23)" -> "forward[4]"	[label=_argToVar];
	"beta(23)" -> "forward[5]"	[label=_argToVar];
	"gamma(23)" -> "forward[6]"	[label=_argToVar];
	"inputs(23)$0" -> "inputs(23)$0"	[label=sigmoid];
	"inputs(23)$0" -> "F(23)"	[label=sigmoid];
	"inputs(23)$1" -> "inputs(23)$0"	[label=view];
	"inputs(23)$1" -> "1(23)"	[label=view];
	"targets(23)$0" -> "targets(23)"	[label=view];
	"targets(23)$0" -> "1(23)"	[label=view];
	"TP(23)$0" -> "inputs(23)$1"	[label=sum];
	"TP(23)$0" -> "targets(23)$0"	[label=sum];
	"FP(23)$0" -> "inputs(23)$1"	[label=sum];
	"FP(23)$0" -> "1(23)"	[label=sum];
	"FP(23)$0" -> "targets(23)$0"	[label=sum];
	"FN(23)$0" -> "inputs(23)$1"	[label=sum];
	"FN(23)$0" -> "1(23)"	[label=sum];
	"FN(23)$0" -> "targets(23)$0"	[label=sum];
	"Tversky(23)$0" -> "smooth(23)"	[label=Div];
	"Tversky(23)$0" -> "alpha(23)"	[label=Div];
	"Tversky(23)$0" -> "beta(23)"	[label=Div];
	"Tversky(23)$0" -> "TP(23)$0"	[label=Div];
	"Tversky(23)$0" -> "FP(23)$0"	[label=Div];
	"Tversky(23)$0" -> "FN(23)$0"	[label=Div];
	"FocalTversky(23)$0" -> "gamma(23)"	[label=Pow];
	"FocalTversky(23)$0" -> "1(23)"	[label=Pow];
	"FocalTversky(23)$0" -> "Tversky(23)$0"	[label=Pow];
	"ALPHA(0)$5" -> "0.5(0)"	[label=assignedFrom];
	"BETA(0)$3" -> "0.5(0)"	[label=assignedFrom];
	"GAMMA(0)$3" -> "1(0)"	[label=assignedFrom];
	"targets(24)" -> "FocalTverskyLoss[0]"	[label=_argToVar];
	"inputs(24)" -> "FocalTverskyLoss[1]"	[label=_argToVar];
	"alpha(24)" -> "FocalTverskyLoss[2]"	[label=_argToVar];
	"beta(24)" -> "FocalTverskyLoss[3]"	[label=_argToVar];
	"gamma(24)" -> "FocalTverskyLoss[4]"	[label=_argToVar];
	"smooth(24)" -> "FocalTverskyLoss[5]"	[label=_argToVar];
	"inputs(24)$0" -> "inputs(24)$0"	[label=flatten];
	"inputs(24)$0" -> "K(24)"	[label=flatten];
	"targets(24)$0" -> "K(24)"	[label=flatten];
	"targets(24)$0" -> "targets(24)$0"	[label=flatten];
	"TP(24)$0" -> "inputs(24)$0"	[label=sum];
	"TP(24)$0" -> "K(24)"	[label=sum];
	"TP(24)$0" -> "targets(24)$0"	[label=sum];
	"FP(24)$0" -> "inputs(24)$0"	[label=sum];
	"FP(24)$0" -> "K(24)"	[label=sum];
	"FP(24)$0" -> "targets(24)$0"	[label=sum];
	"FP(24)$0" -> "1(24)"	[label=sum];
	"FN(24)$0" -> "inputs(24)$0"	[label=sum];
	"FN(24)$0" -> "K(24)"	[label=sum];
	"FN(24)$0" -> "targets(24)$0"	[label=sum];
	"FN(24)$0" -> "1(24)"	[label=sum];
	"Tversky(24)$0" -> "alpha(24)"	[label=Div];
	"Tversky(24)$0" -> "beta(24)"	[label=Div];
	"Tversky(24)$0" -> "smooth(24)"	[label=Div];
	"Tversky(24)$0" -> "TP(24)$0"	[label=Div];
	"Tversky(24)$0" -> "FP(24)$0"	[label=Div];
	"Tversky(24)$0" -> "FN(24)$0"	[label=Div];
	"FocalTversky(24)$0" -> "gamma(24)"	[label=pow];
	"FocalTversky(24)$0" -> "K(24)"	[label=pow];
	"FocalTversky(24)$0" -> "1(24)"	[label=pow];
	"FocalTversky(24)$0" -> "Tversky(24)$0"	[label=pow];
	"scores(25)" -> "flatten_binary_scores[0]"	[label=_argToVar];
	"labels(25)" -> "flatten_binary_scores[1]"	[label=_argToVar];
	"ignore(25)" -> "flatten_binary_scores[2]"	[label=_argToVar];
	"scores(25)$0" -> "scores(25)"	[label=view];
	"scores(25)$0" -> "1(25)"	[label=view];
	"labels(25)$0" -> "labels(25)"	[label=view];
	"labels(25)$0" -> "1(25)"	[label=view];
	"valid(25)$0" -> "ignore(25)"	[label=assignedFrom];
	"valid(25)$0" -> "labels(25)$0"	[label=assignedFrom];
	"vscores(25)$0" -> "scores(25)$0"	[label=assignedFrom];
	"vscores(25)$0" -> "valid(25)$0"	[label=assignedFrom];
	"vlabels(25)$0" -> "labels(25)$0"	[label=assignedFrom];
	"vlabels(25)$0" -> "valid(25)$0"	[label=assignedFrom];
	"gt_sorted(26)" -> "lovasz_grad[0]"	[label=_argToVar];
	"p(26)$0" -> "gt_sorted(26)"	[label=len];
	"gts(26)$0" -> "gt_sorted(26)"	[label=sum];
	"intersection(26)$0" -> "gt_sorted(26)"	[label=Sub];
	"intersection(26)$0" -> "gts(26)$0"	[label=Sub];
	"intersection(26)$0" -> "0(26)"	[label=Sub];
	"union(26)$0" -> "gt_sorted(26)"	[label=Add];
	"union(26)$0" -> "gts(26)$0"	[label=Add];
	"union(26)$0" -> "0(26)"	[label=Add];
	"union(26)$0" -> "1(26)"	[label=Add];
	"jaccard(26)$0" -> "intersection(26)$0"	[label=Sub];
	"jaccard(26)$0" -> "union(26)$0"	[label=Sub];
	"jaccard(26)$0" -> "1.0(26)"	[label=Sub];
	"jaccard(26)$1" -> "p(26)$0"	[label=Sub];
	"jaccard(26)$1" -> "0(26)"	[label=Sub];
	"jaccard(26)$1" -> "1(26)"	[label=Sub];
	"jaccard(26)$1" -> "jaccard(26)$0"	[label=Sub];
	"jaccard(26)$1" -> "jaccard(26)$1"	[label=Sub];
	"logits(27)" -> "lovasz_hinge[0]"	[label=_argToVar];
	"labels(27)" -> "lovasz_hinge[1]"	[label=_argToVar];
	"per_image(27)" -> "lovasz_hinge[2]"	[label=_argToVar];
	"ignore(27)" -> "lovasz_hinge[3]"	[label=_argToVar];
	"loss(27)$0" -> "logits(27)"	[label=mean];
	"loss(27)$0" -> "labels(27)"	[label=mean];
	"loss(27)$0" -> "ignore(27)"	[label=mean];
	"loss(27)$0" -> "lovasz_hinge_flat(27)"	[label=mean];
	"loss(27)$0" -> "flatten_binary_scores(27)"	[label=mean];
	"loss(27)$0" -> "log(27)"	[label=mean];
	"loss(27)$0" -> "0(27)"	[label=mean];
	"loss(27)$0" -> "lab(27)"	[label=mean];
	"loss(27)$0" -> "zip(27)"	[label=mean];
	"loss(27)$1" -> "logits(27)"	[label=lovasz_hinge_flat];
	"loss(27)$1" -> "labels(27)"	[label=lovasz_hinge_flat];
	"loss(27)$1" -> "ignore(27)"	[label=lovasz_hinge_flat];
	"loss(27)$1" -> "flatten_binary_scores(27)"	[label=lovasz_hinge_flat];
	"logits(28)" -> "lovasz_hinge_flat[0]"	[label=_argToVar];
	"labels(28)" -> "lovasz_hinge_flat[1]"	[label=_argToVar];
	"signs(28)$0" -> "labels(28)"	[label=Sub];
	"signs(28)$0" -> "2.0(28)"	[label=Sub];
	"signs(28)$0" -> "1.0(28)"	[label=Sub];
	"errors(28)$0" -> "logits(28)"	[label=Sub];
	"errors(28)$0" -> "signs(28)$0"	[label=Sub];
	"errors(28)$0" -> "1.0(28)"	[label=Sub];
	"errors(28)$0" -> "Variable(28)"	[label=Sub];
	"errors_sorted(28)$0" -> "errors(28)$0"	[label=sort];
	"errors_sorted(28)$0" -> "torch(28)"	[label=sort];
	"errors_sorted(28)$0" -> "0(28)"	[label=sort];
	"errors_sorted(28)$0" -> "True(28)"	[label=sort];
	"perm(28)$0" -> "errors(28)$0"	[label=sort];
	"perm(28)$0" -> "torch(28)"	[label=sort];
	"perm(28)$0" -> "0(28)"	[label=sort];
	"perm(28)$0" -> "True(28)"	[label=sort];
	"perm(28)$1" -> "perm(28)$0"	[label=assignedFrom];
	"gt_sorted(28)$0" -> "labels(28)"	[label=assignedFrom];
	"gt_sorted(28)$0" -> "perm(28)$1"	[label=assignedFrom];
	"grad(28)$0" -> "gt_sorted(28)$0"	[label=lovasz_grad];
	"loss(28)$0" -> "Variable(28)"	[label=dot];
	"loss(28)$0" -> "errors_sorted(28)$0"	[label=dot];
	"loss(28)$0" -> "torch(28)"	[label=dot];
	"loss(28)$0" -> "grad(28)$0"	[label=dot];
	"loss(28)$0" -> "F(28)"	[label=dot];
	"probas(29)" -> "lovasz_softmax[0]"	[label=_argToVar];
	"labels(29)" -> "lovasz_softmax[1]"	[label=_argToVar];
	"classes(29)" -> "lovasz_softmax[2]"	[label=_argToVar];
	"per_image(29)" -> "lovasz_softmax[3]"	[label=_argToVar];
	"ignore(29)" -> "lovasz_softmax[4]"	[label=_argToVar];
	"loss(29)$0" -> "probas(29)"	[label=mean];
	"loss(29)$0" -> "labels(29)"	[label=mean];
	"loss(29)$0" -> "classes(29)"	[label=mean];
	"loss(29)$0" -> "ignore(29)"	[label=mean];
	"loss(29)$0" -> "lovasz_softmax_flat(29)"	[label=mean];
	"loss(29)$0" -> "flatten_probas(29)"	[label=mean];
	"loss(29)$0" -> "prob(29)"	[label=mean];
	"loss(29)$0" -> "0(29)"	[label=mean];
	"loss(29)$0" -> "lab(29)"	[label=mean];
	"loss(29)$0" -> "zip(29)"	[label=mean];
	"loss(29)$1" -> "probas(29)"	[label=lovasz_softmax_flat];
	"loss(29)$1" -> "labels(29)"	[label=lovasz_softmax_flat];
	"loss(29)$1" -> "classes(29)"	[label=lovasz_softmax_flat];
	"loss(29)$1" -> "ignore(29)"	[label=lovasz_softmax_flat];
	"loss(29)$1" -> "flatten_probas(29)"	[label=lovasz_softmax_flat];
	"probas(30)" -> "lovasz_softmax_flat[0]"	[label=_argToVar];
	"labels(30)" -> "lovasz_softmax_flat[1]"	[label=_argToVar];
	"classes(30)" -> "lovasz_softmax_flat[2]"	[label=_argToVar];
	"C(30)$0" -> "probas(30)"	[label=size];
	"C(30)$0" -> "1(30)"	[label=size];
	"losses(30)$0" -> "[](30)"	[label=assignedFrom];
	"class_to_sum(30)$0" -> "classes(30)"	[label=assignedFrom];
	"class_to_sum(30)$0" -> "C(30)$0"	[label=assignedFrom];
	"class_to_sum(30)$0" -> "[<_ast.Constant object at 0x7fd50082e9d0>, <_ast.Constant object at 0x7fd50082ea00>](30)"	[label=assignedFrom];
	"class_to_sum(30)$0" -> "list(30)"	[label=assignedFrom];
	"class_to_sum(30)$0" -> "range(30)"	[label=assignedFrom];
	"c(30)" -> "class_to_sum(30)$0"	[label=iteratorOf];
	"fg(30)$0" -> "labels(30)"	[label=float];
	"fg(30)$0" -> "c(30)"	[label=float];
	"class_pred(30)$0" -> "probas(30)"	[label=assignedFrom];
	"class_pred(30)$0" -> "0(30)"	[label=assignedFrom];
	"class_pred(30)$1" -> "probas(30)"	[label=assignedFrom];
	"class_pred(30)$1" -> "c(30)"	[label=assignedFrom];
	"errors(30)$0" -> "fg(30)$0"	[label=abs];
	"errors(30)$0" -> "class_pred(30)$1"	[label=abs];
	"errors(30)$0" -> "Variable(30)"	[label=abs];
	"errors_sorted(30)$0" -> "0(30)"	[label=sort];
	"errors_sorted(30)$0" -> "errors(30)$0"	[label=sort];
	"errors_sorted(30)$0" -> "torch(30)"	[label=sort];
	"errors_sorted(30)$0" -> "True(30)"	[label=sort];
	"perm(30)$0" -> "0(30)"	[label=sort];
	"perm(30)$0" -> "errors(30)$0"	[label=sort];
	"perm(30)$0" -> "torch(30)"	[label=sort];
	"perm(30)$0" -> "True(30)"	[label=sort];
	"perm(30)$1" -> "perm(30)$0"	[label=assignedFrom];
	"fg_sorted(30)$0" -> "fg(30)$0"	[label=assignedFrom];
	"fg_sorted(30)$0" -> "perm(30)$1"	[label=assignedFrom];
	"losses(30)$1" -> "losses(30)$0"	[label=append];
	"losses(30)$1" -> "Variable(30)"	[label=append];
	"losses(30)$1" -> "errors_sorted(30)$0"	[label=append];
	"losses(30)$1" -> "torch(30)"	[label=append];
	"losses(30)$1" -> "fg_sorted(30)$0"	[label=append];
	"losses(30)$1" -> "lovasz_grad(30)"	[label=append];
	"self(32)" -> "__init__[0]"	[label=_argToVar];
	"weight(32)" -> "__init__[1]"	[label=_argToVar];
	"size_average(32)" -> "__init__[2]"	[label=_argToVar];
	"super(32)$0" -> "super(32)"	[label=__init__];
	"self(33)" -> "forward[0]"	[label=_argToVar];
	"inputs(33)" -> "forward[1]"	[label=_argToVar];
	"targets(33)" -> "forward[2]"	[label=_argToVar];
	"inputs(33)$0" -> "inputs(33)$0"	[label=sigmoid];
	"inputs(33)$0" -> "F(33)"	[label=sigmoid];
	"Lovasz(33)$0" -> "targets(33)"	[label=lovasz_hinge];
	"Lovasz(33)$0" -> "inputs(33)$0"	[label=lovasz_hinge];
	"Lovasz(33)$0" -> "False(33)"	[label=lovasz_hinge];
	tensorflow -> "loss-function-library-keras-pytorch.ipynb"	[label=importedBy];
	"tf(0)" -> "loss-function-library-keras-pytorch.ipynb"	[label=appearsIn];
	"tf(0)" -> tensorflow	[label=assignedFrom];
	"np(0)" -> numpy	[label=assignedFrom];
	"np(0)" -> "loss-function-library-keras-pytorch.ipynb"	[label=appearsIn];
	"gt_sorted(34)" -> "lovasz_grad[0]"	[label=_argToVar];
	"gts(34)$0" -> "gt_sorted(34)"	[label=reduce_sum];
	"gts(34)$0" -> "tf(34)"	[label=reduce_sum];
	"intersection(34)$0" -> "gt_sorted(34)"	[label=Sub];
	"intersection(34)$0" -> "gts(34)$0"	[label=Sub];
	"intersection(34)$0" -> "tf(34)"	[label=Sub];
	"union(34)$0" -> "gt_sorted(34)"	[label=Add];
	"union(34)$0" -> "gts(34)$0"	[label=Add];
	"union(34)$0" -> "tf(34)"	[label=Add];
	"union(34)$0" -> "1.0(34)"	[label=Add];
	"jaccard(34)$0" -> "intersection(34)$0"	[label=Sub];
	"jaccard(34)$0" -> "union(34)$0"	[label=Sub];
	"jaccard(34)$0" -> "1.0(34)"	[label=Sub];
	"jaccard(34)$1" -> "tf(34)"	[label=concat];
	"jaccard(34)$1" -> "jaccard(34)$1"	[label=concat];
	"jaccard(34)$1" -> "0(34)"	[label=concat];
	"jaccard(34)$1" -> "1(34)"	[label=concat];
	"logits(35)" -> "lovasz_hinge[0]"	[label=_argToVar];
	"labels(35)" -> "lovasz_hinge[1]"	[label=_argToVar];
	"per_image(35)" -> "lovasz_hinge[2]"	[label=_argToVar];
	"ignore(35)" -> "lovasz_hinge[3]"	[label=_argToVar];
	"log_lab(36)" -> "treat_image[0]"	[label=_argToVar];
	"log(36)$0" -> "log_lab(36)"	[label=assignedFrom];
	"lab(36)$0" -> "log_lab(36)"	[label=assignedFrom];
	"log(36)$1" -> "log(36)$1"	[label=assignedFrom];
	"log(36)$1" -> "tf(36)"	[label=assignedFrom];
	"log(36)$1" -> "lab(36)$1"	[label=assignedFrom];
	"log(36)$1" -> "0(36)"	[label=assignedFrom];
	"lab(36)$1" -> "log(36)$1"	[label=assignedFrom];
	"lab(36)$1" -> "tf(36)"	[label=assignedFrom];
	"lab(36)$1" -> "lab(36)$1"	[label=assignedFrom];
	"lab(36)$1" -> "0(36)"	[label=assignedFrom];
	"log(36)$2" -> "log(36)$1"	[label=flatten_binary_scores];
	"log(36)$2" -> "lab(36)$2"	[label=flatten_binary_scores];
	"log(36)$2" -> "ignore(36)"	[label=flatten_binary_scores];
	"lab(36)$2" -> "log(36)$1"	[label=flatten_binary_scores];
	"lab(36)$2" -> "lab(36)$2"	[label=flatten_binary_scores];
	"lab(36)$2" -> "ignore(36)"	[label=flatten_binary_scores];
	"losses(35)$0" -> "logits(35)"	[label=map_fn];
	"losses(35)$0" -> "labels(35)"	[label=map_fn];
	"losses(35)$0" -> "tf(35)"	[label=map_fn];
	"losses(35)$0" -> "treat_image(35)"	[label=map_fn];
	"loss(35)$0" -> "losses(35)$0"	[label=reduce_mean];
	"loss(35)$0" -> "tf(35)"	[label=reduce_mean];
	"loss(35)$1" -> "logits(35)"	[label=lovasz_hinge_flat];
	"loss(35)$1" -> "labels(35)"	[label=lovasz_hinge_flat];
	"loss(35)$1" -> "ignore(35)"	[label=lovasz_hinge_flat];
	"loss(35)$1" -> "flatten_binary_scores(35)"	[label=lovasz_hinge_flat];
	"logits(37)" -> "lovasz_hinge_flat[0]"	[label=_argToVar];
	"labels(37)" -> "lovasz_hinge_flat[1]"	[label=_argToVar];
	"labelsf(38)$0" -> "tf(38)"	[label=cast];
	"labelsf(38)$0" -> "labels(38)"	[label=cast];
	"labelsf(38)$0" -> "logits(38)"	[label=cast];
	"signs(38)$0" -> "labelsf(38)$0"	[label=Sub];
	"signs(38)$0" -> "2.0(38)"	[label=Sub];
	"signs(38)$0" -> "1.0(38)"	[label=Sub];
	"errors(38)$0" -> "tf(38)"	[label=Sub];
	"errors(38)$0" -> "logits(38)"	[label=Sub];
	"errors(38)$0" -> "signs(38)$0"	[label=Sub];
	"errors(38)$0" -> "1.0(38)"	[label=Sub];
	"errors_sorted(38)$0" -> "tf(38)"	[label=top_k];
	"errors_sorted(38)$0" -> "errors(38)$0"	[label=top_k];
	"errors_sorted(38)$0" -> "0(38)"	[label=top_k];
	"errors_sorted(38)$0" -> "descending_sort(38)"	[label=top_k];
	"perm(38)$0" -> "tf(38)"	[label=top_k];
	"perm(38)$0" -> "errors(38)$0"	[label=top_k];
	"perm(38)$0" -> "0(38)"	[label=top_k];
	"perm(38)$0" -> "descending_sort(38)"	[label=top_k];
	"gt_sorted(38)$0" -> "labelsf(38)$0"	[label=gather];
	"gt_sorted(38)$0" -> "tf(38)"	[label=gather];
	"gt_sorted(38)$0" -> "perm(38)$0"	[label=gather];
	"grad(38)$0" -> "gt_sorted(38)$0"	[label=lovasz_grad];
	"loss(38)$0" -> "tf(38)"	[label=tensordot];
	"loss(38)$0" -> "errors_sorted(38)$0"	[label=tensordot];
	"loss(38)$0" -> "grad(38)$0"	[label=tensordot];
	"loss(38)$0" -> "1(38)"	[label=tensordot];
	"loss(38)$0" -> "loss_non_void(38)"	[label=tensordot];
	"loss(37)$0" -> "logits(37)"	[label=cond];
	"loss(37)$0" -> "loss(37)$0"	[label=cond];
	"loss(37)$0" -> "tf(37)"	[label=cond];
	"loss(37)$0" -> "0(37)"	[label=cond];
	"loss(37)$0" -> "0.0(37)"	[label=cond];
	"loss(37)$0" -> "compute_loss(37)"	[label=cond];
	"loss(37)$0" -> "True(37)"	[label=cond];
	"scores(39)" -> "flatten_binary_scores[0]"	[label=_argToVar];
	"labels(39)" -> "flatten_binary_scores[1]"	[label=_argToVar];
	"ignore(39)" -> "flatten_binary_scores[2]"	[label=_argToVar];
	"scores(39)$0" -> "scores(39)$0"	[label=reshape];
	"scores(39)$0" -> "tf(39)"	[label=reshape];
	"scores(39)$0" -> "1(39)"	[label=reshape];
	"labels(39)$0" -> "tf(39)"	[label=reshape];
	"labels(39)$0" -> "1(39)"	[label=reshape];
	"labels(39)$0" -> "labels(39)$0"	[label=reshape];
	"valid(39)$0" -> "ignore(39)"	[label=not_equal];
	"valid(39)$0" -> "tf(39)"	[label=not_equal];
	"valid(39)$0" -> "labels(39)$0"	[label=not_equal];
	"vscores(39)$0" -> "scores(39)$0"	[label=boolean_mask];
	"vscores(39)$0" -> "tf(39)"	[label=boolean_mask];
	"vscores(39)$0" -> "valid(39)$0"	[label=boolean_mask];
	"vscores(39)$0" -> "valid_scores(39)"	[label=boolean_mask];
	"vlabels(39)$0" -> "tf(39)"	[label=boolean_mask];
	"vlabels(39)$0" -> "labels(39)$0"	[label=boolean_mask];
	"vlabels(39)$0" -> "valid(39)$0"	[label=boolean_mask];
	"vlabels(39)$0" -> "valid_labels(39)"	[label=boolean_mask];
	"ALPHA(0)$6" -> "0.5(0)"	[label=assignedFrom];
	"CE_RATIO(0)$0" -> "0.5(0)"	[label=assignedFrom];
	"self(41)" -> "__init__[0]"	[label=_argToVar];
	"weight(41)" -> "__init__[1]"	[label=_argToVar];
	"size_average(41)" -> "__init__[2]"	[label=_argToVar];
	"super(41)$0" -> "super(41)"	[label=__init__];
	"self(42)" -> "forward[0]"	[label=_argToVar];
	"inputs(42)" -> "forward[1]"	[label=_argToVar];
	"targets(42)" -> "forward[2]"	[label=_argToVar];
	"smooth(42)" -> "forward[3]"	[label=_argToVar];
	"alpha(42)" -> "forward[4]"	[label=_argToVar];
	"beta(42)" -> "forward[5]"	[label=_argToVar];
	"inputs(42)$0" -> "inputs(42)"	[label=view];
	"inputs(42)$0" -> "1(42)"	[label=view];
	"targets(42)$0" -> "targets(42)"	[label=view];
	"targets(42)$0" -> "1(42)"	[label=view];
	"intersection(42)$0" -> "inputs(42)$0"	[label=sum];
	"intersection(42)$0" -> "targets(42)$0"	[label=sum];
	"dice(42)$0" -> "smooth(42)"	[label=Div];
	"dice(42)$0" -> "inputs(42)$0"	[label=Div];
	"dice(42)$0" -> "targets(42)$0"	[label=Div];
	"dice(42)$0" -> "intersection(42)$0"	[label=Div];
	"dice(42)$0" -> "2.0(42)"	[label=Div];
	"inputs(42)$1" -> "inputs(42)$1"	[label=clamp];
	"inputs(42)$1" -> "torch(42)"	[label=clamp];
	"inputs(42)$1" -> "e(42)"	[label=clamp];
	"inputs(42)$1" -> "1.0(42)"	[label=clamp];
	"out(42)$0" -> "1(42)"	[label=assignedFrom];
	"out(42)$0" -> "targets(42)$0"	[label=assignedFrom];
	"out(42)$0" -> "inputs(42)$1"	[label=assignedFrom];
	"out(42)$0" -> "torch(42)"	[label=assignedFrom];
	"out(42)$0" -> "1.0(42)"	[label=assignedFrom];
	"out(42)$0" -> "ALPHA(42)"	[label=assignedFrom];
	"weighted_ce(42)$0" -> "1(42)"	[label=mean];
	"weighted_ce(42)$0" -> "out(42)$0"	[label=mean];
	"combo(42)$0" -> "1(42)"	[label=Sub];
	"combo(42)$0" -> "dice(42)$0"	[label=Sub];
	"combo(42)$0" -> "weighted_ce(42)$0"	[label=Sub];
	"combo(42)$0" -> "CE_RATIO(42)"	[label=Sub];
	"ALPHA(0)$7" -> "0.5(0)"	[label=assignedFrom];
	"CE_RATIO(0)$1" -> "0.5(0)"	[label=assignedFrom];
	"targets(43)" -> "Combo_loss[0]"	[label=_argToVar];
	"inputs(43)" -> "Combo_loss[1]"	[label=_argToVar];
	"targets(43)$0" -> "targets(43)$0"	[label=flatten];
	"targets(43)$0" -> "K(43)"	[label=flatten];
	"inputs(43)$0" -> "K(43)"	[label=flatten];
	"inputs(43)$0" -> "inputs(43)$0"	[label=flatten];
	"intersection(43)$0" -> "targets(43)$0"	[label=sum];
	"intersection(43)$0" -> "K(43)"	[label=sum];
	"intersection(43)$0" -> "inputs(43)$0"	[label=sum];
	"dice(43)$0" -> "targets(43)$0"	[label=Div];
	"dice(43)$0" -> "K(43)"	[label=Div];
	"dice(43)$0" -> "inputs(43)$0"	[label=Div];
	"dice(43)$0" -> "intersection(43)$0"	[label=Div];
	"dice(43)$0" -> "2.0(43)"	[label=Div];
	"dice(43)$0" -> "smooth(43)"	[label=Div];
	"inputs(43)$1" -> "K(43)"	[label=clip];
	"inputs(43)$1" -> "inputs(43)$1"	[label=clip];
	"inputs(43)$1" -> "e(43)"	[label=clip];
	"inputs(43)$1" -> "1.0(43)"	[label=clip];
	"out(43)$0" -> "targets(43)$0"	[label=assignedFrom];
	"out(43)$0" -> "K(43)"	[label=assignedFrom];
	"out(43)$0" -> "inputs(43)$1"	[label=assignedFrom];
	"out(43)$0" -> "1.0(43)"	[label=assignedFrom];
	"out(43)$0" -> "ALPHA(43)"	[label=assignedFrom];
	"out(43)$0" -> "1(43)"	[label=assignedFrom];
	"weighted_ce(43)$0" -> "K(43)"	[label=mean];
	"weighted_ce(43)$0" -> "out(43)$0"	[label=mean];
	"weighted_ce(43)$0" -> "1(43)"	[label=mean];
	"combo(43)$0" -> "dice(43)$0"	[label=Sub];
	"combo(43)$0" -> "1(43)"	[label=Sub];
	"combo(43)$0" -> "weighted_ce(43)$0"	[label=Sub];
	"combo(43)$0" -> "CE_RATIO(43)"	[label=Sub];
}
