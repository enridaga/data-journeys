digraph "" {
	numpy -> "mask-rcnn-detailed-starter-code.ipynb"	[label=importedBy];
	"np(0)" -> numpy	[label=assignedFrom];
	"np(0)" -> "mask-rcnn-detailed-starter-code.ipynb"	[label=appearsIn];
	pandas -> "mask-rcnn-detailed-starter-code.ipynb"	[label=importedBy];
	"pd(0)" -> "mask-rcnn-detailed-starter-code.ipynb"	[label=appearsIn];
	"pd(0)" -> pandas	[label=assignedFrom];
	random -> "mask-rcnn-detailed-starter-code.ipynb"	[label=importedBy];
	"rn(0)" -> "mask-rcnn-detailed-starter-code.ipynb"	[label=appearsIn];
	"rn(0)" -> random	[label=assignedFrom];
	cv2 -> "mask-rcnn-detailed-starter-code.ipynb"	[label=importedBy];
	"cv(0)" -> "mask-rcnn-detailed-starter-code.ipynb"	[label=appearsIn];
	"cv(0)" -> cv2	[label=assignedFrom];
	os -> "mask-rcnn-detailed-starter-code.ipynb"	[label=importedBy];
	"os(0)" -> "mask-rcnn-detailed-starter-code.ipynb"	[label=appearsIn];
	"os(0)" -> os	[label=assignedFrom];
	sys -> "mask-rcnn-detailed-starter-code.ipynb"	[label=importedBy];
	"sys(0)" -> "mask-rcnn-detailed-starter-code.ipynb"	[label=appearsIn];
	"sys(0)" -> sys	[label=assignedFrom];
	pathlib -> "mask-rcnn-detailed-starter-code.ipynb"	[label=importedBy];
	Path -> pathlib	[label=importedBy];
	"Path(0)" -> "mask-rcnn-detailed-starter-code.ipynb"	[label=appearsIn];
	"Path(0)" -> Path	[label=assignedFrom];
	tensorflow -> "mask-rcnn-detailed-starter-code.ipynb"	[label=importedBy];
	"tf(0)" -> "mask-rcnn-detailed-starter-code.ipynb"	[label=appearsIn];
	"tf(0)" -> tensorflow	[label=assignedFrom];
	matplotlib -> "mask-rcnn-detailed-starter-code.ipynb"	[label=importedBy];
	pyplot -> matplotlib	[label=importedBy];
	"plt(0)" -> "mask-rcnn-detailed-starter-code.ipynb"	[label=appearsIn];
	"plt(0)" -> pyplot	[label=assignedFrom];
	"plotly.express" -> "mask-rcnn-detailed-starter-code.ipynb"	[label=importedBy];
	"px(0)" -> "mask-rcnn-detailed-starter-code.ipynb"	[label=appearsIn];
	"px(0)" -> "plotly.express"	[label=assignedFrom];
	"plotly.graph_objects" -> "mask-rcnn-detailed-starter-code.ipynb"	[label=importedBy];
	"go(0)" -> "mask-rcnn-detailed-starter-code.ipynb"	[label=appearsIn];
	"go(0)" -> "plotly.graph_objects"	[label=assignedFrom];
	"42(0)" -> "mask-rcnn-detailed-starter-code.ipynb"	[label=appearsIn];
	"RANDOM_SEED(0)$0" -> "42(0)"	[label=assignedFrom];
	"np(0)$0" -> "np(0)"	[label=seed];
	"np(0)$0" -> "RANDOM_SEED(0)$0"	[label=seed];
	"tf(0)$0" -> "tf(0)"	[label=set_random_seed];
	"tf(0)$0" -> "RANDOM_SEED(0)$0"	[label=set_random_seed];
	"rn(0)$0" -> "rn(0)"	[label=seed];
	"rn(0)$0" -> "RANDOM_SEED(0)$0"	[label=seed];
	"/kaggle/input/train_images/(0)" -> "mask-rcnn-detailed-starter-code.ipynb"	[label=appearsIn];
	"img_train_folder(0)$0" -> "/kaggle/input/train_images/(0)"	[label=Path];
	"/kaggle/input/test_images/(0)" -> "mask-rcnn-detailed-starter-code.ipynb"	[label=appearsIn];
	"img_test_folder(0)$0" -> "/kaggle/input/test_images/(0)"	[label=Path];
	"X(0)$0" -> "np(0)$0"	[label=eye];
	"X(0)$0" -> "3(0)"	[label=eye];
	"3(0)" -> "mask-rcnn-detailed-starter-code.ipynb"	[label=appearsIn];
	"Y(0)$0" -> "np(0)$0"	[label=eye];
	"Y(0)$0" -> "3(0)"	[label=eye];
	"0(0)" -> "mask-rcnn-detailed-starter-code.ipynb"	[label=appearsIn];
	"X(0)$1" -> "X(0)$0"	[label=assignedFrom];
	"X(0)$1" -> "0(0)"	[label=assignedFrom];
	"print[34/0]" -> "X(0)$1"	[label=print];
	"(0)" -> "mask-rcnn-detailed-starter-code.ipynb"	[label=appearsIn];
	"print[35/0]" -> "(0)"	[label=print];
	"print[36/0]" -> "Y(0)$0"	[label=print];
	"X(1)" -> "dice_coefficient[0]"	[label=_argToVar];
	"y(1)" -> "dice_coefficient[1]"	[label=_argToVar];
	"predicted(1)$0" -> "X(1)"	[label=flatten];
	"truth(1)$0" -> "y(1)"	[label=flatten];
	"overlap(1)$0" -> "predicted(1)$0"	[label=sum];
	"overlap(1)$0" -> "truth(1)$0"	[label=sum];
	"overlap(1)$0" -> "np(1)"	[label=sum];
	"total_surface_area(1)$0" -> "predicted(1)$0"	[label=sum];
	"total_surface_area(1)$0" -> "truth(1)$0"	[label=sum];
	"total_surface_area(1)$0" -> "np(1)"	[label=sum];
	"The dice coefficient for 1 wrongly labeled pixel in a 3*3 image is: (0)" -> "mask-rcnn-detailed-starter-code.ipynb"	[label=appearsIn];
	"print[50/0]" -> "Y(0)$0"	[label=print];
	"print[50/0]" -> "X(0)$1"	[label=print];
	"print[50/0]" -> "The dice coefficient for 1 wrongly labeled pixel in a 3*3 image is: (0)"	[label=print];
	"print[50/0]" -> "dice_coefficient(0)"	[label=print];
	"dice_coefficient(0)" -> "mask-rcnn-detailed-starter-code.ipynb"	[label=appearsIn];
	"(2 * 2 overlapping \"1\" pixels / 5 total \"1\" surface area)(0)" -> "mask-rcnn-detailed-starter-code.ipynb"	[label=appearsIn];
	"print[51/0]" -> "(2 * 2 overlapping \"1\" pixels / 5 total \"1\" surface area)(0)"	[label=print];
	"mask(2)" -> "mask_to_rle[0]"	[label=_argToVar];
	"flat(2)$0" -> "mask(2)"	[label=flatten];
	"padded(2)$0" -> "np(2)"	[label=concatenate];
	"padded(2)$0" -> "[<_ast.List object at 0x7fd4c048edc0>, <_ast.Name object at 0x7fd4c048ee20>, <_ast.List object at 0x7fd4c048eb80>](2)"	[label=concatenate];
	"runs(2)$0" -> "padded(2)$0"	[label=assignedFrom];
	"runs(2)$0" -> "np(2)"	[label=assignedFrom];
	"runs(2)$0" -> "1(2)"	[label=assignedFrom];
	"runs(2)$0" -> "0(2)"	[label=assignedFrom];
	"runs(2)$1" -> "runs(2)$0"	[label=Add];
	"runs(2)$1" -> "1(2)"	[label=Add];
	"runs(2)$2" -> "0(2)"	[label=Sub];
	"runs(2)$2" -> "runs(2)$1"	[label=Sub];
	"runs(2)$2" -> "runs(2)$2"	[label=Sub];
	"runs(2)$2" -> "2(2)"	[label=Sub];
	"rle_example(0)$0" -> "X(0)$1"	[label=mask_to_rle];
	"The run-length encoding for our example would be: \"(0)" -> "mask-rcnn-detailed-starter-code.ipynb"	[label=appearsIn];
	"print[87/0]" -> "rle_example(0)$0"	[label=print];
	"print[87/0]" -> "The run-length encoding for our example would be: \"(0)"	[label=print];
	"print[87/0]" -> "\"(0)"	[label=print];
	"\"(0)" -> "mask-rcnn-detailed-starter-code.ipynb"	[label=appearsIn];
	"lre(3)" -> "rle_to_mask[0]"	[label=_argToVar];
	"shape(3)" -> "rle_to_mask[1]"	[label=_argToVar];
	"runs(3)$0" -> "lre(3)"	[label=asarray];
	"runs(3)$0" -> "np(3)"	[label=asarray];
	"runs(3)$0" -> "int(3)"	[label=asarray];
	"runs(3)$0" -> "run(3)"	[label=asarray];
	"runs(3)$0" -> " (3)"	[label=asarray];
	"runs(3)$1" -> "runs(3)$0"	[label=Add];
	"runs(3)$1" -> "runs(3)$1"	[label=Add];
	"runs(3)$1" -> "0(3)"	[label=Add];
	"runs(3)$1" -> "2(3)"	[label=Add];
	"runs(3)$2" -> "runs(3)$1"	[label=Sub];
	"runs(3)$2" -> "1(3)"	[label=Sub];
	"run_starts(3)$0" -> "0(3)"	[label=assignedFrom];
	"run_starts(3)$0" -> "2(3)"	[label=assignedFrom];
	"run_starts(3)$0" -> "runs(3)$2"	[label=assignedFrom];
	"run_starts(3)$0" -> "1(3)"	[label=assignedFrom];
	"run_ends(3)$0" -> "0(3)"	[label=assignedFrom];
	"run_ends(3)$0" -> "2(3)"	[label=assignedFrom];
	"run_ends(3)$0" -> "runs(3)$2"	[label=assignedFrom];
	"run_ends(3)$0" -> "1(3)"	[label=assignedFrom];
	"h(3)$0" -> "shape(3)"	[label=assignedFrom];
	"w(3)$0" -> "shape(3)"	[label=assignedFrom];
	"mask(3)$0" -> "np(3)"	[label=zeros];
	"mask(3)$0" -> "h(3)$0"	[label=zeros];
	"mask(3)$0" -> "w(3)$0"	[label=zeros];
	"start(3)" -> "run_starts(3)$0"	[label=iteratorOf];
	"start(3)" -> "run_ends(3)$0"	[label=iteratorOf];
	"start(3)" -> "zip(3)"	[label=iteratorOf];
	"end(3)" -> "run_starts(3)$0"	[label=iteratorOf];
	"end(3)" -> "run_ends(3)$0"	[label=iteratorOf];
	"end(3)" -> "zip(3)"	[label=iteratorOf];
	"mask(3)$1" -> "1(3)"	[label=assignedFrom];
	"mask(3)$1" -> "mask(3)$0"	[label=assignedFrom];
	"The mask reconstructed from the run-length encoding (\"(0)" -> "mask-rcnn-detailed-starter-code.ipynb"	[label=appearsIn];
	"print[114/0]" -> "3(0)"	[label=print];
	"print[114/0]" -> "rle_example(0)$0"	[label=print];
	"print[114/0]" -> "The mask reconstructed from the run-length encoding (\"(0)"	[label=print];
	"print[114/0]" -> "\") for our example would be:
(0)"	[label=print];
	"print[114/0]" -> "rle_to_mask(0)"	[label=print];
	"\") for our example would be:
(0)" -> "mask-rcnn-detailed-starter-code.ipynb"	[label=appearsIn];
	"rle_to_mask(0)" -> "mask-rcnn-detailed-starter-code.ipynb"	[label=appearsIn];
	"data(0)$0" -> "pd(0)"	[label=read_csv];
	"data(0)$0" -> "/kaggle/input/train.csv(0)"	[label=read_csv];
	"/kaggle/input/train.csv(0)" -> "mask-rcnn-detailed-starter-code.ipynb"	[label=appearsIn];
	"data(0)$1" -> "data(0)$0"	[label=assignedFrom];
	"data(0)$1" -> "_(0)"	[label=assignedFrom];
	"data(0)$1" -> "1(0)"	[label=assignedFrom];
	"_(0)" -> "mask-rcnn-detailed-starter-code.ipynb"	[label=appearsIn];
	"1(0)" -> "mask-rcnn-detailed-starter-code.ipynb"	[label=appearsIn];
	"data(0)$2" -> "np(0)$0"	[label=astype];
	"data(0)$2" -> "data(0)$1"	[label=astype];
	"data(0)$2" -> "ClassId(0)"	[label=astype];
	"ClassId(0)" -> "mask-rcnn-detailed-starter-code.ipynb"	[label=appearsIn];
	"no_defects(0)$0" -> "data(0)$2"	[label=drop_duplicates];
	"no_defects(0)$0" -> "EncodedPixels(0)"	[label=drop_duplicates];
	"no_defects(0)$0" -> "[<_ast.Constant object at 0x7fd4c05e8e80>](0)"	[label=drop_duplicates];
	"EncodedPixels(0)" -> "mask-rcnn-detailed-starter-code.ipynb"	[label=appearsIn];
	"[<_ast.Constant object at 0x7fd4c05e8e80>](0)" -> "mask-rcnn-detailed-starter-code.ipynb"	[label=appearsIn];
	"no_defects(0)$1" -> "(0)"	[label=assignedFrom];
	"no_defects(0)$1" -> "no_defects(0)$0"	[label=assignedFrom];
	"no_defects(0)$2" -> "np(0)$0"	[label=tolist];
	"no_defects(0)$2" -> "0(0)"	[label=tolist];
	"no_defects(0)$2" -> "no_defects(0)$1"	[label=tolist];
	"no_defects(0)$2" -> "no_defects(0)$2"	[label=tolist];
	"no_defects(0)$2" -> "len(0)"	[label=tolist];
	"len(0)" -> "mask-rcnn-detailed-starter-code.ipynb"	[label=appearsIn];
	"no_defects(0)$3" -> "0(0)"	[label=assignedFrom];
	"no_defects(0)$3" -> "no_defects(0)$2"	[label=assignedFrom];
	"no_defects(0)$4" -> "no_defects(0)$3"	[label=reset_index];
	"squashed(0)$0" -> "data(0)$2"	[label=dropna];
	"squashed(0)$0" -> "[<_ast.Constant object at 0x7fd5008338b0>](0)"	[label=dropna];
	"squashed(0)$0" -> "rows(0)"	[label=dropna];
	"squashed(0)$0" -> "True(0)"	[label=dropna];
	"[<_ast.Constant object at 0x7fd5008338b0>](0)" -> "mask-rcnn-detailed-starter-code.ipynb"	[label=appearsIn];
	"rows(0)" -> "mask-rcnn-detailed-starter-code.ipynb"	[label=appearsIn];
	"True(0)" -> "mask-rcnn-detailed-starter-code.ipynb"	[label=appearsIn];
	"squashed(0)$1" -> "data(0)$2"	[label=agg];
	"squashed(0)$1" -> "[<_ast.Constant object at 0x7fd5008334c0>, <_ast.Constant object at 0x7fd500833370>, <_ast.Constant object at 0x7fd5008337f0>](0)"	[label=agg];
	"squashed(0)$1" -> "ImageId(0)"	[label=agg];
	"squashed(0)$1" -> "False(0)"	[label=agg];
	"squashed(0)$1" -> "list(0)"	[label=agg];
	"[<_ast.Constant object at 0x7fd5008334c0>, <_ast.Constant object at 0x7fd500833370>, <_ast.Constant object at 0x7fd5008337f0>](0)" -> "mask-rcnn-detailed-starter-code.ipynb"	[label=appearsIn];
	"ImageId(0)" -> "mask-rcnn-detailed-starter-code.ipynb"	[label=appearsIn];
	"False(0)" -> "mask-rcnn-detailed-starter-code.ipynb"	[label=appearsIn];
	"list(0)" -> "mask-rcnn-detailed-starter-code.ipynb"	[label=appearsIn];
	"squashed(0)$2" -> "len(0)"	[label=apply];
	"squashed(0)$2" -> "squashed(0)$1"	[label=apply];
	"squashed(0)$2" -> "x(0)"	[label=apply];
	"x(0)" -> "mask-rcnn-detailed-starter-code.ipynb"	[label=appearsIn];
	"squashed(0)$3" -> "squashed(0)$2"	[label=head];
	"squashed(0)$3" -> "10(0)"	[label=head];
	"10(0)" -> "mask-rcnn-detailed-starter-code.ipynb"	[label=appearsIn];
	"The training set now consists of (0)" -> "mask-rcnn-detailed-starter-code.ipynb"	[label=appearsIn];
	"print[146/0]" -> "len(0)"	[label=print];
	"print[146/0]" -> "no_defects(0)$4"	[label=print];
	"print[146/0]" -> "squashed(0)$3"	[label=print];
	"print[146/0]" -> "The training set now consists of (0)"	[label=print];
	"print[146/0]" -> ",(0)"	[label=print];
	"print[146/0]" -> " distinct images,
for a total of (0)"	[label=print];
	"print[146/0]" -> "Distinct Defect Types(0)"	[label=print];
	"print[146/0]" -> " labeled mask instances.

Furthermore, we have kept a backup of (0)"	[label=print];
	"print[146/0]" -> " images witout defects,
in case our model starts producing a lot of false positives and needs more training
on a background class.(\
0)"	[label=print];
	",(0)" -> "mask-rcnn-detailed-starter-code.ipynb"	[label=appearsIn];
	" distinct images,
for a total of (0)" -> "mask-rcnn-detailed-starter-code.ipynb"	[label=appearsIn];
	"Distinct Defect Types(0)" -> "mask-rcnn-detailed-starter-code.ipynb"	[label=appearsIn];
	" labeled mask instances.

Furthermore, we have kept a backup of (0)" -> "mask-rcnn-detailed-starter-code.ipynb"	[label=appearsIn];
	" images witout defects,
in case our model starts producing a lot of false positives and needs more training
on a background class.(\
0)" -> "mask-rcnn-detailed-starter-code.ipynb"	[label=appearsIn];
	colorlover -> "mask-rcnn-detailed-starter-code.ipynb"	[label=importedBy];
	"cl(0)" -> "mask-rcnn-detailed-starter-code.ipynb"	[label=appearsIn];
	"cl(0)" -> colorlover	[label=assignedFrom];
	"colors(0)$0" -> "cl(0)"	[label=assignedFrom];
	"colors(0)$0" -> "4(0)"	[label=assignedFrom];
	"colors(0)$0" -> "qual(0)"	[label=assignedFrom];
	"colors(0)$0" -> "Set3(0)"	[label=assignedFrom];
	"4(0)" -> "mask-rcnn-detailed-starter-code.ipynb"	[label=appearsIn];
	"qual(0)" -> "mask-rcnn-detailed-starter-code.ipynb"	[label=appearsIn];
	"Set3(0)" -> "mask-rcnn-detailed-starter-code.ipynb"	[label=appearsIn];
	"labels(0)$0" -> "np(0)$0"	[label=array];
	"labels(0)$0" -> "1(0)"	[label=array];
	"labels(0)$0" -> "range(0)"	[label=array];
	"labels(0)$0" -> "5(0)"	[label=array];
	"range(0)" -> "mask-rcnn-detailed-starter-code.ipynb"	[label=appearsIn];
	"5(0)" -> "mask-rcnn-detailed-starter-code.ipynb"	[label=appearsIn];
	"zip(0)" -> "mask-rcnn-detailed-starter-code.ipynb"	[label=appearsIn];
	"palette(0)$0" -> "np(0)$0"	[label=dict];
	"palette(0)$0" -> "cl(0)"	[label=dict];
	"palette(0)$0" -> "colors(0)$0"	[label=dict];
	"palette(0)$0" -> "labels(0)$0"	[label=dict];
	"palette(0)$0" -> "zip(0)"	[label=dict];
	"classes(0)$0" -> "data(0)$2"	[label=rename];
	"classes(0)$0" -> "ClassId(0)"	[label=rename];
	"classes(0)$0" -> "ImageId(0)"	[label=rename];
	"classes(0)$0" -> "False(0)"	[label=rename];
	"classes(0)$0" -> "count(0)"	[label=rename];
	"classes(0)$0" -> "Count(0)"	[label=rename];
	"count(0)" -> "mask-rcnn-detailed-starter-code.ipynb"	[label=appearsIn];
	"Count(0)" -> "mask-rcnn-detailed-starter-code.ipynb"	[label=appearsIn];
	"classes(0)$1" -> "classes(0)$0"	[label=round];
	"classes(0)$1" -> "classes(0)$1"	[label=round];
	"classes(0)$1" -> "100(0)"	[label=round];
	"classes(0)$1" -> "2(0)"	[label=round];
	"100(0)" -> "mask-rcnn-detailed-starter-code.ipynb"	[label=appearsIn];
	"2(0)" -> "mask-rcnn-detailed-starter-code.ipynb"	[label=appearsIn];
	"classes(0)$2" -> "classes(0)$1"	[label=Add];
	"classes(0)$2" -> "Frequency(0)"	[label=Add];
	"classes(0)$2" -> "str(0)"	[label=Add];
	"classes(0)$2" -> "\%(0)"	[label=Add];
	"Frequency(0)" -> "mask-rcnn-detailed-starter-code.ipynb"	[label=appearsIn];
	"str(0)" -> "mask-rcnn-detailed-starter-code.ipynb"	[label=appearsIn];
	"\%(0)" -> "mask-rcnn-detailed-starter-code.ipynb"	[label=appearsIn];
	"fig(0)$0" -> "go(0)"	[label=Figure];
	"fig(0)$0" -> "False(0)"	[label=Figure];
	"fig(0)$0" -> "colors(0)$0"	[label=Figure];
	"fig(0)$0" -> "classes(0)$2"	[label=Figure];
	"fig(0)$0" -> "h(0)"	[label=Figure];
	"fig(0)$0" -> "auto(0)"	[label=Figure];
	"fig(0)$0" -> "Defect Type: Count & Frequency(0)"	[label=Figure];
	"fig(0)$0" -> "reversed(0)"	[label=Figure];
	"fig(0)$0" -> "750(0)"	[label=Figure];
	"fig(0)$0" -> "400(0)"	[label=Figure];
	"h(0)" -> "mask-rcnn-detailed-starter-code.ipynb"	[label=appearsIn];
	"auto(0)" -> "mask-rcnn-detailed-starter-code.ipynb"	[label=appearsIn];
	"Defect Type: Count & Frequency(0)" -> "mask-rcnn-detailed-starter-code.ipynb"	[label=appearsIn];
	"reversed(0)" -> "mask-rcnn-detailed-starter-code.ipynb"	[label=appearsIn];
	"750(0)" -> "mask-rcnn-detailed-starter-code.ipynb"	[label=appearsIn];
	"400(0)" -> "mask-rcnn-detailed-starter-code.ipynb"	[label=appearsIn];
	"fig(0)$1" -> "fig(0)$0"	[label=show];
	"permutations(0)$0" -> "pd(0)"	[label=DataFrame];
	"permutations(0)$0" -> "squashed(0)$3"	[label=DataFrame];
	"permutations(0)$0" -> "str(0)"	[label=DataFrame];
	"permutations(0)$1" -> "100(0)"	[label=round];
	"permutations(0)$1" -> "2(0)"	[label=round];
	"permutations(0)$1" -> "permutations(0)$0"	[label=round];
	"permutations(0)$1" -> "permutations(0)$1"	[label=round];
	"permutations(0)$2" -> "Frequency(0)"	[label=Add];
	"permutations(0)$2" -> "str(0)"	[label=Add];
	"permutations(0)$2" -> "\%(0)"	[label=Add];
	"permutations(0)$2" -> "permutations(0)$1"	[label=Add];
	"fig(0)$2" -> "go(0)"	[label=Figure];
	"fig(0)$2" -> "False(0)"	[label=Figure];
	"fig(0)$2" -> "h(0)"	[label=Figure];
	"fig(0)$2" -> "auto(0)"	[label=Figure];
	"fig(0)$2" -> "reversed(0)"	[label=Figure];
	"fig(0)$2" -> "750(0)"	[label=Figure];
	"fig(0)$2" -> "permutations(0)$2"	[label=Figure];
	"fig(0)$2" -> "Count of Distinct Defect Combinations in Images(0)"	[label=Figure];
	"fig(0)$2" -> "500(0)"	[label=Figure];
	"Count of Distinct Defect Combinations in Images(0)" -> "mask-rcnn-detailed-starter-code.ipynb"	[label=appearsIn];
	"500(0)" -> "mask-rcnn-detailed-starter-code.ipynb"	[label=appearsIn];
	"fig(0)$3" -> "fig(0)$2"	[label=show];
	"encodings(4)" -> "build_mask[0]"	[label=_argToVar];
	"labels(4)" -> "build_mask[1]"	[label=_argToVar];
	"mask(4)$0" -> "np(4)"	[label=zeros];
	"mask(4)$0" -> "256(4)"	[label=zeros];
	"mask(4)$0" -> "1600(4)"	[label=zeros];
	"mask(4)$0" -> "4(4)"	[label=zeros];
	"rle(4)" -> "encodings(4)"	[label=iteratorOf];
	"rle(4)" -> "labels(4)"	[label=iteratorOf];
	"rle(4)" -> "zip(4)"	[label=iteratorOf];
	"label(4)" -> "encodings(4)"	[label=iteratorOf];
	"label(4)" -> "labels(4)"	[label=iteratorOf];
	"label(4)" -> "zip(4)"	[label=iteratorOf];
	"index(4)$0" -> "label(4)"	[label=Sub];
	"index(4)$0" -> "1(4)"	[label=Sub];
	"mask(4)$1" -> "mask(4)$0"	[label=assignedFrom];
	"mask(4)$1" -> "rle(4)"	[label=assignedFrom];
	"mask(4)$1" -> "rle_to_mask(4)"	[label=assignedFrom];
	"image(5)" -> "mask_to_contours[0]"	[label=_argToVar];
	"mask_layer(5)" -> "mask_to_contours[1]"	[label=_argToVar];
	"color(5)" -> "mask_to_contours[2]"	[label=_argToVar];
	"contours(5)$0" -> "mask_layer(5)"	[label=findContours];
	"contours(5)$0" -> "cv(5)"	[label=findContours];
	"hierarchy(5)$0" -> "mask_layer(5)"	[label=findContours];
	"hierarchy(5)$0" -> "cv(5)"	[label=findContours];
	"image(5)$0" -> "color(5)"	[label=drawContours];
	"image(5)$0" -> "contours(5)$0"	[label=drawContours];
	"image(5)$0" -> "cv(5)"	[label=drawContours];
	"image(5)$0" -> "image(5)$0"	[label=drawContours];
	"image(5)$0" -> "1(5)"	[label=drawContours];
	"image(5)$0" -> "2(5)"	[label=drawContours];
	"file_name(6)" -> "visualise_mask[0]"	[label=_argToVar];
	"mask(6)" -> "visualise_mask[1]"	[label=_argToVar];
	"image(6)$0" -> "file_name(6)"	[label=imread];
	"image(6)$0" -> "cv(6)"	[label=imread];
	"image(6)$0" -> "img_train_folder(6)"	[label=imread];
	"image(6)$0" -> "/(6)"	[label=imread];
	"index(6)" -> "mask(6)"	[label=iteratorOf];
	"index(6)" -> "range(6)"	[label=iteratorOf];
	"index(6)" -> "1(6)"	[label=iteratorOf];
	"label(6)$0" -> "index(6)"	[label=Add];
	"label(6)$0" -> "1(6)"	[label=Add];
	"image(6)$1" -> "mask(6)"	[label=mask_to_contours];
	"image(6)$1" -> "image(6)$0"	[label=mask_to_contours];
	"image(6)$1" -> "index(6)"	[label=mask_to_contours];
	"image(6)$1" -> "label(6)$0"	[label=mask_to_contours];
	"image(6)$1" -> "palette(6)"	[label=mask_to_contours];
	"[<_ast.Compare object at 0x7fd500834d90>, <_ast.Compare object at 0x7fd500834f70>, <_ast.Compare object at 0x7fd500811130>, <_ast.Compare \
object at 0x7fd500811310>, <_ast.Compare object at 0x7fd5008115e0>, <_ast.Compare object at 0x7fd500811760>](0)" -> "mask-rcnn-detailed-starter-code.ipynb"	[label=appearsIn];
	"conditions(0)$0" -> "[<_ast.Compare object at 0x7fd500834d90>, <_ast.Compare object at 0x7fd500834f70>, <_ast.Compare object at 0x7fd500811130>, <_ast.Compare \
object at 0x7fd500811310>, <_ast.Compare object at 0x7fd5008115e0>, <_ast.Compare object at 0x7fd500811760>](0)"	[label=assignedFrom];
	"sample_size(0)$0" -> "2(0)"	[label=assignedFrom];
	"condition(0)" -> "mask-rcnn-detailed-starter-code.ipynb"	[label=appearsIn];
	"condition(0)" -> "conditions(0)$0"	[label=iteratorOf];
	"sample(0)$0" -> "squashed(0)$3"	[label=sample];
	"sample(0)$0" -> "sample_size(0)$0"	[label=sample];
	"sample(0)$0" -> "condition(0)"	[label=sample];
	"fig(0)$4" -> "plt(0)"	[label=subplots];
	"fig(0)$4" -> "3(0)"	[label=subplots];
	"fig(0)$4" -> "1(0)"	[label=subplots];
	"fig(0)$4" -> "sample_size(0)$0"	[label=subplots];
	"fig(0)$4" -> "16(0)"	[label=subplots];
	"16(0)" -> "mask-rcnn-detailed-starter-code.ipynb"	[label=appearsIn];
	"axes(0)$0" -> "plt(0)"	[label=subplots];
	"axes(0)$0" -> "3(0)"	[label=subplots];
	"axes(0)$0" -> "1(0)"	[label=subplots];
	"axes(0)$0" -> "sample_size(0)$0"	[label=subplots];
	"axes(0)$0" -> "16(0)"	[label=subplots];
	"fig(0)$5" -> "fig(0)$4"	[label=tight_layout];
	"enumerate(0)" -> "mask-rcnn-detailed-starter-code.ipynb"	[label=appearsIn];
	"i(0)" -> "mask-rcnn-detailed-starter-code.ipynb"	[label=appearsIn];
	"i(0)" -> "sample(0)$0"	[label=iteratorOf];
	"i(0)" -> "enumerate(0)"	[label=iteratorOf];
	"index(0)" -> "mask-rcnn-detailed-starter-code.ipynb"	[label=appearsIn];
	"index(0)" -> "sample(0)$0"	[label=iteratorOf];
	"index(0)" -> "enumerate(0)"	[label=iteratorOf];
	"row(0)" -> "mask-rcnn-detailed-starter-code.ipynb"	[label=appearsIn];
	"row(0)" -> "sample(0)$0"	[label=iteratorOf];
	"row(0)" -> "enumerate(0)"	[label=iteratorOf];
	"ax(0)$0" -> "axes(0)$0"	[label=assignedFrom];
	"ax(0)$0" -> "i(0)"	[label=assignedFrom];
	"mask(0)$0" -> "row(0)"	[label=build_mask];
	"image(0)$0" -> "row(0)"	[label=visualise_mask];
	"image(0)$0" -> "mask(0)$0"	[label=visualise_mask];
	"ax(0)$1" -> "row(0)"	[label=set_title];
	"ax(0)$1" -> "ax(0)$0"	[label=set_title];
	"ax(0)$1" -> ": (0)"	[label=set_title];
	": (0)" -> "mask-rcnn-detailed-starter-code.ipynb"	[label=appearsIn];
	"ax(0)$2" -> "ax(0)$1"	[label=axis];
	"ax(0)$2" -> "off(0)"	[label=axis];
	"off(0)" -> "mask-rcnn-detailed-starter-code.ipynb"	[label=appearsIn];
	"ax(0)$3" -> "image(0)$0"	[label=imshow];
	"ax(0)$3" -> "ax(0)$2"	[label=imshow];
	"/kaggle/working(0)" -> "mask-rcnn-detailed-starter-code.ipynb"	[label=appearsIn];
	"WORKING_DIR(0)$0" -> "/kaggle/working(0)"	[label=assignedFrom];
	"LOGS_DIR(0)$0" -> "os(0)"	[label=join];
	"LOGS_DIR(0)$0" -> "WORKING_DIR(0)$0"	[label=join];
	"LOGS_DIR(0)$0" -> "logs(0)"	[label=join];
	"logs(0)" -> "mask-rcnn-detailed-starter-code.ipynb"	[label=appearsIn];
	"MASK_RCNN_DIR(0)$0" -> "os(0)"	[label=join];
	"MASK_RCNN_DIR(0)$0" -> "WORKING_DIR(0)$0"	[label=join];
	"MASK_RCNN_DIR(0)$0" -> "Mask_RCNN-master(0)"	[label=join];
	"Mask_RCNN-master(0)" -> "mask-rcnn-detailed-starter-code.ipynb"	[label=appearsIn];
	"mrcnn.utils" -> "mask-rcnn-detailed-starter-code.ipynb"	[label=importedBy];
	Dataset -> "mrcnn.utils"	[label=importedBy];
	"Dataset(0)" -> "mask-rcnn-detailed-starter-code.ipynb"	[label=appearsIn];
	"Dataset(0)" -> Dataset	[label=assignedFrom];
	"mrcnn.config" -> "mask-rcnn-detailed-starter-code.ipynb"	[label=importedBy];
	Config -> "mrcnn.config"	[label=importedBy];
	"Config(0)" -> "mask-rcnn-detailed-starter-code.ipynb"	[label=appearsIn];
	"Config(0)" -> Config	[label=assignedFrom];
	"mrcnn.model" -> "mask-rcnn-detailed-starter-code.ipynb"	[label=importedBy];
	MaskRCNN -> "mrcnn.model"	[label=importedBy];
	"MaskRCNN(0)" -> "mask-rcnn-detailed-starter-code.ipynb"	[label=appearsIn];
	"MaskRCNN(0)" -> MaskRCNN	[label=assignedFrom];
	"NAME(7)$0" -> "severstal(7)"	[label=assignedFrom];
	"IMAGES_PER_GPU(7)$0" -> "2(7)"	[label=assignedFrom];
	"NUM_CLASSES(7)$0" -> "1(7)"	[label=Add];
	"NUM_CLASSES(7)$0" -> "4(7)"	[label=Add];
	"STEPS_PER_EPOCH(7)$0" -> "100(7)"	[label=assignedFrom];
	"DETECTION_MIN_CONFIDENCE(7)$0" -> "0.9(7)"	[label=assignedFrom];
	"SAVE_BEST_ONLY(7)$0" -> "True(7)"	[label=assignedFrom];
	"self(9)" -> "__init__[0]"	[label=_argToVar];
	"dataframe(9)" -> "__init__[1]"	[label=_argToVar];
	"super(9)$0" -> "self(9)"	[label=__init__];
	"super(9)$0" -> "super(9)"	[label=__init__];
	"self(9)$0" -> "self(9)"	[label=assignedFrom];
	"self(9)$0" -> "dataframe(9)"	[label=assignedFrom];
	"self(10)" -> "load_dataset[0]"	[label=_argToVar];
	"subset(10)" -> "load_dataset[1]"	[label=_argToVar];
	"img_folder(10)$0" -> "subset(10)"	[label=assignedFrom];
	"img_folder(10)$0" -> "train(10)"	[label=assignedFrom];
	"img_folder(10)$0" -> "img_train_folder(10)"	[label=assignedFrom];
	"img_folder(10)$0" -> "img_test_folder(10)"	[label=assignedFrom];
	"i(10)" -> "range(10)"	[label=iteratorOf];
	"i(10)" -> "1(10)"	[label=iteratorOf];
	"i(10)" -> "5(10)"	[label=iteratorOf];
	"self(10)$0" -> "self(10)"	[label=add_class];
	"index(10)" -> "self(10)$0"	[label=iteratorOf];
	"row(10)" -> "self(10)$0"	[label=iteratorOf];
	"file_name(10)$0" -> "row(10)"	[label=assignedFrom];
	"file_path(10)$0" -> "img_folder(10)$0"	[label=assignedFrom];
	"file_path(10)$0" -> "file_name(10)$0"	[label=assignedFrom];
	"file_path(10)$0" -> "/(10)"	[label=assignedFrom];
	"self(10)$1" -> "self(10)$0"	[label=add_image];
	"self(11)" -> "load_mask[0]"	[label=_argToVar];
	"image_id(11)" -> "load_mask[1]"	[label=_argToVar];
	"row(11)$0" -> "self(11)"	[label=assignedFrom];
	"row(11)$0" -> "image_id(11)"	[label=assignedFrom];
	"rle(11)$0" -> "row(11)$0"	[label=assignedFrom];
	"rle(11)$0" -> "EncodedPixels(11)"	[label=assignedFrom];
	"labels(11)$0" -> "row(11)$0"	[label=assignedFrom];
	"labels(11)$0" -> "ClassId(11)"	[label=assignedFrom];
	"mask(11)$0" -> "rle(11)$0"	[label=build_mask];
	"mask(11)$0" -> "labels(11)$0"	[label=build_mask];
	"sklearn.model_selection" -> "mask-rcnn-detailed-starter-code.ipynb"	[label=importedBy];
	train_test_split -> "sklearn.model_selection"	[label=importedBy];
	"train_test_split(0)" -> "mask-rcnn-detailed-starter-code.ipynb"	[label=appearsIn];
	"train_test_split(0)" -> train_test_split	[label=assignedFrom];
	"train(0)$0" -> "RANDOM_SEED(0)$0"	[label=train_test_split];
	"train(0)$0" -> "squashed(0)$3"	[label=train_test_split];
	"train(0)$0" -> "0.2(0)"	[label=train_test_split];
	"0.2(0)" -> "mask-rcnn-detailed-starter-code.ipynb"	[label=appearsIn];
	"validate(0)$0" -> "RANDOM_SEED(0)$0"	[label=train_test_split];
	"validate(0)$0" -> "squashed(0)$3"	[label=train_test_split];
	"validate(0)$0" -> "0.2(0)"	[label=train_test_split];
	"print[424/0]" -> "ClassId(0)"	[label=print];
	"print[424/0]" -> "True(0)"	[label=print];
	"print[424/0]" -> "str(0)"	[label=print];
	"print[424/0]" -> "train(0)$0"	[label=print];
	"print[425/0]" -> "(0)"	[label=print];
	"print[426/0]" -> "ClassId(0)"	[label=print];
	"print[426/0]" -> "True(0)"	[label=print];
	"print[426/0]" -> "str(0)"	[label=print];
	"print[426/0]" -> "validate(0)$0"	[label=print];
	"dataset_train(0)$0" -> "train(0)$0"	[label=SeverstalDataset];
	"dataset_train(0)$1" -> "dataset_train(0)$0"	[label=load_dataset];
	"dataset_train(0)$2" -> "dataset_train(0)$1"	[label=prepare];
	"dataset_validate(0)$0" -> "validate(0)$0"	[label=SeverstalDataset];
	"dataset_validate(0)$1" -> "dataset_validate(0)$0"	[label=load_dataset];
	"dataset_validate(0)$2" -> "dataset_validate(0)$1"	[label=prepare];
	"config(0)$0" -> "tf(0)$0"	[label=ConfigProto];
	"config(0)$1" -> "True(0)"	[label=assignedFrom];
	"config(0)$1" -> "config(0)$0"	[label=assignedFrom];
	"session(0)$0" -> "tf(0)$0"	[label=Session];
	"session(0)$0" -> "config(0)$1"	[label=Session];
	"session(0)$1" -> "tf(0)$0"	[label=run];
	"session(0)$1" -> "session(0)$0"	[label=run];
	"session(0)$2" -> "tf(0)$0"	[label=run];
	"session(0)$2" -> "session(0)$1"	[label=run];
	"training(0)" -> "mask-rcnn-detailed-starter-code.ipynb"	[label=appearsIn];
	"model(0)$0" -> "training(0)"	[label=MaskRCNN];
	"model(0)$0" -> "severstal_config(0)"	[label=MaskRCNN];
	"model(0)$0" -> "modeldir(0)"	[label=MaskRCNN];
	"severstal_config(0)" -> "mask-rcnn-detailed-starter-code.ipynb"	[label=appearsIn];
	"modeldir(0)" -> "mask-rcnn-detailed-starter-code.ipynb"	[label=appearsIn];
	"model(0)$1" -> "model(0)$0"	[label=load_weights];
	"model(0)$1" -> "mask_rcnn_coco.h5(0)"	[label=load_weights];
	"mask_rcnn_coco.h5(0)" -> "mask-rcnn-detailed-starter-code.ipynb"	[label=appearsIn];
	warnings -> "mask-rcnn-detailed-starter-code.ipynb"	[label=importedBy];
	"warnings(0)" -> "mask-rcnn-detailed-starter-code.ipynb"	[label=appearsIn];
	"warnings(0)" -> warnings	[label=assignedFrom];
	"warnings(0)$0" -> "warnings(0)"	[label=filterwarnings];
	"warnings(0)$0" -> "ignore(0)"	[label=filterwarnings];
	"ignore(0)" -> "mask-rcnn-detailed-starter-code.ipynb"	[label=appearsIn];
	"model(0)$2" -> "dataset_train(0)$2"	[label=train];
	"model(0)$2" -> "dataset_validate(0)$2"	[label=train];
	"model(0)$2" -> "model(0)$1"	[label=train];
	"history(0)$0" -> "model(0)$2"	[label=assignedFrom];
}
