digraph "" {
	numpy -> "oop-approach-to-fe-and-models.ipynb"	[label=importedBy];
	"np(0)" -> numpy	[label=assignedFrom];
	"np(0)" -> "oop-approach-to-fe-and-models.ipynb"	[label=appearsIn];
	pandas -> "oop-approach-to-fe-and-models.ipynb"	[label=importedBy];
	"pd(0)" -> "oop-approach-to-fe-and-models.ipynb"	[label=appearsIn];
	"pd(0)" -> pandas	[label=assignedFrom];
	os -> "oop-approach-to-fe-and-models.ipynb"	[label=importedBy];
	"os(0)" -> "oop-approach-to-fe-and-models.ipynb"	[label=appearsIn];
	"os(0)" -> os	[label=assignedFrom];
	copy -> "oop-approach-to-fe-and-models.ipynb"	[label=importedBy];
	"copy(0)" -> "oop-approach-to-fe-and-models.ipynb"	[label=appearsIn];
	"copy(0)" -> copy	[label=assignedFrom];
	"matplotlib.pyplot" -> "oop-approach-to-fe-and-models.ipynb"	[label=importedBy];
	"plt(0)" -> "oop-approach-to-fe-and-models.ipynb"	[label=appearsIn];
	"plt(0)" -> "matplotlib.pyplot"	[label=assignedFrom];
	tqdm -> "oop-approach-to-fe-and-models.ipynb"	[label=importedBy];
	tqdm -> tqdm	[label=importedBy];
	tqdm_notebook -> tqdm	[label=importedBy];
	"tqdm_notebook(0)" -> "oop-approach-to-fe-and-models.ipynb"	[label=appearsIn];
	"tqdm_notebook(0)" -> tqdm_notebook	[label=assignedFrom];
	"sklearn.preprocessing" -> "oop-approach-to-fe-and-models.ipynb"	[label=importedBy];
	StandardScaler -> "sklearn.preprocessing"	[label=importedBy];
	"StandardScaler(0)" -> "oop-approach-to-fe-and-models.ipynb"	[label=appearsIn];
	"StandardScaler(0)" -> StandardScaler	[label=assignedFrom];
	"sklearn.svm" -> "oop-approach-to-fe-and-models.ipynb"	[label=importedBy];
	NuSVR -> "sklearn.svm"	[label=importedBy];
	"NuSVR(0)" -> "oop-approach-to-fe-and-models.ipynb"	[label=appearsIn];
	"NuSVR(0)" -> NuSVR	[label=assignedFrom];
	SVR -> "sklearn.svm"	[label=importedBy];
	"SVR(0)" -> "oop-approach-to-fe-and-models.ipynb"	[label=appearsIn];
	"SVR(0)" -> SVR	[label=assignedFrom];
	"sklearn.metrics" -> "oop-approach-to-fe-and-models.ipynb"	[label=importedBy];
	mean_absolute_error -> "sklearn.metrics"	[label=importedBy];
	"mean_absolute_error(0)" -> "oop-approach-to-fe-and-models.ipynb"	[label=appearsIn];
	"mean_absolute_error(0)" -> mean_absolute_error	[label=assignedFrom];
	"15(0)" -> "oop-approach-to-fe-and-models.ipynb"	[label=appearsIn];
	"pd(0)$0" -> pandas	[label=assignedFrom];
	"pd(0)$0" -> "pd(0)"	[label=assignedFrom];
	"pd(0)$0" -> "15(0)"	[label=assignedFrom];
	collections -> "oop-approach-to-fe-and-models.ipynb"	[label=importedBy];
	defaultdict -> collections	[label=importedBy];
	"defaultdict(0)" -> "oop-approach-to-fe-and-models.ipynb"	[label=appearsIn];
	"defaultdict(0)" -> defaultdict	[label=assignedFrom];
	lightgbm -> "oop-approach-to-fe-and-models.ipynb"	[label=importedBy];
	"lgb(0)" -> "oop-approach-to-fe-and-models.ipynb"	[label=appearsIn];
	"lgb(0)" -> lightgbm	[label=assignedFrom];
	xgboost -> "oop-approach-to-fe-and-models.ipynb"	[label=importedBy];
	"xgb(0)" -> "oop-approach-to-fe-and-models.ipynb"	[label=appearsIn];
	"xgb(0)" -> xgboost	[label=assignedFrom];
	catboost -> "oop-approach-to-fe-and-models.ipynb"	[label=importedBy];
	"cat(0)" -> "oop-approach-to-fe-and-models.ipynb"	[label=appearsIn];
	"cat(0)" -> catboost	[label=assignedFrom];
	time -> "oop-approach-to-fe-and-models.ipynb"	[label=importedBy];
	"time(0)" -> "oop-approach-to-fe-and-models.ipynb"	[label=appearsIn];
	"time(0)" -> time	[label=assignedFrom];
	datetime -> "oop-approach-to-fe-and-models.ipynb"	[label=importedBy];
	"datetime(0)" -> "oop-approach-to-fe-and-models.ipynb"	[label=appearsIn];
	"datetime(0)" -> datetime	[label=assignedFrom];
	CatBoostRegressor -> catboost	[label=importedBy];
	"CatBoostRegressor(0)" -> "oop-approach-to-fe-and-models.ipynb"	[label=appearsIn];
	"CatBoostRegressor(0)" -> CatBoostRegressor	[label=assignedFrom];
	LabelEncoder -> "sklearn.preprocessing"	[label=importedBy];
	"LabelEncoder(0)" -> "oop-approach-to-fe-and-models.ipynb"	[label=appearsIn];
	"LabelEncoder(0)" -> LabelEncoder	[label=assignedFrom];
	"sklearn.model_selection" -> "oop-approach-to-fe-and-models.ipynb"	[label=importedBy];
	StratifiedKFold -> "sklearn.model_selection"	[label=importedBy];
	"StratifiedKFold(0)" -> "oop-approach-to-fe-and-models.ipynb"	[label=appearsIn];
	"StratifiedKFold(0)" -> StratifiedKFold	[label=assignedFrom];
	KFold -> "sklearn.model_selection"	[label=importedBy];
	"KFold(0)" -> "oop-approach-to-fe-and-models.ipynb"	[label=appearsIn];
	"KFold(0)" -> KFold	[label=assignedFrom];
	RepeatedKFold -> "sklearn.model_selection"	[label=importedBy];
	"RepeatedKFold(0)" -> "oop-approach-to-fe-and-models.ipynb"	[label=appearsIn];
	"RepeatedKFold(0)" -> RepeatedKFold	[label=assignedFrom];
	GroupKFold -> "sklearn.model_selection"	[label=importedBy];
	"GroupKFold(0)" -> "oop-approach-to-fe-and-models.ipynb"	[label=appearsIn];
	"GroupKFold(0)" -> GroupKFold	[label=assignedFrom];
	GridSearchCV -> "sklearn.model_selection"	[label=importedBy];
	"GridSearchCV(0)" -> "oop-approach-to-fe-and-models.ipynb"	[label=appearsIn];
	"GridSearchCV(0)" -> GridSearchCV	[label=assignedFrom];
	train_test_split -> "sklearn.model_selection"	[label=importedBy];
	"train_test_split(0)" -> "oop-approach-to-fe-and-models.ipynb"	[label=appearsIn];
	"train_test_split(0)" -> train_test_split	[label=assignedFrom];
	TimeSeriesSplit -> "sklearn.model_selection"	[label=importedBy];
	"TimeSeriesSplit(0)" -> "oop-approach-to-fe-and-models.ipynb"	[label=appearsIn];
	"TimeSeriesSplit(0)" -> TimeSeriesSplit	[label=assignedFrom];
	RepeatedStratifiedKFold -> "sklearn.model_selection"	[label=importedBy];
	"RepeatedStratifiedKFold(0)" -> "oop-approach-to-fe-and-models.ipynb"	[label=appearsIn];
	"RepeatedStratifiedKFold(0)" -> RepeatedStratifiedKFold	[label=assignedFrom];
	sklearn -> "oop-approach-to-fe-and-models.ipynb"	[label=importedBy];
	metrics -> sklearn	[label=importedBy];
	"metrics(0)" -> "oop-approach-to-fe-and-models.ipynb"	[label=appearsIn];
	"metrics(0)" -> metrics	[label=assignedFrom];
	classification_report -> "sklearn.metrics"	[label=importedBy];
	"classification_report(0)" -> "oop-approach-to-fe-and-models.ipynb"	[label=appearsIn];
	"classification_report(0)" -> classification_report	[label=assignedFrom];
	confusion_matrix -> "sklearn.metrics"	[label=importedBy];
	"confusion_matrix(0)" -> "oop-approach-to-fe-and-models.ipynb"	[label=appearsIn];
	"confusion_matrix(0)" -> confusion_matrix	[label=assignedFrom];
	linear_model -> sklearn	[label=importedBy];
	"linear_model(0)" -> "oop-approach-to-fe-and-models.ipynb"	[label=appearsIn];
	"linear_model(0)" -> linear_model	[label=assignedFrom];
	gc -> "oop-approach-to-fe-and-models.ipynb"	[label=importedBy];
	"gc(0)" -> "oop-approach-to-fe-and-models.ipynb"	[label=appearsIn];
	"gc(0)" -> gc	[label=assignedFrom];
	seaborn -> "oop-approach-to-fe-and-models.ipynb"	[label=importedBy];
	"sns(0)" -> "oop-approach-to-fe-and-models.ipynb"	[label=appearsIn];
	"sns(0)" -> seaborn	[label=assignedFrom];
	warnings -> "oop-approach-to-fe-and-models.ipynb"	[label=importedBy];
	"warnings(0)" -> "oop-approach-to-fe-and-models.ipynb"	[label=appearsIn];
	"warnings(0)" -> warnings	[label=assignedFrom];
	"warnings(0)$0" -> "warnings(0)"	[label=filterwarnings];
	"warnings(0)$0" -> "ignore(0)"	[label=filterwarnings];
	"ignore(0)" -> "oop-approach-to-fe-and-models.ipynb"	[label=appearsIn];
	bayes_opt -> "oop-approach-to-fe-and-models.ipynb"	[label=importedBy];
	BayesianOptimization -> bayes_opt	[label=importedBy];
	"BayesianOptimization(0)" -> "oop-approach-to-fe-and-models.ipynb"	[label=appearsIn];
	"BayesianOptimization(0)" -> BayesianOptimization	[label=assignedFrom];
	eli5 -> "oop-approach-to-fe-and-models.ipynb"	[label=importedBy];
	"eli5(0)" -> "oop-approach-to-fe-and-models.ipynb"	[label=appearsIn];
	"eli5(0)" -> eli5	[label=assignedFrom];
	shap -> "oop-approach-to-fe-and-models.ipynb"	[label=importedBy];
	"shap(0)" -> "oop-approach-to-fe-and-models.ipynb"	[label=appearsIn];
	"shap(0)" -> shap	[label=assignedFrom];
	"IPython.display" -> "oop-approach-to-fe-and-models.ipynb"	[label=importedBy];
	HTML -> "IPython.display"	[label=importedBy];
	"HTML(0)" -> "oop-approach-to-fe-and-models.ipynb"	[label=appearsIn];
	"HTML(0)" -> HTML	[label=assignedFrom];
	json -> "oop-approach-to-fe-and-models.ipynb"	[label=importedBy];
	"json(0)" -> "oop-approach-to-fe-and-models.ipynb"	[label=appearsIn];
	"json(0)" -> json	[label=assignedFrom];
	altair -> "oop-approach-to-fe-and-models.ipynb"	[label=importedBy];
	"alt(0)" -> "oop-approach-to-fe-and-models.ipynb"	[label=appearsIn];
	"alt(0)" -> altair	[label=assignedFrom];
	"category_encoders.ordinal" -> "oop-approach-to-fe-and-models.ipynb"	[label=importedBy];
	OrdinalEncoder -> "category_encoders.ordinal"	[label=importedBy];
	"OrdinalEncoder(0)" -> "oop-approach-to-fe-and-models.ipynb"	[label=appearsIn];
	"OrdinalEncoder(0)" -> OrdinalEncoder	[label=assignedFrom];
	networkx -> "oop-approach-to-fe-and-models.ipynb"	[label=importedBy];
	"nx(0)" -> "oop-approach-to-fe-and-models.ipynb"	[label=appearsIn];
	"nx(0)" -> networkx	[label=assignedFrom];
	typing -> "oop-approach-to-fe-and-models.ipynb"	[label=importedBy];
	List -> typing	[label=importedBy];
	"List(0)" -> "oop-approach-to-fe-and-models.ipynb"	[label=appearsIn];
	"List(0)" -> List	[label=assignedFrom];
	numba -> "oop-approach-to-fe-and-models.ipynb"	[label=importedBy];
	jit -> numba	[label=importedBy];
	"jit(0)" -> "oop-approach-to-fe-and-models.ipynb"	[label=appearsIn];
	"jit(0)" -> jit	[label=assignedFrom];
	CatBoostClassifier -> catboost	[label=importedBy];
	"CatBoostClassifier(0)" -> "oop-approach-to-fe-and-models.ipynb"	[label=appearsIn];
	"CatBoostClassifier(0)" -> CatBoostClassifier	[label=assignedFrom];
	Any -> typing	[label=importedBy];
	"Any(0)" -> "oop-approach-to-fe-and-models.ipynb"	[label=appearsIn];
	"Any(0)" -> Any	[label=assignedFrom];
	itertools -> "oop-approach-to-fe-and-models.ipynb"	[label=importedBy];
	product -> itertools	[label=importedBy];
	"product(0)" -> "oop-approach-to-fe-and-models.ipynb"	[label=appearsIn];
	"product(0)" -> product	[label=assignedFrom];
	"pd(0)$1" -> "pd(0)$0"	[label=set_option];
	"pd(0)$1" -> "max_rows(0)"	[label=set_option];
	"pd(0)$1" -> "500(0)"	[label=set_option];
	"max_rows(0)" -> "oop-approach-to-fe-and-models.ipynb"	[label=appearsIn];
	"500(0)" -> "oop-approach-to-fe-and-models.ipynb"	[label=appearsIn];
	re -> "oop-approach-to-fe-and-models.ipynb"	[label=importedBy];
	"re(0)" -> "oop-approach-to-fe-and-models.ipynb"	[label=appearsIn];
	"re(0)" -> re	[label=assignedFrom];
	"tqdm(0)" -> "oop-approach-to-fe-and-models.ipynb"	[label=appearsIn];
	"tqdm(0)" -> tqdm	[label=assignedFrom];
	joblib -> "oop-approach-to-fe-and-models.ipynb"	[label=importedBy];
	Parallel -> joblib	[label=importedBy];
	"Parallel(0)" -> "oop-approach-to-fe-and-models.ipynb"	[label=appearsIn];
	"Parallel(0)" -> Parallel	[label=assignedFrom];
	delayed -> joblib	[label=importedBy];
	"delayed(0)" -> "oop-approach-to-fe-and-models.ipynb"	[label=appearsIn];
	"delayed(0)" -> delayed	[label=assignedFrom];
	"df(1)" -> "add_datepart[0]"	[label=_argToVar];
	"field_name(1)" -> "add_datepart[1]"	[label=_argToVar];
	"prefix(1)" -> "add_datepart[2]"	[label=_argToVar];
	"drop(1)" -> "add_datepart[3]"	[label=_argToVar];
	"time(1)" -> "add_datepart[4]"	[label=_argToVar];
	"date(1)" -> "add_datepart[5]"	[label=_argToVar];
	"field(1)$0" -> "df(1)"	[label=assignedFrom];
	"field(1)$0" -> "field_name(1)"	[label=assignedFrom];
	"prefix(1)$0" -> "field_name(1)"	[label=ifnone];
	"prefix(1)$0" -> "prefix(1)"	[label=ifnone];
	"prefix(1)$0" -> "re(1)"	[label=ifnone];
	"prefix(1)$0" -> "[Dd]ate$(1)"	[label=ifnone];
	"prefix(1)$0" -> "(1)"	[label=ifnone];
	"attr(1)$0" -> "[<_ast.Constant object at 0x7fd4c04ff580>, <_ast.Constant object at 0x7fd4c04ffe20>, <_ast.Constant object at 0x7fd4c04ff4f0>, <_\
ast.Constant object at 0x7fd4c04ffee0>, <_ast.Constant object at 0x7fd4c04ffa30>, <_ast.Constant object at 0x7fd4c04ffcd0>, <_ast.Constant \
object at 0x7fd4c04ff700>](1)"	[label=assignedFrom];
	"attr(1)$1" -> "attr(1)$0"	[label=append];
	"attr(1)$1" -> "Date(1)"	[label=append];
	"attr(1)$2" -> "attr(1)$1"	[label=Add];
	"attr(1)$2" -> "[<_ast.Constant object at 0x7fd4902abc40>, <_ast.Constant object at 0x7fd4902abca0>](1)"	[label=Add];
	"n(1)" -> "attr(1)$2"	[label=iteratorOf];
	"df(1)$0" -> "df(1)"	[label=getattr];
	"df(1)$0" -> "field(1)$0"	[label=getattr];
	"df(1)$0" -> "n(1)"	[label=getattr];
	"df(1)$1" -> "field_name(1)"	[label=drop];
	"df(1)$1" -> "df(1)$0"	[label=drop];
	"a(2)" -> "ifnone[0]"	[label=_argToVar];
	"b(2)" -> "ifnone[1]"	[label=_argToVar];
	"sklearn.base" -> "oop-approach-to-fe-and-models.ipynb"	[label=importedBy];
	BaseEstimator -> "sklearn.base"	[label=importedBy];
	"BaseEstimator(0)" -> "oop-approach-to-fe-and-models.ipynb"	[label=appearsIn];
	"BaseEstimator(0)" -> BaseEstimator	[label=assignedFrom];
	TransformerMixin -> "sklearn.base"	[label=importedBy];
	"TransformerMixin(0)" -> "oop-approach-to-fe-and-models.ipynb"	[label=appearsIn];
	"TransformerMixin(0)" -> TransformerMixin	[label=assignedFrom];
	"a1(3)" -> "qwk[0]"	[label=_argToVar];
	"a2(3)" -> "qwk[1]"	[label=_argToVar];
	"max_rat(3)$0" -> "3(3)"	[label=assignedFrom];
	"a1(3)$0" -> "a1(3)$0"	[label=asarray];
	"a1(3)$0" -> "np(3)"	[label=asarray];
	"a1(3)$0" -> "int(3)"	[label=asarray];
	"a2(3)$0" -> "np(3)"	[label=asarray];
	"a2(3)$0" -> "int(3)"	[label=asarray];
	"a2(3)$0" -> "a2(3)$0"	[label=asarray];
	"hist1(3)$0" -> "max_rat(3)$0"	[label=zeros];
	"hist1(3)$0" -> "np(3)"	[label=zeros];
	"hist1(3)$0" -> "1(3)"	[label=zeros];
	"hist2(3)$0" -> "max_rat(3)$0"	[label=zeros];
	"hist2(3)$0" -> "np(3)"	[label=zeros];
	"hist2(3)$0" -> "1(3)"	[label=zeros];
	"o(3)$0" -> "0(3)"	[label=assignedFrom];
	"k(3)" -> "a1(3)$0"	[label=iteratorOf];
	"k(3)" -> "0(3)"	[label=iteratorOf];
	"k(3)" -> "range(3)"	[label=iteratorOf];
	"i(3)$0" -> "max_rat(3)$0"	[label=iteratorOf];
	"i(3)$0" -> "a1(3)$0"	[label=assignedFrom];
	"i(3)$0" -> "a2(3)$0"	[label=assignedFrom];
	"i(3)$0" -> "1(3)"	[label=iteratorOf];
	"i(3)$0" -> "k(3)"	[label=assignedFrom];
	"i(3)$0" -> "range(3)"	[label=iteratorOf];
	"j(3)$0" -> "max_rat(3)$0"	[label=iteratorOf];
	"j(3)$0" -> "a1(3)$0"	[label=assignedFrom];
	"j(3)$0" -> "a2(3)$0"	[label=assignedFrom];
	"j(3)$0" -> "1(3)"	[label=iteratorOf];
	"j(3)$0" -> "k(3)"	[label=assignedFrom];
	"j(3)$0" -> "range(3)"	[label=iteratorOf];
	"hist1(3)$1" -> "hist1(3)$0"	[label=Add];
	"hist1(3)$1" -> "1(3)"	[label=Add];
	"hist2(3)$1" -> "1(3)"	[label=Add];
	"hist2(3)$1" -> "hist2(3)$0"	[label=Add];
	"o(3)$1" -> "o(3)$0"	[label=Add];
	"o(3)$1" -> "i(3)$0"	[label=Add];
	"o(3)$1" -> "j(3)$0"	[label=Add];
	"e(3)$0" -> "0(3)"	[label=assignedFrom];
	"e(3)$1" -> "i(3)$0"	[label=Add];
	"e(3)$1" -> "j(3)$0"	[label=Add];
	"e(3)$1" -> "hist1(3)$1"	[label=Add];
	"e(3)$1" -> "hist2(3)$1"	[label=Add];
	"e(3)$1" -> "e(3)$0"	[label=Add];
	"e(3)$2" -> "a1(3)$0"	[label=Div];
	"e(3)$2" -> "0(3)"	[label=Div];
	"e(3)$2" -> "e(3)$1"	[label=Div];
	"y_true(4)" -> "eval_qwk_lgb[0]"	[label=_argToVar];
	"y_pred(4)" -> "eval_qwk_lgb[1]"	[label=_argToVar];
	"y_pred(4)$0" -> "y_true(4)"	[label=argmax];
	"y_pred(4)$0" -> "y_pred(4)"	[label=argmax];
	"y_pred(4)$0" -> "len(4)"	[label=argmax];
	"y_pred(4)$0" -> "np(4)"	[label=argmax];
	"y_pred(4)$0" -> "1(4)"	[label=argmax];
	"y_pred(4)$0" -> "0(4)"	[label=argmax];
	"y_pred(5)" -> "eval_qwk_xgb[0]"	[label=_argToVar];
	"y_true(5)" -> "eval_qwk_xgb[1]"	[label=_argToVar];
	"y_true(5)$0" -> "y_true(5)"	[label=get_label];
	"y_pred(5)$0" -> "y_pred(5)"	[label=argmax];
	"y_pred(5)$0" -> "1(5)"	[label=argmax];
	"self(7)" -> "__init__[0]"	[label=_argToVar];
	"self(7)$0" -> "self(7)"	[label=LGBMClassifier];
	"self(7)$0" -> "lgb(7)"	[label=LGBMClassifier];
	"self(8)" -> "fit[0]"	[label=_argToVar];
	"X_train(8)" -> "fit[1]"	[label=_argToVar];
	"y_train(8)" -> "fit[2]"	[label=_argToVar];
	"X_valid(8)" -> "fit[3]"	[label=_argToVar];
	"y_valid(8)" -> "fit[4]"	[label=_argToVar];
	"X_holdout(8)" -> "fit[5]"	[label=_argToVar];
	"y_holdout(8)" -> "fit[6]"	[label=_argToVar];
	"params(8)" -> "fit[7]"	[label=_argToVar];
	"eval_set(8)$0" -> "[<_ast.Tuple object at 0x7fd500849a30>](8)"	[label=assignedFrom];
	"eval_names(8)$0" -> "[<_ast.Constant object at 0x7fd500849400>](8)"	[label=assignedFrom];
	"self(8)$0" -> "self(8)"	[label=set_params];
	"self(8)$0" -> "params(8)"	[label=set_params];
	"eval_set(8)$1" -> "X_valid(8)"	[label=append];
	"eval_set(8)$1" -> "y_valid(8)"	[label=append];
	"eval_set(8)$1" -> "eval_set(8)$0"	[label=append];
	"eval_names(8)$1" -> "eval_names(8)$0"	[label=append];
	"eval_names(8)$1" -> "valid(8)"	[label=append];
	"eval_set(8)$2" -> "X_holdout(8)"	[label=append];
	"eval_set(8)$2" -> "y_holdout(8)"	[label=append];
	"eval_set(8)$2" -> "eval_set(8)$1"	[label=append];
	"eval_names(8)$2" -> "eval_names(8)$1"	[label=append];
	"eval_names(8)$2" -> "holdout(8)"	[label=append];
	"cat_cols(8)$0" -> "X_train(8)"	[label=assignedFrom];
	"cat_cols(8)$0" -> "params(8)"	[label=assignedFrom];
	"cat_cols(8)$0" -> "cat_cols(8)$0"	[label=assignedFrom];
	"cat_cols(8)$0" -> "col(8)"	[label=assignedFrom];
	"categorical_columns(8)$0" -> "params(8)"	[label=assignedFrom];
	"categorical_columns(8)$0" -> "cat_cols(8)$0"	[label=assignedFrom];
	"categorical_columns(8)$1" -> "auto(8)"	[label=assignedFrom];
	"categorical_columns(8)$2" -> "auto(8)"	[label=assignedFrom];
	"self(8)$1" -> "self(8)$0"	[label=fit];
	"self(8)$2" -> "self(8)$1"	[label=assignedFrom];
	"self(8)$3" -> "self(8)$2"	[label=assignedFrom];
	"self(9)" -> "predict_proba[0]"	[label=_argToVar];
	"X_test(9)" -> "predict_proba[1]"	[label=_argToVar];
	"self(11)" -> "__init__[0]"	[label=_argToVar];
	"self(11)$0" -> "self(11)"	[label=CatBoostClassifier];
	"self(11)$0" -> "cat(11)"	[label=CatBoostClassifier];
	"self(12)" -> "fit[0]"	[label=_argToVar];
	"X_train(12)" -> "fit[1]"	[label=_argToVar];
	"y_train(12)" -> "fit[2]"	[label=_argToVar];
	"X_valid(12)" -> "fit[3]"	[label=_argToVar];
	"y_valid(12)" -> "fit[4]"	[label=_argToVar];
	"X_holdout(12)" -> "fit[5]"	[label=_argToVar];
	"y_holdout(12)" -> "fit[6]"	[label=_argToVar];
	"params(12)" -> "fit[7]"	[label=_argToVar];
	"eval_set(12)$0" -> "[<_ast.Tuple object at 0x7fd4c04cc970>](12)"	[label=assignedFrom];
	"self(12)$0" -> "self(12)"	[label=set_params];
	"self(12)$0" -> "params(12)"	[label=set_params];
	"self(12)$0" -> "k(12)"	[label=set_params];
	"self(12)$0" -> "v(12)"	[label=set_params];
	"self(12)$0" -> "cat_cols(12)"	[label=set_params];
	"eval_set(12)$1" -> "X_valid(12)"	[label=append];
	"eval_set(12)$1" -> "y_valid(12)"	[label=append];
	"eval_set(12)$1" -> "eval_set(12)$0"	[label=append];
	"eval_set(12)$2" -> "X_holdout(12)"	[label=append];
	"eval_set(12)$2" -> "y_holdout(12)"	[label=append];
	"eval_set(12)$2" -> "eval_set(12)$1"	[label=append];
	"cat_cols(12)$0" -> "X_train(12)"	[label=assignedFrom];
	"cat_cols(12)$0" -> "params(12)"	[label=assignedFrom];
	"cat_cols(12)$0" -> "cat_cols(12)$0"	[label=assignedFrom];
	"cat_cols(12)$0" -> "col(12)"	[label=assignedFrom];
	"categorical_columns(12)$0" -> "params(12)"	[label=assignedFrom];
	"categorical_columns(12)$0" -> "cat_cols(12)$0"	[label=assignedFrom];
	"categorical_columns(12)$1" -> "None(12)"	[label=assignedFrom];
	"categorical_columns(12)$2" -> "None(12)"	[label=assignedFrom];
	"self(12)$1" -> "self(12)$0"	[label=fit];
	"self(12)$2" -> "self(12)$1"	[label=assignedFrom];
	"self(12)$3" -> "self(12)$2"	[label=assignedFrom];
	"self(13)" -> "predict_proba[0]"	[label=_argToVar];
	"X_test(13)" -> "predict_proba[1]"	[label=_argToVar];
	"self(15)" -> "__init__[0]"	[label=_argToVar];
	"self(15)$0" -> "self(15)"	[label=XGBClassifier];
	"self(15)$0" -> "xgb(15)"	[label=XGBClassifier];
	"self(16)" -> "fit[0]"	[label=_argToVar];
	"X_train(16)" -> "fit[1]"	[label=_argToVar];
	"y_train(16)" -> "fit[2]"	[label=_argToVar];
	"X_valid(16)" -> "fit[3]"	[label=_argToVar];
	"y_valid(16)" -> "fit[4]"	[label=_argToVar];
	"X_holdout(16)" -> "fit[5]"	[label=_argToVar];
	"y_holdout(16)" -> "fit[6]"	[label=_argToVar];
	"params(16)" -> "fit[7]"	[label=_argToVar];
	"eval_set(16)$0" -> "[<_ast.Tuple object at 0x7fd4d098d160>](16)"	[label=assignedFrom];
	"self(16)$0" -> "self(16)"	[label=set_params];
	"self(16)$0" -> "params(16)"	[label=set_params];
	"eval_set(16)$1" -> "X_valid(16)"	[label=append];
	"eval_set(16)$1" -> "y_valid(16)"	[label=append];
	"eval_set(16)$1" -> "eval_set(16)$0"	[label=append];
	"eval_set(16)$2" -> "X_holdout(16)"	[label=append];
	"eval_set(16)$2" -> "y_holdout(16)"	[label=append];
	"eval_set(16)$2" -> "eval_set(16)$1"	[label=append];
	"self(16)$1" -> "self(16)$0"	[label=fit];
	"scores(16)$0" -> "self(16)$1"	[label=evals_result];
	"self(16)$2" -> "self(16)$1"	[label=assignedFrom];
	"self(16)$2" -> "scores(16)$0"	[label=assignedFrom];
	"self(16)$2" -> "k(16)"	[label=assignedFrom];
	"self(16)$2" -> "m(16)"	[label=assignedFrom];
	"self(16)$2" -> "m_v(16)"	[label=assignedFrom];
	"self(16)$2" -> "1(16)"	[label=assignedFrom];
	"self(16)$2" -> "v(16)"	[label=assignedFrom];
	"self(16)$3" -> "self(16)$2"	[label=assignedFrom];
	"self(16)$3" -> "k(16)"	[label=assignedFrom];
	"self(16)$3" -> "m(16)"	[label=assignedFrom];
	"self(16)$3" -> "v(16)"	[label=assignedFrom];
	"self(16)$3" -> "self(16)$3"	[label=assignedFrom];
	"self(16)$3" -> "cappa(16)"	[label=assignedFrom];
	"self(16)$3" -> "n(16)"	[label=assignedFrom];
	"self(16)$4" -> "self(16)$3"	[label=assignedFrom];
	"self(17)" -> "predict_proba[0]"	[label=_argToVar];
	"X_test(17)" -> "predict_proba[1]"	[label=_argToVar];
	"self(19)" -> "__init__[0]"	[label=_argToVar];
	"convert_cyclical(19)" -> "__init__[1]"	[label=_argToVar];
	"create_interactions(19)" -> "__init__[2]"	[label=_argToVar];
	"n_interactions(19)" -> "__init__[3]"	[label=_argToVar];
	"self(19)$0" -> "self(19)"	[label=assignedFrom];
	"self(19)$0" -> "convert_cyclical(19)"	[label=assignedFrom];
	"self(19)$1" -> "create_interactions(19)"	[label=assignedFrom];
	"self(19)$1" -> "self(19)$0"	[label=assignedFrom];
	"self(19)$2" -> "self(19)$1"	[label=assignedFrom];
	"self(19)$2" -> "None(19)"	[label=assignedFrom];
	"self(19)$3" -> "n_interactions(19)"	[label=assignedFrom];
	"self(19)$3" -> "self(19)$2"	[label=assignedFrom];
	"self(20)" -> "fit[0]"	[label=_argToVar];
	"X(20)" -> "fit[1]"	[label=_argToVar];
	"y(20)" -> "fit[2]"	[label=_argToVar];
	"self(20)$0" -> "self(20)"	[label=assignedFrom];
	"self(20)$0" -> "X(20)"	[label=assignedFrom];
	"self(20)$0" -> "col(20)"	[label=assignedFrom];
	"self(20)$0" -> "sum(20)"	[label=assignedFrom];
	"self(20)$0" -> "mean(20)"	[label=assignedFrom];
	"self(20)$0" -> "max(20)"	[label=assignedFrom];
	"self(20)$0" -> "std(20)"	[label=assignedFrom];
	"self(20)$0" -> "attempt(20)"	[label=assignedFrom];
	"self(20)$1" -> "self(20)$0"	[label=choice];
	"self(20)$1" -> "self(20)$1"	[label=choice];
	"self(20)$1" -> "np(20)"	[label=choice];
	"self(20)$2" -> "self(20)$1"	[label=choice];
	"self(20)$2" -> "np(20)"	[label=choice];
	"self(20)$2" -> "self(20)$2"	[label=choice];
	"self(21)" -> "transform[0]"	[label=_argToVar];
	"X(21)" -> "transform[1]"	[label=_argToVar];
	"y(21)" -> "transform[2]"	[label=_argToVar];
	"data(21)$0" -> "X(21)"	[label=deepcopy];
	"data(21)$0" -> "copy(21)"	[label=deepcopy];
	"col1(21)" -> "self(21)"	[label=iteratorOf];
	"col2(21)" -> "self(21)"	[label=iteratorOf];
	"data(21)$1" -> "data(21)$0"	[label=Mult];
	"data(21)$1" -> "col1(21)"	[label=Mult];
	"data(21)$1" -> "col2(21)"	[label=Mult];
	"data(21)$1" -> "data(21)$1"	[label=Mult];
	"data(21)$2" -> "data(21)$1"	[label=sin];
	"data(21)$2" -> "data(21)$2"	[label=sin];
	"data(21)$2" -> "np(21)"	[label=sin];
	"data(21)$2" -> "2(21)"	[label=sin];
	"data(21)$2" -> "timestampHour(21)"	[label=sin];
	"data(21)$2" -> "23.0(21)"	[label=sin];
	"data(21)$3" -> "data(21)$2"	[label=sin];
	"data(21)$3" -> "np(21)"	[label=sin];
	"data(21)$3" -> "2(21)"	[label=sin];
	"data(21)$3" -> "23.0(21)"	[label=sin];
	"data(21)$3" -> "data(21)$3"	[label=sin];
	"data(21)$3" -> "timestampMonth(21)"	[label=sin];
	"data(21)$4" -> "np(21)"	[label=sin];
	"data(21)$4" -> "2(21)"	[label=sin];
	"data(21)$4" -> "23.0(21)"	[label=sin];
	"data(21)$4" -> "data(21)$3"	[label=sin];
	"data(21)$4" -> "data(21)$4"	[label=sin];
	"data(21)$4" -> "timestampWeek(21)"	[label=sin];
	"data(21)$5" -> "np(21)"	[label=sin];
	"data(21)$5" -> "2(21)"	[label=sin];
	"data(21)$5" -> "23.0(21)"	[label=sin];
	"data(21)$5" -> "data(21)$4"	[label=sin];
	"data(21)$5" -> "data(21)$5"	[label=sin];
	"data(21)$5" -> "timestampMinute(21)"	[label=sin];
	"data(21)$6" -> "data(21)$5"	[label=transform];
	"data(21)$6" -> "[<_ast.Constant object at 0x7fd4d09a8280>](21)"	[label=transform];
	"data(21)$6" -> "Clip(21)"	[label=transform];
	"data(21)$6" -> "count(21)"	[label=transform];
	"data(21)$7" -> "data(21)$6"	[label=transform];
	"data(21)$7" -> "[<_ast.Constant object at 0x7fd4d09a8640>](21)"	[label=transform];
	"data(21)$7" -> "duration_mean(21)"	[label=transform];
	"data(21)$7" -> "mean(21)"	[label=transform];
	"data(21)$8" -> "data(21)$7"	[label=transform];
	"data(21)$8" -> "[<_ast.Constant object at 0x7fd4d09a89d0>](21)"	[label=transform];
	"data(21)$8" -> "session_title(21)"	[label=transform];
	"data(21)$8" -> "nunique(21)"	[label=transform];
	"data(21)$9" -> "data(21)$8"	[label=sum];
	"data(21)$9" -> "[<_ast.Constant object at 0x7fd4d09a8d30>, <_ast.Constant object at 0x7fd4d09a8d60>, <_ast.Constant object at 0x7fd4d09a8a30>, <_\
ast.Constant object at 0x7fd4d09a8d90>, <_ast.Constant object at 0x7fd4d09a8dc0>, <_ast.Constant object at 0x7fd4d09a8df0>, <_ast.Constant \
object at 0x7fd4d09a8e20>, <_ast.Constant object at 0x7fd4d09a8e50>, <_ast.Constant object at 0x7fd4d09a8e80>, <_ast.Constant object \
at 0x7fd4d09a8eb0>, <_ast.Constant object at 0x7fd4d09a8ee0>, <_ast.Constant object at 0x7fd4d09a8f10>, <_ast.Constant object at \
0x7fd4d09a8910>, <_ast.Constant object at 0x7fd4d09a8f40>, <_ast.Constant object at 0x7fd4d09a8f70>, <_ast.Constant object at 0x7fd4d09a8fa0>, <_\
ast.Constant object at 0x7fd4d09a8fd0>, <_ast.Constant object at 0x7fd4d09a8700>, <_ast.Constant object at 0x7fd4d09a82e0>, <_ast.Constant \
object at 0x7fd4d097f040>, <_ast.Constant object at 0x7fd4d097f070>, <_ast.Constant object at 0x7fd4d097f0a0>, <_ast.Constant object \
at 0x7fd4d097f0d0>, <_ast.Constant object at 0x7fd4d097f130>, <_ast.Constant object at 0x7fd4d097f190>, <_ast.Constant object at \
0x7fd4d097f1c0>, <_ast.Constant object at 0x7fd4d097f1f0>, <_ast.Constant object at 0x7fd4d097f220>, <_ast.Constant object at 0x7fd4d097f250>, <_\
ast.Constant object at 0x7fd4d097f280>, <_ast.Constant object at 0x7fd4d097f2b0>, <_ast.Constant object at 0x7fd4d097f2e0>, <_ast.Constant \
object at 0x7fd4d097f310>, <_ast.Constant object at 0x7fd4d097f340>, <_ast.Constant object at 0x7fd4d097f370>, <_ast.Constant object \
at 0x7fd4d097f3a0>, <_ast.Constant object at 0x7fd4d097f3d0>, <_ast.Constant object at 0x7fd4d097f400>, <_ast.Constant object at \
0x7fd4d097f430>, <_ast.Constant object at 0x7fd4d097f460>, <_ast.Constant object at 0x7fd4d097f160>, <_ast.Constant object at 0x7fd4d097f490>](\
21)"	[label=sum];
	"data(21)$9" -> "1(21)"	[label=sum];
	"self(22)" -> "fit_transform[0]"	[label=_argToVar];
	"X(22)" -> "fit_transform[1]"	[label=_argToVar];
	"y(22)" -> "fit_transform[2]"	[label=_argToVar];
	"data(22)$0" -> "X(22)"	[label=deepcopy];
	"data(22)$0" -> "copy(22)"	[label=deepcopy];
	"self(22)$0" -> "self(22)"	[label=fit];
	"self(22)$0" -> "data(22)$0"	[label=fit];
	"self(24)" -> "__init__[0]"	[label=_argToVar];
	"main_cat_features(24)" -> "__init__[1]"	[label=_argToVar];
	"num_cols(24)" -> "__init__[2]"	[label=_argToVar];
	"self(24)$0" -> "self(24)"	[label=assignedFrom];
	"self(24)$0" -> "main_cat_features(24)"	[label=assignedFrom];
	"self(24)$1" -> "num_cols(24)"	[label=assignedFrom];
	"self(24)$1" -> "self(24)$0"	[label=assignedFrom];
	"self(25)" -> "fit[0]"	[label=_argToVar];
	"X(25)" -> "fit[1]"	[label=_argToVar];
	"y(25)" -> "fit[2]"	[label=_argToVar];
	"self(25)$0" -> "self(25)"	[label=assignedFrom];
	"self(25)$0" -> "X(25)"	[label=assignedFrom];
	"self(25)$0" -> "col(25)"	[label=assignedFrom];
	"self(25)$0" -> "sum(25)"	[label=assignedFrom];
	"self(25)$0" -> "mean(25)"	[label=assignedFrom];
	"self(25)$0" -> "max(25)"	[label=assignedFrom];
	"self(25)$0" -> "std(25)"	[label=assignedFrom];
	"self(25)$0" -> "attempt(25)"	[label=assignedFrom];
	"self(26)" -> "transform[0]"	[label=_argToVar];
	"X(26)" -> "transform[1]"	[label=_argToVar];
	"y(26)" -> "transform[2]"	[label=_argToVar];
	"data(26)$0" -> "X(26)"	[label=deepcopy];
	"data(26)$0" -> "copy(26)"	[label=deepcopy];
	"self(27)" -> "fit_transform[0]"	[label=_argToVar];
	"X(27)" -> "fit_transform[1]"	[label=_argToVar];
	"y(27)" -> "fit_transform[2]"	[label=_argToVar];
	"data(27)$0" -> "X(27)"	[label=deepcopy];
	"data(27)$0" -> "copy(27)"	[label=deepcopy];
	"self(27)$0" -> "self(27)"	[label=fit];
	"self(27)$0" -> "data(27)$0"	[label=fit];
	"self(29)" -> "__init__[0]"	[label=_argToVar];
	"columns(29)" -> "__init__[1]"	[label=_argToVar];
	"model_wrapper(29)" -> "__init__[2]"	[label=_argToVar];
	"self(29)$0" -> "self(29)"	[label=assignedFrom];
	"self(29)$0" -> "columns(29)"	[label=assignedFrom];
	"self(29)$1" -> "model_wrapper(29)"	[label=assignedFrom];
	"self(29)$1" -> "self(29)$0"	[label=assignedFrom];
	"self(29)$2" -> "self(29)$1"	[label=assignedFrom];
	"self(29)$2" -> "False(29)"	[label=assignedFrom];
	"self(29)$3" -> "self(29)$2"	[label=assignedFrom];
	"self(29)$3" -> "None(29)"	[label=assignedFrom];
	"self(30)" -> "fit[0]"	[label=_argToVar];
	"X(30)" -> "fit[1]"	[label=_argToVar];
	"y(30)" -> "fit[2]"	[label=_argToVar];
	"X_holdout(30)" -> "fit[3]"	[label=_argToVar];
	"y_holdout(30)" -> "fit[4]"	[label=_argToVar];
	"folds(30)" -> "fit[5]"	[label=_argToVar];
	"params(30)" -> "fit[6]"	[label=_argToVar];
	"eval_metric(30)" -> "fit[7]"	[label=_argToVar];
	"cols_to_drop(30)" -> "fit[8]"	[label=_argToVar];
	"preprocesser(30)" -> "fit[9]"	[label=_argToVar];
	"transformers(30)" -> "fit[10]"	[label=_argToVar];
	"adversarial(30)" -> "fit[11]"	[label=_argToVar];
	"plot(30)" -> "fit[12]"	[label=_argToVar];
	"folds(30)$0" -> "3(30)"	[label=KFold];
	"folds(30)$0" -> "42(30)"	[label=KFold];
	"self(30)$0" -> "self(30)"	[label=assignedFrom];
	"self(30)$0" -> "True(30)"	[label=assignedFrom];
	"self(30)$1" -> "X(30)"	[label=assignedFrom];
	"self(30)$1" -> "self(30)$0"	[label=assignedFrom];
	"self(30)$1" -> "self(30)$1"	[label=assignedFrom];
	"self(30)$1" -> "None(30)"	[label=assignedFrom];
	"self(30)$2" -> "self(30)$1"	[label=DataFrame];
	"self(30)$2" -> "pd(30)"	[label=DataFrame];
	"self(30)$2" -> "[<_ast.Constant object at 0x7fd4d0977370>, <_ast.Constant object at 0x7fd4d09773a0>](30)"	[label=DataFrame];
	"self(30)$3" -> "transformers(30)"	[label=assignedFrom];
	"self(30)$3" -> "self(30)$2"	[label=assignedFrom];
	"self(30)$3" -> "k(30)"	[label=assignedFrom];
	"self(30)$3" -> "[](30)"	[label=assignedFrom];
	"self(30)$4" -> "transformers(30)"	[label=assignedFrom];
	"self(30)$4" -> "self(30)$3"	[label=assignedFrom];
	"self(30)$5" -> "[](30)"	[label=assignedFrom];
	"self(30)$5" -> "self(30)$4"	[label=assignedFrom];
	"self(30)$6" -> "eval_metric(30)"	[label=assignedFrom];
	"self(30)$6" -> "self(30)$5"	[label=assignedFrom];
	"n_target(30)$0" -> "4(30)"	[label=assignedFrom];
	"self(30)$7" -> "X(30)"	[label=zeros];
	"self(30)$7" -> "self(30)$6"	[label=zeros];
	"self(30)$7" -> "n_target(30)$0"	[label=zeros];
	"self(30)$7" -> "np(30)"	[label=zeros];
	"self(30)$7" -> "len(30)"	[label=zeros];
	"self(30)$8" -> "n_target(30)$0"	[label=assignedFrom];
	"self(30)$8" -> "self(30)$7"	[label=assignedFrom];
	"X(30)$0" -> "X(30)"	[label=assignedFrom];
	"X(30)$0" -> "self(30)$8"	[label=assignedFrom];
	"X_holdout(30)$0" -> "X_holdout(30)"	[label=assignedFrom];
	"X_holdout(30)$0" -> "self(30)$8"	[label=assignedFrom];
	"self(30)$9" -> "preprocesser(30)"	[label=assignedFrom];
	"self(30)$9" -> "self(30)$8"	[label=assignedFrom];
	"self(30)$10" -> "y(30)"	[label=fit];
	"self(30)$10" -> "X(30)$0"	[label=fit];
	"self(30)$10" -> "self(30)$9"	[label=fit];
	"X(30)$1" -> "y(30)"	[label=transform];
	"X(30)$1" -> "self(30)$10"	[label=transform];
	"X(30)$1" -> "X(30)$1"	[label=transform];
	"self(30)$11" -> "self(30)$10"	[label=tolist];
	"self(30)$11" -> "X(30)$1"	[label=tolist];
	"X_holdout(30)$1" -> "self(30)$11"	[label=transform];
	"X_holdout(30)$1" -> "X_holdout(30)$1"	[label=transform];
	"fold_n(30)" -> "y(30)"	[label=iteratorOf];
	"fold_n(30)" -> "folds(30)$0"	[label=iteratorOf];
	"fold_n(30)" -> "X(30)$1"	[label=iteratorOf];
	"fold_n(30)" -> "enumerate(30)"	[label=iteratorOf];
	"fold_n(30)" -> "installation_id(30)"	[label=iteratorOf];
	"train_index(30)" -> "y(30)"	[label=iteratorOf];
	"train_index(30)" -> "folds(30)$0"	[label=iteratorOf];
	"train_index(30)" -> "X(30)$1"	[label=iteratorOf];
	"train_index(30)" -> "enumerate(30)"	[label=iteratorOf];
	"train_index(30)" -> "installation_id(30)"	[label=iteratorOf];
	"valid_index(30)" -> "y(30)"	[label=iteratorOf];
	"valid_index(30)" -> "folds(30)$0"	[label=iteratorOf];
	"valid_index(30)" -> "X(30)$1"	[label=iteratorOf];
	"valid_index(30)" -> "enumerate(30)"	[label=iteratorOf];
	"valid_index(30)" -> "installation_id(30)"	[label=iteratorOf];
	"X_hold(30)$0" -> "X_holdout(30)$1"	[label=copy];
	"X_hold(30)$1" -> "None(30)"	[label=assignedFrom];
	"print[438/16]" -> "fold_n(30)"	[label=print];
	"print[438/16]" -> "Fold (30)"	[label=print];
	"print[438/16]" -> "1(30)"	[label=print];
	"print[438/16]" -> " started at (30)"	[label=print];
	"print[438/16]" -> "time(30)"	[label=print];
	"X_train(30)$0" -> "X(30)$1"	[label=assignedFrom];
	"X_train(30)$0" -> "train_index(30)"	[label=assignedFrom];
	"X_train(30)$0" -> "valid_index(30)"	[label=assignedFrom];
	"X_valid(30)$0" -> "X(30)$1"	[label=assignedFrom];
	"X_valid(30)$0" -> "train_index(30)"	[label=assignedFrom];
	"X_valid(30)$0" -> "valid_index(30)"	[label=assignedFrom];
	"y_train(30)$0" -> "y(30)"	[label=assignedFrom];
	"y_train(30)$0" -> "train_index(30)"	[label=assignedFrom];
	"y_train(30)$0" -> "valid_index(30)"	[label=assignedFrom];
	"y_valid(30)$0" -> "y(30)"	[label=assignedFrom];
	"y_valid(30)$0" -> "train_index(30)"	[label=assignedFrom];
	"y_valid(30)$0" -> "valid_index(30)"	[label=assignedFrom];
	"X_train(30)$1" -> "X(30)$1"	[label=assignedFrom];
	"X_train(30)$1" -> "self(30)$11"	[label=assignedFrom];
	"y_train(30)$1" -> "y(30)"	[label=assignedFrom];
	"X_valid(30)$1" -> "None(30)"	[label=assignedFrom];
	"y_valid(30)$1" -> "None(30)"	[label=assignedFrom];
	"datasets(30)$0" -> "X_holdout(30)$1"	[label=assignedFrom];
	"datasets(30)$0" -> "X_hold(30)$1"	[label=assignedFrom];
	"datasets(30)$0" -> "X_train(30)$1"	[label=assignedFrom];
	"datasets(30)$0" -> "y_train(30)$1"	[label=assignedFrom];
	"datasets(30)$0" -> "X_valid(30)$1"	[label=assignedFrom];
	"X_train(30)$2" -> "cols_to_drop(30)"	[label=transform_];
	"X_train(30)$2" -> "self(30)$11"	[label=transform_];
	"X_train(30)$2" -> "datasets(30)$0"	[label=transform_];
	"X_valid(30)$2" -> "cols_to_drop(30)"	[label=transform_];
	"X_valid(30)$2" -> "self(30)$11"	[label=transform_];
	"X_valid(30)$2" -> "datasets(30)$0"	[label=transform_];
	"X_hold(30)$2" -> "cols_to_drop(30)"	[label=transform_];
	"X_hold(30)$2" -> "self(30)$11"	[label=transform_];
	"X_hold(30)$2" -> "datasets(30)$0"	[label=transform_];
	"self(30)$12" -> "self(30)$11"	[label=tolist];
	"self(30)$12" -> "X_train(30)$2"	[label=tolist];
	"model(30)$0" -> "self(30)$12"	[label=deepcopy];
	"model(30)$0" -> "copy(30)"	[label=deepcopy];
	"X_new1(30)$0" -> "X_train(30)$2"	[label=copy];
	"X_new2(30)$0" -> "X_valid(30)$2"	[label=copy];
	"X_new2(30)$1" -> "X_holdout(30)$1"	[label=copy];
	"X_new(30)$0" -> "pd(30)"	[label=concat];
	"X_new(30)$0" -> "[<_ast.Name object at 0x7fd500814d60>, <_ast.Name object at 0x7fd500814d90>](30)"	[label=concat];
	"X_new(30)$0" -> "0(30)"	[label=concat];
	"y_new(30)$0" -> "np(30)"	[label=hstack];
	"y_new(30)$0" -> "X_new1(30)$0"	[label=hstack];
	"y_new(30)$0" -> "X_new2(30)$1"	[label=hstack];
	"y_new(30)$0" -> "0(30)"	[label=hstack];
	"X_train(30)$3" -> "X_new(30)$0"	[label=train_test_split];
	"X_train(30)$3" -> "y_new(30)$0"	[label=train_test_split];
	"X_valid(30)$3" -> "X_new(30)$0"	[label=train_test_split];
	"X_valid(30)$3" -> "y_new(30)$0"	[label=train_test_split];
	"y_train(30)$2" -> "X_new(30)$0"	[label=train_test_split];
	"y_train(30)$2" -> "y_new(30)$0"	[label=train_test_split];
	"y_valid(30)$2" -> "X_new(30)$0"	[label=train_test_split];
	"y_valid(30)$2" -> "y_new(30)$0"	[label=train_test_split];
	"model(30)$1" -> "y_holdout(30)"	[label=fit];
	"model(30)$1" -> "X_hold(30)$2"	[label=fit];
	"model(30)$1" -> "model(30)$0"	[label=fit];
	"model(30)$1" -> "X_train(30)$3"	[label=fit];
	"model(30)$1" -> "X_valid(30)$3"	[label=fit];
	"model(30)$1" -> "y_train(30)$2"	[label=fit];
	"model(30)$1" -> "y_valid(30)$2"	[label=fit];
	"self(30)$13" -> "self(30)$12"	[label=assignedFrom];
	"self(30)$13" -> "model(30)$1"	[label=assignedFrom];
	"self(30)$14" -> "np(30)"	[label=zeros];
	"self(30)$14" -> "X(30)$1"	[label=zeros];
	"self(30)$14" -> "1(30)"	[label=zeros];
	"self(30)$14" -> "0(30)"	[label=zeros];
	"self(30)$14" -> "self(30)$13"	[label=zeros];
	"self(30)$14" -> "self(30)$14"	[label=zeros];
	"self(30)$15" -> "n_target(30)$0"	[label=reshape];
	"self(30)$15" -> "1(30)"	[label=reshape];
	"self(30)$15" -> "X_valid(30)$3"	[label=reshape];
	"self(30)$15" -> "model(30)$1"	[label=reshape];
	"self(30)$15" -> "self(30)$14"	[label=reshape];
	"fold_importance(30)$0" -> "pd(30)"	[label=DataFrame];
	"fold_importance(30)$0" -> "X_train(30)$3"	[label=DataFrame];
	"fold_importance(30)$0" -> "model(30)$1"	[label=DataFrame];
	"fold_importance(30)$0" -> "list(30)"	[label=DataFrame];
	"fold_importance(30)$0" -> "zip(30)"	[label=DataFrame];
	"fold_importance(30)$0" -> "[<_ast.Constant object at 0x7fd50082d6d0>, <_ast.Constant object at 0x7fd50082d700>](30)"	[label=DataFrame];
	"self(30)$16" -> "self(30)$15"	[label=append];
	"self(30)$16" -> "fold_importance(30)$0"	[label=append];
	"self(30)$17" -> "model(30)$1"	[label=append];
	"self(30)$17" -> "self(30)$16"	[label=append];
	"self(30)$18" -> "self(30)$17"	[label=astype];
	"self(30)$18" -> "importance(30)"	[label=astype];
	"self(30)$18" -> "float(30)"	[label=astype];
	"self(30)$19" -> "self(30)$18"	[label=calc_scores_];
	"print[485/12]" -> "y(30)"	[label=print];
	"print[485/12]" -> "1(30)"	[label=print];
	"print[485/12]" -> "self(30)$19"	[label=print];
	"print[485/12]" -> "classification_report(30)"	[label=print];
	"fig(30)$0" -> "plt(30)"	[label=subplots];
	"fig(30)$0" -> "16(30)"	[label=subplots];
	"fig(30)$0" -> "12(30)"	[label=subplots];
	"ax(30)$0" -> "plt(30)"	[label=subplots];
	"ax(30)$0" -> "16(30)"	[label=subplots];
	"ax(30)$0" -> "12(30)"	[label=subplots];
	"plt(30)$0" -> "1(30)"	[label=subplot];
	"plt(30)$0" -> "plt(30)"	[label=subplot];
	"plt(30)$0" -> "2(30)"	[label=subplot];
	"self(30)$20" -> "self(30)$19"	[label=plot_feature_importance];
	"plt(30)$1" -> "plt(30)$0"	[label=subplot];
	"plt(30)$1" -> "2(30)"	[label=subplot];
	"self(30)$21" -> "self(30)$20"	[label=plot_metric];
	"plt(30)$2" -> "3(30)"	[label=subplot];
	"plt(30)$2" -> "2(30)"	[label=subplot];
	"plt(30)$2" -> "plt(30)$1"	[label=subplot];
	"g(30)$0" -> "y(30)"	[label=heatmap];
	"g(30)$0" -> "True(30)"	[label=heatmap];
	"g(30)$0" -> "1(30)"	[label=heatmap];
	"g(30)$0" -> "self(30)$21"	[label=heatmap];
	"g(30)$0" -> "plt(30)$2"	[label=heatmap];
	"g(30)$0" -> "sns(30)"	[label=heatmap];
	"g(30)$0" -> "confusion_matrix(30)"	[label=heatmap];
	"g(30)$0" -> "d(30)"	[label=heatmap];
	"g(30)$1" -> "g(30)$0"	[label=set];
	"plt(30)$3" -> "4(30)"	[label=subplot];
	"plt(30)$3" -> "2(30)"	[label=subplot];
	"plt(30)$3" -> "plt(30)$2"	[label=subplot];
	"plt(30)$4" -> "1(30)"	[label=hist];
	"plt(30)$4" -> "self(30)$21"	[label=hist];
	"plt(30)$4" -> "plt(30)$3"	[label=hist];
	"plt(30)$5" -> "self(30)$21"	[label=xticks];
	"plt(30)$5" -> "plt(30)$4"	[label=xticks];
	"plt(30)$5" -> "range(30)"	[label=xticks];
	"plt(30)$6" -> "plt(30)$5"	[label=title];
	"plt(30)$6" -> "Distribution of oof predictions(30)"	[label=title];
	"self(31)" -> "transform_[0]"	[label=_argToVar];
	"datasets(31)" -> "transform_[1]"	[label=_argToVar];
	"cols_to_drop(31)" -> "transform_[2]"	[label=_argToVar];
	"name(31)" -> "self(31)"	[label=iteratorOf];
	"transformer(31)" -> "self(31)"	[label=iteratorOf];
	"transformer(31)$0" -> "datasets(31)"	[label=fit];
	"transformer(31)$0" -> "transformer(31)"	[label=fit];
	"transformer(31)$0" -> "X_train(31)"	[label=fit];
	"transformer(31)$0" -> "y_train(31)"	[label=fit];
	"datasets(31)$0" -> "datasets(31)"	[label=transform];
	"datasets(31)$0" -> "transformer(31)$0"	[label=transform];
	"datasets(31)$0" -> "X_train(31)"	[label=transform];
	"datasets(31)$0" -> "datasets(31)$0"	[label=transform];
	"datasets(31)$1" -> "transformer(31)$0"	[label=transform];
	"datasets(31)$1" -> "datasets(31)$0"	[label=transform];
	"datasets(31)$1" -> "datasets(31)$1"	[label=transform];
	"datasets(31)$1" -> "X_valid(31)"	[label=transform];
	"datasets(31)$2" -> "transformer(31)$0"	[label=transform];
	"datasets(31)$2" -> "datasets(31)$1"	[label=transform];
	"datasets(31)$2" -> "datasets(31)$2"	[label=transform];
	"datasets(31)$2" -> "X_holdout(31)"	[label=transform];
	"self(31)$0" -> "self(31)"	[label=append];
	"self(31)$0" -> "transformer(31)$0"	[label=append];
	"cols_to_drop(31)$0" -> "X_train(31)"	[label=assignedFrom];
	"cols_to_drop(31)$0" -> "datasets(31)$2"	[label=assignedFrom];
	"cols_to_drop(31)$0" -> "cols_to_drop(31)$0"	[label=assignedFrom];
	"cols_to_drop(31)$0" -> "col(31)"	[label=assignedFrom];
	"self(31)$1" -> "self(31)$0"	[label=assignedFrom];
	"self(31)$1" -> "cols_to_drop(31)$0"	[label=assignedFrom];
	"datasets(31)$3" -> "X_train(31)"	[label=drop];
	"datasets(31)$3" -> "datasets(31)$2"	[label=drop];
	"datasets(31)$3" -> "cols_to_drop(31)$0"	[label=drop];
	"datasets(31)$3" -> "1(31)"	[label=drop];
	"datasets(31)$4" -> "X_valid(31)"	[label=drop];
	"datasets(31)$4" -> "cols_to_drop(31)$0"	[label=drop];
	"datasets(31)$4" -> "datasets(31)$3"	[label=drop];
	"datasets(31)$4" -> "1(31)"	[label=drop];
	"datasets(31)$5" -> "X_holdout(31)"	[label=drop];
	"datasets(31)$5" -> "cols_to_drop(31)$0"	[label=drop];
	"datasets(31)$5" -> "1(31)"	[label=drop];
	"datasets(31)$5" -> "datasets(31)$4"	[label=drop];
	"self(32)" -> "calc_scores_[0]"	[label=_argToVar];
	"datasets(32)$0" -> "self(32)"	[label=assignedFrom];
	"datasets(32)$0" -> "k(32)"	[label=assignedFrom];
	"datasets(32)$0" -> "v(32)"	[label=assignedFrom];
	"datasets(32)$0" -> "scores(32)"	[label=assignedFrom];
	"datasets(32)$0" -> "0(32)"	[label=assignedFrom];
	"datasets(32)$0" -> "len(32)"	[label=assignedFrom];
	"d(32)" -> "datasets(32)$0"	[label=iteratorOf];
	"scores(32)$0" -> "self(32)"	[label=assignedFrom];
	"scores(32)$0" -> "k(32)"	[label=assignedFrom];
	"scores(32)$0" -> "v(32)"	[label=assignedFrom];
	"scores(32)$0" -> "d(32)"	[label=assignedFrom];
	"scores(32)$0" -> "scores(32)$0"	[label=assignedFrom];
	"print[526/12]" -> "d(32)"	[label=print];
	"print[526/12]" -> "scores(32)$0"	[label=print];
	"print[526/12]" -> "CV mean score on (32)"	[label=print];
	"print[526/12]" -> ": (32)"	[label=print];
	"print[526/12]" -> "np(32)"	[label=print];
	"print[526/12]" -> ".4f(32)"	[label=print];
	"print[526/12]" -> " +/- (32)"	[label=print];
	"print[526/12]" -> " std.(32)"	[label=print];
	"self(32)$0" -> "self(32)"	[label=mean];
	"self(32)$0" -> "scores(32)$0"	[label=mean];
	"self(32)$0" -> "np(32)"	[label=mean];
	"self(33)" -> "predict[0]"	[label=_argToVar];
	"X_test(33)" -> "predict[1]"	[label=_argToVar];
	"averaging(33)" -> "predict[2]"	[label=_argToVar];
	"full_prediction(33)$0" -> "self(33)"	[label=zeros];
	"full_prediction(33)$0" -> "X_test(33)"	[label=zeros];
	"full_prediction(33)$0" -> "np(33)"	[label=zeros];
	"full_prediction(33)$0" -> "0(33)"	[label=zeros];
	"full_prediction(33)$0" -> "1(33)"	[label=zeros];
	"X_test(33)$0" -> "self(33)"	[label=transform];
	"X_test(33)$0" -> "X_test(33)$0"	[label=transform];
	"i(33)" -> "self(33)"	[label=iteratorOf];
	"i(33)" -> "range(33)"	[label=iteratorOf];
	"i(33)" -> "len(33)"	[label=iteratorOf];
	"X_t(33)$0" -> "X_test(33)$0"	[label=copy];
	"name(33)" -> "self(33)"	[label=iteratorOf];
	"transformers(33)" -> "self(33)"	[label=iteratorOf];
	"X_t(33)$1" -> "i(33)"	[label=transform];
	"X_t(33)$1" -> "transformers(33)"	[label=transform];
	"X_t(33)$1" -> "X_t(33)$1"	[label=transform];
	"cols_to_drop(33)$0" -> "self(33)"	[label=assignedFrom];
	"cols_to_drop(33)$0" -> "X_t(33)$1"	[label=assignedFrom];
	"cols_to_drop(33)$0" -> "col(33)"	[label=assignedFrom];
	"X_t(33)$2" -> "1(33)"	[label=drop];
	"X_t(33)$2" -> "X_t(33)$1"	[label=drop];
	"X_t(33)$2" -> "cols_to_drop(33)$0"	[label=drop];
	"y_pred(33)$0" -> "self(33)"	[label=reshape];
	"y_pred(33)$0" -> "full_prediction(33)$0"	[label=reshape];
	"y_pred(33)$0" -> "1(33)"	[label=reshape];
	"y_pred(33)$0" -> "i(33)"	[label=reshape];
	"y_pred(33)$0" -> "X_t(33)$2"	[label=reshape];
	"y_pred(33)$0" -> "columns(33)"	[label=reshape];
	"full_prediction(33)$1" -> "self(33)"	[label=zeros];
	"full_prediction(33)$1" -> "np(33)"	[label=zeros];
	"full_prediction(33)$1" -> "0(33)"	[label=zeros];
	"full_prediction(33)$1" -> "1(33)"	[label=zeros];
	"full_prediction(33)$1" -> "y_pred(33)$0"	[label=zeros];
	"full_prediction(33)$2" -> "y_pred(33)$0"	[label=Add];
	"full_prediction(33)$2" -> "full_prediction(33)$1"	[label=Add];
	"full_prediction(33)$3" -> "y_pred(33)$0"	[label=Add];
	"full_prediction(33)$3" -> "full_prediction(33)$2"	[label=Add];
	"full_prediction(33)$3" -> "pd(33)"	[label=Add];
	"self(34)" -> "plot_feature_importance[0]"	[label=_argToVar];
	"drop_null_importance(34)" -> "plot_feature_importance[1]"	[label=_argToVar];
	"top_n(34)" -> "plot_feature_importance[2]"	[label=_argToVar];
	"top_feats(34)$0" -> "self(34)"	[label=get_top_features];
	"top_feats(34)$0" -> "drop_null_importance(34)"	[label=get_top_features];
	"top_feats(34)$0" -> "top_n(34)"	[label=get_top_features];
	"feature_importances(34)$0" -> "self(34)"	[label=assignedFrom];
	"feature_importances(34)$0" -> "top_feats(34)$0"	[label=assignedFrom];
	"feature_importances(34)$0" -> "feature(34)"	[label=assignedFrom];
	"feature_importances(34)$1" -> "feature_importances(34)$0"	[label=astype];
	"feature_importances(34)$1" -> "feature(34)"	[label=astype];
	"feature_importances(34)$1" -> "str(34)"	[label=astype];
	"top_feats(34)$1" -> "str(34)"	[label=assignedFrom];
	"top_feats(34)$1" -> "top_feats(34)$1"	[label=assignedFrom];
	"top_feats(34)$1" -> "i(34)"	[label=assignedFrom];
	"sns(34)$0" -> "sns(34)"	[label=barplot];
	"plt(34)$0" -> "plt(34)"	[label=title];
	"plt(34)$0" -> "Feature importances(34)"	[label=title];
	"self(35)" -> "get_top_features[0]"	[label=_argToVar];
	"drop_null_importance(35)" -> "get_top_features[1]"	[label=_argToVar];
	"top_n(35)" -> "get_top_features[2]"	[label=_argToVar];
	"grouped_feats(35)$0" -> "self(35)"	[label=mean];
	"grouped_feats(35)$0" -> "[<_ast.Constant object at 0x7fd500840f10>](35)"	[label=mean];
	"grouped_feats(35)$0" -> "importance(35)"	[label=mean];
	"grouped_feats(35)$1" -> "grouped_feats(35)$0"	[label=assignedFrom];
	"grouped_feats(35)$1" -> "grouped_feats(35)$1"	[label=assignedFrom];
	"grouped_feats(35)$1" -> "0(35)"	[label=assignedFrom];
	"self(36)" -> "plot_metric[0]"	[label=_argToVar];
	"full_evals_results(36)$0" -> "pd(36)"	[label=DataFrame];
	"model(36)" -> "self(36)"	[label=iteratorOf];
	"evals_result(36)$0" -> "pd(36)"	[label=DataFrame];
	"k(36)" -> "model(36)"	[label=iteratorOf];
	"evals_result(36)$1" -> "self(36)"	[label=assignedFrom];
	"evals_result(36)$1" -> "model(36)"	[label=assignedFrom];
	"evals_result(36)$1" -> "evals_result(36)$0"	[label=assignedFrom];
	"evals_result(36)$1" -> "k(36)"	[label=assignedFrom];
	"evals_result(36)$2" -> "evals_result(36)$1"	[label=rename];
	"evals_result(36)$2" -> "index(36)"	[label=rename];
	"evals_result(36)$2" -> "iteration(36)"	[label=rename];
	"full_evals_results(36)$1" -> "full_evals_results(36)$0"	[label=append];
	"full_evals_results(36)$1" -> "evals_result(36)$2"	[label=append];
	"full_evals_results(36)$2" -> "self(36)"	[label=rename];
	"full_evals_results(36)$2" -> "full_evals_results(36)$1"	[label=rename];
	"full_evals_results(36)$2" -> "[<_ast.Constant object at 0x7fd4c05b8310>](36)"	[label=rename];
	"full_evals_results(36)$2" -> "value(36)"	[label=rename];
	"full_evals_results(36)$2" -> "variable(36)"	[label=rename];
	"full_evals_results(36)$2" -> "dataset(36)"	[label=rename];
	"full_evals_results(36)$3" -> "self(36)"	[label=abs];
	"full_evals_results(36)$3" -> "full_evals_results(36)$2"	[label=abs];
	"full_evals_results(36)$3" -> "full_evals_results(36)$3"	[label=abs];
	"full_evals_results(36)$3" -> "np(36)"	[label=abs];
	"sns(36)$0" -> "sns(36)"	[label=lineplot];
	"plt(36)$0" -> "plt(36)"	[label=title];
	"plt(36)$0" -> "Training progress(36)"	[label=title];
	"self(38)" -> "__init__[0]"	[label=_argToVar];
	"cat_cols(38)" -> "__init__[1]"	[label=_argToVar];
	"drop_original(38)" -> "__init__[2]"	[label=_argToVar];
	"encoder(38)" -> "__init__[3]"	[label=_argToVar];
	"self(38)$0" -> "self(38)"	[label=assignedFrom];
	"self(38)$0" -> "cat_cols(38)"	[label=assignedFrom];
	"self(38)$1" -> "drop_original(38)"	[label=assignedFrom];
	"self(38)$1" -> "self(38)$0"	[label=assignedFrom];
	"self(38)$2" -> "encoder(38)"	[label=assignedFrom];
	"self(38)$2" -> "self(38)$1"	[label=assignedFrom];
	"self(39)" -> "fit[0]"	[label=_argToVar];
	"X(39)" -> "fit[1]"	[label=_argToVar];
	"y(39)" -> "fit[2]"	[label=_argToVar];
	"kinds(39)$0" -> "X(39)"	[label=array];
	"kinds(39)$0" -> "np(39)"	[label=array];
	"kinds(39)$0" -> "dt(39)"	[label=array];
	"is_cat(39)$0" -> "kinds(39)$0"	[label=assignedFrom];
	"is_cat(39)$0" -> "O(39)"	[label=assignedFrom];
	"self(39)$0" -> "self(39)"	[label=list];
	"self(39)$0" -> "X(39)"	[label=list];
	"self(39)$0" -> "is_cat(39)$0"	[label=list];
	"self(39)$1" -> "self(39)$0"	[label=set_params];
	"self(39)$2" -> "self(39)$1"	[label=set_params];
	"self(39)$3" -> "X(39)"	[label=fit];
	"self(39)$3" -> "y(39)"	[label=fit];
	"self(39)$3" -> "self(39)$2"	[label=fit];
	"self(39)$3" -> "self(39)$3"	[label=fit];
	"self(39)$4" -> "X(39)"	[label=fit];
	"self(39)$4" -> "y(39)"	[label=fit];
	"self(39)$4" -> "self(39)$3"	[label=fit];
	"self(39)$4" -> "self(39)$4"	[label=fit];
	"self(40)" -> "transform[0]"	[label=_argToVar];
	"X(40)" -> "transform[1]"	[label=_argToVar];
	"y(40)" -> "transform[2]"	[label=_argToVar];
	"data(40)$0" -> "X(40)"	[label=deepcopy];
	"data(40)$0" -> "copy(40)"	[label=deepcopy];
	"new_cat_names(40)$0" -> "self(40)"	[label=assignedFrom];
	"new_cat_names(40)$0" -> "col(40)"	[label=assignedFrom];
	"new_cat_names(40)$0" -> "_encoded(40)"	[label=assignedFrom];
	"encoded_data(40)$0" -> "self(40)"	[label=transform];
	"encoded_data(40)$0" -> "data(40)$0"	[label=transform];
	"data(40)$1" -> "data(40)$0"	[label=assignedFrom];
	"data(40)$1" -> "encoded_data(40)$0"	[label=assignedFrom];
	"data(40)$2" -> "self(40)"	[label=drop];
	"data(40)$2" -> "data(40)$1"	[label=drop];
	"data(40)$2" -> "1(40)"	[label=drop];
	"data(40)$3" -> "self(40)"	[label=transform];
	"data(40)$3" -> "data(40)$2"	[label=transform];
	"data(40)$3" -> "data(40)$3"	[label=transform];
	"self(41)" -> "fit_transform[0]"	[label=_argToVar];
	"X(41)" -> "fit_transform[1]"	[label=_argToVar];
	"y(41)" -> "fit_transform[2]"	[label=_argToVar];
	"data(41)$0" -> "X(41)"	[label=deepcopy];
	"data(41)$0" -> "copy(41)"	[label=deepcopy];
	"self(41)$0" -> "self(41)"	[label=fit];
	"self(41)$0" -> "data(41)$0"	[label=fit];
	"/kaggle/input/data-science-bowl-2019(0)" -> "oop-approach-to-fe-and-models.ipynb"	[label=appearsIn];
	"path(0)$0" -> "/kaggle/input/data-science-bowl-2019(0)"	[label=assignedFrom];
	"specs(0)$0" -> "pd(0)$1"	[label=read_csv];
	"specs(0)$0" -> "path(0)$0"	[label=read_csv];
	"specs(0)$0" -> "/specs.csv(0)"	[label=read_csv];
	"/specs.csv(0)" -> "oop-approach-to-fe-and-models.ipynb"	[label=appearsIn];
	"sample_submission(0)$0" -> "pd(0)$1"	[label=read_csv];
	"sample_submission(0)$0" -> "path(0)$0"	[label=read_csv];
	"sample_submission(0)$0" -> "/sample_submission.csv(0)"	[label=read_csv];
	"/sample_submission.csv(0)" -> "oop-approach-to-fe-and-models.ipynb"	[label=appearsIn];
	"train_labels(0)$0" -> "pd(0)$1"	[label=read_csv];
	"train_labels(0)$0" -> "path(0)$0"	[label=read_csv];
	"train_labels(0)$0" -> "/train_labels.csv(0)"	[label=read_csv];
	"/train_labels.csv(0)" -> "oop-approach-to-fe-and-models.ipynb"	[label=appearsIn];
	"test(0)$0" -> "pd(0)$1"	[label=read_csv];
	"test(0)$0" -> "path(0)$0"	[label=read_csv];
	"test(0)$0" -> "/test.csv(0)"	[label=read_csv];
	"/test.csv(0)" -> "oop-approach-to-fe-and-models.ipynb"	[label=appearsIn];
	"train(0)$0" -> "pd(0)$1"	[label=read_csv];
	"train(0)$0" -> "path(0)$0"	[label=read_csv];
	"train(0)$0" -> "/train.csv(0)"	[label=read_csv];
	"/train.csv(0)" -> "oop-approach-to-fe-and-models.ipynb"	[label=appearsIn];
	"train(0)$1" -> "train(0)$0"	[label=head];
	"train_labels(0)$1" -> "train_labels(0)$0"	[label=head];
	"specs(0)$1" -> "specs(0)$0"	[label=head];
	"Rows in train data: (0)" -> "oop-approach-to-fe-and-models.ipynb"	[label=appearsIn];
	"print[667/0]" -> "train(0)$1"	[label=print];
	"print[667/0]" -> "Rows in train data: (0)"	[label=print];
	"print[667/0]" -> "0(0)"	[label=print];
	"0(0)" -> "oop-approach-to-fe-and-models.ipynb"	[label=appearsIn];
	"Rows in train labels: (0)" -> "oop-approach-to-fe-and-models.ipynb"	[label=appearsIn];
	"print[668/0]" -> "train_labels(0)$1"	[label=print];
	"print[668/0]" -> "0(0)"	[label=print];
	"print[668/0]" -> "Rows in train labels: (0)"	[label=print];
	"Rows in specs data: (0)" -> "oop-approach-to-fe-and-models.ipynb"	[label=appearsIn];
	"print[669/0]" -> "specs(0)$1"	[label=print];
	"print[669/0]" -> "0(0)"	[label=print];
	"print[669/0]" -> "Rows in specs data: (0)"	[label=print];
	"train(0)$2" -> "pd(0)$1"	[label=to_datetime];
	"train(0)$2" -> "train(0)$1"	[label=to_datetime];
	"train(0)$2" -> "train(0)$2"	[label=to_datetime];
	"train(0)$2" -> "timestamp(0)"	[label=to_datetime];
	"timestamp(0)" -> "oop-approach-to-fe-and-models.ipynb"	[label=appearsIn];
	"train(0)$3" -> "0(0)"	[label=assignedFrom];
	"train(0)$3" -> "train(0)$2"	[label=assignedFrom];
	"1(0)" -> "oop-approach-to-fe-and-models.ipynb"	[label=appearsIn];
	"train(0)$4" -> "train(0)$3"	[label=assignedFrom];
	"train(0)$4" -> "1(0)"	[label=assignedFrom];
	"train(0)$5" -> "1(0)"	[label=assignedFrom];
	"train(0)$5" -> "train(0)$4"	[label=assignedFrom];
	"title_oe(0)" -> "oop-approach-to-fe-and-models.ipynb"	[label=appearsIn];
	"title_oe(0)$0" -> "test(0)$0"	[label=fit];
	"title_oe(0)$0" -> "train(0)$5"	[label=fit];
	"title_oe(0)$0" -> "title_oe(0)"	[label=fit];
	"title_oe(0)$0" -> "list(0)"	[label=fit];
	"title_oe(0)$0" -> "set(0)"	[label=fit];
	"title_oe(0)$0" -> "title(0)"	[label=fit];
	"list(0)" -> "oop-approach-to-fe-and-models.ipynb"	[label=appearsIn];
	"set(0)" -> "oop-approach-to-fe-and-models.ipynb"	[label=appearsIn];
	"title(0)" -> "oop-approach-to-fe-and-models.ipynb"	[label=appearsIn];
	"world_oe(0)" -> "oop-approach-to-fe-and-models.ipynb"	[label=appearsIn];
	"world_oe(0)$0" -> "test(0)$0"	[label=fit];
	"world_oe(0)$0" -> "train(0)$5"	[label=fit];
	"world_oe(0)$0" -> "list(0)"	[label=fit];
	"world_oe(0)$0" -> "set(0)"	[label=fit];
	"world_oe(0)$0" -> "world_oe(0)"	[label=fit];
	"world_oe(0)$0" -> "world(0)"	[label=fit];
	"world(0)" -> "oop-approach-to-fe-and-models.ipynb"	[label=appearsIn];
	"None(0)" -> "oop-approach-to-fe-and-models.ipynb"	[label=appearsIn];
	"train(0)$6" -> "train(0)$5"	[label=assignedFrom];
	"train(0)$6" -> "None(0)"	[label=assignedFrom];
	"True(0)" -> "oop-approach-to-fe-and-models.ipynb"	[label=appearsIn];
	"train(0)$7" -> "train(0)$6"	[label=assignedFrom];
	"train(0)$7" -> "True(0)"	[label=assignedFrom];
	"False(0)" -> "oop-approach-to-fe-and-models.ipynb"	[label=appearsIn];
	"train(0)$8" -> "train(0)$7"	[label=assignedFrom];
	"train(0)$8" -> "False(0)"	[label=assignedFrom];
	"train(0)$9" -> "title_oe(0)$0"	[label=transform];
	"train(0)$9" -> "title(0)"	[label=transform];
	"train(0)$9" -> "train(0)$8"	[label=transform];
	"train(0)$9" -> "train(0)$9"	[label=transform];
	"train(0)$10" -> "world_oe(0)$0"	[label=transform];
	"train(0)$10" -> "world(0)"	[label=transform];
	"train(0)$10" -> "train(0)$9"	[label=transform];
	"train(0)$10" -> "train(0)$10"	[label=transform];
	"train(0)$11" -> "train_labels(0)$1"	[label=assignedFrom];
	"train(0)$11" -> "train(0)$10"	[label=assignedFrom];
	"train(0)$11" -> "train(0)$11"	[label=assignedFrom];
	"train(0)$11" -> "installation_id(0)"	[label=assignedFrom];
	"installation_id(0)" -> "oop-approach-to-fe-and-models.ipynb"	[label=appearsIn];
	"self(43)" -> "__init__[0]"	[label=_argToVar];
	"n_jobs(43)" -> "__init__[1]"	[label=_argToVar];
	"df(43)" -> "__init__[2]"	[label=_argToVar];
	"dataset(43)" -> "__init__[3]"	[label=_argToVar];
	"self(43)$0" -> "self(43)"	[label=assignedFrom];
	"self(43)$0" -> "n_jobs(43)"	[label=assignedFrom];
	"self(43)$1" -> "df(43)"	[label=assignedFrom];
	"self(43)$1" -> "self(43)$0"	[label=assignedFrom];
	"self(43)$2" -> "dataset(43)"	[label=assignedFrom];
	"self(43)$2" -> "self(43)$1"	[label=assignedFrom];
	"self(44)" -> "read_chunks[0]"	[label=_argToVar];
	"id(44)" -> "self(44)"	[label=iteratorOf];
	"id(44)" -> "installation_id(44)"	[label=iteratorOf];
	"id(44)" -> "False(44)"	[label=iteratorOf];
	"user_sample(44)" -> "self(44)"	[label=iteratorOf];
	"user_sample(44)" -> "installation_id(44)"	[label=iteratorOf];
	"user_sample(44)" -> "False(44)"	[label=iteratorOf];
	"self(45)" -> "get_features[0]"	[label=_argToVar];
	"row(45)" -> "get_features[1]"	[label=_argToVar];
	"self(46)" -> "features[0]"	[label=_argToVar];
	"id(46)" -> "features[1]"	[label=_argToVar];
	"user_sample(46)" -> "features[2]"	[label=_argToVar];
	"user_data(46)$0" -> "[](46)"	[label=assignedFrom];
	"accuracy_mapping(46)$0" -> "0(46)"	[label=assignedFrom];
	"accuracy_mapping(46)$0" -> "1(46)"	[label=assignedFrom];
	"accuracy_mapping(46)$0" -> "0.5(46)"	[label=assignedFrom];
	"accuracy_mapping(46)$0" -> "3(46)"	[label=assignedFrom];
	"accuracy_mapping(46)$0" -> "2(46)"	[label=assignedFrom];
	"user_stats(46)$0" -> "int(46)"	[label=defaultdict];
	"user_stats(46)$1" -> "user_sample(46)"	[label=assignedFrom];
	"user_stats(46)$1" -> "0(46)"	[label=assignedFrom];
	"user_stats(46)$1" -> "user_stats(46)$0"	[label=assignedFrom];
	"user_stats(46)$1" -> "installation_id(46)"	[label=assignedFrom];
	"user_stats(46)$2" -> "user_sample(46)"	[label=assignedFrom];
	"user_stats(46)$2" -> "0(46)"	[label=assignedFrom];
	"user_stats(46)$2" -> "user_stats(46)$1"	[label=assignedFrom];
	"user_stats(46)$2" -> "world(46)"	[label=assignedFrom];
	"user_stats(46)$3" -> "user_sample(46)"	[label=assignedFrom];
	"user_stats(46)$3" -> "0(46)"	[label=assignedFrom];
	"user_stats(46)$3" -> "user_stats(46)$2"	[label=assignedFrom];
	"user_stats(46)$3" -> "timestamp(46)"	[label=assignedFrom];
	"temp_dict(46)$0" -> "int(46)"	[label=defaultdict];
	"another_temp_dict(46)$0" -> "[](46)"	[label=assignedFrom];
	"another_temp_dict(46)$0" -> "another_temp_dict(46)"	[label=assignedFrom];
	"another_temp_dict(46)$1" -> "[](46)"	[label=assignedFrom];
	"another_temp_dict(46)$1" -> "another_temp_dict(46)$0"	[label=assignedFrom];
	"another_temp_dict(46)$2" -> "[](46)"	[label=assignedFrom];
	"another_temp_dict(46)$2" -> "another_temp_dict(46)$1"	[label=assignedFrom];
	"another_temp_dict(46)$3" -> "[](46)"	[label=assignedFrom];
	"another_temp_dict(46)$3" -> "another_temp_dict(46)$2"	[label=assignedFrom];
	"title_data(46)$0" -> "dict(46)"	[label=defaultdict];
	"i(46)" -> "user_sample(46)"	[label=iteratorOf];
	"i(46)" -> "game_session(46)"	[label=iteratorOf];
	"i(46)" -> "False(46)"	[label=iteratorOf];
	"i(46)" -> "event_code_counts(46)$0"	[label=iteratorOf];
	"i(46)" -> "zip(46)"	[label=iteratorOf];
	"event_code_counts(46)$0" -> "session(46)"	[label=value_counts];
	"event_code_counts(46)$0" -> "event_code(46)"	[label=value_counts];
	"session(46)" -> "user_sample(46)"	[label=iteratorOf];
	"session(46)" -> "game_session(46)"	[label=iteratorOf];
	"session(46)" -> "False(46)"	[label=iteratorOf];
	"user_stats(46)$4" -> "0(46)"	[label=assignedFrom];
	"user_stats(46)$4" -> "1(46)"	[label=assignedFrom];
	"user_stats(46)$4" -> "user_stats(46)$3"	[label=assignedFrom];
	"user_stats(46)$4" -> "another_temp_dict(46)$3"	[label=assignedFrom];
	"user_stats(46)$4" -> "len(46)"	[label=assignedFrom];
	"user_stats(46)$4" -> "durations(46)"	[label=assignedFrom];
	"user_stats(46)$5" -> "0(46)"	[label=assignedFrom];
	"user_stats(46)$5" -> "1(46)"	[label=assignedFrom];
	"user_stats(46)$5" -> "another_temp_dict(46)$3"	[label=assignedFrom];
	"user_stats(46)$5" -> "user_stats(46)$4"	[label=assignedFrom];
	"user_stats(46)$5" -> "len(46)"	[label=assignedFrom];
	"user_stats(46)$5" -> "all_durations(46)"	[label=assignedFrom];
	"user_stats(46)$6" -> "0(46)"	[label=assignedFrom];
	"user_stats(46)$6" -> "session(46)"	[label=assignedFrom];
	"user_stats(46)$6" -> "user_stats(46)$5"	[label=assignedFrom];
	"user_stats(46)$6" -> "title(46)"	[label=assignedFrom];
	"accuracy(46)$0" -> "session(46)"	[label=nan_to_num];
	"accuracy(46)$0" -> "np(46)"	[label=nan_to_num];
	"accuracy(46)$0" -> "correct(46)"	[label=nan_to_num];
	"accuracy(46)$0" -> "attempt(46)"	[label=nan_to_num];
	"user_stats(46)$7" -> "accuracy_mapping(46)$0"	[label=assignedFrom];
	"user_stats(46)$7" -> "user_stats(46)$6"	[label=assignedFrom];
	"user_stats(46)$7" -> "accuracy(46)$0"	[label=assignedFrom];
	"user_stats(46)$8" -> "1(46)"	[label=assignedFrom];
	"user_stats(46)$8" -> "user_stats(46)$7"	[label=assignedFrom];
	"user_stats(46)$9" -> "0(46)"	[label=assignedFrom];
	"user_stats(46)$9" -> "temp_dict(46)$0"	[label=assignedFrom];
	"user_stats(46)$9" -> "user_stats(46)$8"	[label=assignedFrom];
	"user_stats(46)$9" -> "user_stats(46)$9"	[label=assignedFrom];
	"user_stats(46)$9" -> "counter(46)"	[label=assignedFrom];
	"user_stats(46)$9" -> "accumulated_accuracy_group(46)"	[label=assignedFrom];
	"temp_dict(46)$1" -> "temp_dict(46)$0"	[label=Add];
	"temp_dict(46)$1" -> "user_stats(46)$9"	[label=Add];
	"temp_dict(46)$1" -> "accuracy_group(46)"	[label=Add];
	"user_data(46)$1" -> "user_data(46)$0"	[label=append];
	"user_data(46)$1" -> "user_stats(46)$9"	[label=append];
	"user_data(46)$1" -> "copy(46)"	[label=append];
	"user_stats(46)$10" -> "1(46)"	[label=Add];
	"user_stats(46)$10" -> "user_stats(46)$9"	[label=Add];
	"user_stats(46)$11" -> "session(46)"	[label=Add];
	"user_stats(46)$11" -> "correct(46)"	[label=Add];
	"user_stats(46)$11" -> "user_stats(46)$10"	[label=Add];
	"user_stats(46)$12" -> "session(46)"	[label=Add];
	"user_stats(46)$12" -> "correct(46)"	[label=Add];
	"user_stats(46)$12" -> "attempt(46)"	[label=Add];
	"user_stats(46)$12" -> "user_stats(46)$11"	[label=Add];
	"j(46)" -> "event_code_counts(46)$0"	[label=iteratorOf];
	"j(46)" -> "zip(46)"	[label=iteratorOf];
	"user_stats(46)$13" -> "user_stats(46)$12"	[label=Add];
	"user_stats(46)$13" -> "j(46)"	[label=Add];
	"temp_dict(46)$2" -> "1(46)"	[label=Add];
	"temp_dict(46)$2" -> "temp_dict(46)$1"	[label=Add];
	"title_data(46)$1" -> "int(46)"	[label=defaultdict];
	"title_data(46)$1" -> "title_data(46)$0"	[label=defaultdict];
	"title_data(46)$2" -> "1(46)"	[label=Add];
	"title_data(46)$2" -> "session(46)"	[label=Add];
	"title_data(46)$2" -> "title_data(46)$1"	[label=Add];
	"title_data(46)$2" -> "game_time(46)"	[label=Add];
	"title_data(46)$3" -> "1(46)"	[label=Add];
	"title_data(46)$3" -> "title_data(46)$2"	[label=Add];
	"user_stats(46)$14" -> "0(46)"	[label=assignedFrom];
	"user_stats(46)$14" -> "1(46)"	[label=assignedFrom];
	"user_stats(46)$14" -> "2(46)"	[label=assignedFrom];
	"user_stats(46)$14" -> "session(46)"	[label=assignedFrom];
	"user_stats(46)$14" -> "user_stats(46)$13"	[label=assignedFrom];
	"another_temp_dict(46)$4" -> "another_temp_dict(46)$3"	[label=append];
	"another_temp_dict(46)$4" -> "user_stats(46)$14"	[label=append];
	"another_temp_dict(46)$4" -> "duration(46)"	[label=append];
	"accuracy(46)$1" -> "session(46)"	[label=nan_to_num];
	"accuracy(46)$1" -> "np(46)"	[label=nan_to_num];
	"accuracy(46)$1" -> "correct(46)"	[label=nan_to_num];
	"accuracy(46)$1" -> "attempt(46)"	[label=nan_to_num];
	"user_stats(46)$15" -> "user_stats(46)$14"	[label=Add];
	"user_stats(46)$15" -> "accuracy(46)$1"	[label=Add];
	"user_stats(46)$16" -> "1(46)"	[label=Add];
	"user_stats(46)$16" -> "user_stats(46)$15"	[label=Add];
	"user_stats(46)$17" -> "0(46)"	[label=assignedFrom];
	"user_stats(46)$17" -> "user_stats(46)$16"	[label=assignedFrom];
	"user_stats(46)$18" -> "counter(46)"	[label=Div];
	"user_stats(46)$18" -> "user_stats(46)$17"	[label=Div];
	"user_stats(46)$18" -> "user_stats(46)$18"	[label=Div];
	"user_stats(46)$18" -> "accumulated_accuracy_(46)"	[label=Div];
	"accuracy(46)$2" -> "session(46)"	[label=nan_to_num];
	"accuracy(46)$2" -> "np(46)"	[label=nan_to_num];
	"accuracy(46)$2" -> "correct(46)"	[label=nan_to_num];
	"accuracy(46)$2" -> "attempt(46)"	[label=nan_to_num];
	"user_stats(46)$19" -> "1(46)"	[label=Add];
	"user_stats(46)$19" -> "user_stats(46)$18"	[label=Add];
	"user_stats(46)$20" -> "1(46)"	[label=Add];
	"user_stats(46)$20" -> "user_stats(46)$19"	[label=Add];
	"user_stats(46)$21" -> "session(46)"	[label=Add];
	"user_stats(46)$21" -> "len(46)"	[label=Add];
	"user_stats(46)$21" -> "user_stats(46)$20"	[label=Add];
	"user_stats(46)$22" -> "1(46)"	[label=Add];
	"user_stats(46)$22" -> "user_stats(46)$21"	[label=Add];
	"another_temp_dict(46)$5" -> "another_temp_dict(46)$4"	[label=append];
	"another_temp_dict(46)$5" -> "duration(46)"	[label=append];
	"another_temp_dict(46)$5" -> "user_stats(46)$22"	[label=append];
	"user_stats(46)$23" -> "1(46)"	[label=Add];
	"user_stats(46)$23" -> "user_stats(46)$22"	[label=Add];
	"user_stats(46)$24" -> "1(46)"	[label=assignedFrom];
	"user_stats(46)$24" -> "session(46)"	[label=assignedFrom];
	"user_stats(46)$24" -> "title(46)"	[label=assignedFrom];
	"user_stats(46)$24" -> "title_data(46)$3"	[label=assignedFrom];
	"user_stats(46)$24" -> "duration(46)"	[label=assignedFrom];
	"user_stats(46)$24" -> "user_stats(46)$23"	[label=assignedFrom];
	"user_stats(46)$25" -> "1(46)"	[label=assignedFrom];
	"user_stats(46)$25" -> "session(46)"	[label=assignedFrom];
	"user_stats(46)$25" -> "title(46)"	[label=assignedFrom];
	"user_stats(46)$25" -> "counter(46)"	[label=assignedFrom];
	"user_stats(46)$25" -> "title_data(46)$3"	[label=assignedFrom];
	"user_stats(46)$25" -> "user_stats(46)$24"	[label=assignedFrom];
	"user_stats(46)$26" -> "0(46)"	[label=assignedFrom];
	"user_stats(46)$26" -> "user_stats(46)$25"	[label=assignedFrom];
	"user_stats(46)$26" -> "user_stats(46)$26"	[label=assignedFrom];
	"user_stats(46)$26" -> "title_mean_duration(46)"	[label=assignedFrom];
	"user_stats(46)$26" -> "title_duration(46)"	[label=assignedFrom];
	"user_stats(46)$27" -> "1(46)"	[label=assignedFrom];
	"user_stats(46)$27" -> "session(46)"	[label=assignedFrom];
	"user_stats(46)$27" -> "title(46)"	[label=assignedFrom];
	"user_stats(46)$27" -> "title_data(46)$3"	[label=assignedFrom];
	"user_stats(46)$27" -> "user_stats(46)$26"	[label=assignedFrom];
	"user_stats(46)$27" -> "duration_all(46)"	[label=assignedFrom];
	"user_stats(46)$28" -> "1(46)"	[label=assignedFrom];
	"user_stats(46)$28" -> "session(46)"	[label=assignedFrom];
	"user_stats(46)$28" -> "title(46)"	[label=assignedFrom];
	"user_stats(46)$28" -> "title_data(46)$3"	[label=assignedFrom];
	"user_stats(46)$28" -> "user_stats(46)$27"	[label=assignedFrom];
	"user_stats(46)$28" -> "counter_all(46)"	[label=assignedFrom];
	"user_stats(46)$29" -> "0(46)"	[label=assignedFrom];
	"user_stats(46)$29" -> "user_stats(46)$28"	[label=assignedFrom];
	"user_stats(46)$29" -> "user_stats(46)$29"	[label=assignedFrom];
	"user_stats(46)$29" -> "title_mean_duration_all(46)"	[label=assignedFrom];
	"user_stats(46)$29" -> "title_duration_all(46)"	[label=assignedFrom];
	"title_data(46)$4" -> "1(46)"	[label=Add];
	"title_data(46)$4" -> "session(46)"	[label=Add];
	"title_data(46)$4" -> "game_time(46)"	[label=Add];
	"title_data(46)$4" -> "title_data(46)$3"	[label=Add];
	"title_data(46)$5" -> "1(46)"	[label=Add];
	"title_data(46)$5" -> "title_data(46)$4"	[label=Add];
	"another_temp_dict(46)$6" -> "duration(46)"	[label=append];
	"another_temp_dict(46)$6" -> "another_temp_dict(46)$5"	[label=append];
	"another_temp_dict(46)$6" -> "user_stats(46)$29"	[label=append];
	"temp_dict(46)$3" -> "1(46)"	[label=Add];
	"temp_dict(46)$3" -> "temp_dict(46)$2"	[label=Add];
	"user_stats(46)$30" -> "durations(46)"	[label=mean];
	"user_stats(46)$30" -> "np(46)"	[label=mean];
	"user_stats(46)$30" -> "user_stats(46)$29"	[label=mean];
	"user_stats(46)$30" -> "another_temp_dict(46)$6"	[label=mean];
	"user_stats(46)$31" -> "np(46)"	[label=mean];
	"user_stats(46)$31" -> "another_temp_dict(46)$6"	[label=mean];
	"user_stats(46)$31" -> "user_stats(46)$30"	[label=mean];
	"user_stats(46)$31" -> "durations_with_attempts(46)"	[label=mean];
	"user_stats(46)$32" -> "all_durations(46)"	[label=mean];
	"user_stats(46)$32" -> "np(46)"	[label=mean];
	"user_stats(46)$32" -> "another_temp_dict(46)$6"	[label=mean];
	"user_stats(46)$32" -> "user_stats(46)$31"	[label=mean];
	"user_stats(46)$33" -> "session(46)"	[label=Add];
	"user_stats(46)$33" -> "len(46)"	[label=Add];
	"user_stats(46)$33" -> "user_stats(46)$32"	[label=Add];
	"user_stats(46)$34" -> "np(46)"	[label=mean];
	"user_stats(46)$34" -> "another_temp_dict(46)$6"	[label=mean];
	"user_stats(46)$34" -> "user_stats(46)$33"	[label=mean];
	"user_stats(46)$34" -> "mean_action_time(46)"	[label=mean];
	"another_temp_dict(46)$7" -> "1(46)"	[label=append];
	"another_temp_dict(46)$7" -> "session(46)"	[label=append];
	"another_temp_dict(46)$7" -> "len(46)"	[label=append];
	"another_temp_dict(46)$7" -> "game_time(46)"	[label=append];
	"another_temp_dict(46)$7" -> "another_temp_dict(46)$6"	[label=append];
	"user_data(46)$2" -> "[<_ast.Subscript object at 0x7fd4c04f9130>](46)"	[label=assignedFrom];
	"self(47)" -> "generate[0]"	[label=_argToVar];
	"feature_list(47)$0" -> "[](47)"	[label=assignedFrom];
	"res(47)$0" -> "self(47)"	[label=assignedFrom];
	"res(47)$0" -> "Parallel(47)"	[label=assignedFrom];
	"res(47)$0" -> "threading(47)"	[label=assignedFrom];
	"res(47)$0" -> "delayed(47)"	[label=assignedFrom];
	"res(47)$0" -> "id(47)"	[label=assignedFrom];
	"res(47)$0" -> "user_sample(47)"	[label=assignedFrom];
	"r(47)" -> "res(47)$0"	[label=iteratorOf];
	"r1(47)" -> "r(47)"	[label=iteratorOf];
	"feature_list(47)$1" -> "feature_list(47)$0"	[label=append];
	"feature_list(47)$1" -> "r1(47)"	[label=append];
	"2(0)" -> "oop-approach-to-fe-and-models.ipynb"	[label=appearsIn];
	"fg(0)$0" -> "train(0)$11"	[label=FeatureGenerator];
	"fg(0)$0" -> "2(0)"	[label=FeatureGenerator];
	"data(0)$0" -> "fg(0)$0"	[label=generate];
	"data(0)$1" -> "0(0)"	[label=fillna];
	"data(0)$1" -> "data(0)$0"	[label=fillna];
	"data(0)$2" -> "data(0)$1"	[label=head];
	"data(0)$3" -> "timestamp(0)"	[label=add_datepart];
	"data(0)$3" -> "False(0)"	[label=add_datepart];
	"data(0)$3" -> "data(0)$2"	[label=add_datepart];
	"[](0)" -> "oop-approach-to-fe-and-models.ipynb"	[label=appearsIn];
	"bad_cols(0)$0" -> "[](0)"	[label=assignedFrom];
	"col(0)" -> "oop-approach-to-fe-and-models.ipynb"	[label=appearsIn];
	"col(0)" -> "data(0)$3"	[label=iteratorOf];
	"print[842/8]" -> "col(0)"	[label=print];
	"bad_cols(0)$1" -> "bad_cols(0)$0"	[label=append];
	"bad_cols(0)$1" -> "col(0)"	[label=append];
	"n_estimators(0)" -> "oop-approach-to-fe-and-models.ipynb"	[label=appearsIn];
	"param(0)$0" -> "15(0)"	[label=assignedFrom];
	"param(0)$0" -> "n_estimators(0)"	[label=assignedFrom];
	"param(0)$0" -> "learning_rate(0)"	[label=assignedFrom];
	"param(0)$0" -> "metric(0)"	[label=assignedFrom];
	"param(0)$0" -> "objective(0)"	[label=assignedFrom];
	"param(0)$0" -> "max_depth(0)"	[label=assignedFrom];
	"param(0)$0" -> "num_classes(0)"	[label=assignedFrom];
	"param(0)$0" -> "feature_fraction(0)"	[label=assignedFrom];
	"param(0)$0" -> "subsample(0)"	[label=assignedFrom];
	"param(0)$0" -> "verbose(0)"	[label=assignedFrom];
	"param(0)$0" -> "early_stopping_rounds(0)"	[label=assignedFrom];
	"param(0)$0" -> "eval_metric(0)"	[label=assignedFrom];
	"param(0)$0" -> "2000(0)"	[label=assignedFrom];
	"param(0)$0" -> "0.01(0)"	[label=assignedFrom];
	"param(0)$0" -> "multiclass(0)"	[label=assignedFrom];
	"param(0)$0" -> "4(0)"	[label=assignedFrom];
	"param(0)$0" -> "0.85(0)"	[label=assignedFrom];
	"param(0)$0" -> "1000(0)"	[label=assignedFrom];
	"param(0)$0" -> "100(0)"	[label=assignedFrom];
	"param(0)$0" -> "cappa(0)"	[label=assignedFrom];
	"learning_rate(0)" -> "oop-approach-to-fe-and-models.ipynb"	[label=appearsIn];
	"metric(0)" -> "oop-approach-to-fe-and-models.ipynb"	[label=appearsIn];
	"objective(0)" -> "oop-approach-to-fe-and-models.ipynb"	[label=appearsIn];
	"max_depth(0)" -> "oop-approach-to-fe-and-models.ipynb"	[label=appearsIn];
	"num_classes(0)" -> "oop-approach-to-fe-and-models.ipynb"	[label=appearsIn];
	"feature_fraction(0)" -> "oop-approach-to-fe-and-models.ipynb"	[label=appearsIn];
	"subsample(0)" -> "oop-approach-to-fe-and-models.ipynb"	[label=appearsIn];
	"verbose(0)" -> "oop-approach-to-fe-and-models.ipynb"	[label=appearsIn];
	"early_stopping_rounds(0)" -> "oop-approach-to-fe-and-models.ipynb"	[label=appearsIn];
	"eval_metric(0)" -> "oop-approach-to-fe-and-models.ipynb"	[label=appearsIn];
	"2000(0)" -> "oop-approach-to-fe-and-models.ipynb"	[label=appearsIn];
	"0.01(0)" -> "oop-approach-to-fe-and-models.ipynb"	[label=appearsIn];
	"multiclass(0)" -> "oop-approach-to-fe-and-models.ipynb"	[label=appearsIn];
	"4(0)" -> "oop-approach-to-fe-and-models.ipynb"	[label=appearsIn];
	"0.85(0)" -> "oop-approach-to-fe-and-models.ipynb"	[label=appearsIn];
	"1000(0)" -> "oop-approach-to-fe-and-models.ipynb"	[label=appearsIn];
	"100(0)" -> "oop-approach-to-fe-and-models.ipynb"	[label=appearsIn];
	"cappa(0)" -> "oop-approach-to-fe-and-models.ipynb"	[label=appearsIn];
	"y(0)$0" -> "data(0)$3"	[label=assignedFrom];
	"y(0)$0" -> "accuracy_group(0)"	[label=assignedFrom];
	"accuracy_group(0)" -> "oop-approach-to-fe-and-models.ipynb"	[label=appearsIn];
	"5(0)" -> "oop-approach-to-fe-and-models.ipynb"	[label=appearsIn];
	"n_fold(0)$0" -> "5(0)"	[label=assignedFrom];
	"folds(0)$0" -> "n_fold(0)$0"	[label=RepeatedStratifiedKFold];
	"folds(0)$1" -> "n_fold(0)$0"	[label=GroupKFold];
	"[<_ast.Constant object at 0x7fd4c04da3a0>, <_ast.Constant object at 0x7fd4c04da3d0>, <_ast.Constant object at 0x7fd4c04da400>, <_\
ast.Constant object at 0x7fd4c04da430>, <_ast.Constant object at 0x7fd4c04da460>](0)" -> "oop-approach-to-fe-and-models.ipynb"	[label=appearsIn];
	"cols_to_drop(0)$0" -> "bad_cols(0)$1"	[label=Add];
	"cols_to_drop(0)$0" -> "[<_ast.Constant object at 0x7fd4c04da3a0>, <_ast.Constant object at 0x7fd4c04da3d0>, <_ast.Constant object at 0x7fd4c04da400>, <_\
ast.Constant object at 0x7fd4c04da430>, <_ast.Constant object at 0x7fd4c04da460>](0)"	[label=Add];
	"str(0)" -> "oop-approach-to-fe-and-models.ipynb"	[label=appearsIn];
	"data(0)$4" -> "data(0)$3"	[label=assignedFrom];
	"data(0)$4" -> "col(0)"	[label=assignedFrom];
	"data(0)$4" -> "str(0)"	[label=assignedFrom];
	"data(0)$4" -> "data(0)$4"	[label=assignedFrom];
	"[<_ast.Constant object at 0x7fd4c04da790>](0)" -> "oop-approach-to-fe-and-models.ipynb"	[label=appearsIn];
	"cat_cols(0)$0" -> "[<_ast.Constant object at 0x7fd4c04da790>](0)"	[label=assignedFrom];
	"mt(0)$0" -> "False(0)"	[label=MainTransformer];
	"ct(0)$0" -> "True(0)"	[label=CategoricalTransformer];
	"ct(0)$0" -> "cat_cols(0)$0"	[label=CategoricalTransformer];
	"ft(0)" -> "oop-approach-to-fe-and-models.ipynb"	[label=appearsIn];
	"transformers(0)$0" -> "ct(0)$0"	[label=assignedFrom];
	"transformers(0)$0" -> "ft(0)"	[label=assignedFrom];
	"LGBWrapper(0)" -> "oop-approach-to-fe-and-models.ipynb"	[label=appearsIn];
	"lgb_model(0)$0" -> "LGBWrapper(0)"	[label=ClassifierModel];
	"lgb_model(0)$1" -> "lgb_model(0)$0"	[label=fit];
	"colsample_bytree(0)" -> "oop-approach-to-fe-and-models.ipynb"	[label=appearsIn];
	"xgb_params(0)$0" -> "500(0)"	[label=assignedFrom];
	"xgb_params(0)$0" -> "1(0)"	[label=assignedFrom];
	"xgb_params(0)$0" -> "n_estimators(0)"	[label=assignedFrom];
	"xgb_params(0)$0" -> "learning_rate(0)"	[label=assignedFrom];
	"xgb_params(0)$0" -> "objective(0)"	[label=assignedFrom];
	"xgb_params(0)$0" -> "max_depth(0)"	[label=assignedFrom];
	"xgb_params(0)$0" -> "subsample(0)"	[label=assignedFrom];
	"xgb_params(0)$0" -> "verbose(0)"	[label=assignedFrom];
	"xgb_params(0)$0" -> "early_stopping_rounds(0)"	[label=assignedFrom];
	"xgb_params(0)$0" -> "eval_metric(0)"	[label=assignedFrom];
	"xgb_params(0)$0" -> "4(0)"	[label=assignedFrom];
	"xgb_params(0)$0" -> "1000(0)"	[label=assignedFrom];
	"xgb_params(0)$0" -> "100(0)"	[label=assignedFrom];
	"xgb_params(0)$0" -> "colsample_bytree(0)"	[label=assignedFrom];
	"xgb_params(0)$0" -> "num_class(0)"	[label=assignedFrom];
	"xgb_params(0)$0" -> "min_child_weight(0)"	[label=assignedFrom];
	"xgb_params(0)$0" -> "gamma(0)"	[label=assignedFrom];
	"xgb_params(0)$0" -> "nthread(0)"	[label=assignedFrom];
	"xgb_params(0)$0" -> "0.8(0)"	[label=assignedFrom];
	"xgb_params(0)$0" -> "0.05(0)"	[label=assignedFrom];
	"xgb_params(0)$0" -> "7(0)"	[label=assignedFrom];
	"xgb_params(0)$0" -> "multi:softprob(0)"	[label=assignedFrom];
	"xgb_params(0)$0" -> "merror(0)"	[label=assignedFrom];
	"xgb_params(0)$0" -> "10(0)"	[label=assignedFrom];
	"xgb_params(0)$0" -> "0.25(0)"	[label=assignedFrom];
	"xgb_params(0)$0" -> "6(0)"	[label=assignedFrom];
	"num_class(0)" -> "oop-approach-to-fe-and-models.ipynb"	[label=appearsIn];
	"min_child_weight(0)" -> "oop-approach-to-fe-and-models.ipynb"	[label=appearsIn];
	"gamma(0)" -> "oop-approach-to-fe-and-models.ipynb"	[label=appearsIn];
	"nthread(0)" -> "oop-approach-to-fe-and-models.ipynb"	[label=appearsIn];
	"0.8(0)" -> "oop-approach-to-fe-and-models.ipynb"	[label=appearsIn];
	"0.05(0)" -> "oop-approach-to-fe-and-models.ipynb"	[label=appearsIn];
	"7(0)" -> "oop-approach-to-fe-and-models.ipynb"	[label=appearsIn];
	"multi:softprob(0)" -> "oop-approach-to-fe-and-models.ipynb"	[label=appearsIn];
	"merror(0)" -> "oop-approach-to-fe-and-models.ipynb"	[label=appearsIn];
	"10(0)" -> "oop-approach-to-fe-and-models.ipynb"	[label=appearsIn];
	"0.25(0)" -> "oop-approach-to-fe-and-models.ipynb"	[label=appearsIn];
	"6(0)" -> "oop-approach-to-fe-and-models.ipynb"	[label=appearsIn];
	"folds(0)$2" -> "5(0)"	[label=GroupKFold];
	"[<_ast.Constant object at 0x7fd4c04c3bb0>](0)" -> "oop-approach-to-fe-and-models.ipynb"	[label=appearsIn];
	"cat_cols(0)$1" -> "[<_ast.Constant object at 0x7fd4c04c3bb0>](0)"	[label=assignedFrom];
	"mt(0)$1" -> "False(0)"	[label=MainTransformer];
	"ct(0)$1" -> "True(0)"	[label=CategoricalTransformer];
	"ct(0)$1" -> "cat_cols(0)$1"	[label=CategoricalTransformer];
	"transformers(0)$1" -> "ft(0)"	[label=assignedFrom];
	"transformers(0)$1" -> "ct(0)$1"	[label=assignedFrom];
	"XGBWrapper(0)" -> "oop-approach-to-fe-and-models.ipynb"	[label=appearsIn];
	"xgb_model(0)$0" -> "XGBWrapper(0)"	[label=ClassifierModel];
	"xgb_model(0)$1" -> "xgb_model(0)$0"	[label=fit];
	"loss_function(0)" -> "oop-approach-to-fe-and-models.ipynb"	[label=appearsIn];
	"cat_params(0)$0" -> "500(0)"	[label=assignedFrom];
	"cat_params(0)$0" -> "learning_rate(0)"	[label=assignedFrom];
	"cat_params(0)$0" -> "verbose(0)"	[label=assignedFrom];
	"cat_params(0)$0" -> "early_stopping_rounds(0)"	[label=assignedFrom];
	"cat_params(0)$0" -> "eval_metric(0)"	[label=assignedFrom];
	"cat_params(0)$0" -> "2000(0)"	[label=assignedFrom];
	"cat_params(0)$0" -> "0.01(0)"	[label=assignedFrom];
	"cat_params(0)$0" -> "100(0)"	[label=assignedFrom];
	"cat_params(0)$0" -> "cat_cols(0)$1"	[label=assignedFrom];
	"cat_params(0)$0" -> "loss_function(0)"	[label=assignedFrom];
	"cat_params(0)$0" -> "task_type(0)"	[label=assignedFrom];
	"cat_params(0)$0" -> "iterations(0)"	[label=assignedFrom];
	"cat_params(0)$0" -> "od_type(0)"	[label=assignedFrom];
	"cat_params(0)$0" -> "MultiClass(0)"	[label=assignedFrom];
	"cat_params(0)$0" -> "WKappa(0)"	[label=assignedFrom];
	"cat_params(0)$0" -> "CPU(0)"	[label=assignedFrom];
	"cat_params(0)$0" -> "[<_ast.Constant object at 0x7fd4c04eec10>, <_ast.Constant object at 0x7fd4c04eec70>](0)"	[label=assignedFrom];
	"cat_params(0)$0" -> "Iter(0)"	[label=assignedFrom];
	"task_type(0)" -> "oop-approach-to-fe-and-models.ipynb"	[label=appearsIn];
	"iterations(0)" -> "oop-approach-to-fe-and-models.ipynb"	[label=appearsIn];
	"od_type(0)" -> "oop-approach-to-fe-and-models.ipynb"	[label=appearsIn];
	"MultiClass(0)" -> "oop-approach-to-fe-and-models.ipynb"	[label=appearsIn];
	"WKappa(0)" -> "oop-approach-to-fe-and-models.ipynb"	[label=appearsIn];
	"CPU(0)" -> "oop-approach-to-fe-and-models.ipynb"	[label=appearsIn];
	"[<_ast.Constant object at 0x7fd4c04eec10>, <_ast.Constant object at 0x7fd4c04eec70>](0)" -> "oop-approach-to-fe-and-models.ipynb"	[label=appearsIn];
	"Iter(0)" -> "oop-approach-to-fe-and-models.ipynb"	[label=appearsIn];
	"folds(0)$3" -> "5(0)"	[label=GroupKFold];
	"[<_ast.Constant object at 0x7fd4c04ee8e0>](0)" -> "oop-approach-to-fe-and-models.ipynb"	[label=appearsIn];
	"cat_cols(0)$2" -> "[<_ast.Constant object at 0x7fd4c04ee8e0>](0)"	[label=assignedFrom];
	"mt(0)$2" -> "False(0)"	[label=MainTransformer];
	"ct(0)$2" -> "True(0)"	[label=CategoricalTransformer];
	"ct(0)$2" -> "cat_cols(0)$2"	[label=CategoricalTransformer];
	"transformers(0)$2" -> "ft(0)"	[label=assignedFrom];
	"transformers(0)$2" -> "ct(0)$2"	[label=assignedFrom];
	"CatWrapper(0)" -> "oop-approach-to-fe-and-models.ipynb"	[label=appearsIn];
	"cat_model(0)$0" -> "CatWrapper(0)"	[label=ClassifierModel];
	"cat_model(0)$1" -> "cat_model(0)$0"	[label=fit];
	"test(0)$1" -> "pd(0)$1"	[label=to_datetime];
	"test(0)$1" -> "test(0)$0"	[label=to_datetime];
	"test(0)$1" -> "timestamp(0)"	[label=to_datetime];
	"test(0)$1" -> "test(0)$1"	[label=to_datetime];
	"test(0)$2" -> "0(0)"	[label=assignedFrom];
	"test(0)$2" -> "test(0)$1"	[label=assignedFrom];
	"test(0)$3" -> "1(0)"	[label=assignedFrom];
	"test(0)$3" -> "test(0)$2"	[label=assignedFrom];
	"test(0)$4" -> "1(0)"	[label=assignedFrom];
	"test(0)$4" -> "test(0)$3"	[label=assignedFrom];
	"test(0)$5" -> "None(0)"	[label=assignedFrom];
	"test(0)$5" -> "test(0)$4"	[label=assignedFrom];
	"test(0)$6" -> "True(0)"	[label=assignedFrom];
	"test(0)$6" -> "test(0)$5"	[label=assignedFrom];
	"test(0)$7" -> "False(0)"	[label=assignedFrom];
	"test(0)$7" -> "test(0)$6"	[label=assignedFrom];
	"test(0)$8" -> "title_oe(0)$0"	[label=transform];
	"test(0)$8" -> "title(0)"	[label=transform];
	"test(0)$8" -> "test(0)$7"	[label=transform];
	"test(0)$8" -> "test(0)$8"	[label=transform];
	"test(0)$9" -> "world_oe(0)$0"	[label=transform];
	"test(0)$9" -> "world(0)"	[label=transform];
	"test(0)$9" -> "test(0)$8"	[label=transform];
	"test(0)$9" -> "test(0)$9"	[label=transform];
	"fg(0)$1" -> "2(0)"	[label=FeatureGenerator];
	"fg(0)$1" -> "test(0)$9"	[label=FeatureGenerator];
	"test_data(0)$0" -> "fg(0)$1"	[label=generate];
	"test_data(0)$1" -> "col(0)"	[label=assignedFrom];
	"test_data(0)$1" -> "str(0)"	[label=assignedFrom];
	"test_data(0)$1" -> "test_data(0)$0"	[label=assignedFrom];
	"test_data(0)$1" -> "test_data(0)$1"	[label=assignedFrom];
	"test_data(0)$2" -> "0(0)"	[label=fillna];
	"test_data(0)$2" -> "test_data(0)$1"	[label=fillna];
	"test_data(0)$3" -> "timestamp(0)"	[label=add_datepart];
	"test_data(0)$3" -> "False(0)"	[label=add_datepart];
	"test_data(0)$3" -> "test_data(0)$2"	[label=add_datepart];
	"prediction(0)$0" -> "lgb_model(0)$1"	[label=Add];
	"prediction(0)$0" -> "xgb_model(0)$1"	[label=Add];
	"prediction(0)$0" -> "cat_model(0)$1"	[label=Add];
	"prediction(0)$0" -> "test_data(0)$3"	[label=Add];
	"sample_submission(0)$1" -> "sample_submission(0)$0"	[label=argmax];
	"sample_submission(0)$1" -> "1(0)"	[label=argmax];
	"sample_submission(0)$1" -> "prediction(0)$0"	[label=argmax];
	"sample_submission(0)$2" -> "sample_submission(0)$1"	[label=to_csv];
	"sample_submission(0)$2" -> "submission.csv(0)"	[label=to_csv];
	"submission.csv(0)" -> "oop-approach-to-fe-and-models.ipynb"	[label=appearsIn];
	"sample_submission(0)$3" -> "sample_submission(0)$2"	[label=value_counts];
}
