digraph "" {
	numpy -> "nested-unet-with-efficientnet-encoder.ipynb"	[label=importedBy];
	"np(0)" -> numpy	[label=assignedFrom];
	"np(0)" -> "nested-unet-with-efficientnet-encoder.ipynb"	[label=appearsIn];
	pandas -> "nested-unet-with-efficientnet-encoder.ipynb"	[label=importedBy];
	"pd(0)" -> "nested-unet-with-efficientnet-encoder.ipynb"	[label=appearsIn];
	"pd(0)" -> pandas	[label=assignedFrom];
	gc -> "nested-unet-with-efficientnet-encoder.ipynb"	[label=importedBy];
	"gc(0)" -> "nested-unet-with-efficientnet-encoder.ipynb"	[label=appearsIn];
	"gc(0)" -> gc	[label=assignedFrom];
	keras -> "nested-unet-with-efficientnet-encoder.ipynb"	[label=importedBy];
	"keras(0)" -> "nested-unet-with-efficientnet-encoder.ipynb"	[label=appearsIn];
	"keras(0)" -> keras	[label=assignedFrom];
	"matplotlib.pyplot" -> "nested-unet-with-efficientnet-encoder.ipynb"	[label=importedBy];
	"plt(0)" -> "nested-unet-with-efficientnet-encoder.ipynb"	[label=appearsIn];
	"plt(0)" -> "matplotlib.pyplot"	[label=assignedFrom];
	"plt(0)$0" -> "plt(0)"	[label=use];
	"plt(0)$0" -> "seaborn-white(0)"	[label=use];
	"seaborn-white(0)" -> "nested-unet-with-efficientnet-encoder.ipynb"	[label=appearsIn];
	seaborn -> "nested-unet-with-efficientnet-encoder.ipynb"	[label=importedBy];
	"sns(0)" -> "nested-unet-with-efficientnet-encoder.ipynb"	[label=appearsIn];
	"sns(0)" -> seaborn	[label=assignedFrom];
	"sns(0)$0" -> "sns(0)"	[label=set_style];
	"sns(0)$0" -> "white(0)"	[label=set_style];
	"white(0)" -> "nested-unet-with-efficientnet-encoder.ipynb"	[label=appearsIn];
	"sklearn.model_selection" -> "nested-unet-with-efficientnet-encoder.ipynb"	[label=importedBy];
	train_test_split -> "sklearn.model_selection"	[label=importedBy];
	"train_test_split(0)" -> "nested-unet-with-efficientnet-encoder.ipynb"	[label=appearsIn];
	"train_test_split(0)" -> train_test_split	[label=assignedFrom];
	StratifiedKFold -> "sklearn.model_selection"	[label=importedBy];
	"StratifiedKFold(0)" -> "nested-unet-with-efficientnet-encoder.ipynb"	[label=appearsIn];
	"StratifiedKFold(0)" -> StratifiedKFold	[label=assignedFrom];
	"skimage.transform" -> "nested-unet-with-efficientnet-encoder.ipynb"	[label=importedBy];
	resize -> "skimage.transform"	[label=importedBy];
	"resize(0)" -> "nested-unet-with-efficientnet-encoder.ipynb"	[label=appearsIn];
	"resize(0)" -> resize	[label=assignedFrom];
	tensorflow -> "nested-unet-with-efficientnet-encoder.ipynb"	[label=importedBy];
	"tf(0)" -> "nested-unet-with-efficientnet-encoder.ipynb"	[label=appearsIn];
	"tf(0)" -> tensorflow	[label=assignedFrom];
	"keras.backend" -> "nested-unet-with-efficientnet-encoder.ipynb"	[label=importedBy];
	"K(0)" -> "nested-unet-with-efficientnet-encoder.ipynb"	[label=appearsIn];
	"K(0)" -> "keras.backend"	[label=assignedFrom];
	"K(0)" -> backend	[label=assignedFrom];
	backend -> keras	[label=importedBy];
	"keras.losses" -> "nested-unet-with-efficientnet-encoder.ipynb"	[label=importedBy];
	binary_crossentropy -> "keras.losses"	[label=importedBy];
	"binary_crossentropy(0)" -> "nested-unet-with-efficientnet-encoder.ipynb"	[label=appearsIn];
	"binary_crossentropy(0)" -> binary_crossentropy	[label=assignedFrom];
	"keras.preprocessing.image" -> "nested-unet-with-efficientnet-encoder.ipynb"	[label=importedBy];
	load_img -> "keras.preprocessing.image"	[label=importedBy];
	"load_img(0)" -> "nested-unet-with-efficientnet-encoder.ipynb"	[label=appearsIn];
	"load_img(0)" -> load_img	[label=assignedFrom];
	Model -> keras	[label=importedBy];
	Model -> "keras.engine.training"	[label=importedBy];
	"keras.engine.training" -> "nested-unet-with-efficientnet-encoder.ipynb"	[label=importedBy];
	"Model(0)" -> "nested-unet-with-efficientnet-encoder.ipynb"	[label=appearsIn];
	"Model(0)" -> Model	[label=assignedFrom];
	"keras.callbacks" -> "nested-unet-with-efficientnet-encoder.ipynb"	[label=importedBy];
	ModelCheckpoint -> "keras.callbacks"	[label=importedBy];
	"ModelCheckpoint(0)" -> "nested-unet-with-efficientnet-encoder.ipynb"	[label=appearsIn];
	"ModelCheckpoint(0)" -> ModelCheckpoint	[label=assignedFrom];
	"keras.layers" -> "nested-unet-with-efficientnet-encoder.ipynb"	[label=importedBy];
	Input -> "keras.layers"	[label=importedBy];
	Input -> "keras.engine.topology"	[label=importedBy];
	"keras.engine.topology" -> "nested-unet-with-efficientnet-encoder.ipynb"	[label=importedBy];
	"Input(0)" -> "nested-unet-with-efficientnet-encoder.ipynb"	[label=appearsIn];
	"Input(0)" -> Input	[label=assignedFrom];
	Conv2D -> "keras.layers"	[label=importedBy];
	Conv2D -> "keras.layers.convolutional"	[label=importedBy];
	"keras.layers.convolutional" -> "nested-unet-with-efficientnet-encoder.ipynb"	[label=importedBy];
	"Conv2D(0)" -> "nested-unet-with-efficientnet-encoder.ipynb"	[label=appearsIn];
	"Conv2D(0)" -> Conv2D	[label=assignedFrom];
	Conv2DTranspose -> "keras.layers"	[label=importedBy];
	Conv2DTranspose -> "keras.layers.convolutional"	[label=importedBy];
	"Conv2DTranspose(0)" -> "nested-unet-with-efficientnet-encoder.ipynb"	[label=appearsIn];
	"Conv2DTranspose(0)" -> Conv2DTranspose	[label=assignedFrom];
	MaxPooling2D -> "keras.layers"	[label=importedBy];
	MaxPooling2D -> "keras.layers.pooling"	[label=importedBy];
	"keras.layers.pooling" -> "nested-unet-with-efficientnet-encoder.ipynb"	[label=importedBy];
	"MaxPooling2D(0)" -> "nested-unet-with-efficientnet-encoder.ipynb"	[label=appearsIn];
	"MaxPooling2D(0)" -> MaxPooling2D	[label=assignedFrom];
	concatenate -> "keras.layers"	[label=importedBy];
	concatenate -> "keras.layers.merge"	[label=importedBy];
	"keras.layers.merge" -> "nested-unet-with-efficientnet-encoder.ipynb"	[label=importedBy];
	"concatenate(0)" -> "nested-unet-with-efficientnet-encoder.ipynb"	[label=appearsIn];
	"concatenate(0)" -> concatenate	[label=assignedFrom];
	Dropout -> "keras.layers"	[label=importedBy];
	"Dropout(0)" -> "nested-unet-with-efficientnet-encoder.ipynb"	[label=appearsIn];
	"Dropout(0)" -> Dropout	[label=assignedFrom];
	BatchNormalization -> "keras.layers"	[label=importedBy];
	BatchNormalization -> "keras.layers.normalization"	[label=importedBy];
	"keras.layers.normalization" -> "nested-unet-with-efficientnet-encoder.ipynb"	[label=importedBy];
	"BatchNormalization(0)" -> "nested-unet-with-efficientnet-encoder.ipynb"	[label=appearsIn];
	"BatchNormalization(0)" -> BatchNormalization	[label=assignedFrom];
	Concatenate -> "keras.layers"	[label=importedBy];
	"Concatenate(0)" -> "nested-unet-with-efficientnet-encoder.ipynb"	[label=appearsIn];
	"Concatenate(0)" -> Concatenate	[label=assignedFrom];
	UpSampling2D -> "keras.layers"	[label=importedBy];
	UpSampling2D -> "keras.layers.convolutional"	[label=importedBy];
	"UpSampling2D(0)" -> "nested-unet-with-efficientnet-encoder.ipynb"	[label=appearsIn];
	"UpSampling2D(0)" -> UpSampling2D	[label=assignedFrom];
	tqdm -> "nested-unet-with-efficientnet-encoder.ipynb"	[label=importedBy];
	tqdm_notebook -> tqdm	[label=importedBy];
	"tqdm_notebook(0)" -> "nested-unet-with-efficientnet-encoder.ipynb"	[label=appearsIn];
	"tqdm_notebook(0)" -> tqdm_notebook	[label=assignedFrom];
	initializers -> keras	[label=importedBy];
	"initializers(0)" -> "nested-unet-with-efficientnet-encoder.ipynb"	[label=appearsIn];
	"initializers(0)" -> initializers	[label=assignedFrom];
	regularizers -> keras	[label=importedBy];
	"regularizers(0)" -> "nested-unet-with-efficientnet-encoder.ipynb"	[label=appearsIn];
	"regularizers(0)" -> regularizers	[label=assignedFrom];
	constraints -> keras	[label=importedBy];
	"constraints(0)" -> "nested-unet-with-efficientnet-encoder.ipynb"	[label=appearsIn];
	"constraints(0)" -> constraints	[label=assignedFrom];
	"keras.utils" -> "nested-unet-with-efficientnet-encoder.ipynb"	[label=importedBy];
	conv_utils -> "keras.utils"	[label=importedBy];
	"conv_utils(0)" -> "nested-unet-with-efficientnet-encoder.ipynb"	[label=appearsIn];
	"conv_utils(0)" -> conv_utils	[label=assignedFrom];
	"keras.utils.data_utils" -> "nested-unet-with-efficientnet-encoder.ipynb"	[label=importedBy];
	get_file -> "keras.utils.data_utils"	[label=importedBy];
	"get_file(0)" -> "nested-unet-with-efficientnet-encoder.ipynb"	[label=appearsIn];
	"get_file(0)" -> get_file	[label=assignedFrom];
	get_source_inputs -> "keras.engine.topology"	[label=importedBy];
	"get_source_inputs(0)" -> "nested-unet-with-efficientnet-encoder.ipynb"	[label=appearsIn];
	"get_source_inputs(0)" -> get_source_inputs	[label=assignedFrom];
	"keras.engine" -> "nested-unet-with-efficientnet-encoder.ipynb"	[label=importedBy];
	InputSpec -> "keras.engine"	[label=importedBy];
	"InputSpec(0)" -> "nested-unet-with-efficientnet-encoder.ipynb"	[label=appearsIn];
	"InputSpec(0)" -> InputSpec	[label=assignedFrom];
	LeakyReLU -> "keras.layers"	[label=importedBy];
	"LeakyReLU(0)" -> "nested-unet-with-efficientnet-encoder.ipynb"	[label=appearsIn];
	"LeakyReLU(0)" -> LeakyReLU	[label=assignedFrom];
	ZeroPadding2D -> "keras.layers"	[label=importedBy];
	"ZeroPadding2D(0)" -> "nested-unet-with-efficientnet-encoder.ipynb"	[label=appearsIn];
	"ZeroPadding2D(0)" -> ZeroPadding2D	[label=assignedFrom];
	"callbacks(0)" -> "nested-unet-with-efficientnet-encoder.ipynb"	[label=appearsIn];
	"callbacks(0)" -> "keras.callbacks"	[label=assignedFrom];
	Callback -> "keras.callbacks"	[label=importedBy];
	"Callback(0)" -> "nested-unet-with-efficientnet-encoder.ipynb"	[label=appearsIn];
	"Callback(0)" -> Callback	[label=assignedFrom];
	"keras.applications.xception" -> "nested-unet-with-efficientnet-encoder.ipynb"	[label=importedBy];
	Xception -> "keras.applications.xception"	[label=importedBy];
	"Xception(0)" -> "nested-unet-with-efficientnet-encoder.ipynb"	[label=appearsIn];
	"Xception(0)" -> Xception	[label=assignedFrom];
	multiply -> "keras.layers"	[label=importedBy];
	"multiply(0)" -> "nested-unet-with-efficientnet-encoder.ipynb"	[label=appearsIn];
	"multiply(0)" -> multiply	[label=assignedFrom];
	optimizers -> keras	[label=importedBy];
	"optimizers(0)" -> "nested-unet-with-efficientnet-encoder.ipynb"	[label=appearsIn];
	"optimizers(0)" -> optimizers	[label=assignedFrom];
	"keras.legacy" -> "nested-unet-with-efficientnet-encoder.ipynb"	[label=importedBy];
	interfaces -> "keras.legacy"	[label=importedBy];
	"interfaces(0)" -> "nested-unet-with-efficientnet-encoder.ipynb"	[label=appearsIn];
	"interfaces(0)" -> interfaces	[label=assignedFrom];
	"keras.utils.generic_utils" -> "nested-unet-with-efficientnet-encoder.ipynb"	[label=importedBy];
	get_custom_objects -> "keras.utils.generic_utils"	[label=importedBy];
	"get_custom_objects(0)" -> "nested-unet-with-efficientnet-encoder.ipynb"	[label=appearsIn];
	"get_custom_objects(0)" -> get_custom_objects	[label=assignedFrom];
	"keras.layers.core" -> "nested-unet-with-efficientnet-encoder.ipynb"	[label=importedBy];
	Activation -> "keras.layers"	[label=importedBy];
	Activation -> "keras.layers.core"	[label=importedBy];
	"Activation(0)" -> "nested-unet-with-efficientnet-encoder.ipynb"	[label=appearsIn];
	"Activation(0)" -> Activation	[label=assignedFrom];
	SpatialDropout2D -> "keras.layers.core"	[label=importedBy];
	"SpatialDropout2D(0)" -> "nested-unet-with-efficientnet-encoder.ipynb"	[label=appearsIn];
	"SpatialDropout2D(0)" -> SpatialDropout2D	[label=assignedFrom];
	Add -> "keras.layers"	[label=importedBy];
	"Add(0)" -> "nested-unet-with-efficientnet-encoder.ipynb"	[label=appearsIn];
	"Add(0)" -> Add	[label=assignedFrom];
	"keras.regularizers" -> "nested-unet-with-efficientnet-encoder.ipynb"	[label=importedBy];
	l2 -> "keras.regularizers"	[label=importedBy];
	"l2(0)" -> "nested-unet-with-efficientnet-encoder.ipynb"	[label=appearsIn];
	"l2(0)" -> l2	[label=assignedFrom];
	Dense -> "keras.layers"	[label=importedBy];
	Dense -> "keras.layers.core"	[label=importedBy];
	"Dense(0)" -> "nested-unet-with-efficientnet-encoder.ipynb"	[label=appearsIn];
	"Dense(0)" -> Dense	[label=assignedFrom];
	Lambda -> "keras.layers.core"	[label=importedBy];
	"Lambda(0)" -> "nested-unet-with-efficientnet-encoder.ipynb"	[label=appearsIn];
	"Lambda(0)" -> Lambda	[label=assignedFrom];
	add -> "keras.layers.merge"	[label=importedBy];
	"add(0)" -> "nested-unet-with-efficientnet-encoder.ipynb"	[label=appearsIn];
	"add(0)" -> add	[label=assignedFrom];
	GlobalAveragePooling2D -> "keras.layers"	[label=importedBy];
	"GlobalAveragePooling2D(0)" -> "nested-unet-with-efficientnet-encoder.ipynb"	[label=appearsIn];
	"GlobalAveragePooling2D(0)" -> GlobalAveragePooling2D	[label=assignedFrom];
	Reshape -> "keras.layers"	[label=importedBy];
	"Reshape(0)" -> "nested-unet-with-efficientnet-encoder.ipynb"	[label=appearsIn];
	"Reshape(0)" -> Reshape	[label=assignedFrom];
	Permute -> "keras.layers"	[label=importedBy];
	"Permute(0)" -> "nested-unet-with-efficientnet-encoder.ipynb"	[label=appearsIn];
	"Permute(0)" -> Permute	[label=assignedFrom];
	"keras.optimizers" -> "nested-unet-with-efficientnet-encoder.ipynb"	[label=importedBy];
	SGD -> "keras.optimizers"	[label=importedBy];
	"SGD(0)" -> "nested-unet-with-efficientnet-encoder.ipynb"	[label=appearsIn];
	"SGD(0)" -> SGD	[label=assignedFrom];
	ImageDataGenerator -> "keras.preprocessing.image"	[label=importedBy];
	"ImageDataGenerator(0)" -> "nested-unet-with-efficientnet-encoder.ipynb"	[label=appearsIn];
	"ImageDataGenerator(0)" -> ImageDataGenerator	[label=assignedFrom];
	glob -> "nested-unet-with-efficientnet-encoder.ipynb"	[label=importedBy];
	"glob(0)" -> "nested-unet-with-efficientnet-encoder.ipynb"	[label=appearsIn];
	"glob(0)" -> glob	[label=assignedFrom];
	shutil -> "nested-unet-with-efficientnet-encoder.ipynb"	[label=importedBy];
	"shutil(0)" -> "nested-unet-with-efficientnet-encoder.ipynb"	[label=appearsIn];
	"shutil(0)" -> shutil	[label=assignedFrom];
	os -> "nested-unet-with-efficientnet-encoder.ipynb"	[label=importedBy];
	"os(0)" -> "nested-unet-with-efficientnet-encoder.ipynb"	[label=appearsIn];
	"os(0)" -> os	[label=assignedFrom];
	random -> "nested-unet-with-efficientnet-encoder.ipynb"	[label=importedBy];
	"random(0)" -> "nested-unet-with-efficientnet-encoder.ipynb"	[label=appearsIn];
	"random(0)" -> random	[label=assignedFrom];
	PIL -> "nested-unet-with-efficientnet-encoder.ipynb"	[label=importedBy];
	Image -> PIL	[label=importedBy];
	"Image(0)" -> "nested-unet-with-efficientnet-encoder.ipynb"	[label=appearsIn];
	"Image(0)" -> Image	[label=assignedFrom];
	"10(0)" -> "nested-unet-with-efficientnet-encoder.ipynb"	[label=appearsIn];
	"seed(0)$0" -> "10(0)"	[label=assignedFrom];
	"np(0)$0" -> "np(0)"	[label=seed];
	"np(0)$0" -> "seed(0)$0"	[label=seed];
	"random(0)$0" -> "random(0)"	[label=seed];
	"random(0)$0" -> "seed(0)$0"	[label=seed];
	"os(0)$0" -> "os(0)"	[label=str];
	"os(0)$0" -> "seed(0)$0"	[label=str];
	"np(0)$1" -> "seed(0)$0"	[label=seed];
	"np(0)$1" -> "np(0)$0"	[label=seed];
	"tf(0)$0" -> "tf(0)"	[label=set_random_seed];
	"tf(0)$0" -> "seed(0)$0"	[label=set_random_seed];
	"all_mask_fn(0)$0" -> "glob(0)"	[label=glob];
	"all_mask_fn(0)$0" -> "./masks/*(0)"	[label=glob];
	"./masks/*(0)" -> "nested-unet-with-efficientnet-encoder.ipynb"	[label=appearsIn];
	"mask_df(0)$0" -> "pd(0)"	[label=DataFrame];
	"mask_df(0)$1" -> "all_mask_fn(0)$0"	[label=assignedFrom];
	"mask_df(0)$1" -> "mask_df(0)$0"	[label=assignedFrom];
	"0(0)" -> "nested-unet-with-efficientnet-encoder.ipynb"	[label=appearsIn];
	"mask_df(0)$2" -> "mask_df(0)$1"	[label=assignedFrom];
	"mask_df(0)$2" -> "0(0)"	[label=assignedFrom];
	"mask_df(0)$3" -> "mask_df(0)$2"	[label=set_index];
	"mask_df(0)$3" -> "file_names(0)"	[label=set_index];
	"file_names(0)" -> "nested-unet-with-efficientnet-encoder.ipynb"	[label=appearsIn];
	"fn(0)" -> "nested-unet-with-efficientnet-encoder.ipynb"	[label=appearsIn];
	"fn(0)" -> "all_mask_fn(0)$0"	[label=iteratorOf];
	"mask_df(0)$4" -> "Image(0)"	[label=Div];
	"mask_df(0)$4" -> "np(0)$1"	[label=Div];
	"mask_df(0)$4" -> "mask_df(0)$3"	[label=Div];
	"mask_df(0)$4" -> "fn(0)"	[label=Div];
	"mask_df(0)$4" -> "256(0)"	[label=Div];
	"mask_df(0)$4" -> "255(0)"	[label=Div];
	"256(0)" -> "nested-unet-with-efficientnet-encoder.ipynb"	[label=appearsIn];
	"255(0)" -> "nested-unet-with-efficientnet-encoder.ipynb"	[label=appearsIn];
	"mask_df(0)$5" -> "mask_df(0)$4"	[label=reset_index];
	"sns(0)$1" -> "sns(0)$0"	[label=distplot];
	"sns(0)$1" -> "mask_df(0)$5"	[label=distplot];
	"mask_df(0)$6" -> "0(0)"	[label=assignedFrom];
	"mask_df(0)$6" -> "mask_df(0)$5"	[label=assignedFrom];
	"1(0)" -> "nested-unet-with-efficientnet-encoder.ipynb"	[label=appearsIn];
	"mask_df(0)$7" -> "mask_df(0)$6"	[label=assignedFrom];
	"mask_df(0)$7" -> "1(0)"	[label=assignedFrom];
	"all_train_fn(0)$0" -> "glob(0)"	[label=glob];
	"all_train_fn(0)$0" -> "./train/*(0)"	[label=glob];
	"./train/*(0)" -> "nested-unet-with-efficientnet-encoder.ipynb"	[label=appearsIn];
	"total_samples(0)$0" -> "all_train_fn(0)$0"	[label=len];
	"idx(0)$0" -> "np(0)$1"	[label=arange];
	"idx(0)$0" -> "total_samples(0)$0"	[label=arange];
	"idx(0)$0" -> "enumerate(0)"	[label=iteratorOf];
	"idx(0)$0" -> "test_fn(0)$0"	[label=iteratorOf];
	"idx(0)$0" -> "max_images(0)$4"	[label=iteratorOf];
	"enumerate(0)" -> "nested-unet-with-efficientnet-encoder.ipynb"	[label=appearsIn];
	"test_fn(0)$0" -> "glob(0)"	[label=glob];
	"test_fn(0)$0" -> "./test/*(0)"	[label=glob];
	"max_images(0)$4" -> "64(0)"	[label=assignedFrom];
	"train_fn(0)$0" -> "10(0)"	[label=train_test_split];
	"train_fn(0)$0" -> "mask_df(0)$7"	[label=train_test_split];
	"train_fn(0)$0" -> "all_train_fn(0)$0"	[label=train_test_split];
	"train_fn(0)$0" -> "0.1(0)"	[label=train_test_split];
	"0.1(0)" -> "nested-unet-with-efficientnet-encoder.ipynb"	[label=appearsIn];
	"val_fn(0)$0" -> "10(0)"	[label=train_test_split];
	"val_fn(0)$0" -> "mask_df(0)$7"	[label=train_test_split];
	"val_fn(0)$0" -> "all_train_fn(0)$0"	[label=train_test_split];
	"val_fn(0)$0" -> "0.1(0)"	[label=train_test_split];
	"No. of train files:(0)" -> "nested-unet-with-efficientnet-encoder.ipynb"	[label=appearsIn];
	"print[101/0]" -> "train_fn(0)$0"	[label=print];
	"print[101/0]" -> "No. of train files:(0)"	[label=print];
	"print[101/0]" -> "len(0)"	[label=print];
	"len(0)" -> "nested-unet-with-efficientnet-encoder.ipynb"	[label=appearsIn];
	"No. of val files:(0)" -> "nested-unet-with-efficientnet-encoder.ipynb"	[label=appearsIn];
	"print[102/0]" -> "val_fn(0)$0"	[label=print];
	"print[102/0]" -> "len(0)"	[label=print];
	"print[102/0]" -> "No. of val files:(0)"	[label=print];
	"masks_train_fn(0)$0" -> "fn(0)"	[label=assignedFrom];
	"masks_train_fn(0)$0" -> "train_fn(0)$0"	[label=assignedFrom];
	"masks_train_fn(0)$0" -> "./train(0)"	[label=assignedFrom];
	"masks_train_fn(0)$0" -> "./masks(0)"	[label=assignedFrom];
	"./train(0)" -> "nested-unet-with-efficientnet-encoder.ipynb"	[label=appearsIn];
	"./masks(0)" -> "nested-unet-with-efficientnet-encoder.ipynb"	[label=appearsIn];
	"masks_val_fn(0)$0" -> "fn(0)"	[label=assignedFrom];
	"masks_val_fn(0)$0" -> "val_fn(0)$0"	[label=assignedFrom];
	"masks_val_fn(0)$0" -> "./train(0)"	[label=assignedFrom];
	"masks_val_fn(0)$0" -> "./masks(0)"	[label=assignedFrom];
	"./keras_im_train(0)" -> "nested-unet-with-efficientnet-encoder.ipynb"	[label=appearsIn];
	"train_dir(0)$0" -> "./keras_im_train(0)"	[label=assignedFrom];
	"full_fn(0)" -> "nested-unet-with-efficientnet-encoder.ipynb"	[label=appearsIn];
	"full_fn(0)" -> "train_fn(0)$0"	[label=iteratorOf];
	"full_fn(0)" -> "val_fn(0)$0"	[label=iteratorOf];
	"full_fn(0)" -> "masks_train_fn(0)$0"	[label=iteratorOf];
	"full_fn(0)" -> "masks_val_fn(0)$0"	[label=iteratorOf];
	"fn(0)$0" -> "1(0)"	[label=assignedFrom];
	"fn(0)$0" -> "full_fn(0)"	[label=assignedFrom];
	"fn(0)$0" -> "/(0)"	[label=assignedFrom];
	"/(0)" -> "nested-unet-with-efficientnet-encoder.ipynb"	[label=appearsIn];
	"shutil(0)$0" -> "shutil(0)"	[label=move];
	"shutil(0)$0" -> "os(0)$0"	[label=move];
	"shutil(0)$0" -> "train_dir(0)$0"	[label=move];
	"shutil(0)$0" -> "full_fn(0)"	[label=move];
	"shutil(0)$0" -> "fn(0)$0"	[label=move];
	"./keras_mask_train(0)" -> "nested-unet-with-efficientnet-encoder.ipynb"	[label=appearsIn];
	"train_dir(0)$1" -> "./keras_mask_train(0)"	[label=assignedFrom];
	"fn(0)$1" -> "1(0)"	[label=assignedFrom];
	"fn(0)$1" -> "full_fn(0)"	[label=assignedFrom];
	"fn(0)$1" -> "/(0)"	[label=assignedFrom];
	"shutil(0)$1" -> "os(0)$0"	[label=move];
	"shutil(0)$1" -> "full_fn(0)"	[label=move];
	"shutil(0)$1" -> "shutil(0)$0"	[label=move];
	"shutil(0)$1" -> "train_dir(0)$1"	[label=move];
	"shutil(0)$1" -> "fn(0)$1"	[label=move];
	"./keras_im_val(0)" -> "nested-unet-with-efficientnet-encoder.ipynb"	[label=appearsIn];
	"train_dir(0)$2" -> "./keras_im_val(0)"	[label=assignedFrom];
	"fn(0)$2" -> "1(0)"	[label=assignedFrom];
	"fn(0)$2" -> "full_fn(0)"	[label=assignedFrom];
	"fn(0)$2" -> "/(0)"	[label=assignedFrom];
	"shutil(0)$2" -> "os(0)$0"	[label=move];
	"shutil(0)$2" -> "full_fn(0)"	[label=move];
	"shutil(0)$2" -> "shutil(0)$1"	[label=move];
	"shutil(0)$2" -> "train_dir(0)$2"	[label=move];
	"shutil(0)$2" -> "fn(0)$2"	[label=move];
	"./keras_mask_val(0)" -> "nested-unet-with-efficientnet-encoder.ipynb"	[label=appearsIn];
	"train_dir(0)$3" -> "./keras_mask_val(0)"	[label=assignedFrom];
	"fn(0)$3" -> "1(0)"	[label=assignedFrom];
	"fn(0)$3" -> "full_fn(0)"	[label=assignedFrom];
	"fn(0)$3" -> "/(0)"	[label=assignedFrom];
	"shutil(0)$3" -> "os(0)$0"	[label=move];
	"shutil(0)$3" -> "full_fn(0)"	[label=move];
	"shutil(0)$3" -> "shutil(0)$2"	[label=move];
	"shutil(0)$3" -> "train_dir(0)$3"	[label=move];
	"shutil(0)$3" -> "fn(0)$3"	[label=move];
	"train_im_path(0)$0" -> "./keras_im_train(0)"	[label=assignedFrom];
	"train_im_path(0)$0" -> "./keras_mask_train(0)"	[label=assignedFrom];
	"train_mask_path(0)$0" -> "./keras_im_train(0)"	[label=assignedFrom];
	"train_mask_path(0)$0" -> "./keras_mask_train(0)"	[label=assignedFrom];
	"h(0)$0" -> "256(0)"	[label=assignedFrom];
	"h(0)$0" -> "16(0)"	[label=assignedFrom];
	"16(0)" -> "nested-unet-with-efficientnet-encoder.ipynb"	[label=appearsIn];
	"w(0)$0" -> "256(0)"	[label=assignedFrom];
	"w(0)$0" -> "16(0)"	[label=assignedFrom];
	"batch_size(0)$0" -> "256(0)"	[label=assignedFrom];
	"batch_size(0)$0" -> "16(0)"	[label=assignedFrom];
	"val_im_path(0)$0" -> "./keras_im_val(0)"	[label=assignedFrom];
	"val_im_path(0)$0" -> "./keras_mask_val(0)"	[label=assignedFrom];
	"val_mask_path(0)$0" -> "./keras_im_val(0)"	[label=assignedFrom];
	"val_mask_path(0)$0" -> "./keras_mask_val(0)"	[label=assignedFrom];
	"self(2)" -> "__init__[0]"	[label=_argToVar];
	"train_im_path(2)" -> "__init__[1]"	[label=_argToVar];
	"train_mask_path(2)" -> "__init__[2]"	[label=_argToVar];
	"augmentations(2)" -> "__init__[3]"	[label=_argToVar];
	"batch_size(2)" -> "__init__[4]"	[label=_argToVar];
	"img_size(2)" -> "__init__[5]"	[label=_argToVar];
	"n_channels(2)" -> "__init__[6]"	[label=_argToVar];
	"shuffle(2)" -> "__init__[7]"	[label=_argToVar];
	"self(2)$0" -> "self(2)"	[label=assignedFrom];
	"self(2)$0" -> "batch_size(2)"	[label=assignedFrom];
	"self(2)$1" -> "train_im_path(2)"	[label=glob];
	"self(2)$1" -> "self(2)$0"	[label=glob];
	"self(2)$1" -> "glob(2)"	[label=glob];
	"self(2)$1" -> "/*(2)"	[label=glob];
	"self(2)$2" -> "train_im_path(2)"	[label=assignedFrom];
	"self(2)$2" -> "self(2)$1"	[label=assignedFrom];
	"self(2)$3" -> "train_mask_path(2)"	[label=assignedFrom];
	"self(2)$3" -> "self(2)$2"	[label=assignedFrom];
	"self(2)$4" -> "img_size(2)"	[label=assignedFrom];
	"self(2)$4" -> "self(2)$3"	[label=assignedFrom];
	"self(2)$5" -> "n_channels(2)"	[label=assignedFrom];
	"self(2)$5" -> "self(2)$4"	[label=assignedFrom];
	"self(2)$6" -> "shuffle(2)"	[label=assignedFrom];
	"self(2)$6" -> "self(2)$5"	[label=assignedFrom];
	"self(2)$7" -> "augmentations(2)"	[label=assignedFrom];
	"self(2)$7" -> "self(2)$6"	[label=assignedFrom];
	"self(2)$8" -> "self(2)$7"	[label=on_epoch_end];
	"self(3)" -> "__len__[0]"	[label=_argToVar];
	"self(4)" -> "__getitem__[0]"	[label=_argToVar];
	"index(4)" -> "__getitem__[1]"	[label=_argToVar];
	"indexes(4)$0" -> "self(4)"	[label=assignedFrom];
	"indexes(4)$0" -> "index(4)"	[label=assignedFrom];
	"indexes(4)$0" -> "min(4)"	[label=assignedFrom];
	"indexes(4)$0" -> "1(4)"	[label=assignedFrom];
	"indexes(4)$0" -> "len(4)"	[label=assignedFrom];
	"list_IDs_im(4)$0" -> "self(4)"	[label=assignedFrom];
	"list_IDs_im(4)$0" -> "indexes(4)$0"	[label=assignedFrom];
	"list_IDs_im(4)$0" -> "k(4)"	[label=assignedFrom];
	"X(4)$0" -> "self(4)"	[label=data_generation];
	"X(4)$0" -> "list_IDs_im(4)$0"	[label=data_generation];
	"y(4)$0" -> "self(4)"	[label=data_generation];
	"y(4)$0" -> "list_IDs_im(4)$0"	[label=data_generation];
	"y(4)$0" -> "X(4)$0"	[label=iteratorOf];
	"y(4)$0" -> "y(4)$0"	[label=iteratorOf];
	"y(4)$0" -> "zip(4)"	[label=iteratorOf];
	"im(4)$0" -> "[](4)"	[label=assignedFrom];
	"mask(4)$0" -> "[](4)"	[label=assignedFrom];
	"x(4)" -> "X(4)$0"	[label=iteratorOf];
	"x(4)" -> "y(4)$0"	[label=iteratorOf];
	"x(4)" -> "zip(4)"	[label=iteratorOf];
	"augmented(4)$0" -> "self(4)"	[label=augment];
	"augmented(4)$0" -> "y(4)$0"	[label=augment];
	"augmented(4)$0" -> "x(4)"	[label=augment];
	"im(4)$1" -> "im(4)$0"	[label=append];
	"im(4)$1" -> "augmented(4)$0"	[label=append];
	"im(4)$1" -> "image(4)"	[label=append];
	"mask(4)$1" -> "mask(4)$0"	[label=append];
	"mask(4)$1" -> "augmented(4)$0"	[label=append];
	"mask(4)$1" -> "mask(4)$1"	[label=append];
	"self(5)" -> "on_epoch_end[0]"	[label=_argToVar];
	"self(5)$0" -> "self(5)"	[label=arange];
	"self(5)$0" -> "self(5)$0"	[label=arange];
	"self(5)$0" -> "np(5)"	[label=arange];
	"self(5)$0" -> "len(5)"	[label=arange];
	"np(5)$0" -> "self(5)$0"	[label=shuffle];
	"np(5)$0" -> "np(5)"	[label=shuffle];
	"self(6)" -> "data_generation[0]"	[label=_argToVar];
	"list_IDs_im(6)" -> "data_generation[1]"	[label=_argToVar];
	"X(6)$0" -> "self(6)"	[label=empty];
	"X(6)$0" -> "list_IDs_im(6)"	[label=empty];
	"X(6)$0" -> "np(6)"	[label=empty];
	"X(6)$0" -> "len(6)"	[label=empty];
	"y(6)$0" -> "self(6)"	[label=empty];
	"y(6)$0" -> "list_IDs_im(6)"	[label=empty];
	"y(6)$0" -> "np(6)"	[label=empty];
	"y(6)$0" -> "len(6)"	[label=empty];
	"y(6)$0" -> "1(6)"	[label=empty];
	"i(6)" -> "list_IDs_im(6)"	[label=iteratorOf];
	"i(6)" -> "enumerate(6)"	[label=iteratorOf];
	"im_path(6)" -> "list_IDs_im(6)"	[label=iteratorOf];
	"im_path(6)" -> "enumerate(6)"	[label=iteratorOf];
	"im(6)$0" -> "np(6)"	[label=array];
	"im(6)$0" -> "im_path(6)"	[label=array];
	"im(6)$0" -> "Image(6)"	[label=array];
	"mask_path(6)$0" -> "self(6)"	[label=replace];
	"mask_path(6)$0" -> "im_path(6)"	[label=replace];
	"mask(6)$0" -> "np(6)"	[label=array];
	"mask(6)$0" -> "Image(6)"	[label=array];
	"mask(6)$0" -> "mask_path(6)$0"	[label=array];
	"im(6)$1" -> "np(6)"	[label=repeat];
	"im(6)$1" -> "im(6)$1"	[label=repeat];
	"im(6)$1" -> "Ellipsis(6)"	[label=repeat];
	"im(6)$1" -> "None(6)"	[label=repeat];
	"im(6)$1" -> "3(6)"	[label=repeat];
	"im(6)$1" -> "2(6)"	[label=repeat];
	"X(6)$1" -> "self(6)"	[label=resize];
	"X(6)$1" -> "X(6)$0"	[label=resize];
	"X(6)$1" -> "im(6)$1"	[label=resize];
	"X(6)$1" -> "cv2(6)"	[label=resize];
	"y(6)$1" -> "self(6)"	[label=assignedFrom];
	"y(6)$1" -> "np(6)"	[label=assignedFrom];
	"y(6)$1" -> "y(6)$0"	[label=assignedFrom];
	"y(6)$1" -> "mask(6)$0"	[label=assignedFrom];
	"y(6)$1" -> "Ellipsis(6)"	[label=assignedFrom];
	"y(6)$1" -> "cv2(6)"	[label=assignedFrom];
	"y(6)$2" -> "y(6)$1"	[label=assignedFrom];
	"y(6)$2" -> "255(6)"	[label=assignedFrom];
	cv2 -> "nested-unet-with-efficientnet-encoder.ipynb"	[label=importedBy];
	"cv2(0)" -> "nested-unet-with-efficientnet-encoder.ipynb"	[label=appearsIn];
	"cv2(0)" -> cv2	[label=assignedFrom];
	albumentations -> "nested-unet-with-efficientnet-encoder.ipynb"	[label=importedBy];
	Compose -> albumentations	[label=importedBy];
	"Compose(0)" -> "nested-unet-with-efficientnet-encoder.ipynb"	[label=appearsIn];
	"Compose(0)" -> Compose	[label=assignedFrom];
	HorizontalFlip -> albumentations	[label=importedBy];
	"HorizontalFlip(0)" -> "nested-unet-with-efficientnet-encoder.ipynb"	[label=appearsIn];
	"HorizontalFlip(0)" -> HorizontalFlip	[label=assignedFrom];
	CLAHE -> albumentations	[label=importedBy];
	"CLAHE(0)" -> "nested-unet-with-efficientnet-encoder.ipynb"	[label=appearsIn];
	"CLAHE(0)" -> CLAHE	[label=assignedFrom];
	HueSaturationValue -> albumentations	[label=importedBy];
	"HueSaturationValue(0)" -> "nested-unet-with-efficientnet-encoder.ipynb"	[label=appearsIn];
	"HueSaturationValue(0)" -> HueSaturationValue	[label=assignedFrom];
	RandomBrightness -> albumentations	[label=importedBy];
	"RandomBrightness(0)" -> "nested-unet-with-efficientnet-encoder.ipynb"	[label=appearsIn];
	"RandomBrightness(0)" -> RandomBrightness	[label=assignedFrom];
	RandomContrast -> albumentations	[label=importedBy];
	"RandomContrast(0)" -> "nested-unet-with-efficientnet-encoder.ipynb"	[label=appearsIn];
	"RandomContrast(0)" -> RandomContrast	[label=assignedFrom];
	RandomGamma -> albumentations	[label=importedBy];
	"RandomGamma(0)" -> "nested-unet-with-efficientnet-encoder.ipynb"	[label=appearsIn];
	"RandomGamma(0)" -> RandomGamma	[label=assignedFrom];
	OneOf -> albumentations	[label=importedBy];
	"OneOf(0)" -> "nested-unet-with-efficientnet-encoder.ipynb"	[label=appearsIn];
	"OneOf(0)" -> OneOf	[label=assignedFrom];
	ToFloat -> albumentations	[label=importedBy];
	"ToFloat(0)" -> "nested-unet-with-efficientnet-encoder.ipynb"	[label=appearsIn];
	"ToFloat(0)" -> ToFloat	[label=assignedFrom];
	ShiftScaleRotate -> albumentations	[label=importedBy];
	"ShiftScaleRotate(0)" -> "nested-unet-with-efficientnet-encoder.ipynb"	[label=appearsIn];
	"ShiftScaleRotate(0)" -> ShiftScaleRotate	[label=assignedFrom];
	GridDistortion -> albumentations	[label=importedBy];
	"GridDistortion(0)" -> "nested-unet-with-efficientnet-encoder.ipynb"	[label=appearsIn];
	"GridDistortion(0)" -> GridDistortion	[label=assignedFrom];
	ElasticTransform -> albumentations	[label=importedBy];
	"ElasticTransform(0)" -> "nested-unet-with-efficientnet-encoder.ipynb"	[label=appearsIn];
	"ElasticTransform(0)" -> ElasticTransform	[label=assignedFrom];
	JpegCompression -> albumentations	[label=importedBy];
	"JpegCompression(0)" -> "nested-unet-with-efficientnet-encoder.ipynb"	[label=appearsIn];
	"JpegCompression(0)" -> JpegCompression	[label=assignedFrom];
	RGBShift -> albumentations	[label=importedBy];
	"RGBShift(0)" -> "nested-unet-with-efficientnet-encoder.ipynb"	[label=appearsIn];
	"RGBShift(0)" -> RGBShift	[label=assignedFrom];
	Blur -> albumentations	[label=importedBy];
	"Blur(0)" -> "nested-unet-with-efficientnet-encoder.ipynb"	[label=appearsIn];
	"Blur(0)" -> Blur	[label=assignedFrom];
	MotionBlur -> albumentations	[label=importedBy];
	"MotionBlur(0)" -> "nested-unet-with-efficientnet-encoder.ipynb"	[label=appearsIn];
	"MotionBlur(0)" -> MotionBlur	[label=assignedFrom];
	MedianBlur -> albumentations	[label=importedBy];
	"MedianBlur(0)" -> "nested-unet-with-efficientnet-encoder.ipynb"	[label=appearsIn];
	"MedianBlur(0)" -> MedianBlur	[label=assignedFrom];
	GaussNoise -> albumentations	[label=importedBy];
	"GaussNoise(0)" -> "nested-unet-with-efficientnet-encoder.ipynb"	[label=appearsIn];
	"GaussNoise(0)" -> GaussNoise	[label=assignedFrom];
	CenterCrop -> albumentations	[label=importedBy];
	"CenterCrop(0)" -> "nested-unet-with-efficientnet-encoder.ipynb"	[label=appearsIn];
	"CenterCrop(0)" -> CenterCrop	[label=assignedFrom];
	IAAAdditiveGaussianNoise -> albumentations	[label=importedBy];
	"IAAAdditiveGaussianNoise(0)" -> "nested-unet-with-efficientnet-encoder.ipynb"	[label=appearsIn];
	"IAAAdditiveGaussianNoise(0)" -> IAAAdditiveGaussianNoise	[label=assignedFrom];
	OpticalDistortion -> albumentations	[label=importedBy];
	"OpticalDistortion(0)" -> "nested-unet-with-efficientnet-encoder.ipynb"	[label=appearsIn];
	"OpticalDistortion(0)" -> OpticalDistortion	[label=assignedFrom];
	RandomSizedCrop -> albumentations	[label=importedBy];
	"RandomSizedCrop(0)" -> "nested-unet-with-efficientnet-encoder.ipynb"	[label=appearsIn];
	"RandomSizedCrop(0)" -> RandomSizedCrop	[label=assignedFrom];
	"[<_ast.Call object at 0x7fd4c05d6250>, <_ast.Call object at 0x7fd4c05d6340>, <_ast.Call object at 0x7fd4c05d6580>, <_ast.Call object \
at 0x7fd4c05d6b50>, <_ast.Call object at 0x7fd4c05d6e50>](0)" -> "nested-unet-with-efficientnet-encoder.ipynb"	[label=appearsIn];
	"AUGMENTATIONS_TRAIN(0)$0" -> "1(0)"	[label=Compose];
	"AUGMENTATIONS_TRAIN(0)$0" -> "[<_ast.Call object at 0x7fd4c05d6250>, <_ast.Call object at 0x7fd4c05d6340>, <_ast.Call object at 0x7fd4c05d6580>, <_ast.Call object \
at 0x7fd4c05d6b50>, <_ast.Call object at 0x7fd4c05d6e50>](0)"	[label=Compose];
	"[<_ast.Call object at 0x7fd4c05d4100>](0)" -> "nested-unet-with-efficientnet-encoder.ipynb"	[label=appearsIn];
	"AUGMENTATIONS_TEST(0)$0" -> "1(0)"	[label=Compose];
	"AUGMENTATIONS_TEST(0)$0" -> "[<_ast.Call object at 0x7fd4c05d4100>](0)"	[label=Compose];
	"64(0)" -> "nested-unet-with-efficientnet-encoder.ipynb"	[label=appearsIn];
	"a(0)$0" -> "64(0)"	[label=DataGenerator];
	"a(0)$0" -> "False(0)"	[label=DataGenerator];
	"False(0)" -> "nested-unet-with-efficientnet-encoder.ipynb"	[label=appearsIn];
	"images(0)$0" -> "0(0)"	[label=__getitem__];
	"images(0)$0" -> "a(0)$0"	[label=__getitem__];
	"masks(0)$0" -> "0(0)"	[label=__getitem__];
	"masks(0)$0" -> "a(0)$0"	[label=__getitem__];
	"max_images(0)$0" -> "64(0)"	[label=assignedFrom];
	"grid_width(0)$0" -> "16(0)"	[label=assignedFrom];
	"grid_height(0)$0" -> "max_images(0)$0"	[label=int];
	"grid_height(0)$0" -> "grid_width(0)$0"	[label=int];
	"fig(0)$0" -> "plt(0)$0"	[label=subplots];
	"fig(0)$0" -> "grid_width(0)$0"	[label=subplots];
	"fig(0)$0" -> "grid_height(0)$0"	[label=subplots];
	"axs(0)$0" -> "plt(0)$0"	[label=subplots];
	"axs(0)$0" -> "grid_width(0)$0"	[label=subplots];
	"axs(0)$0" -> "grid_height(0)$0"	[label=subplots];
	"i(0)" -> "nested-unet-with-efficientnet-encoder.ipynb"	[label=appearsIn];
	"i(0)" -> "enumerate(0)"	[label=iteratorOf];
	"i(0)" -> "test_fn(0)$0"	[label=iteratorOf];
	"i(0)" -> "max_images(0)$4"	[label=iteratorOf];
	"i(0)" -> "images(0)$0"	[label=iteratorOf];
	"i(0)" -> "masks(0)$0"	[label=iteratorOf];
	"i(0)" -> "zip(0)"	[label=iteratorOf];
	"i(0)" -> "images(0)$1"	[label=iteratorOf];
	"i(0)" -> "masks(0)$1"	[label=iteratorOf];
	"i(0)" -> "images(0)$2"	[label=iteratorOf];
	"i(0)" -> "masks(0)$2"	[label=iteratorOf];
	"i(0)" -> "images(0)$3"	[label=iteratorOf];
	"i(0)" -> "masks(0)$3"	[label=iteratorOf];
	"zip(0)" -> "nested-unet-with-efficientnet-encoder.ipynb"	[label=appearsIn];
	"images(0)$1" -> "0(0)"	[label=__getitem__];
	"images(0)$1" -> "a(0)$1"	[label=__getitem__];
	"masks(0)$1" -> "0(0)"	[label=__getitem__];
	"masks(0)$1" -> "a(0)$1"	[label=__getitem__];
	"images(0)$2" -> "0(0)"	[label=__getitem__];
	"images(0)$2" -> "validation_generator(0)$2"	[label=__getitem__];
	"masks(0)$2" -> "0(0)"	[label=__getitem__];
	"masks(0)$2" -> "validation_generator(0)$2"	[label=__getitem__];
	"images(0)$3" -> "0(0)"	[label=__getitem__];
	"images(0)$3" -> "validation_generator(0)$3"	[label=__getitem__];
	"masks(0)$3" -> "0(0)"	[label=__getitem__];
	"masks(0)$3" -> "validation_generator(0)$3"	[label=__getitem__];
	"im(0)" -> "nested-unet-with-efficientnet-encoder.ipynb"	[label=appearsIn];
	"im(0)" -> "enumerate(0)"	[label=iteratorOf];
	"im(0)" -> "images(0)$0"	[label=iteratorOf];
	"im(0)" -> "masks(0)$0"	[label=iteratorOf];
	"im(0)" -> "zip(0)"	[label=iteratorOf];
	"im(0)" -> "images(0)$1"	[label=iteratorOf];
	"im(0)" -> "masks(0)$1"	[label=iteratorOf];
	"im(0)" -> "images(0)$2"	[label=iteratorOf];
	"im(0)" -> "masks(0)$2"	[label=iteratorOf];
	"im(0)" -> "images(0)$3"	[label=iteratorOf];
	"im(0)" -> "masks(0)$3"	[label=iteratorOf];
	"mask(0)" -> "nested-unet-with-efficientnet-encoder.ipynb"	[label=appearsIn];
	"mask(0)" -> "enumerate(0)"	[label=iteratorOf];
	"mask(0)" -> "images(0)$0"	[label=iteratorOf];
	"mask(0)" -> "masks(0)$0"	[label=iteratorOf];
	"mask(0)" -> "zip(0)"	[label=iteratorOf];
	"mask(0)" -> "images(0)$1"	[label=iteratorOf];
	"mask(0)" -> "masks(0)$1"	[label=iteratorOf];
	"mask(0)" -> "images(0)$2"	[label=iteratorOf];
	"mask(0)" -> "masks(0)$2"	[label=iteratorOf];
	"mask(0)" -> "images(0)$3"	[label=iteratorOf];
	"mask(0)" -> "masks(0)$3"	[label=iteratorOf];
	"ax(0)$0" -> "grid_width(0)$0"	[label=assignedFrom];
	"ax(0)$0" -> "axs(0)$0"	[label=assignedFrom];
	"ax(0)$0" -> "i(0)"	[label=assignedFrom];
	"ax(0)$0" -> "int(0)"	[label=assignedFrom];
	"int(0)" -> "nested-unet-with-efficientnet-encoder.ipynb"	[label=appearsIn];
	"ax(0)$1" -> "im(0)"	[label=imshow];
	"ax(0)$1" -> "ax(0)$0"	[label=imshow];
	"ax(0)$2" -> "mask(0)"	[label=imshow];
	"ax(0)$2" -> "ax(0)$1"	[label=imshow];
	"ax(0)$3" -> "ax(0)$2"	[label=axis];
	"ax(0)$3" -> "off(0)"	[label=axis];
	"off(0)" -> "nested-unet-with-efficientnet-encoder.ipynb"	[label=appearsIn];
	"plt(0)$1" -> "plt(0)$0"	[label=suptitle];
	"plt(0)$1" -> "Chest X-rays, Red: Pneumothorax.(0)"	[label=suptitle];
	"Chest X-rays, Red: Pneumothorax.(0)" -> "nested-unet-with-efficientnet-encoder.ipynb"	[label=appearsIn];
	"a(0)$1" -> "AUGMENTATIONS_TRAIN(0)$0"	[label=DataGenerator];
	"a(0)$1" -> "64(0)"	[label=DataGenerator];
	"a(0)$1" -> "False(0)"	[label=DataGenerator];
	"max_images(0)$1" -> "64(0)"	[label=assignedFrom];
	"grid_width(0)$1" -> "16(0)"	[label=assignedFrom];
	"grid_height(0)$1" -> "max_images(0)$1"	[label=int];
	"grid_height(0)$1" -> "grid_width(0)$1"	[label=int];
	"fig(0)$1" -> "plt(0)$1"	[label=subplots];
	"fig(0)$1" -> "grid_width(0)$1"	[label=subplots];
	"fig(0)$1" -> "grid_height(0)$1"	[label=subplots];
	"axs(0)$1" -> "plt(0)$1"	[label=subplots];
	"axs(0)$1" -> "grid_width(0)$1"	[label=subplots];
	"axs(0)$1" -> "grid_height(0)$1"	[label=subplots];
	"ax(0)$4" -> "i(0)"	[label=assignedFrom];
	"ax(0)$4" -> "int(0)"	[label=assignedFrom];
	"ax(0)$4" -> "grid_width(0)$1"	[label=assignedFrom];
	"ax(0)$4" -> "axs(0)$1"	[label=assignedFrom];
	"ax(0)$5" -> "0(0)"	[label=imshow];
	"ax(0)$5" -> "im(0)"	[label=imshow];
	"ax(0)$5" -> "ax(0)$4"	[label=imshow];
	"ax(0)$6" -> "mask(0)"	[label=imshow];
	"ax(0)$6" -> "ax(0)$5"	[label=imshow];
	"ax(0)$7" -> "off(0)"	[label=axis];
	"ax(0)$7" -> "ax(0)$6"	[label=axis];
	"plt(0)$2" -> "plt(0)$1"	[label=suptitle];
	"plt(0)$2" -> "Chest X-rays, Red: Pneumothorax.(0)"	[label=suptitle];
	"A(7)" -> "get_iou_vector[0]"	[label=_argToVar];
	"B(7)" -> "get_iou_vector[1]"	[label=_argToVar];
	"batch_size(7)$0" -> "A(7)"	[label=assignedFrom];
	"batch_size(7)$0" -> "0(7)"	[label=assignedFrom];
	"metric(7)$0" -> "0.0(7)"	[label=assignedFrom];
	"batch(7)" -> "batch_size(7)$0"	[label=iteratorOf];
	"batch(7)" -> "range(7)"	[label=iteratorOf];
	"t(7)$0" -> "A(7)"	[label=assignedFrom];
	"t(7)$0" -> "B(7)"	[label=assignedFrom];
	"t(7)$0" -> "batch(7)"	[label=assignedFrom];
	"p(7)$0" -> "A(7)"	[label=assignedFrom];
	"p(7)$0" -> "B(7)"	[label=assignedFrom];
	"p(7)$0" -> "batch(7)"	[label=assignedFrom];
	"true(7)$0" -> "t(7)$0"	[label=sum];
	"true(7)$0" -> "np(7)"	[label=sum];
	"pred(7)$0" -> "p(7)$0"	[label=sum];
	"pred(7)$0" -> "np(7)"	[label=sum];
	"metric(7)$1" -> "0(7)"	[label=Add];
	"metric(7)$1" -> "metric(7)$0"	[label=Add];
	"metric(7)$1" -> "pred(7)$0"	[label=Add];
	"intersection(7)$0" -> "t(7)$0"	[label=sum];
	"intersection(7)$0" -> "p(7)$0"	[label=sum];
	"intersection(7)$0" -> "np(7)"	[label=sum];
	"union(7)$0" -> "true(7)$0"	[label=Sub];
	"union(7)$0" -> "pred(7)$0"	[label=Sub];
	"union(7)$0" -> "intersection(7)$0"	[label=Sub];
	"iou(7)$0" -> "intersection(7)$0"	[label=Div];
	"iou(7)$0" -> "union(7)$0"	[label=Div];
	"iou(7)$1" -> "0(7)"	[label=Div];
	"iou(7)$1" -> "np(7)"	[label=Div];
	"iou(7)$1" -> "iou(7)$1"	[label=Div];
	"iou(7)$1" -> "max(7)"	[label=Div];
	"iou(7)$1" -> "0.45(7)"	[label=Div];
	"iou(7)$1" -> "20(7)"	[label=Div];
	"iou(7)$1" -> "10(7)"	[label=Div];
	"metric(7)$2" -> "metric(7)$1"	[label=Add];
	"metric(7)$2" -> "iou(7)$1"	[label=Add];
	"metric(7)$3" -> "batch_size(7)$0"	[label=Div];
	"metric(7)$3" -> "metric(7)$2"	[label=Div];
	"label(8)" -> "my_iou_metric[0]"	[label=_argToVar];
	"pred(8)" -> "my_iou_metric[1]"	[label=_argToVar];
	"y_true(9)" -> "dice_coef[0]"	[label=_argToVar];
	"y_pred(9)" -> "dice_coef[1]"	[label=_argToVar];
	"y_true_f(9)$0" -> "y_true(9)"	[label=flatten];
	"y_true_f(9)$0" -> "K(9)"	[label=flatten];
	"y_pred(9)$0" -> "K(9)"	[label=cast];
	"y_pred(9)$0" -> "y_pred(9)$0"	[label=cast];
	"y_pred(9)$0" -> "float32(9)"	[label=cast];
	"y_pred_f(9)$0" -> "K(9)"	[label=cast];
	"y_pred_f(9)$0" -> "y_pred(9)$0"	[label=cast];
	"y_pred_f(9)$0" -> "float32(9)"	[label=cast];
	"y_pred_f(9)$0" -> "0.5(9)"	[label=cast];
	"intersection(9)$0" -> "y_true_f(9)$0"	[label=Mult];
	"intersection(9)$0" -> "y_pred_f(9)$0"	[label=Mult];
	"score(9)$0" -> "y_true_f(9)$0"	[label=Div];
	"score(9)$0" -> "K(9)"	[label=Div];
	"score(9)$0" -> "y_pred_f(9)$0"	[label=Div];
	"score(9)$0" -> "intersection(9)$0"	[label=Div];
	"score(9)$0" -> "2.0(9)"	[label=Div];
	"y_true(10)" -> "dice_loss[0]"	[label=_argToVar];
	"y_pred(10)" -> "dice_loss[1]"	[label=_argToVar];
	"smooth(10)$0" -> "1.0(10)"	[label=assignedFrom];
	"y_true_f(10)$0" -> "y_true(10)"	[label=flatten];
	"y_true_f(10)$0" -> "K(10)"	[label=flatten];
	"y_pred_f(10)$0" -> "y_pred(10)"	[label=flatten];
	"y_pred_f(10)$0" -> "K(10)"	[label=flatten];
	"intersection(10)$0" -> "y_true_f(10)$0"	[label=Mult];
	"intersection(10)$0" -> "y_pred_f(10)$0"	[label=Mult];
	"score(10)$0" -> "smooth(10)$0"	[label=Div];
	"score(10)$0" -> "y_true_f(10)$0"	[label=Div];
	"score(10)$0" -> "K(10)"	[label=Div];
	"score(10)$0" -> "y_pred_f(10)$0"	[label=Div];
	"score(10)$0" -> "intersection(10)$0"	[label=Div];
	"score(10)$0" -> "2.0(10)"	[label=Div];
	"y_true(11)" -> "bce_dice_loss[0]"	[label=_argToVar];
	"y_pred(11)" -> "bce_dice_loss[1]"	[label=_argToVar];
	"y_true(12)" -> "bce_logdice_loss[0]"	[label=_argToVar];
	"y_pred(12)" -> "bce_logdice_loss[1]"	[label=_argToVar];
	"self(14)" -> "__init__[0]"	[label=_argToVar];
	"nb_epochs(14)" -> "__init__[1]"	[label=_argToVar];
	"nb_snapshots(14)" -> "__init__[2]"	[label=_argToVar];
	"init_lr(14)" -> "__init__[3]"	[label=_argToVar];
	"self(14)$0" -> "self(14)"	[label=assignedFrom];
	"self(14)$0" -> "nb_epochs(14)"	[label=assignedFrom];
	"self(14)$1" -> "nb_snapshots(14)"	[label=assignedFrom];
	"self(14)$1" -> "self(14)$0"	[label=assignedFrom];
	"self(14)$2" -> "init_lr(14)"	[label=assignedFrom];
	"self(14)$2" -> "self(14)$1"	[label=assignedFrom];
	"self(15)" -> "get_callbacks[0]"	[label=_argToVar];
	"model_prefix(15)" -> "get_callbacks[1]"	[label=_argToVar];
	"callback_list(15)$0" -> "[<_ast.Call object at 0x7fd4c05ae5e0>, <_ast.Name object at 0x7fd4c05ae8e0>, <_ast.Call object at 0x7fd4c05ae910>](15)"	[label=assignedFrom];
	"self(16)" -> "_cosine_anneal_schedule[0]"	[label=_argToVar];
	"t(16)" -> "_cosine_anneal_schedule[1]"	[label=_argToVar];
	"cos_inner(16)$0" -> "self(16)"	[label=Mult];
	"cos_inner(16)$0" -> "t(16)"	[label=Mult];
	"cos_inner(16)$0" -> "np(16)"	[label=Mult];
	"cos_inner(16)$1" -> "self(16)"	[label=Div];
	"cos_inner(16)$1" -> "cos_inner(16)$0"	[label=Div];
	"cos_out(16)$0" -> "np(16)"	[label=Add];
	"cos_out(16)$0" -> "cos_inner(16)$1"	[label=Add];
	"cos_out(16)$0" -> "1(16)"	[label=Add];
	"x(17)" -> "convolution_block[0]"	[label=_argToVar];
	"filters(17)" -> "convolution_block[1]"	[label=_argToVar];
	"size(17)" -> "convolution_block[2]"	[label=_argToVar];
	"strides(17)" -> "convolution_block[3]"	[label=_argToVar];
	"padding(17)" -> "convolution_block[4]"	[label=_argToVar];
	"activation(17)" -> "convolution_block[5]"	[label=_argToVar];
	"x(17)$0" -> "filters(17)"	[label=assignedFrom];
	"x(17)$0" -> "size(17)"	[label=assignedFrom];
	"x(17)$0" -> "strides(17)"	[label=assignedFrom];
	"x(17)$0" -> "padding(17)"	[label=assignedFrom];
	"x(17)$0" -> "x(17)$0"	[label=assignedFrom];
	"x(17)$0" -> "Conv2D(17)"	[label=assignedFrom];
	"x(17)$1" -> "x(17)$1"	[label=assignedFrom];
	"x(17)$1" -> "BatchNormalization(17)"	[label=assignedFrom];
	"x(17)$2" -> "x(17)$2"	[label=assignedFrom];
	"x(17)$2" -> "LeakyReLU(17)"	[label=assignedFrom];
	"x(17)$2" -> "0.1(17)"	[label=assignedFrom];
	"blockInput(18)" -> "residual_block[0]"	[label=_argToVar];
	"num_filters(18)" -> "residual_block[1]"	[label=_argToVar];
	"x(18)$0" -> "blockInput(18)"	[label=assignedFrom];
	"x(18)$0" -> "LeakyReLU(18)"	[label=assignedFrom];
	"x(18)$0" -> "0.1(18)"	[label=assignedFrom];
	"x(18)$1" -> "x(18)$1"	[label=assignedFrom];
	"x(18)$1" -> "BatchNormalization(18)"	[label=assignedFrom];
	"blockInput(18)$0" -> "BatchNormalization(18)"	[label=assignedFrom];
	"blockInput(18)$0" -> "blockInput(18)$0"	[label=assignedFrom];
	"x(18)$2" -> "num_filters(18)"	[label=convolution_block];
	"x(18)$2" -> "x(18)$1"	[label=convolution_block];
	"x(18)$2" -> "3(18)"	[label=convolution_block];
	"x(18)$3" -> "num_filters(18)"	[label=convolution_block];
	"x(18)$3" -> "x(18)$2"	[label=convolution_block];
	"x(18)$3" -> "3(18)"	[label=convolution_block];
	"x(18)$3" -> "False(18)"	[label=convolution_block];
	"x(18)$4" -> "Add(18)"	[label=assignedFrom];
	"x(18)$4" -> "[<_ast.Name object at 0x7fd500810670>, <_ast.Name object at 0x7fd5008106a0>](18)"	[label=assignedFrom];
	efficientnet -> "nested-unet-with-efficientnet-encoder.ipynb"	[label=importedBy];
	EfficientNetB4 -> efficientnet	[label=importedBy];
	"EfficientNetB4(0)" -> "nested-unet-with-efficientnet-encoder.ipynb"	[label=appearsIn];
	"EfficientNetB4(0)" -> EfficientNetB4	[label=assignedFrom];
	"input_shape(19)" -> "UEfficientNet[0]"	[label=_argToVar];
	"dropout_rate(19)" -> "UEfficientNet[1]"	[label=_argToVar];
	"backbone(19)$0" -> "input_shape(19)"	[label=EfficientNetB4];
	"backbone(19)$0" -> "imagenet(19)"	[label=EfficientNetB4];
	"backbone(19)$0" -> "False(19)"	[label=EfficientNetB4];
	"input(19)$0" -> "backbone(19)$0"	[label=assignedFrom];
	"start_neurons(19)$0" -> "8(19)"	[label=assignedFrom];
	"conv4(19)$0" -> "backbone(19)$0"	[label=assignedFrom];
	"conv4(19)$0" -> "342(19)"	[label=assignedFrom];
	"conv4(19)$1" -> "conv4(19)$1"	[label=assignedFrom];
	"conv4(19)$1" -> "LeakyReLU(19)"	[label=assignedFrom];
	"conv4(19)$1" -> "0.1(19)"	[label=assignedFrom];
	"pool4(19)$0" -> "conv4(19)$1"	[label=assignedFrom];
	"pool4(19)$0" -> "MaxPooling2D(19)"	[label=assignedFrom];
	"pool4(19)$0" -> "2(19)"	[label=assignedFrom];
	"pool4(19)$1" -> "dropout_rate(19)"	[label=assignedFrom];
	"pool4(19)$1" -> "pool4(19)$1"	[label=assignedFrom];
	"pool4(19)$1" -> "Dropout(19)"	[label=assignedFrom];
	"convm(19)$0" -> "start_neurons(19)$0"	[label=assignedFrom];
	"convm(19)$0" -> "pool4(19)$1"	[label=assignedFrom];
	"convm(19)$0" -> "Conv2D(19)"	[label=assignedFrom];
	"convm(19)$0" -> "32(19)"	[label=assignedFrom];
	"convm(19)$0" -> "3(19)"	[label=assignedFrom];
	"convm(19)$0" -> "None(19)"	[label=assignedFrom];
	"convm(19)$0" -> "same(19)"	[label=assignedFrom];
	"convm(19)$0" -> "conv_middle(19)"	[label=assignedFrom];
	"convm(19)$1" -> "start_neurons(19)$0"	[label=residual_block];
	"convm(19)$1" -> "convm(19)$0"	[label=residual_block];
	"convm(19)$1" -> "32(19)"	[label=residual_block];
	"convm(19)$2" -> "start_neurons(19)$0"	[label=residual_block];
	"convm(19)$2" -> "32(19)"	[label=residual_block];
	"convm(19)$2" -> "convm(19)$1"	[label=residual_block];
	"convm(19)$3" -> "LeakyReLU(19)"	[label=assignedFrom];
	"convm(19)$3" -> "0.1(19)"	[label=assignedFrom];
	"convm(19)$3" -> "convm(19)$3"	[label=assignedFrom];
	"deconv4(19)$0" -> "start_neurons(19)$0"	[label=assignedFrom];
	"deconv4(19)$0" -> "2(19)"	[label=assignedFrom];
	"deconv4(19)$0" -> "3(19)"	[label=assignedFrom];
	"deconv4(19)$0" -> "same(19)"	[label=assignedFrom];
	"deconv4(19)$0" -> "convm(19)$3"	[label=assignedFrom];
	"deconv4(19)$0" -> "Conv2DTranspose(19)"	[label=assignedFrom];
	"deconv4(19)$0" -> "16(19)"	[label=assignedFrom];
	"deconv4_up1(19)$0" -> "start_neurons(19)$0"	[label=assignedFrom];
	"deconv4_up1(19)$0" -> "2(19)"	[label=assignedFrom];
	"deconv4_up1(19)$0" -> "3(19)"	[label=assignedFrom];
	"deconv4_up1(19)$0" -> "same(19)"	[label=assignedFrom];
	"deconv4_up1(19)$0" -> "deconv4(19)$0"	[label=assignedFrom];
	"deconv4_up1(19)$0" -> "Conv2DTranspose(19)"	[label=assignedFrom];
	"deconv4_up1(19)$0" -> "16(19)"	[label=assignedFrom];
	"deconv4_up2(19)$0" -> "start_neurons(19)$0"	[label=assignedFrom];
	"deconv4_up2(19)$0" -> "2(19)"	[label=assignedFrom];
	"deconv4_up2(19)$0" -> "3(19)"	[label=assignedFrom];
	"deconv4_up2(19)$0" -> "same(19)"	[label=assignedFrom];
	"deconv4_up2(19)$0" -> "Conv2DTranspose(19)"	[label=assignedFrom];
	"deconv4_up2(19)$0" -> "16(19)"	[label=assignedFrom];
	"deconv4_up2(19)$0" -> "deconv4_up1(19)$0"	[label=assignedFrom];
	"deconv4_up3(19)$0" -> "start_neurons(19)$0"	[label=assignedFrom];
	"deconv4_up3(19)$0" -> "2(19)"	[label=assignedFrom];
	"deconv4_up3(19)$0" -> "3(19)"	[label=assignedFrom];
	"deconv4_up3(19)$0" -> "same(19)"	[label=assignedFrom];
	"deconv4_up3(19)$0" -> "Conv2DTranspose(19)"	[label=assignedFrom];
	"deconv4_up3(19)$0" -> "16(19)"	[label=assignedFrom];
	"deconv4_up3(19)$0" -> "deconv4_up2(19)$0"	[label=assignedFrom];
	"uconv4(19)$0" -> "[<_ast.Name object at 0x7fd500828cd0>, <_ast.Name object at 0x7fd500828d00>](19)"	[label=concatenate];
	"uconv4(19)$1" -> "dropout_rate(19)"	[label=assignedFrom];
	"uconv4(19)$1" -> "Dropout(19)"	[label=assignedFrom];
	"uconv4(19)$1" -> "uconv4(19)$1"	[label=assignedFrom];
	"uconv4(19)$2" -> "start_neurons(19)$0"	[label=assignedFrom];
	"uconv4(19)$2" -> "Conv2D(19)"	[label=assignedFrom];
	"uconv4(19)$2" -> "3(19)"	[label=assignedFrom];
	"uconv4(19)$2" -> "None(19)"	[label=assignedFrom];
	"uconv4(19)$2" -> "same(19)"	[label=assignedFrom];
	"uconv4(19)$2" -> "16(19)"	[label=assignedFrom];
	"uconv4(19)$2" -> "uconv4(19)$2"	[label=assignedFrom];
	"uconv4(19)$3" -> "start_neurons(19)$0"	[label=residual_block];
	"uconv4(19)$3" -> "16(19)"	[label=residual_block];
	"uconv4(19)$3" -> "uconv4(19)$2"	[label=residual_block];
	"uconv4(19)$4" -> "LeakyReLU(19)"	[label=assignedFrom];
	"uconv4(19)$4" -> "0.1(19)"	[label=assignedFrom];
	"uconv4(19)$4" -> "uconv4(19)$4"	[label=assignedFrom];
	"deconv3(19)$0" -> "start_neurons(19)$0"	[label=assignedFrom];
	"deconv3(19)$0" -> "8(19)"	[label=assignedFrom];
	"deconv3(19)$0" -> "2(19)"	[label=assignedFrom];
	"deconv3(19)$0" -> "3(19)"	[label=assignedFrom];
	"deconv3(19)$0" -> "same(19)"	[label=assignedFrom];
	"deconv3(19)$0" -> "Conv2DTranspose(19)"	[label=assignedFrom];
	"deconv3(19)$0" -> "uconv4(19)$4"	[label=assignedFrom];
	"deconv3_up1(19)$0" -> "start_neurons(19)$0"	[label=assignedFrom];
	"deconv3_up1(19)$0" -> "8(19)"	[label=assignedFrom];
	"deconv3_up1(19)$0" -> "2(19)"	[label=assignedFrom];
	"deconv3_up1(19)$0" -> "3(19)"	[label=assignedFrom];
	"deconv3_up1(19)$0" -> "same(19)"	[label=assignedFrom];
	"deconv3_up1(19)$0" -> "Conv2DTranspose(19)"	[label=assignedFrom];
	"deconv3_up1(19)$0" -> "deconv3(19)$0"	[label=assignedFrom];
	"deconv3_up2(19)$0" -> "start_neurons(19)$0"	[label=assignedFrom];
	"deconv3_up2(19)$0" -> "8(19)"	[label=assignedFrom];
	"deconv3_up2(19)$0" -> "2(19)"	[label=assignedFrom];
	"deconv3_up2(19)$0" -> "3(19)"	[label=assignedFrom];
	"deconv3_up2(19)$0" -> "same(19)"	[label=assignedFrom];
	"deconv3_up2(19)$0" -> "Conv2DTranspose(19)"	[label=assignedFrom];
	"deconv3_up2(19)$0" -> "deconv3_up1(19)$0"	[label=assignedFrom];
	"conv3(19)$0" -> "backbone(19)$0"	[label=assignedFrom];
	"conv3(19)$0" -> "154(19)"	[label=assignedFrom];
	"uconv3(19)$0" -> "[<_ast.Name object at 0x7fd5008183a0>, <_ast.Name object at 0x7fd5008183d0>, <_ast.Name object at 0x7fd500818400>](19)"	[label=concatenate];
	"uconv3(19)$1" -> "dropout_rate(19)"	[label=assignedFrom];
	"uconv3(19)$1" -> "Dropout(19)"	[label=assignedFrom];
	"uconv3(19)$1" -> "uconv3(19)$1"	[label=assignedFrom];
	"uconv3(19)$2" -> "start_neurons(19)$0"	[label=assignedFrom];
	"uconv3(19)$2" -> "8(19)"	[label=assignedFrom];
	"uconv3(19)$2" -> "Conv2D(19)"	[label=assignedFrom];
	"uconv3(19)$2" -> "3(19)"	[label=assignedFrom];
	"uconv3(19)$2" -> "None(19)"	[label=assignedFrom];
	"uconv3(19)$2" -> "same(19)"	[label=assignedFrom];
	"uconv3(19)$2" -> "uconv3(19)$2"	[label=assignedFrom];
	"uconv3(19)$3" -> "start_neurons(19)$0"	[label=residual_block];
	"uconv3(19)$3" -> "8(19)"	[label=residual_block];
	"uconv3(19)$3" -> "uconv3(19)$2"	[label=residual_block];
	"uconv3(19)$4" -> "LeakyReLU(19)"	[label=assignedFrom];
	"uconv3(19)$4" -> "0.1(19)"	[label=assignedFrom];
	"uconv3(19)$4" -> "uconv3(19)$4"	[label=assignedFrom];
	"deconv2(19)$0" -> "start_neurons(19)$0"	[label=assignedFrom];
	"deconv2(19)$0" -> "2(19)"	[label=assignedFrom];
	"deconv2(19)$0" -> "3(19)"	[label=assignedFrom];
	"deconv2(19)$0" -> "same(19)"	[label=assignedFrom];
	"deconv2(19)$0" -> "Conv2DTranspose(19)"	[label=assignedFrom];
	"deconv2(19)$0" -> "uconv3(19)$4"	[label=assignedFrom];
	"deconv2(19)$0" -> "4(19)"	[label=assignedFrom];
	"deconv2_up1(19)$0" -> "start_neurons(19)$0"	[label=assignedFrom];
	"deconv2_up1(19)$0" -> "2(19)"	[label=assignedFrom];
	"deconv2_up1(19)$0" -> "3(19)"	[label=assignedFrom];
	"deconv2_up1(19)$0" -> "same(19)"	[label=assignedFrom];
	"deconv2_up1(19)$0" -> "Conv2DTranspose(19)"	[label=assignedFrom];
	"deconv2_up1(19)$0" -> "deconv2(19)$0"	[label=assignedFrom];
	"deconv2_up1(19)$0" -> "4(19)"	[label=assignedFrom];
	"conv2(19)$0" -> "backbone(19)$0"	[label=assignedFrom];
	"conv2(19)$0" -> "92(19)"	[label=assignedFrom];
	"uconv2(19)$0" -> "[<_ast.Name object at 0x7fd50082b640>, <_ast.Name object at 0x7fd50082b670>, <_ast.Name object at 0x7fd50082b6a0>, <_ast.Name object \
at 0x7fd50082b6d0>](19)"	[label=concatenate];
	"uconv2(19)$1" -> "0.1(19)"	[label=assignedFrom];
	"uconv2(19)$1" -> "Dropout(19)"	[label=assignedFrom];
	"uconv2(19)$1" -> "uconv2(19)$1"	[label=assignedFrom];
	"uconv2(19)$2" -> "start_neurons(19)$0"	[label=assignedFrom];
	"uconv2(19)$2" -> "Conv2D(19)"	[label=assignedFrom];
	"uconv2(19)$2" -> "3(19)"	[label=assignedFrom];
	"uconv2(19)$2" -> "None(19)"	[label=assignedFrom];
	"uconv2(19)$2" -> "same(19)"	[label=assignedFrom];
	"uconv2(19)$2" -> "4(19)"	[label=assignedFrom];
	"uconv2(19)$2" -> "uconv2(19)$2"	[label=assignedFrom];
	"uconv2(19)$3" -> "start_neurons(19)$0"	[label=residual_block];
	"uconv2(19)$3" -> "4(19)"	[label=residual_block];
	"uconv2(19)$3" -> "uconv2(19)$2"	[label=residual_block];
	"uconv2(19)$4" -> "LeakyReLU(19)"	[label=assignedFrom];
	"uconv2(19)$4" -> "0.1(19)"	[label=assignedFrom];
	"uconv2(19)$4" -> "uconv2(19)$4"	[label=assignedFrom];
	"deconv1(19)$0" -> "start_neurons(19)$0"	[label=assignedFrom];
	"deconv1(19)$0" -> "2(19)"	[label=assignedFrom];
	"deconv1(19)$0" -> "3(19)"	[label=assignedFrom];
	"deconv1(19)$0" -> "same(19)"	[label=assignedFrom];
	"deconv1(19)$0" -> "Conv2DTranspose(19)"	[label=assignedFrom];
	"deconv1(19)$0" -> "uconv2(19)$4"	[label=assignedFrom];
	"conv1(19)$0" -> "backbone(19)$0"	[label=assignedFrom];
	"conv1(19)$0" -> "30(19)"	[label=assignedFrom];
	"uconv1(19)$0" -> "[<_ast.Name object at 0x7fd5008325e0>, <_ast.Name object at 0x7fd500832610>, <_ast.Name object at 0x7fd500832640>, <_ast.Name object \
at 0x7fd500832670>, <_ast.Name object at 0x7fd5008326a0>](19)"	[label=concatenate];
	"uconv1(19)$1" -> "0.1(19)"	[label=assignedFrom];
	"uconv1(19)$1" -> "Dropout(19)"	[label=assignedFrom];
	"uconv1(19)$1" -> "uconv1(19)$1"	[label=assignedFrom];
	"uconv1(19)$2" -> "start_neurons(19)$0"	[label=assignedFrom];
	"uconv1(19)$2" -> "2(19)"	[label=assignedFrom];
	"uconv1(19)$2" -> "Conv2D(19)"	[label=assignedFrom];
	"uconv1(19)$2" -> "3(19)"	[label=assignedFrom];
	"uconv1(19)$2" -> "None(19)"	[label=assignedFrom];
	"uconv1(19)$2" -> "same(19)"	[label=assignedFrom];
	"uconv1(19)$2" -> "uconv1(19)$2"	[label=assignedFrom];
	"uconv1(19)$3" -> "start_neurons(19)$0"	[label=residual_block];
	"uconv1(19)$3" -> "2(19)"	[label=residual_block];
	"uconv1(19)$3" -> "uconv1(19)$2"	[label=residual_block];
	"uconv1(19)$4" -> "LeakyReLU(19)"	[label=assignedFrom];
	"uconv1(19)$4" -> "0.1(19)"	[label=assignedFrom];
	"uconv1(19)$4" -> "uconv1(19)$4"	[label=assignedFrom];
	"uconv0(19)$0" -> "start_neurons(19)$0"	[label=assignedFrom];
	"uconv0(19)$0" -> "2(19)"	[label=assignedFrom];
	"uconv0(19)$0" -> "3(19)"	[label=assignedFrom];
	"uconv0(19)$0" -> "same(19)"	[label=assignedFrom];
	"uconv0(19)$0" -> "Conv2DTranspose(19)"	[label=assignedFrom];
	"uconv0(19)$0" -> "uconv1(19)$4"	[label=assignedFrom];
	"uconv0(19)$0" -> "1(19)"	[label=assignedFrom];
	"uconv0(19)$1" -> "0.1(19)"	[label=assignedFrom];
	"uconv0(19)$1" -> "Dropout(19)"	[label=assignedFrom];
	"uconv0(19)$1" -> "uconv0(19)$1"	[label=assignedFrom];
	"uconv0(19)$2" -> "start_neurons(19)$0"	[label=assignedFrom];
	"uconv0(19)$2" -> "Conv2D(19)"	[label=assignedFrom];
	"uconv0(19)$2" -> "3(19)"	[label=assignedFrom];
	"uconv0(19)$2" -> "None(19)"	[label=assignedFrom];
	"uconv0(19)$2" -> "same(19)"	[label=assignedFrom];
	"uconv0(19)$2" -> "1(19)"	[label=assignedFrom];
	"uconv0(19)$2" -> "uconv0(19)$2"	[label=assignedFrom];
	"uconv0(19)$3" -> "start_neurons(19)$0"	[label=residual_block];
	"uconv0(19)$3" -> "1(19)"	[label=residual_block];
	"uconv0(19)$3" -> "uconv0(19)$2"	[label=residual_block];
	"uconv0(19)$4" -> "LeakyReLU(19)"	[label=assignedFrom];
	"uconv0(19)$4" -> "0.1(19)"	[label=assignedFrom];
	"uconv0(19)$4" -> "uconv0(19)$4"	[label=assignedFrom];
	"uconv0(19)$5" -> "dropout_rate(19)"	[label=assignedFrom];
	"uconv0(19)$5" -> "2(19)"	[label=assignedFrom];
	"uconv0(19)$5" -> "Dropout(19)"	[label=assignedFrom];
	"uconv0(19)$5" -> "uconv0(19)$5"	[label=assignedFrom];
	"output_layer(19)$0" -> "Conv2D(19)"	[label=assignedFrom];
	"output_layer(19)$0" -> "same(19)"	[label=assignedFrom];
	"output_layer(19)$0" -> "1(19)"	[label=assignedFrom];
	"output_layer(19)$0" -> "uconv0(19)$5"	[label=assignedFrom];
	"output_layer(19)$0" -> "sigmoid(19)"	[label=assignedFrom];
	"model(19)$0" -> "input(19)$0"	[label=Model];
	"model(19)$0" -> "output_layer(19)$0"	[label=Model];
	"model(19)$1" -> "model(19)$0"	[label=assignedFrom];
	"model(19)$1" -> "u-xception(19)"	[label=assignedFrom];
	"K(0)$0" -> "K(0)"	[label=clear_session];
	"img_size(0)$0" -> "256(0)"	[label=assignedFrom];
	"model(0)$0" -> "img_size(0)$0"	[label=UEfficientNet];
	"model(0)$0" -> "3(0)"	[label=UEfficientNet];
	"model(0)$0" -> "0.5(0)"	[label=UEfficientNet];
	"3(0)" -> "nested-unet-with-efficientnet-encoder.ipynb"	[label=appearsIn];
	"0.5(0)" -> "nested-unet-with-efficientnet-encoder.ipynb"	[label=appearsIn];
	"model(0)$1" -> "model(0)$0"	[label=summary];
	"self(21)" -> "__init__[0]"	[label=_argToVar];
	"filepath(21)" -> "__init__[1]"	[label=_argToVar];
	"swa_epoch(21)" -> "__init__[2]"	[label=_argToVar];
	"super(21)$0" -> "super(21)"	[label=__init__];
	"self(21)$0" -> "self(21)"	[label=assignedFrom];
	"self(21)$0" -> "filepath(21)"	[label=assignedFrom];
	"self(21)$1" -> "swa_epoch(21)"	[label=assignedFrom];
	"self(21)$1" -> "self(21)$0"	[label=assignedFrom];
	"self(22)" -> "on_train_begin[0]"	[label=_argToVar];
	"logs(22)" -> "on_train_begin[1]"	[label=_argToVar];
	"self(22)$0" -> "self(22)"	[label=assignedFrom];
	"self(22)$0" -> "epochs(22)"	[label=assignedFrom];
	"print[449/8]" -> "self(22)$0"	[label=print];
	"print[449/8]" -> "Stochastic weight averaging selected for last {} epochs.(22)"	[label=print];
	"self(23)" -> "on_epoch_end[0]"	[label=_argToVar];
	"epoch(23)" -> "on_epoch_end[1]"	[label=_argToVar];
	"logs(23)" -> "on_epoch_end[2]"	[label=_argToVar];
	"self(23)$0" -> "self(23)"	[label=get_weights];
	"i(23)" -> "self(23)$0"	[label=iteratorOf];
	"i(23)" -> "range(23)"	[label=iteratorOf];
	"i(23)" -> "len(23)"	[label=iteratorOf];
	"self(23)$1" -> "epoch(23)"	[label=Div];
	"self(23)$1" -> "self(23)$0"	[label=Div];
	"self(23)$1" -> "i(23)"	[label=Div];
	"self(23)$1" -> "self(23)$1"	[label=Div];
	"self(23)$1" -> "1(23)"	[label=Div];
	"self(24)" -> "on_train_end[0]"	[label=_argToVar];
	"logs(24)" -> "on_train_end[1]"	[label=_argToVar];
	"self(24)$0" -> "self(24)"	[label=set_weights];
	"self(24)$0" -> "self(24)$0"	[label=set_weights];
	"print[467/8]" -> "Final model parameters set to stochastic weight average.(24)"	[label=print];
	"self(24)$1" -> "self(24)$0"	[label=save_weights];
	"self(24)$1" -> "self(24)$1"	[label=save_weights];
	"print[469/8]" -> "Final stochastic averaged weights saved to file.(24)"	[label=print];
	"model(0)$2" -> "model(0)$1"	[label=compile];
	"70(0)" -> "nested-unet-with-efficientnet-encoder.ipynb"	[label=appearsIn];
	"epochs(0)$0" -> "70(0)"	[label=assignedFrom];
	"snapshot(0)$0" -> "1(0)"	[label=SnapshotCallbackBuilder];
	"snapshot(0)$0" -> "epochs(0)$0"	[label=SnapshotCallbackBuilder];
	"snapshot(0)$0" -> "0.001(0)"	[label=SnapshotCallbackBuilder];
	"0.001(0)" -> "nested-unet-with-efficientnet-encoder.ipynb"	[label=appearsIn];
	"batch_size(0)$1" -> "16(0)"	[label=assignedFrom];
	"./keras_swa.model(0)" -> "nested-unet-with-efficientnet-encoder.ipynb"	[label=appearsIn];
	"swa(0)$0" -> "./keras_swa.model(0)"	[label=SWA];
	"swa(0)$0" -> "67(0)"	[label=SWA];
	"67(0)" -> "nested-unet-with-efficientnet-encoder.ipynb"	[label=appearsIn];
	"valid_im_path(0)$0" -> "./keras_im_val(0)"	[label=assignedFrom];
	"valid_im_path(0)$0" -> "./keras_mask_val(0)"	[label=assignedFrom];
	"valid_mask_path(0)$0" -> "./keras_im_val(0)"	[label=assignedFrom];
	"valid_mask_path(0)$0" -> "./keras_mask_val(0)"	[label=assignedFrom];
	"training_generator(0)$0" -> "AUGMENTATIONS_TRAIN(0)$0"	[label=DataGenerator];
	"training_generator(0)$0" -> "img_size(0)$0"	[label=DataGenerator];
	"validation_generator(0)$0" -> "AUGMENTATIONS_TEST(0)$0"	[label=DataGenerator];
	"validation_generator(0)$0" -> "img_size(0)$0"	[label=DataGenerator];
	"validation_generator(0)$0" -> "valid_im_path(0)$0"	[label=DataGenerator];
	"validation_generator(0)$0" -> "valid_mask_path(0)$0"	[label=DataGenerator];
	"history(0)$0" -> "False(0)"	[label=fit_generator];
	"history(0)$0" -> "model(0)$2"	[label=fit_generator];
	"history(0)$0" -> "epochs(0)$0"	[label=fit_generator];
	"history(0)$0" -> "snapshot(0)$0"	[label=fit_generator];
	"history(0)$0" -> "training_generator(0)$0"	[label=fit_generator];
	"history(0)$0" -> "validation_generator(0)$0"	[label=fit_generator];
	"history(0)$0" -> "2(0)"	[label=fit_generator];
	"2(0)" -> "nested-unet-with-efficientnet-encoder.ipynb"	[label=appearsIn];
	"plt(0)$3" -> "plt(0)$2"	[label=figure];
	"plt(0)$4" -> "1(0)"	[label=subplot];
	"plt(0)$4" -> "2(0)"	[label=subplot];
	"plt(0)$4" -> "plt(0)$3"	[label=subplot];
	"plt(0)$5" -> "1(0)"	[label=plot];
	"plt(0)$5" -> "history(0)$0"	[label=plot];
	"plt(0)$5" -> "plt(0)$4"	[label=plot];
	"plt(0)$5" -> "my_iou_metric(0)"	[label=plot];
	"my_iou_metric(0)" -> "nested-unet-with-efficientnet-encoder.ipynb"	[label=appearsIn];
	"plt(0)$6" -> "1(0)"	[label=plot];
	"plt(0)$6" -> "history(0)$0"	[label=plot];
	"plt(0)$6" -> "plt(0)$5"	[label=plot];
	"plt(0)$6" -> "val_my_iou_metric(0)"	[label=plot];
	"val_my_iou_metric(0)" -> "nested-unet-with-efficientnet-encoder.ipynb"	[label=appearsIn];
	"plt(0)$7" -> "plt(0)$6"	[label=ylabel];
	"plt(0)$7" -> "iou(0)"	[label=ylabel];
	"iou(0)" -> "nested-unet-with-efficientnet-encoder.ipynb"	[label=appearsIn];
	"plt(0)$8" -> "plt(0)$7"	[label=xlabel];
	"plt(0)$8" -> "epoch(0)"	[label=xlabel];
	"epoch(0)" -> "nested-unet-with-efficientnet-encoder.ipynb"	[label=appearsIn];
	"plt(0)$9" -> "plt(0)$8"	[label=legend];
	"plt(0)$9" -> "[<_ast.Constant object at 0x7fd5009d0250>, <_ast.Constant object at 0x7fd5009d0280>](0)"	[label=legend];
	"[<_ast.Constant object at 0x7fd5009d0250>, <_ast.Constant object at 0x7fd5009d0280>](0)" -> "nested-unet-with-efficientnet-encoder.ipynb"	[label=appearsIn];
	"plt(0)$10" -> "plt(0)$9"	[label=title];
	"plt(0)$10" -> "model IOU(0)"	[label=title];
	"model IOU(0)" -> "nested-unet-with-efficientnet-encoder.ipynb"	[label=appearsIn];
	"plt(0)$11" -> "1(0)"	[label=subplot];
	"plt(0)$11" -> "2(0)"	[label=subplot];
	"plt(0)$11" -> "plt(0)$10"	[label=subplot];
	"plt(0)$12" -> "1(0)"	[label=plot];
	"plt(0)$12" -> "history(0)$0"	[label=plot];
	"plt(0)$12" -> "plt(0)$11"	[label=plot];
	"plt(0)$12" -> "loss(0)"	[label=plot];
	"loss(0)" -> "nested-unet-with-efficientnet-encoder.ipynb"	[label=appearsIn];
	"plt(0)$13" -> "1(0)"	[label=plot];
	"plt(0)$13" -> "history(0)$0"	[label=plot];
	"plt(0)$13" -> "plt(0)$12"	[label=plot];
	"plt(0)$13" -> "val_loss(0)"	[label=plot];
	"val_loss(0)" -> "nested-unet-with-efficientnet-encoder.ipynb"	[label=appearsIn];
	"plt(0)$14" -> "plt(0)$13"	[label=ylabel];
	"plt(0)$14" -> "val_loss(0)"	[label=ylabel];
	"plt(0)$15" -> "epoch(0)"	[label=xlabel];
	"plt(0)$15" -> "plt(0)$14"	[label=xlabel];
	"plt(0)$16" -> "plt(0)$15"	[label=legend];
	"plt(0)$16" -> "[<_ast.Constant object at 0x7fd5009d0f10>, <_ast.Constant object at 0x7fd5009d0f40>](0)"	[label=legend];
	"[<_ast.Constant object at 0x7fd5009d0f10>, <_ast.Constant object at 0x7fd5009d0f40>](0)" -> "nested-unet-with-efficientnet-encoder.ipynb"	[label=appearsIn];
	"plt(0)$17" -> "plt(0)$16"	[label=title];
	"plt(0)$17" -> "model loss(0)"	[label=title];
	"model loss(0)" -> "nested-unet-with-efficientnet-encoder.ipynb"	[label=appearsIn];
	"gc(0)$0" -> "gc(0)"	[label=collect];
	"using swa weight model(0)" -> "nested-unet-with-efficientnet-encoder.ipynb"	[label=appearsIn];
	"print[507/4]" -> "using swa weight model(0)"	[label=print];
	"model(0)$3" -> "model(0)$2"	[label=load_weights];
	"model(0)$3" -> "./keras_swa.model(0)"	[label=load_weights];
	"e(0)" -> "nested-unet-with-efficientnet-encoder.ipynb"	[label=appearsIn];
	"print[510/4]" -> "e(0)"	[label=print];
	"model(0)$4" -> "model(0)$3"	[label=load_weights];
	"model(0)$4" -> "./keras.model(0)"	[label=load_weights];
	"./keras.model(0)" -> "nested-unet-with-efficientnet-encoder.ipynb"	[label=appearsIn];
	"model(25)" -> "predict_result[0]"	[label=_argToVar];
	"validation_generator(25)" -> "predict_result[1]"	[label=_argToVar];
	"img_size(25)" -> "predict_result[2]"	[label=_argToVar];
	"preds_test1(25)$0" -> "model(25)"	[label=reshape];
	"preds_test1(25)$0" -> "validation_generator(25)"	[label=reshape];
	"preds_test1(25)$0" -> "img_size(25)"	[label=reshape];
	"preds_test1(25)$0" -> "1(25)"	[label=reshape];
	"validation_generator(0)$1" -> "AUGMENTATIONS_TEST(0)$0"	[label=DataGenerator];
	"validation_generator(0)$1" -> "False(0)"	[label=DataGenerator];
	"validation_generator(0)$1" -> "img_size(0)$0"	[label=DataGenerator];
	"validation_generator(0)$1" -> "valid_im_path(0)$0"	[label=DataGenerator];
	"validation_generator(0)$1" -> "valid_mask_path(0)$0"	[label=DataGenerator];
	"[<_ast.Call object at 0x7fd5009c9be0>, <_ast.Call object at 0x7fd5009ab0a0>](0)" -> "nested-unet-with-efficientnet-encoder.ipynb"	[label=appearsIn];
	"AUGMENTATIONS_TEST_FLIPPED(0)$0" -> "1(0)"	[label=Compose];
	"AUGMENTATIONS_TEST_FLIPPED(0)$0" -> "[<_ast.Call object at 0x7fd5009c9be0>, <_ast.Call object at 0x7fd5009ab0a0>](0)"	[label=Compose];
	"validation_generator_flipped(0)$0" -> "False(0)"	[label=DataGenerator];
	"validation_generator_flipped(0)$0" -> "img_size(0)$0"	[label=DataGenerator];
	"validation_generator_flipped(0)$0" -> "valid_im_path(0)$0"	[label=DataGenerator];
	"validation_generator_flipped(0)$0" -> "valid_mask_path(0)$0"	[label=DataGenerator];
	"validation_generator_flipped(0)$0" -> "AUGMENTATIONS_TEST_FLIPPED(0)$0"	[label=DataGenerator];
	"preds_valid_orig(0)$0" -> "img_size(0)$0"	[label=predict_result];
	"preds_valid_orig(0)$0" -> "model(0)$4"	[label=predict_result];
	"preds_valid_orig(0)$0" -> "validation_generator(0)$1"	[label=predict_result];
	"preds_valid_flipped(0)$0" -> "img_size(0)$0"	[label=predict_result];
	"preds_valid_flipped(0)$0" -> "model(0)$4"	[label=predict_result];
	"preds_valid_flipped(0)$0" -> "validation_generator_flipped(0)$0"	[label=predict_result];
	"preds_valid_flipped(0)$1" -> "np(0)$1"	[label=array];
	"preds_valid_flipped(0)$1" -> "preds_valid_flipped(0)$1"	[label=array];
	"preds_valid_flipped(0)$1" -> "x(0)"	[label=array];
	"x(0)" -> "nested-unet-with-efficientnet-encoder.ipynb"	[label=appearsIn];
	"preds_valid(0)$0" -> "0.5(0)"	[label=Add];
	"preds_valid(0)$0" -> "preds_valid_orig(0)$0"	[label=Add];
	"preds_valid(0)$0" -> "preds_valid_flipped(0)$1"	[label=Add];
	"valid_fn(0)$0" -> "glob(0)"	[label=glob];
	"valid_fn(0)$0" -> "./keras_mask_val/*(0)"	[label=glob];
	"./keras_mask_val/*(0)" -> "nested-unet-with-efficientnet-encoder.ipynb"	[label=appearsIn];
	"y_valid_ori(0)$0" -> "Image(0)"	[label=array];
	"y_valid_ori(0)$0" -> "np(0)$1"	[label=array];
	"y_valid_ori(0)$0" -> "fn(0)$3"	[label=array];
	"y_valid_ori(0)$0" -> "cv2(0)"	[label=array];
	"y_valid_ori(0)$0" -> "img_size(0)$0"	[label=array];
	"y_valid_ori(0)$0" -> "valid_fn(0)$0"	[label=array];
	"threshold_best(0)$0" -> "0.5(0)"	[label=assignedFrom];
	"max_images(0)$2" -> "64(0)"	[label=assignedFrom];
	"grid_width(0)$2" -> "16(0)"	[label=assignedFrom];
	"grid_height(0)$2" -> "max_images(0)$2"	[label=int];
	"grid_height(0)$2" -> "grid_width(0)$2"	[label=int];
	"fig(0)$2" -> "plt(0)$17"	[label=subplots];
	"fig(0)$2" -> "grid_width(0)$2"	[label=subplots];
	"fig(0)$2" -> "grid_height(0)$2"	[label=subplots];
	"axs(0)$2" -> "plt(0)$17"	[label=subplots];
	"axs(0)$2" -> "grid_width(0)$2"	[label=subplots];
	"axs(0)$2" -> "grid_height(0)$2"	[label=subplots];
	"validation_generator(0)$2" -> "AUGMENTATIONS_TEST(0)$0"	[label=DataGenerator];
	"validation_generator(0)$2" -> "64(0)"	[label=DataGenerator];
	"validation_generator(0)$2" -> "False(0)"	[label=DataGenerator];
	"validation_generator(0)$2" -> "img_size(0)$0"	[label=DataGenerator];
	"validation_generator(0)$2" -> "valid_im_path(0)$0"	[label=DataGenerator];
	"validation_generator(0)$2" -> "valid_mask_path(0)$0"	[label=DataGenerator];
	"pred(0)$0" -> "i(0)"	[label=assignedFrom];
	"pred(0)$0" -> "preds_valid(0)$0"	[label=assignedFrom];
	"ax(0)$8" -> "i(0)"	[label=assignedFrom];
	"ax(0)$8" -> "int(0)"	[label=assignedFrom];
	"ax(0)$8" -> "grid_width(0)$2"	[label=assignedFrom];
	"ax(0)$8" -> "axs(0)$2"	[label=assignedFrom];
	"ax(0)$9" -> "0(0)"	[label=imshow];
	"ax(0)$9" -> "im(0)"	[label=imshow];
	"ax(0)$9" -> "ax(0)$8"	[label=imshow];
	"ax(0)$9" -> "Ellipsis(0)"	[label=imshow];
	"Ellipsis(0)" -> "nested-unet-with-efficientnet-encoder.ipynb"	[label=appearsIn];
	"ax(0)$10" -> "mask(0)"	[label=imshow];
	"ax(0)$10" -> "ax(0)$9"	[label=imshow];
	"ax(0)$11" -> "np(0)$1"	[label=imshow];
	"ax(0)$11" -> "threshold_best(0)$0"	[label=imshow];
	"ax(0)$11" -> "pred(0)$0"	[label=imshow];
	"ax(0)$11" -> "ax(0)$10"	[label=imshow];
	"ax(0)$12" -> "off(0)"	[label=axis];
	"ax(0)$12" -> "ax(0)$11"	[label=axis];
	"plt(0)$18" -> "plt(0)$17"	[label=suptitle];
	"plt(0)$18" -> "Green:Prediction , Red: Pneumothorax.(0)"	[label=suptitle];
	"Green:Prediction , Red: Pneumothorax.(0)" -> "nested-unet-with-efficientnet-encoder.ipynb"	[label=appearsIn];
	"y_true_in(26)" -> "iou_metric[0]"	[label=_argToVar];
	"y_pred_in(26)" -> "iou_metric[1]"	[label=_argToVar];
	"print_table(26)" -> "iou_metric[2]"	[label=_argToVar];
	"labels(26)$0" -> "y_true_in(26)"	[label=assignedFrom];
	"y_pred(26)$0" -> "y_pred_in(26)"	[label=assignedFrom];
	"true_objects(26)$0" -> "2(26)"	[label=assignedFrom];
	"pred_objects(26)$0" -> "2(26)"	[label=assignedFrom];
	"intersection(26)$0" -> "labels(26)$0"	[label=assignedFrom];
	"intersection(26)$0" -> "y_pred(26)$0"	[label=assignedFrom];
	"intersection(26)$0" -> "true_objects(26)$0"	[label=assignedFrom];
	"intersection(26)$0" -> "pred_objects(26)$0"	[label=assignedFrom];
	"intersection(26)$0" -> "np(26)"	[label=assignedFrom];
	"intersection(26)$0" -> "0(26)"	[label=assignedFrom];
	"area_true(26)$0" -> "labels(26)$0"	[label=assignedFrom];
	"area_true(26)$0" -> "true_objects(26)$0"	[label=assignedFrom];
	"area_true(26)$0" -> "np(26)"	[label=assignedFrom];
	"area_true(26)$0" -> "0(26)"	[label=assignedFrom];
	"area_pred(26)$0" -> "y_pred(26)$0"	[label=assignedFrom];
	"area_pred(26)$0" -> "pred_objects(26)$0"	[label=assignedFrom];
	"area_pred(26)$0" -> "np(26)"	[label=assignedFrom];
	"area_pred(26)$0" -> "0(26)"	[label=assignedFrom];
	"area_true(26)$1" -> "np(26)"	[label=expand_dims];
	"area_true(26)$1" -> "area_true(26)$1"	[label=expand_dims];
	"area_true(26)$1" -> "1(26)"	[label=expand_dims];
	"area_pred(26)$1" -> "np(26)"	[label=expand_dims];
	"area_pred(26)$1" -> "0(26)"	[label=expand_dims];
	"area_pred(26)$1" -> "area_pred(26)$1"	[label=expand_dims];
	"union(26)$0" -> "intersection(26)$0"	[label=Sub];
	"union(26)$0" -> "area_true(26)$1"	[label=Sub];
	"union(26)$0" -> "area_pred(26)$1"	[label=Sub];
	"intersection(26)$1" -> "intersection(26)$0"	[label=assignedFrom];
	"intersection(26)$1" -> "1(26)"	[label=assignedFrom];
	"union(26)$1" -> "1(26)"	[label=assignedFrom];
	"union(26)$1" -> "union(26)$0"	[label=assignedFrom];
	"union(26)$2" -> "union(26)$1"	[label=assignedFrom];
	"union(26)$2" -> "1e-09(26)"	[label=assignedFrom];
	"iou(26)$0" -> "intersection(26)$1"	[label=Div];
	"iou(26)$0" -> "union(26)$2"	[label=Div];
	"threshold(27)" -> "precision_at[0]"	[label=_argToVar];
	"iou(27)" -> "precision_at[1]"	[label=_argToVar];
	"matches(27)$0" -> "threshold(27)"	[label=assignedFrom];
	"matches(27)$0" -> "iou(27)"	[label=assignedFrom];
	"true_positives(27)$0" -> "matches(27)$0"	[label=assignedFrom];
	"true_positives(27)$0" -> "np(27)"	[label=assignedFrom];
	"true_positives(27)$0" -> "1(27)"	[label=assignedFrom];
	"false_positives(27)$0" -> "matches(27)$0"	[label=assignedFrom];
	"false_positives(27)$0" -> "np(27)"	[label=assignedFrom];
	"false_positives(27)$0" -> "0(27)"	[label=assignedFrom];
	"false_negatives(27)$0" -> "matches(27)$0"	[label=assignedFrom];
	"false_negatives(27)$0" -> "np(27)"	[label=assignedFrom];
	"false_negatives(27)$0" -> "1(27)"	[label=assignedFrom];
	"false_negatives(27)$0" -> "0(27)"	[label=assignedFrom];
	"tp(27)$0" -> "true_positives(27)$0"	[label=assignedFrom];
	"tp(27)$0" -> "np(27)"	[label=assignedFrom];
	"tp(27)$0" -> "false_positives(27)$0"	[label=assignedFrom];
	"tp(27)$0" -> "false_negatives(27)$0"	[label=assignedFrom];
	"fp(27)$0" -> "true_positives(27)$0"	[label=assignedFrom];
	"fp(27)$0" -> "np(27)"	[label=assignedFrom];
	"fp(27)$0" -> "false_positives(27)$0"	[label=assignedFrom];
	"fp(27)$0" -> "false_negatives(27)$0"	[label=assignedFrom];
	"fn(27)$0" -> "true_positives(27)$0"	[label=assignedFrom];
	"fn(27)$0" -> "np(27)"	[label=assignedFrom];
	"fn(27)$0" -> "false_positives(27)$0"	[label=assignedFrom];
	"fn(27)$0" -> "false_negatives(27)$0"	[label=assignedFrom];
	"prec(26)$0" -> "[](26)"	[label=assignedFrom];
	"print[594/8]" -> "Thresh	TP	FP	FN	Prec.(26)"	[label=print];
	"t(26)" -> "np(26)"	[label=iteratorOf];
	"t(26)" -> "0.5(26)"	[label=iteratorOf];
	"t(26)" -> "1.0(26)"	[label=iteratorOf];
	"t(26)" -> "0.05(26)"	[label=iteratorOf];
	"tp(26)$0" -> "iou(26)$0"	[label=precision_at];
	"tp(26)$0" -> "t(26)"	[label=precision_at];
	"fp(26)$0" -> "iou(26)$0"	[label=precision_at];
	"fp(26)$0" -> "t(26)"	[label=precision_at];
	"fn(26)$0" -> "iou(26)$0"	[label=precision_at];
	"fn(26)$0" -> "t(26)"	[label=precision_at];
	"p(26)$0" -> "tp(26)$0"	[label=Div];
	"p(26)$0" -> "fp(26)$0"	[label=Div];
	"p(26)$0" -> "fn(26)$0"	[label=Div];
	"p(26)$1" -> "0(26)"	[label=assignedFrom];
	"print[602/12]" -> "t(26)"	[label=print];
	"print[602/12]" -> "tp(26)$0"	[label=print];
	"print[602/12]" -> "fp(26)$0"	[label=print];
	"print[602/12]" -> "fn(26)$0"	[label=print];
	"print[602/12]" -> "p(26)$1"	[label=print];
	"print[602/12]" -> "{:1.3f}	{}	{}	{}	{:1.3f}(26)"	[label=print];
	"prec(26)$1" -> "prec(26)$0"	[label=append];
	"prec(26)$1" -> "p(26)$1"	[label=append];
	"print[606/8]" -> "np(26)"	[label=print];
	"print[606/8]" -> "prec(26)$1"	[label=print];
	"print[606/8]" -> "AP	-	-	-	{:1.3f}(26)"	[label=print];
	"y_true_in(28)" -> "iou_metric_batch[0]"	[label=_argToVar];
	"y_pred_in(28)" -> "iou_metric_batch[1]"	[label=_argToVar];
	"batch_size(28)$0" -> "y_true_in(28)"	[label=assignedFrom];
	"batch_size(28)$0" -> "0(28)"	[label=assignedFrom];
	"metric(28)$0" -> "[](28)"	[label=assignedFrom];
	"batch(28)" -> "batch_size(28)$0"	[label=iteratorOf];
	"batch(28)" -> "range(28)"	[label=iteratorOf];
	"value(28)$0" -> "y_true_in(28)"	[label=iou_metric];
	"value(28)$0" -> "y_pred_in(28)"	[label=iou_metric];
	"value(28)$0" -> "batch(28)"	[label=iou_metric];
	"metric(28)$1" -> "metric(28)$0"	[label=append];
	"metric(28)$1" -> "value(28)$0"	[label=append];
	"valid_fn(0)$1" -> "glob(0)"	[label=glob];
	"valid_fn(0)$1" -> "./keras_mask_val/*(0)"	[label=glob];
	"y_valid_ori(0)$1" -> "Image(0)"	[label=array];
	"y_valid_ori(0)$1" -> "np(0)$1"	[label=array];
	"y_valid_ori(0)$1" -> "fn(0)$3"	[label=array];
	"y_valid_ori(0)$1" -> "cv2(0)"	[label=array];
	"y_valid_ori(0)$1" -> "img_size(0)$0"	[label=array];
	"y_valid_ori(0)$1" -> "valid_fn(0)$1"	[label=array];
	"thresholds(0)$0" -> "np(0)$1"	[label=linspace];
	"thresholds(0)$0" -> "0.2(0)"	[label=linspace];
	"thresholds(0)$0" -> "0.9(0)"	[label=linspace];
	"thresholds(0)$0" -> "31(0)"	[label=linspace];
	"0.2(0)" -> "nested-unet-with-efficientnet-encoder.ipynb"	[label=appearsIn];
	"0.9(0)" -> "nested-unet-with-efficientnet-encoder.ipynb"	[label=appearsIn];
	"31(0)" -> "nested-unet-with-efficientnet-encoder.ipynb"	[label=appearsIn];
	"ious(0)$0" -> "tqdm_notebook(0)"	[label=array];
	"ious(0)$0" -> "np(0)$1"	[label=array];
	"ious(0)$0" -> "preds_valid(0)$0"	[label=array];
	"ious(0)$0" -> "y_valid_ori(0)$1"	[label=array];
	"ious(0)$0" -> "thresholds(0)$0"	[label=array];
	"ious(0)$0" -> "iou_metric_batch(0)"	[label=array];
	"ious(0)$0" -> "threshold(0)"	[label=array];
	"iou_metric_batch(0)" -> "nested-unet-with-efficientnet-encoder.ipynb"	[label=appearsIn];
	"threshold(0)" -> "nested-unet-with-efficientnet-encoder.ipynb"	[label=appearsIn];
	"threshold_best_index(0)$0" -> "np(0)$1"	[label=argmax];
	"threshold_best_index(0)$0" -> "ious(0)$0"	[label=argmax];
	"iou_best(0)$0" -> "ious(0)$0"	[label=assignedFrom];
	"iou_best(0)$0" -> "threshold_best_index(0)$0"	[label=assignedFrom];
	"threshold_best(0)$1" -> "thresholds(0)$0"	[label=assignedFrom];
	"threshold_best(0)$1" -> "threshold_best_index(0)$0"	[label=assignedFrom];
	"plt(0)$19" -> "plt(0)$18"	[label=plot];
	"plt(0)$19" -> "thresholds(0)$0"	[label=plot];
	"plt(0)$19" -> "ious(0)$0"	[label=plot];
	"plt(0)$20" -> "iou_best(0)$0"	[label=plot];
	"plt(0)$20" -> "threshold_best(0)$1"	[label=plot];
	"plt(0)$20" -> "plt(0)$19"	[label=plot];
	"plt(0)$20" -> "xr(0)"	[label=plot];
	"xr(0)" -> "nested-unet-with-efficientnet-encoder.ipynb"	[label=appearsIn];
	"plt(0)$21" -> "plt(0)$20"	[label=xlabel];
	"plt(0)$21" -> "Threshold(0)"	[label=xlabel];
	"Threshold(0)" -> "nested-unet-with-efficientnet-encoder.ipynb"	[label=appearsIn];
	"plt(0)$22" -> "plt(0)$21"	[label=ylabel];
	"plt(0)$22" -> "IoU(0)"	[label=ylabel];
	"IoU(0)" -> "nested-unet-with-efficientnet-encoder.ipynb"	[label=appearsIn];
	"plt(0)$23" -> "iou_best(0)$0"	[label=title];
	"plt(0)$23" -> "threshold_best(0)$1"	[label=title];
	"plt(0)$23" -> "plt(0)$22"	[label=title];
	"plt(0)$23" -> "Threshold vs IoU ({}, {})(0)"	[label=title];
	"Threshold vs IoU ({}, {})(0)" -> "nested-unet-with-efficientnet-encoder.ipynb"	[label=appearsIn];
	"plt(0)$24" -> "plt(0)$23"	[label=legend];
	"max_images(0)$3" -> "64(0)"	[label=assignedFrom];
	"grid_width(0)$3" -> "16(0)"	[label=assignedFrom];
	"grid_height(0)$3" -> "max_images(0)$3"	[label=int];
	"grid_height(0)$3" -> "grid_width(0)$3"	[label=int];
	"fig(0)$3" -> "plt(0)$24"	[label=subplots];
	"fig(0)$3" -> "grid_width(0)$3"	[label=subplots];
	"fig(0)$3" -> "grid_height(0)$3"	[label=subplots];
	"axs(0)$3" -> "plt(0)$24"	[label=subplots];
	"axs(0)$3" -> "grid_width(0)$3"	[label=subplots];
	"axs(0)$3" -> "grid_height(0)$3"	[label=subplots];
	"validation_generator(0)$3" -> "AUGMENTATIONS_TEST(0)$0"	[label=DataGenerator];
	"validation_generator(0)$3" -> "64(0)"	[label=DataGenerator];
	"validation_generator(0)$3" -> "False(0)"	[label=DataGenerator];
	"validation_generator(0)$3" -> "img_size(0)$0"	[label=DataGenerator];
	"validation_generator(0)$3" -> "valid_im_path(0)$0"	[label=DataGenerator];
	"validation_generator(0)$3" -> "valid_mask_path(0)$0"	[label=DataGenerator];
	"pred(0)$1" -> "i(0)"	[label=assignedFrom];
	"pred(0)$1" -> "preds_valid(0)$0"	[label=assignedFrom];
	"ax(0)$13" -> "i(0)"	[label=assignedFrom];
	"ax(0)$13" -> "int(0)"	[label=assignedFrom];
	"ax(0)$13" -> "grid_width(0)$3"	[label=assignedFrom];
	"ax(0)$13" -> "axs(0)$3"	[label=assignedFrom];
	"ax(0)$14" -> "0(0)"	[label=imshow];
	"ax(0)$14" -> "im(0)"	[label=imshow];
	"ax(0)$14" -> "Ellipsis(0)"	[label=imshow];
	"ax(0)$14" -> "ax(0)$13"	[label=imshow];
	"ax(0)$15" -> "mask(0)"	[label=imshow];
	"ax(0)$15" -> "ax(0)$14"	[label=imshow];
	"ax(0)$16" -> "np(0)$1"	[label=imshow];
	"ax(0)$16" -> "threshold_best(0)$1"	[label=imshow];
	"ax(0)$16" -> "pred(0)$1"	[label=imshow];
	"ax(0)$16" -> "ax(0)$15"	[label=imshow];
	"ax(0)$17" -> "off(0)"	[label=axis];
	"ax(0)$17" -> "ax(0)$16"	[label=axis];
	"plt(0)$25" -> "Green:Prediction , Red: Pneumothorax.(0)"	[label=suptitle];
	"plt(0)$25" -> "plt(0)$24"	[label=suptitle];
	"./test/*(0)" -> "nested-unet-with-efficientnet-encoder.ipynb"	[label=appearsIn];
	"x_test(0)$0" -> "Image(0)"	[label=assignedFrom];
	"x_test(0)$0" -> "np(0)$1"	[label=assignedFrom];
	"x_test(0)$0" -> "test_fn(0)$0"	[label=assignedFrom];
	"x_test(0)$0" -> "fn(0)$3"	[label=assignedFrom];
	"x_test(0)$0" -> "cv2(0)"	[label=assignedFrom];
	"x_test(0)$0" -> "img_size(0)$0"	[label=assignedFrom];
	"x_test(0)$1" -> "np(0)$1"	[label=array];
	"x_test(0)$1" -> "x_test(0)$1"	[label=array];
	"x_test(0)$2" -> "np(0)$1"	[label=array];
	"x_test(0)$2" -> "im(0)"	[label=array];
	"x_test(0)$2" -> "3(0)"	[label=array];
	"x_test(0)$2" -> "2(0)"	[label=array];
	"x_test(0)$2" -> "Ellipsis(0)"	[label=array];
	"x_test(0)$2" -> "x_test(0)$2"	[label=array];
	"x_test(0)$2" -> "None(0)"	[label=array];
	"None(0)" -> "nested-unet-with-efficientnet-encoder.ipynb"	[label=appearsIn];
	"print[655/0]" -> "x_test(0)$2"	[label=print];
	"preds_test_orig(0)$0" -> "batch_size(0)$1"	[label=predict];
	"preds_test_orig(0)$0" -> "model(0)$4"	[label=predict];
	"preds_test_orig(0)$0" -> "x_test(0)$2"	[label=predict];
	"x_test(0)$3" -> "np(0)$1"	[label=array];
	"x_test(0)$3" -> "x(0)"	[label=array];
	"x_test(0)$3" -> "x_test(0)$3"	[label=array];
	"preds_test_flipped(0)$0" -> "batch_size(0)$1"	[label=predict];
	"preds_test_flipped(0)$0" -> "model(0)$4"	[label=predict];
	"preds_test_flipped(0)$0" -> "x_test(0)$3"	[label=predict];
	"preds_test_flipped(0)$1" -> "np(0)$1"	[label=array];
	"preds_test_flipped(0)$1" -> "x(0)"	[label=array];
	"preds_test_flipped(0)$1" -> "preds_test_flipped(0)$1"	[label=array];
	"preds_test(0)$0" -> "0.5(0)"	[label=Add];
	"preds_test(0)$0" -> "preds_test_orig(0)$0"	[label=Add];
	"preds_test(0)$0" -> "preds_test_flipped(0)$1"	[label=Add];
	"grid_width(0)$4" -> "16(0)"	[label=assignedFrom];
	"grid_height(0)$4" -> "max_images(0)$4"	[label=int];
	"grid_height(0)$4" -> "grid_width(0)$4"	[label=int];
	"fig(0)$4" -> "plt(0)$25"	[label=subplots];
	"fig(0)$4" -> "grid_width(0)$4"	[label=subplots];
	"fig(0)$4" -> "grid_height(0)$4"	[label=subplots];
	"axs(0)$4" -> "plt(0)$25"	[label=subplots];
	"axs(0)$4" -> "grid_width(0)$4"	[label=subplots];
	"axs(0)$4" -> "grid_height(0)$4"	[label=subplots];
	"img(0)$0" -> "i(0)"	[label=assignedFrom];
	"img(0)$0" -> "x_test(0)$3"	[label=assignedFrom];
	"pred(0)$2" -> "i(0)"	[label=squeeze];
	"pred(0)$2" -> "preds_test(0)$0"	[label=squeeze];
	"ax(0)$18" -> "i(0)"	[label=assignedFrom];
	"ax(0)$18" -> "int(0)"	[label=assignedFrom];
	"ax(0)$18" -> "grid_width(0)$4"	[label=assignedFrom];
	"ax(0)$18" -> "axs(0)$4"	[label=assignedFrom];
	"ax(0)$19" -> "img(0)$0"	[label=imshow];
	"ax(0)$19" -> "ax(0)$18"	[label=imshow];
	"ax(0)$20" -> "np(0)$1"	[label=imshow];
	"ax(0)$20" -> "threshold_best(0)$1"	[label=imshow];
	"ax(0)$20" -> "pred(0)$2"	[label=imshow];
	"ax(0)$20" -> "ax(0)$19"	[label=imshow];
	"ax(0)$21" -> "off(0)"	[label=axis];
	"ax(0)$21" -> "ax(0)$20"	[label=axis];
	sys -> "nested-unet-with-efficientnet-encoder.ipynb"	[label=importedBy];
	"sys(0)" -> "nested-unet-with-efficientnet-encoder.ipynb"	[label=appearsIn];
	"sys(0)" -> sys	[label=assignedFrom];
	"sys(0)$0" -> "0(0)"	[label=insert];
	"sys(0)$0" -> "sys(0)"	[label=insert];
	"sys(0)$0" -> "../input/siim-acr-pneumothorax-segmentation(0)"	[label=insert];
	"../input/siim-acr-pneumothorax-segmentation(0)" -> "nested-unet-with-efficientnet-encoder.ipynb"	[label=appearsIn];
	mask_functions -> "nested-unet-with-efficientnet-encoder.ipynb"	[label=importedBy];
	rle2mask -> mask_functions	[label=importedBy];
	"rle2mask(0)" -> "nested-unet-with-efficientnet-encoder.ipynb"	[label=appearsIn];
	"rle2mask(0)" -> rle2mask	[label=assignedFrom];
	mask2rle -> mask_functions	[label=importedBy];
	"mask2rle(0)" -> "nested-unet-with-efficientnet-encoder.ipynb"	[label=appearsIn];
	"mask2rle(0)" -> mask2rle	[label=assignedFrom];
	pdb -> "nested-unet-with-efficientnet-encoder.ipynb"	[label=importedBy];
	"pdb(0)" -> "nested-unet-with-efficientnet-encoder.ipynb"	[label=appearsIn];
	"pdb(0)" -> pdb	[label=assignedFrom];
	"[](0)" -> "nested-unet-with-efficientnet-encoder.ipynb"	[label=appearsIn];
	"rles(0)$0" -> "[](0)"	[label=assignedFrom];
	"i(0)$0" -> "10(0)"	[label=assignedFrom];
	"i(0)$0" -> "1(0)"	[label=assignedFrom];
	"max_img(0)$0" -> "10(0)"	[label=assignedFrom];
	"max_img(0)$0" -> "1(0)"	[label=assignedFrom];
	"plt(0)$26" -> "plt(0)$25"	[label=figure];
	"p(0)" -> "nested-unet-with-efficientnet-encoder.ipynb"	[label=appearsIn];
	"p(0)" -> "tqdm_notebook(0)"	[label=iteratorOf];
	"p(0)" -> "preds_test(0)$0"	[label=iteratorOf];
	"p(0)$0" -> "p(0)"	[label=squeeze];
	"im(0)$0" -> "cv2(0)"	[label=resize];
	"im(0)$0" -> "p(0)$0"	[label=resize];
	"im(0)$0" -> "1024(0)"	[label=resize];
	"1024(0)" -> "nested-unet-with-efficientnet-encoder.ipynb"	[label=appearsIn];
	"im(0)$1" -> "threshold_best(0)$1"	[label=assignedFrom];
	"im(0)$1" -> "im(0)$0"	[label=assignedFrom];
	"im(0)$2" -> "0(0)"	[label=assignedFrom];
	"im(0)$2" -> "im(0)$1"	[label=assignedFrom];
	"im(0)$3" -> "np(0)$1"	[label=astype];
	"im(0)$3" -> "255(0)"	[label=astype];
	"im(0)$3" -> "im(0)$2"	[label=astype];
	"rles(0)$1" -> "mask2rle(0)"	[label=append];
	"rles(0)$1" -> "rles(0)$0"	[label=append];
	"rles(0)$1" -> "1024(0)"	[label=append];
	"rles(0)$1" -> "im(0)$3"	[label=append];
	"i(0)$1" -> "1(0)"	[label=Add];
	"i(0)$1" -> "i(0)$0"	[label=Add];
	"plt(0)$27" -> "1(0)"	[label=subplot];
	"plt(0)$27" -> "max_img(0)$0"	[label=subplot];
	"plt(0)$27" -> "plt(0)$26"	[label=subplot];
	"plt(0)$27" -> "i(0)$1"	[label=subplot];
	"plt(0)$28" -> "im(0)$3"	[label=imshow];
	"plt(0)$28" -> "plt(0)$27"	[label=imshow];
	"plt(0)$29" -> "off(0)"	[label=axis];
	"plt(0)$29" -> "plt(0)$28"	[label=axis];
	"o(0)" -> "nested-unet-with-efficientnet-encoder.ipynb"	[label=appearsIn];
	"ids(0)$0" -> "1(0)"	[label=assignedFrom];
	"ids(0)$0" -> "test_fn(0)$0"	[label=assignedFrom];
	"ids(0)$0" -> "/(0)"	[label=assignedFrom];
	"ids(0)$0" -> "o(0)"	[label=assignedFrom];
	"ids(0)$0" -> "4(0)"	[label=assignedFrom];
	"4(0)" -> "nested-unet-with-efficientnet-encoder.ipynb"	[label=appearsIn];
	"sub_df(0)$0" -> "pd(0)"	[label=DataFrame];
	"sub_df(0)$0" -> "rles(0)$1"	[label=DataFrame];
	"sub_df(0)$0" -> "ids(0)$0"	[label=DataFrame];
	"sub_df(0)$0" -> "ImageId(0)"	[label=DataFrame];
	"sub_df(0)$0" -> "EncodedPixels(0)"	[label=DataFrame];
	"ImageId(0)" -> "nested-unet-with-efficientnet-encoder.ipynb"	[label=appearsIn];
	"EncodedPixels(0)" -> "nested-unet-with-efficientnet-encoder.ipynb"	[label=appearsIn];
	"-1(0)" -> "nested-unet-with-efficientnet-encoder.ipynb"	[label=appearsIn];
	"sub_df(0)$1" -> "sub_df(0)$0"	[label=assignedFrom];
	"sub_df(0)$1" -> "-1(0)"	[label=assignedFrom];
	"sub_df(0)$2" -> "sub_df(0)$1"	[label=head];
	"sub_df(0)$3" -> "sub_df(0)$2"	[label=to_csv];
	"sub_df(0)$3" -> "submission.csv(0)"	[label=to_csv];
	"submission.csv(0)" -> "nested-unet-with-efficientnet-encoder.ipynb"	[label=appearsIn];
	"sub_df(0)$4" -> "10(0)"	[label=tail];
	"sub_df(0)$4" -> "sub_df(0)$3"	[label=tail];
}
