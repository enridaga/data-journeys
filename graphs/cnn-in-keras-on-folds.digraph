digraph "" {
	numpy -> "cnn-in-keras-on-folds.ipynb"	[label=importedBy];
	"np(0)" -> numpy	[label=assignedFrom];
	"np(0)" -> "cnn-in-keras-on-folds.ipynb"	[label=appearsIn];
	pandas -> "cnn-in-keras-on-folds.ipynb"	[label=importedBy];
	"pd(0)" -> "cnn-in-keras-on-folds.ipynb"	[label=appearsIn];
	"pd(0)" -> pandas	[label=assignedFrom];
	"matplotlib.pyplot" -> "cnn-in-keras-on-folds.ipynb"	[label=importedBy];
	"plt(0)" -> "cnn-in-keras-on-folds.ipynb"	[label=appearsIn];
	"plt(0)" -> "matplotlib.pyplot"	[label=assignedFrom];
	seaborn -> "cnn-in-keras-on-folds.ipynb"	[label=importedBy];
	"sns(0)" -> "cnn-in-keras-on-folds.ipynb"	[label=appearsIn];
	"sns(0)" -> seaborn	[label=assignedFrom];
	"nltk.tokenize" -> "cnn-in-keras-on-folds.ipynb"	[label=importedBy];
	TweetTokenizer -> "nltk.tokenize"	[label=importedBy];
	"TweetTokenizer(0)" -> "cnn-in-keras-on-folds.ipynb"	[label=appearsIn];
	"TweetTokenizer(0)" -> TweetTokenizer	[label=assignedFrom];
	datetime -> "cnn-in-keras-on-folds.ipynb"	[label=importedBy];
	"datetime(0)" -> "cnn-in-keras-on-folds.ipynb"	[label=appearsIn];
	"datetime(0)" -> datetime	[label=assignedFrom];
	lightgbm -> "cnn-in-keras-on-folds.ipynb"	[label=importedBy];
	"lgb(0)" -> "cnn-in-keras-on-folds.ipynb"	[label=appearsIn];
	"lgb(0)" -> lightgbm	[label=assignedFrom];
	scipy -> "cnn-in-keras-on-folds.ipynb"	[label=importedBy];
	stats -> scipy	[label=importedBy];
	"stats(0)" -> "cnn-in-keras-on-folds.ipynb"	[label=appearsIn];
	"stats(0)" -> stats	[label=assignedFrom];
	"scipy.sparse" -> "cnn-in-keras-on-folds.ipynb"	[label=importedBy];
	hstack -> "scipy.sparse"	[label=importedBy];
	"hstack(0)" -> "cnn-in-keras-on-folds.ipynb"	[label=appearsIn];
	"hstack(0)" -> hstack	[label=assignedFrom];
	csr_matrix -> "scipy.sparse"	[label=importedBy];
	"csr_matrix(0)" -> "cnn-in-keras-on-folds.ipynb"	[label=appearsIn];
	"csr_matrix(0)" -> csr_matrix	[label=assignedFrom];
	"sklearn.model_selection" -> "cnn-in-keras-on-folds.ipynb"	[label=importedBy];
	train_test_split -> "sklearn.model_selection"	[label=importedBy];
	"train_test_split(0)" -> "cnn-in-keras-on-folds.ipynb"	[label=appearsIn];
	"train_test_split(0)" -> train_test_split	[label=assignedFrom];
	cross_val_score -> "sklearn.model_selection"	[label=importedBy];
	"cross_val_score(0)" -> "cnn-in-keras-on-folds.ipynb"	[label=appearsIn];
	"cross_val_score(0)" -> cross_val_score	[label=assignedFrom];
	StratifiedKFold -> "sklearn.model_selection"	[label=importedBy];
	"StratifiedKFold(0)" -> "cnn-in-keras-on-folds.ipynb"	[label=appearsIn];
	"StratifiedKFold(0)" -> StratifiedKFold	[label=assignedFrom];
	wordcloud -> "cnn-in-keras-on-folds.ipynb"	[label=importedBy];
	WordCloud -> wordcloud	[label=importedBy];
	"WordCloud(0)" -> "cnn-in-keras-on-folds.ipynb"	[label=appearsIn];
	"WordCloud(0)" -> WordCloud	[label=assignedFrom];
	collections -> "cnn-in-keras-on-folds.ipynb"	[label=importedBy];
	Counter -> collections	[label=importedBy];
	"Counter(0)" -> "cnn-in-keras-on-folds.ipynb"	[label=appearsIn];
	"Counter(0)" -> Counter	[label=assignedFrom];
	"nltk.corpus" -> "cnn-in-keras-on-folds.ipynb"	[label=importedBy];
	stopwords -> "nltk.corpus"	[label=importedBy];
	"stopwords(0)" -> "cnn-in-keras-on-folds.ipynb"	[label=appearsIn];
	"stopwords(0)" -> stopwords	[label=assignedFrom];
	"nltk.util" -> "cnn-in-keras-on-folds.ipynb"	[label=importedBy];
	ngrams -> "nltk.util"	[label=importedBy];
	"ngrams(0)" -> "cnn-in-keras-on-folds.ipynb"	[label=appearsIn];
	"ngrams(0)" -> ngrams	[label=assignedFrom];
	"sklearn.feature_extraction.text" -> "cnn-in-keras-on-folds.ipynb"	[label=importedBy];
	TfidfVectorizer -> "sklearn.feature_extraction.text"	[label=importedBy];
	"TfidfVectorizer(0)" -> "cnn-in-keras-on-folds.ipynb"	[label=appearsIn];
	"TfidfVectorizer(0)" -> TfidfVectorizer	[label=assignedFrom];
	sklearn -> "cnn-in-keras-on-folds.ipynb"	[label=importedBy];
	metrics -> sklearn	[label=importedBy];
	"metrics(0)" -> "cnn-in-keras-on-folds.ipynb"	[label=appearsIn];
	"metrics(0)" -> metrics	[label=assignedFrom];
	"pd(0)$0" -> "pd(0)"	[label=set_option];
	"pd(0)$0" -> "max_colwidth(0)"	[label=set_option];
	"pd(0)$0" -> "400(0)"	[label=set_option];
	"max_colwidth(0)" -> "cnn-in-keras-on-folds.ipynb"	[label=appearsIn];
	"400(0)" -> "cnn-in-keras-on-folds.ipynb"	[label=appearsIn];
	"keras.preprocessing.text" -> "cnn-in-keras-on-folds.ipynb"	[label=importedBy];
	Tokenizer -> "keras.preprocessing.text"	[label=importedBy];
	"Tokenizer(0)" -> "cnn-in-keras-on-folds.ipynb"	[label=appearsIn];
	"Tokenizer(0)" -> Tokenizer	[label=assignedFrom];
	"keras.preprocessing.sequence" -> "cnn-in-keras-on-folds.ipynb"	[label=importedBy];
	pad_sequences -> "keras.preprocessing.sequence"	[label=importedBy];
	"pad_sequences(0)" -> "cnn-in-keras-on-folds.ipynb"	[label=appearsIn];
	"pad_sequences(0)" -> pad_sequences	[label=assignedFrom];
	"keras.layers" -> "cnn-in-keras-on-folds.ipynb"	[label=importedBy];
	Dense -> "keras.layers"	[label=importedBy];
	"Dense(0)" -> "cnn-in-keras-on-folds.ipynb"	[label=appearsIn];
	"Dense(0)" -> Dense	[label=assignedFrom];
	Input -> "keras.layers"	[label=importedBy];
	"Input(0)" -> "cnn-in-keras-on-folds.ipynb"	[label=appearsIn];
	"Input(0)" -> Input	[label=assignedFrom];
	LSTM -> "keras.layers"	[label=importedBy];
	"LSTM(0)" -> "cnn-in-keras-on-folds.ipynb"	[label=appearsIn];
	"LSTM(0)" -> LSTM	[label=assignedFrom];
	Embedding -> "keras.layers"	[label=importedBy];
	"Embedding(0)" -> "cnn-in-keras-on-folds.ipynb"	[label=appearsIn];
	"Embedding(0)" -> Embedding	[label=assignedFrom];
	Dropout -> "keras.layers"	[label=importedBy];
	"Dropout(0)" -> "cnn-in-keras-on-folds.ipynb"	[label=appearsIn];
	"Dropout(0)" -> Dropout	[label=assignedFrom];
	Activation -> "keras.layers"	[label=importedBy];
	"Activation(0)" -> "cnn-in-keras-on-folds.ipynb"	[label=appearsIn];
	"Activation(0)" -> Activation	[label=assignedFrom];
	Conv1D -> "keras.layers"	[label=importedBy];
	"Conv1D(0)" -> "cnn-in-keras-on-folds.ipynb"	[label=appearsIn];
	"Conv1D(0)" -> Conv1D	[label=assignedFrom];
	GRU -> "keras.layers"	[label=importedBy];
	"GRU(0)" -> "cnn-in-keras-on-folds.ipynb"	[label=appearsIn];
	"GRU(0)" -> GRU	[label=assignedFrom];
	CuDNNGRU -> "keras.layers"	[label=importedBy];
	"CuDNNGRU(0)" -> "cnn-in-keras-on-folds.ipynb"	[label=appearsIn];
	"CuDNNGRU(0)" -> CuDNNGRU	[label=assignedFrom];
	CuDNNLSTM -> "keras.layers"	[label=importedBy];
	"CuDNNLSTM(0)" -> "cnn-in-keras-on-folds.ipynb"	[label=appearsIn];
	"CuDNNLSTM(0)" -> CuDNNLSTM	[label=assignedFrom];
	BatchNormalization -> "keras.layers"	[label=importedBy];
	"BatchNormalization(0)" -> "cnn-in-keras-on-folds.ipynb"	[label=appearsIn];
	"BatchNormalization(0)" -> BatchNormalization	[label=assignedFrom];
	Bidirectional -> "keras.layers"	[label=importedBy];
	"Bidirectional(0)" -> "cnn-in-keras-on-folds.ipynb"	[label=appearsIn];
	"Bidirectional(0)" -> Bidirectional	[label=assignedFrom];
	GlobalMaxPool1D -> "keras.layers"	[label=importedBy];
	"GlobalMaxPool1D(0)" -> "cnn-in-keras-on-folds.ipynb"	[label=appearsIn];
	"GlobalMaxPool1D(0)" -> GlobalMaxPool1D	[label=assignedFrom];
	MaxPooling1D -> "keras.layers"	[label=importedBy];
	"MaxPooling1D(0)" -> "cnn-in-keras-on-folds.ipynb"	[label=appearsIn];
	"MaxPooling1D(0)" -> MaxPooling1D	[label=assignedFrom];
	Add -> "keras.layers"	[label=importedBy];
	"Add(0)" -> "cnn-in-keras-on-folds.ipynb"	[label=appearsIn];
	"Add(0)" -> Add	[label=assignedFrom];
	Flatten -> "keras.layers"	[label=importedBy];
	"Flatten(0)" -> "cnn-in-keras-on-folds.ipynb"	[label=appearsIn];
	"Flatten(0)" -> Flatten	[label=assignedFrom];
	GlobalAveragePooling1D -> "keras.layers"	[label=importedBy];
	"GlobalAveragePooling1D(0)" -> "cnn-in-keras-on-folds.ipynb"	[label=appearsIn];
	"GlobalAveragePooling1D(0)" -> GlobalAveragePooling1D	[label=assignedFrom];
	GlobalMaxPooling1D -> "keras.layers"	[label=importedBy];
	"GlobalMaxPooling1D(0)" -> "cnn-in-keras-on-folds.ipynb"	[label=appearsIn];
	"GlobalMaxPooling1D(0)" -> GlobalMaxPooling1D	[label=assignedFrom];
	concatenate -> "keras.layers"	[label=importedBy];
	"concatenate(0)" -> "cnn-in-keras-on-folds.ipynb"	[label=appearsIn];
	"concatenate(0)" -> concatenate	[label=assignedFrom];
	SpatialDropout1D -> "keras.layers"	[label=importedBy];
	"SpatialDropout1D(0)" -> "cnn-in-keras-on-folds.ipynb"	[label=appearsIn];
	"SpatialDropout1D(0)" -> SpatialDropout1D	[label=assignedFrom];
	"keras.models" -> "cnn-in-keras-on-folds.ipynb"	[label=importedBy];
	Model -> "keras.models"	[label=importedBy];
	"Model(0)" -> "cnn-in-keras-on-folds.ipynb"	[label=appearsIn];
	"Model(0)" -> Model	[label=assignedFrom];
	load_model -> "keras.models"	[label=importedBy];
	"load_model(0)" -> "cnn-in-keras-on-folds.ipynb"	[label=appearsIn];
	"load_model(0)" -> load_model	[label=assignedFrom];
	keras -> "cnn-in-keras-on-folds.ipynb"	[label=importedBy];
	initializers -> keras	[label=importedBy];
	"initializers(0)" -> "cnn-in-keras-on-folds.ipynb"	[label=appearsIn];
	"initializers(0)" -> initializers	[label=assignedFrom];
	regularizers -> keras	[label=importedBy];
	"regularizers(0)" -> "cnn-in-keras-on-folds.ipynb"	[label=appearsIn];
	"regularizers(0)" -> regularizers	[label=assignedFrom];
	constraints -> keras	[label=importedBy];
	"constraints(0)" -> "cnn-in-keras-on-folds.ipynb"	[label=appearsIn];
	"constraints(0)" -> constraints	[label=assignedFrom];
	optimizers -> keras	[label=importedBy];
	"optimizers(0)" -> "cnn-in-keras-on-folds.ipynb"	[label=appearsIn];
	"optimizers(0)" -> optimizers	[label=assignedFrom];
	layers -> keras	[label=importedBy];
	"layers(0)" -> "cnn-in-keras-on-folds.ipynb"	[label=appearsIn];
	"layers(0)" -> layers	[label=assignedFrom];
	callbacks -> keras	[label=importedBy];
	"callbacks(0)" -> "cnn-in-keras-on-folds.ipynb"	[label=appearsIn];
	"callbacks(0)" -> callbacks	[label=assignedFrom];
	backend -> keras	[label=importedBy];
	"K(0)" -> "cnn-in-keras-on-folds.ipynb"	[label=appearsIn];
	"K(0)" -> backend	[label=assignedFrom];
	"keras.engine" -> "cnn-in-keras-on-folds.ipynb"	[label=importedBy];
	InputSpec -> "keras.engine"	[label=importedBy];
	"InputSpec(0)" -> "cnn-in-keras-on-folds.ipynb"	[label=appearsIn];
	"InputSpec(0)" -> InputSpec	[label=assignedFrom];
	Layer -> "keras.engine"	[label=importedBy];
	"Layer(0)" -> "cnn-in-keras-on-folds.ipynb"	[label=appearsIn];
	"Layer(0)" -> Layer	[label=assignedFrom];
	"keras.optimizers" -> "cnn-in-keras-on-folds.ipynb"	[label=importedBy];
	Adam -> "keras.optimizers"	[label=importedBy];
	"Adam(0)" -> "cnn-in-keras-on-folds.ipynb"	[label=appearsIn];
	"Adam(0)" -> Adam	[label=assignedFrom];
	"keras.callbacks" -> "cnn-in-keras-on-folds.ipynb"	[label=importedBy];
	ModelCheckpoint -> "keras.callbacks"	[label=importedBy];
	"ModelCheckpoint(0)" -> "cnn-in-keras-on-folds.ipynb"	[label=appearsIn];
	"ModelCheckpoint(0)" -> ModelCheckpoint	[label=assignedFrom];
	TensorBoard -> "keras.callbacks"	[label=importedBy];
	"TensorBoard(0)" -> "cnn-in-keras-on-folds.ipynb"	[label=appearsIn];
	"TensorBoard(0)" -> TensorBoard	[label=assignedFrom];
	Callback -> "keras.callbacks"	[label=importedBy];
	"Callback(0)" -> "cnn-in-keras-on-folds.ipynb"	[label=appearsIn];
	"Callback(0)" -> Callback	[label=assignedFrom];
	EarlyStopping -> "keras.callbacks"	[label=importedBy];
	"EarlyStopping(0)" -> "cnn-in-keras-on-folds.ipynb"	[label=appearsIn];
	"EarlyStopping(0)" -> EarlyStopping	[label=assignedFrom];
	time -> "cnn-in-keras-on-folds.ipynb"	[label=importedBy];
	"time(0)" -> "cnn-in-keras-on-folds.ipynb"	[label=appearsIn];
	"time(0)" -> time	[label=assignedFrom];
	os -> "cnn-in-keras-on-folds.ipynb"	[label=importedBy];
	"os(0)" -> "cnn-in-keras-on-folds.ipynb"	[label=appearsIn];
	"os(0)" -> os	[label=assignedFrom];
	"print[35/0]" -> "os(0)"	[label=print];
	"print[35/0]" -> "../input(0)"	[label=print];
	"../input(0)" -> "cnn-in-keras-on-folds.ipynb"	[label=appearsIn];
	"train(0)$0" -> "pd(0)$0"	[label=read_csv];
	"train(0)$0" -> "../input/jigsaw-public-files/train.csv(0)"	[label=read_csv];
	"../input/jigsaw-public-files/train.csv(0)" -> "cnn-in-keras-on-folds.ipynb"	[label=appearsIn];
	"test(0)$0" -> "pd(0)$0"	[label=read_csv];
	"test(0)$0" -> "../input/jigsaw-public-files/test.csv(0)"	[label=read_csv];
	"../input/jigsaw-public-files/test.csv(0)" -> "cnn-in-keras-on-folds.ipynb"	[label=appearsIn];
	"train(0)$1" -> "train(0)$0"	[label=fillna];
	"train(0)$1" -> "comment_text(0)"	[label=fillna];
	"train(0)$1" -> "(0)"	[label=fillna];
	"comment_text(0)" -> "cnn-in-keras-on-folds.ipynb"	[label=appearsIn];
	"(0)" -> "cnn-in-keras-on-folds.ipynb"	[label=appearsIn];
	"test(0)$1" -> "test(0)$0"	[label=fillna];
	"test(0)$1" -> "comment_text(0)"	[label=fillna];
	"test(0)$1" -> "(0)"	[label=fillna];
	"sub(0)$0" -> "pd(0)$0"	[label=read_csv];
	"sub(0)$0" -> "../input/jigsaw-unintended-bias-in-toxicity-classification/sample_submission.csv(0)"	[label=read_csv];
	"../input/jigsaw-unintended-bias-in-toxicity-classification/sample_submission.csv(0)" -> "cnn-in-keras-on-folds.ipynb"	[label=appearsIn];
	"list(0)" -> "cnn-in-keras-on-folds.ipynb"	[label=appearsIn];
	"full_text(0)$0" -> "train(0)$1"	[label=Add];
	"full_text(0)$0" -> "comment_text(0)"	[label=Add];
	"full_text(0)$0" -> "test(0)$1"	[label=Add];
	"full_text(0)$0" -> "list(0)"	[label=Add];
	"300000(0)" -> "cnn-in-keras-on-folds.ipynb"	[label=appearsIn];
	"max_features(0)$0" -> "300000(0)"	[label=assignedFrom];
	"True(0)" -> "cnn-in-keras-on-folds.ipynb"	[label=appearsIn];
	"tk(0)$0" -> "(0)"	[label=Tokenizer];
	"tk(0)$0" -> "max_features(0)$0"	[label=Tokenizer];
	"tk(0)$0" -> "True(0)"	[label=Tokenizer];
	"tk(0)$1" -> "full_text(0)$0"	[label=fit_on_texts];
	"tk(0)$1" -> "tk(0)$0"	[label=fit_on_texts];
	"../input/fasttext-crawl-300d-2m/crawl-300d-2M.vec(0)" -> "cnn-in-keras-on-folds.ipynb"	[label=appearsIn];
	"embedding_path1(0)$0" -> "../input/fasttext-crawl-300d-2m/crawl-300d-2M.vec(0)"	[label=assignedFrom];
	"../input/glove840b300dtxt/glove.840B.300d.txt(0)" -> "cnn-in-keras-on-folds.ipynb"	[label=appearsIn];
	"embedding_path2(0)$0" -> "../input/glove840b300dtxt/glove.840B.300d.txt(0)"	[label=assignedFrom];
	"300(0)" -> "cnn-in-keras-on-folds.ipynb"	[label=appearsIn];
	"embed_size(0)$0" -> "300(0)"	[label=assignedFrom];
	"word(1)" -> "get_coefs[0]"	[label=_argToVar];
	"embedding_path(2)" -> "build_matrix[0]"	[label=_argToVar];
	"tokenizer(2)" -> "build_matrix[1]"	[label=_argToVar];
	"embedding_index(2)$0" -> "embedding_path(2)"	[label=dict];
	"embedding_index(2)$0" -> "get_coefs(2)"	[label=dict];
	"embedding_index(2)$0" -> "o(2)"	[label=dict];
	"embedding_index(2)$0" -> " (2)"	[label=dict];
	"embedding_index(2)$0" -> "open(2)"	[label=dict];
	"word_index(2)$0" -> "tk(2)"	[label=assignedFrom];
	"nb_words(2)$0" -> "word_index(2)$0"	[label=min];
	"nb_words(2)$0" -> "max_features(2)"	[label=min];
	"nb_words(2)$0" -> "len(2)"	[label=min];
	"embedding_matrix(2)$0" -> "nb_words(2)$0"	[label=zeros];
	"embedding_matrix(2)$0" -> "np(2)"	[label=zeros];
	"embedding_matrix(2)$0" -> "1(2)"	[label=zeros];
	"embedding_matrix(2)$0" -> "embed_size(2)"	[label=zeros];
	"word(2)" -> "word_index(2)$0"	[label=iteratorOf];
	"i(2)" -> "word_index(2)$0"	[label=iteratorOf];
	"embedding_vector(2)$0" -> "embedding_index(2)$0"	[label=get];
	"embedding_vector(2)$0" -> "word(2)"	[label=get];
	"embedding_matrix(2)$1" -> "embedding_matrix(2)$0"	[label=assignedFrom];
	"embedding_matrix(2)$1" -> "embedding_vector(2)$0"	[label=assignedFrom];
	"embedding_matrix(0)$0" -> "np(0)"	[label=concatenate];
	"embedding_matrix(0)$0" -> "[<_ast.Call object at 0x7fd5007f0a60>, <_ast.Call object at 0x7fd50080dc40>](0)"	[label=concatenate];
	"embedding_matrix(0)$0" -> "1(0)"	[label=concatenate];
	"[<_ast.Call object at 0x7fd5007f0a60>, <_ast.Call object at 0x7fd50080dc40>](0)" -> "cnn-in-keras-on-folds.ipynb"	[label=appearsIn];
	"1(0)" -> "cnn-in-keras-on-folds.ipynb"	[label=appearsIn];
	"y(0)$0" -> "np(0)"	[label=Mult];
	"y(0)$0" -> "train(0)$1"	[label=Mult];
	"y(0)$0" -> "True(0)"	[label=Mult];
	"y(0)$0" -> "1(0)"	[label=Mult];
	"y(0)$0" -> "target(0)"	[label=Mult];
	"y(0)$0" -> "0.5(0)"	[label=Mult];
	"y(0)$0" -> "False(0)"	[label=Mult];
	"target(0)" -> "cnn-in-keras-on-folds.ipynb"	[label=appearsIn];
	"0.5(0)" -> "cnn-in-keras-on-folds.ipynb"	[label=appearsIn];
	"False(0)" -> "cnn-in-keras-on-folds.ipynb"	[label=appearsIn];
	"[<_ast.Constant object at 0x7fd50080deb0>, <_ast.Constant object at 0x7fd50080da30>, <_ast.Constant object at 0x7fd50080d730>, <_\
ast.Constant object at 0x7fd50080d850>, <_ast.Constant object at 0x7fd50080d550>, <_ast.Constant object at 0x7fd50080d310>, <_ast.Constant \
object at 0x7fd50080ddf0>, <_ast.Constant object at 0x7fd50080d370>, <_ast.Constant object at 0x7fd50080dac0>](0)" -> "cnn-in-keras-on-folds.ipynb"	[label=appearsIn];
	"identity_columns(0)$0" -> "[<_ast.Constant object at 0x7fd50080deb0>, <_ast.Constant object at 0x7fd50080da30>, <_ast.Constant object at 0x7fd50080d730>, <_\
ast.Constant object at 0x7fd50080d850>, <_ast.Constant object at 0x7fd50080d550>, <_ast.Constant object at 0x7fd50080d310>, <_ast.Constant \
object at 0x7fd50080ddf0>, <_ast.Constant object at 0x7fd50080d370>, <_ast.Constant object at 0x7fd50080dac0>](0)"	[label=assignedFrom];
	"col(0)" -> "cnn-in-keras-on-folds.ipynb"	[label=appearsIn];
	"col(0)" -> "identity_columns(0)$0"	[label=iteratorOf];
	"col(0)" -> "[<_ast.Constant object at 0x7fd50080d220>](0)"	[label=iteratorOf];
	"[<_ast.Constant object at 0x7fd50080d220>](0)" -> "cnn-in-keras-on-folds.ipynb"	[label=appearsIn];
	"train(0)$2" -> "np(0)"	[label=where];
	"train(0)$2" -> "train(0)$1"	[label=where];
	"train(0)$2" -> "True(0)"	[label=where];
	"train(0)$2" -> "0.5(0)"	[label=where];
	"train(0)$2" -> "False(0)"	[label=where];
	"train(0)$2" -> "col(0)"	[label=where];
	"train(0)$2" -> "train(0)$2"	[label=where];
	"5(0)" -> "cnn-in-keras-on-folds.ipynb"	[label=appearsIn];
	"n_fold(0)$0" -> "5(0)"	[label=assignedFrom];
	"folds(0)$0" -> "True(0)"	[label=StratifiedKFold];
	"folds(0)$0" -> "n_fold(0)$0"	[label=StratifiedKFold];
	"folds(0)$0" -> "11(0)"	[label=StratifiedKFold];
	"11(0)" -> "cnn-in-keras-on-folds.ipynb"	[label=appearsIn];
	"subgroup_auc(0)" -> "cnn-in-keras-on-folds.ipynb"	[label=appearsIn];
	"SUBGROUP_AUC(0)$0" -> "subgroup_auc(0)"	[label=assignedFrom];
	"bpsn_auc(0)" -> "cnn-in-keras-on-folds.ipynb"	[label=appearsIn];
	"BPSN_AUC(0)$0" -> "bpsn_auc(0)"	[label=assignedFrom];
	"bnsp_auc(0)" -> "cnn-in-keras-on-folds.ipynb"	[label=appearsIn];
	"BNSP_AUC(0)$0" -> "bnsp_auc(0)"	[label=assignedFrom];
	"y_true(3)" -> "compute_auc[0]"	[label=_argToVar];
	"y_pred(3)" -> "compute_auc[1]"	[label=_argToVar];
	"df(4)" -> "compute_subgroup_auc[0]"	[label=_argToVar];
	"subgroup(4)" -> "compute_subgroup_auc[1]"	[label=_argToVar];
	"label(4)" -> "compute_subgroup_auc[2]"	[label=_argToVar];
	"oof_name(4)" -> "compute_subgroup_auc[3]"	[label=_argToVar];
	"subgroup_examples(4)$0" -> "df(4)"	[label=assignedFrom];
	"subgroup_examples(4)$0" -> "subgroup(4)"	[label=assignedFrom];
	"df(5)" -> "compute_bpsn_auc[0]"	[label=_argToVar];
	"subgroup(5)" -> "compute_bpsn_auc[1]"	[label=_argToVar];
	"label(5)" -> "compute_bpsn_auc[2]"	[label=_argToVar];
	"oof_name(5)" -> "compute_bpsn_auc[3]"	[label=_argToVar];
	"subgroup_negative_examples(5)$0" -> "df(5)"	[label=assignedFrom];
	"subgroup_negative_examples(5)$0" -> "subgroup(5)"	[label=assignedFrom];
	"subgroup_negative_examples(5)$0" -> "label(5)"	[label=assignedFrom];
	"non_subgroup_positive_examples(5)$0" -> "df(5)"	[label=assignedFrom];
	"non_subgroup_positive_examples(5)$0" -> "subgroup(5)"	[label=assignedFrom];
	"non_subgroup_positive_examples(5)$0" -> "label(5)"	[label=assignedFrom];
	"examples(5)$0" -> "subgroup_negative_examples(5)$0"	[label=append];
	"examples(5)$0" -> "non_subgroup_positive_examples(5)$0"	[label=append];
	"df(6)" -> "compute_bnsp_auc[0]"	[label=_argToVar];
	"subgroup(6)" -> "compute_bnsp_auc[1]"	[label=_argToVar];
	"label(6)" -> "compute_bnsp_auc[2]"	[label=_argToVar];
	"oof_name(6)" -> "compute_bnsp_auc[3]"	[label=_argToVar];
	"subgroup_positive_examples(6)$0" -> "df(6)"	[label=assignedFrom];
	"subgroup_positive_examples(6)$0" -> "subgroup(6)"	[label=assignedFrom];
	"subgroup_positive_examples(6)$0" -> "label(6)"	[label=assignedFrom];
	"non_subgroup_negative_examples(6)$0" -> "df(6)"	[label=assignedFrom];
	"non_subgroup_negative_examples(6)$0" -> "subgroup(6)"	[label=assignedFrom];
	"non_subgroup_negative_examples(6)$0" -> "label(6)"	[label=assignedFrom];
	"examples(6)$0" -> "subgroup_positive_examples(6)$0"	[label=append];
	"examples(6)$0" -> "non_subgroup_negative_examples(6)$0"	[label=append];
	"dataset(7)" -> "compute_bias_metrics_for_model[0]"	[label=_argToVar];
	"subgroups(7)" -> "compute_bias_metrics_for_model[1]"	[label=_argToVar];
	"model(7)" -> "compute_bias_metrics_for_model[2]"	[label=_argToVar];
	"label_col(7)" -> "compute_bias_metrics_for_model[3]"	[label=_argToVar];
	"include_asegs(7)" -> "compute_bias_metrics_for_model[4]"	[label=_argToVar];
	"records(7)$0" -> "[](7)"	[label=assignedFrom];
	"subgroup(7)" -> "subgroups(7)"	[label=iteratorOf];
	"record(7)$0" -> "dataset(7)"	[label=assignedFrom];
	"record(7)$0" -> "subgroup(7)"	[label=assignedFrom];
	"record(7)$0" -> "subgroup_size(7)"	[label=assignedFrom];
	"record(7)$0" -> "len(7)"	[label=assignedFrom];
	"record(7)$1" -> "dataset(7)"	[label=compute_subgroup_auc];
	"record(7)$1" -> "model(7)"	[label=compute_subgroup_auc];
	"record(7)$1" -> "label_col(7)"	[label=compute_subgroup_auc];
	"record(7)$1" -> "subgroup(7)"	[label=compute_subgroup_auc];
	"record(7)$1" -> "record(7)$0"	[label=compute_subgroup_auc];
	"record(7)$2" -> "dataset(7)"	[label=compute_bpsn_auc];
	"record(7)$2" -> "model(7)"	[label=compute_bpsn_auc];
	"record(7)$2" -> "label_col(7)"	[label=compute_bpsn_auc];
	"record(7)$2" -> "subgroup(7)"	[label=compute_bpsn_auc];
	"record(7)$2" -> "record(7)$1"	[label=compute_bpsn_auc];
	"record(7)$3" -> "dataset(7)"	[label=compute_bnsp_auc];
	"record(7)$3" -> "model(7)"	[label=compute_bnsp_auc];
	"record(7)$3" -> "label_col(7)"	[label=compute_bnsp_auc];
	"record(7)$3" -> "subgroup(7)"	[label=compute_bnsp_auc];
	"record(7)$3" -> "record(7)$2"	[label=compute_bnsp_auc];
	"records(7)$1" -> "records(7)$0"	[label=append];
	"records(7)$1" -> "record(7)$3"	[label=append];
	"df(8)" -> "calculate_overall_auc[0]"	[label=_argToVar];
	"oof_name(8)" -> "calculate_overall_auc[1]"	[label=_argToVar];
	"true_labels(8)$0" -> "df(8)"	[label=assignedFrom];
	"true_labels(8)$0" -> "target(8)"	[label=assignedFrom];
	"predicted_labels(8)$0" -> "df(8)"	[label=assignedFrom];
	"predicted_labels(8)$0" -> "oof_name(8)"	[label=assignedFrom];
	"series(9)" -> "power_mean[0]"	[label=_argToVar];
	"p(9)" -> "power_mean[1]"	[label=_argToVar];
	"total(9)$0" -> "series(9)"	[label=sum];
	"total(9)$0" -> "p(9)"	[label=sum];
	"total(9)$0" -> "np(9)"	[label=sum];
	"bias_df(10)" -> "get_final_metric[0]"	[label=_argToVar];
	"overall_auc(10)" -> "get_final_metric[1]"	[label=_argToVar];
	"POWER(10)" -> "get_final_metric[2]"	[label=_argToVar];
	"OVERALL_MODEL_WEIGHT(10)" -> "get_final_metric[3]"	[label=_argToVar];
	"bias_score(10)$0" -> "np(10)"	[label=average];
	"bias_score(10)$0" -> "[<_ast.Call object at 0x7fd4c04ad280>, <_ast.Call object at 0x7fd4c04ad400>, <_ast.Call object at 0x7fd4c04ad580>](10)"	[label=average];
	"self(12)" -> "__init__[0]"	[label=_argToVar];
	"step_dim(12)" -> "__init__[1]"	[label=_argToVar];
	"W_regularizer(12)" -> "__init__[2]"	[label=_argToVar];
	"b_regularizer(12)" -> "__init__[3]"	[label=_argToVar];
	"W_constraint(12)" -> "__init__[4]"	[label=_argToVar];
	"b_constraint(12)" -> "__init__[5]"	[label=_argToVar];
	"bias(12)" -> "__init__[6]"	[label=_argToVar];
	"self(12)$0" -> "self(12)"	[label=assignedFrom];
	"self(12)$0" -> "True(12)"	[label=assignedFrom];
	"self(12)$1" -> "self(12)$0"	[label=get];
	"self(12)$1" -> "initializers(12)"	[label=get];
	"self(12)$1" -> "glorot_uniform(12)"	[label=get];
	"self(12)$2" -> "W_regularizer(12)"	[label=get];
	"self(12)$2" -> "self(12)$1"	[label=get];
	"self(12)$2" -> "regularizers(12)"	[label=get];
	"self(12)$3" -> "b_regularizer(12)"	[label=get];
	"self(12)$3" -> "self(12)$2"	[label=get];
	"self(12)$3" -> "regularizers(12)"	[label=get];
	"self(12)$4" -> "W_constraint(12)"	[label=get];
	"self(12)$4" -> "self(12)$3"	[label=get];
	"self(12)$4" -> "constraints(12)"	[label=get];
	"self(12)$5" -> "b_constraint(12)"	[label=get];
	"self(12)$5" -> "self(12)$4"	[label=get];
	"self(12)$5" -> "constraints(12)"	[label=get];
	"self(12)$6" -> "bias(12)"	[label=assignedFrom];
	"self(12)$6" -> "self(12)$5"	[label=assignedFrom];
	"self(12)$7" -> "step_dim(12)"	[label=assignedFrom];
	"self(12)$7" -> "self(12)$6"	[label=assignedFrom];
	"self(12)$8" -> "self(12)$7"	[label=assignedFrom];
	"self(12)$8" -> "0(12)"	[label=assignedFrom];
	"super(12)$0" -> "super(12)"	[label=__init__];
	"self(13)" -> "build[0]"	[label=_argToVar];
	"input_shape(13)" -> "build[1]"	[label=_argToVar];
	"self(13)$0" -> "self(13)"	[label=add_weight];
	"self(13)$0" -> "input_shape(13)"	[label=add_weight];
	"self(13)$0" -> "self(13)$0"	[label=add_weight];
	"self(13)$0" -> "1(13)"	[label=add_weight];
	"self(13)$0" -> "{}_W(13)"	[label=add_weight];
	"self(13)$1" -> "input_shape(13)"	[label=assignedFrom];
	"self(13)$1" -> "self(13)$0"	[label=assignedFrom];
	"self(13)$1" -> "1(13)"	[label=assignedFrom];
	"self(13)$2" -> "input_shape(13)"	[label=add_weight];
	"self(13)$2" -> "1(13)"	[label=add_weight];
	"self(13)$2" -> "self(13)$1"	[label=add_weight];
	"self(13)$2" -> "self(13)$2"	[label=add_weight];
	"self(13)$2" -> "zero(13)"	[label=add_weight];
	"self(13)$2" -> "{}_b(13)"	[label=add_weight];
	"self(13)$3" -> "self(13)$2"	[label=assignedFrom];
	"self(13)$3" -> "None(13)"	[label=assignedFrom];
	"self(13)$4" -> "self(13)$3"	[label=assignedFrom];
	"self(13)$4" -> "True(13)"	[label=assignedFrom];
	"self(14)" -> "compute_mask[0]"	[label=_argToVar];
	"input(14)" -> "compute_mask[1]"	[label=_argToVar];
	"input_mask(14)" -> "compute_mask[2]"	[label=_argToVar];
	"self(15)" -> "call[0]"	[label=_argToVar];
	"x(15)" -> "call[1]"	[label=_argToVar];
	"mask(15)" -> "call[2]"	[label=_argToVar];
	"features_dim(15)$0" -> "self(15)"	[label=assignedFrom];
	"step_dim(15)$0" -> "self(15)"	[label=assignedFrom];
	"eij(15)$0" -> "self(15)"	[label=reshape];
	"eij(15)$0" -> "x(15)"	[label=reshape];
	"eij(15)$0" -> "features_dim(15)$0"	[label=reshape];
	"eij(15)$0" -> "step_dim(15)$0"	[label=reshape];
	"eij(15)$0" -> "K(15)"	[label=reshape];
	"eij(15)$0" -> "1(15)"	[label=reshape];
	"eij(15)$1" -> "self(15)"	[label=Add];
	"eij(15)$1" -> "eij(15)$0"	[label=Add];
	"eij(15)$2" -> "K(15)"	[label=tanh];
	"eij(15)$2" -> "eij(15)$2"	[label=tanh];
	"a(15)$0" -> "K(15)"	[label=exp];
	"a(15)$0" -> "eij(15)$2"	[label=exp];
	"a(15)$1" -> "mask(15)"	[label=Mult];
	"a(15)$1" -> "K(15)"	[label=Mult];
	"a(15)$1" -> "a(15)$0"	[label=Mult];
	"a(15)$2" -> "K(15)"	[label=Div];
	"a(15)$2" -> "1(15)"	[label=Div];
	"a(15)$2" -> "a(15)$1"	[label=Div];
	"a(15)$2" -> "a(15)$2"	[label=Div];
	"a(15)$2" -> "True(15)"	[label=Div];
	"a(15)$3" -> "K(15)"	[label=expand_dims];
	"a(15)$3" -> "a(15)$3"	[label=expand_dims];
	"weighted_input(15)$0" -> "x(15)"	[label=Mult];
	"weighted_input(15)$0" -> "a(15)$3"	[label=Mult];
	"self(16)" -> "compute_output_shape[0]"	[label=_argToVar];
	"input_shape(16)" -> "compute_output_shape[1]"	[label=_argToVar];
	"X_train(17)" -> "build_model[0]"	[label=_argToVar];
	"y_train(17)" -> "build_model[1]"	[label=_argToVar];
	"X_valid(17)" -> "build_model[2]"	[label=_argToVar];
	"y_valid(17)" -> "build_model[3]"	[label=_argToVar];
	"max_len(17)" -> "build_model[4]"	[label=_argToVar];
	"max_features(17)" -> "build_model[5]"	[label=_argToVar];
	"embed_size(17)" -> "build_model[6]"	[label=_argToVar];
	"embedding_matrix(17)" -> "build_model[7]"	[label=_argToVar];
	"lr(17)" -> "build_model[8]"	[label=_argToVar];
	"lr_d(17)" -> "build_model[9]"	[label=_argToVar];
	"spatial_dr(17)" -> "build_model[10]"	[label=_argToVar];
	"dense_units(17)" -> "build_model[11]"	[label=_argToVar];
	"conv_size(17)" -> "build_model[12]"	[label=_argToVar];
	"dr(17)" -> "build_model[13]"	[label=_argToVar];
	"patience(17)" -> "build_model[14]"	[label=_argToVar];
	"fold_id(17)" -> "build_model[15]"	[label=_argToVar];
	"file_path(17)$0" -> "fold_id(17)"	[label=assignedFrom];
	"file_path(17)$0" -> "best_model_fold_(17)"	[label=assignedFrom];
	"file_path(17)$0" -> ".hdf5(17)"	[label=assignedFrom];
	"check_point(17)$0" -> "file_path(17)$0"	[label=ModelCheckpoint];
	"check_point(17)$0" -> "val_loss(17)"	[label=ModelCheckpoint];
	"check_point(17)$0" -> "1(17)"	[label=ModelCheckpoint];
	"check_point(17)$0" -> "True(17)"	[label=ModelCheckpoint];
	"check_point(17)$0" -> "min(17)"	[label=ModelCheckpoint];
	"early_stop(17)$0" -> "patience(17)"	[label=EarlyStopping];
	"early_stop(17)$0" -> "val_loss(17)"	[label=EarlyStopping];
	"early_stop(17)$0" -> "min(17)"	[label=EarlyStopping];
	"inp(17)$0" -> "max_len(17)"	[label=Input];
	"x(17)$0" -> "max_features(17)"	[label=assignedFrom];
	"x(17)$0" -> "embed_size(17)"	[label=assignedFrom];
	"x(17)$0" -> "1(17)"	[label=assignedFrom];
	"x(17)$0" -> "inp(17)$0"	[label=assignedFrom];
	"x(17)$0" -> "Embedding(17)"	[label=assignedFrom];
	"x(17)$0" -> "2(17)"	[label=assignedFrom];
	"x(17)$0" -> "[<_ast.Name object at 0x7fd500827580>](17)"	[label=assignedFrom];
	"x(17)$0" -> "False(17)"	[label=assignedFrom];
	"x1(17)$0" -> "spatial_dr(17)"	[label=assignedFrom];
	"x1(17)$0" -> "x(17)$0"	[label=assignedFrom];
	"x1(17)$0" -> "SpatialDropout1D(17)"	[label=assignedFrom];
	"att(17)$0" -> "max_len(17)"	[label=assignedFrom];
	"att(17)$0" -> "x1(17)$0"	[label=assignedFrom];
	"att(17)$0" -> "Attention(17)"	[label=assignedFrom];
	"x(17)$1" -> "conv_size(17)"	[label=assignedFrom];
	"x(17)$1" -> "2(17)"	[label=assignedFrom];
	"x(17)$1" -> "x1(17)$0"	[label=assignedFrom];
	"x(17)$1" -> "Conv1D(17)"	[label=assignedFrom];
	"x(17)$1" -> "relu(17)"	[label=assignedFrom];
	"x(17)$1" -> "same(17)"	[label=assignedFrom];
	"x(17)$2" -> "same(17)"	[label=assignedFrom];
	"x(17)$2" -> "x(17)$2"	[label=assignedFrom];
	"x(17)$2" -> "MaxPooling1D(17)"	[label=assignedFrom];
	"x(17)$2" -> "5(17)"	[label=assignedFrom];
	"x(17)$3" -> "conv_size(17)"	[label=assignedFrom];
	"x(17)$3" -> "Conv1D(17)"	[label=assignedFrom];
	"x(17)$3" -> "relu(17)"	[label=assignedFrom];
	"x(17)$3" -> "same(17)"	[label=assignedFrom];
	"x(17)$3" -> "x(17)$3"	[label=assignedFrom];
	"x(17)$3" -> "3(17)"	[label=assignedFrom];
	"x(17)$4" -> "same(17)"	[label=assignedFrom];
	"x(17)$4" -> "MaxPooling1D(17)"	[label=assignedFrom];
	"x(17)$4" -> "5(17)"	[label=assignedFrom];
	"x(17)$4" -> "x(17)$4"	[label=assignedFrom];
	"x(17)$5" -> "x(17)$5"	[label=assignedFrom];
	"x(17)$5" -> "Flatten(17)"	[label=assignedFrom];
	"x(17)$6" -> "[<_ast.Name object at 0x7fd500811400>, <_ast.Name object at 0x7fd500811700>](17)"	[label=concatenate];
	"x(17)$7" -> "dense_units(17)"	[label=assignedFrom];
	"x(17)$7" -> "dr(17)"	[label=assignedFrom];
	"x(17)$7" -> "relu(17)"	[label=assignedFrom];
	"x(17)$7" -> "x(17)$7"	[label=assignedFrom];
	"x(17)$7" -> "Dropout(17)"	[label=assignedFrom];
	"x(17)$7" -> "Dense(17)"	[label=assignedFrom];
	"x(17)$8" -> "1(17)"	[label=assignedFrom];
	"x(17)$8" -> "Dense(17)"	[label=assignedFrom];
	"x(17)$8" -> "x(17)$8"	[label=assignedFrom];
	"x(17)$8" -> "sigmoid(17)"	[label=assignedFrom];
	"model(17)$0" -> "inp(17)$0"	[label=Model];
	"model(17)$0" -> "x(17)$8"	[label=Model];
	"model(17)$1" -> "model(17)$0"	[label=compile];
	"model(17)$2" -> "X_train(17)"	[label=fit];
	"model(17)$2" -> "y_train(17)"	[label=fit];
	"model(17)$2" -> "model(17)$1"	[label=fit];
	"X(18)" -> "train_model[0]"	[label=_argToVar];
	"X_test(18)" -> "train_model[1]"	[label=_argToVar];
	"y(18)" -> "train_model[2]"	[label=_argToVar];
	"tokenizer(18)" -> "train_model[3]"	[label=_argToVar];
	"max_len(18)" -> "train_model[4]"	[label=_argToVar];
	"oof(18)$0" -> "X(18)"	[label=zeros];
	"oof(18)$0" -> "np(18)"	[label=zeros];
	"oof(18)$0" -> "len(18)"	[label=zeros];
	"oof(18)$0" -> "1(18)"	[label=zeros];
	"prediction(18)$0" -> "X_test(18)"	[label=zeros];
	"prediction(18)$0" -> "np(18)"	[label=zeros];
	"prediction(18)$0" -> "len(18)"	[label=zeros];
	"prediction(18)$0" -> "1(18)"	[label=zeros];
	"scores(18)$0" -> "[](18)"	[label=assignedFrom];
	"test_tokenized(18)$0" -> "tokenizer(18)"	[label=texts_to_sequences];
	"test_tokenized(18)$0" -> "test(18)"	[label=texts_to_sequences];
	"test_tokenized(18)$0" -> "comment_text(18)"	[label=texts_to_sequences];
	"X_test(18)$0" -> "max_len(18)"	[label=pad_sequences];
	"X_test(18)$0" -> "test_tokenized(18)$0"	[label=pad_sequences];
	"fold_n(18)" -> "X(18)"	[label=iteratorOf];
	"fold_n(18)" -> "y(18)"	[label=iteratorOf];
	"fold_n(18)" -> "enumerate(18)"	[label=iteratorOf];
	"fold_n(18)" -> "folds(18)"	[label=iteratorOf];
	"train_index(18)" -> "X(18)"	[label=iteratorOf];
	"train_index(18)" -> "y(18)"	[label=iteratorOf];
	"train_index(18)" -> "enumerate(18)"	[label=iteratorOf];
	"train_index(18)" -> "folds(18)"	[label=iteratorOf];
	"valid_index(18)" -> "X(18)"	[label=iteratorOf];
	"valid_index(18)" -> "y(18)"	[label=iteratorOf];
	"valid_index(18)" -> "enumerate(18)"	[label=iteratorOf];
	"valid_index(18)" -> "folds(18)"	[label=iteratorOf];
	"print[244/8]" -> "fold_n(18)"	[label=print];
	"print[244/8]" -> "Fold(18)"	[label=print];
	"print[244/8]" -> "started at(18)"	[label=print];
	"print[244/8]" -> "time(18)"	[label=print];
	"X_train(18)$0" -> "X(18)"	[label=assignedFrom];
	"X_train(18)$0" -> "train_index(18)"	[label=assignedFrom];
	"X_train(18)$0" -> "valid_index(18)"	[label=assignedFrom];
	"X_valid(18)$0" -> "X(18)"	[label=assignedFrom];
	"X_valid(18)$0" -> "train_index(18)"	[label=assignedFrom];
	"X_valid(18)$0" -> "valid_index(18)"	[label=assignedFrom];
	"y_train(18)$0" -> "y(18)"	[label=assignedFrom];
	"y_train(18)$0" -> "train_index(18)"	[label=assignedFrom];
	"y_train(18)$0" -> "valid_index(18)"	[label=assignedFrom];
	"y_valid(18)$0" -> "y(18)"	[label=assignedFrom];
	"y_valid(18)$0" -> "train_index(18)"	[label=assignedFrom];
	"y_valid(18)$0" -> "valid_index(18)"	[label=assignedFrom];
	"valid_df(18)$0" -> "X_valid(18)$0"	[label=copy];
	"train_tokenized(18)$0" -> "tokenizer(18)"	[label=texts_to_sequences];
	"train_tokenized(18)$0" -> "comment_text(18)"	[label=texts_to_sequences];
	"train_tokenized(18)$0" -> "X_train(18)$0"	[label=texts_to_sequences];
	"valid_tokenized(18)$0" -> "tokenizer(18)"	[label=texts_to_sequences];
	"valid_tokenized(18)$0" -> "comment_text(18)"	[label=texts_to_sequences];
	"valid_tokenized(18)$0" -> "X_valid(18)$0"	[label=texts_to_sequences];
	"X_train(18)$1" -> "max_len(18)"	[label=pad_sequences];
	"X_train(18)$1" -> "train_tokenized(18)$0"	[label=pad_sequences];
	"X_valid(18)$1" -> "max_len(18)"	[label=pad_sequences];
	"X_valid(18)$1" -> "valid_tokenized(18)$0"	[label=pad_sequences];
	"model(18)$0" -> "max_len(18)"	[label=build_model];
	"model(18)$0" -> "fold_n(18)"	[label=build_model];
	"model(18)$0" -> "y_train(18)$0"	[label=build_model];
	"model(18)$0" -> "y_valid(18)$0"	[label=build_model];
	"model(18)$0" -> "X_train(18)$1"	[label=build_model];
	"model(18)$0" -> "X_valid(18)$1"	[label=build_model];
	"model(18)$0" -> "max_features(18)"	[label=build_model];
	"model(18)$0" -> "embed_size(18)"	[label=build_model];
	"model(18)$0" -> "embedding_matrix(18)"	[label=build_model];
	"model(18)$0" -> "0.001(18)"	[label=build_model];
	"model(18)$0" -> "0(18)"	[label=build_model];
	"model(18)$0" -> "0.1(18)"	[label=build_model];
	"model(18)$0" -> "128(18)"	[label=build_model];
	"model(18)$0" -> "3(18)"	[label=build_model];
	"pred_valid(18)$0" -> "X_valid(18)$1"	[label=predict];
	"pred_valid(18)$0" -> "model(18)$0"	[label=predict];
	"oof(18)$1" -> "oof(18)$0"	[label=assignedFrom];
	"oof(18)$1" -> "pred_valid(18)$0"	[label=assignedFrom];
	"valid_df(18)$1" -> "valid_df(18)$0"	[label=assignedFrom];
	"valid_df(18)$1" -> "pred_valid(18)$0"	[label=assignedFrom];
	"bias_metrics_df(18)$0" -> "valid_df(18)$1"	[label=compute_bias_metrics_for_model];
	"bias_metrics_df(18)$0" -> "identity_columns(18)"	[label=compute_bias_metrics_for_model];
	"bias_metrics_df(18)$0" -> "oof_name(18)"	[label=compute_bias_metrics_for_model];
	"bias_metrics_df(18)$0" -> "target(18)"	[label=compute_bias_metrics_for_model];
	"scores(18)$1" -> "scores(18)$0"	[label=append];
	"scores(18)$1" -> "valid_df(18)$1"	[label=append];
	"scores(18)$1" -> "bias_metrics_df(18)$0"	[label=append];
	"scores(18)$1" -> "oof_name(18)"	[label=append];
	"scores(18)$1" -> "get_final_metric(18)"	[label=append];
	"scores(18)$1" -> "calculate_overall_auc(18)"	[label=append];
	"prediction(18)$1" -> "1(18)"	[label=Add];
	"prediction(18)$1" -> "prediction(18)$0"	[label=Add];
	"prediction(18)$1" -> "X_test(18)$0"	[label=Add];
	"prediction(18)$1" -> "model(18)$0"	[label=Add];
	"prediction(18)$1" -> "1024(18)"	[label=Add];
	"prediction(18)$2" -> "prediction(18)$1"	[label=Div];
	"prediction(18)$2" -> "n_fold(18)"	[label=Div];
	"predicted_target(0)" -> "cnn-in-keras-on-folds.ipynb"	[label=appearsIn];
	"oof_name(0)$0" -> "predicted_target(0)"	[label=assignedFrom];
	"250(0)" -> "cnn-in-keras-on-folds.ipynb"	[label=appearsIn];
	"max_len(0)$0" -> "250(0)"	[label=assignedFrom];
	"oof(0)$0" -> "test(0)$1"	[label=train_model];
	"oof(0)$0" -> "tk(0)$1"	[label=train_model];
	"oof(0)$0" -> "target(0)"	[label=train_model];
	"oof(0)$0" -> "train(0)$2"	[label=train_model];
	"oof(0)$0" -> "max_len(0)$0"	[label=train_model];
	"prediction(0)$0" -> "test(0)$1"	[label=train_model];
	"prediction(0)$0" -> "tk(0)$1"	[label=train_model];
	"prediction(0)$0" -> "target(0)"	[label=train_model];
	"prediction(0)$0" -> "train(0)$2"	[label=train_model];
	"prediction(0)$0" -> "max_len(0)$0"	[label=train_model];
	"scores(0)$0" -> "test(0)$1"	[label=train_model];
	"scores(0)$0" -> "tk(0)$1"	[label=train_model];
	"scores(0)$0" -> "target(0)"	[label=train_model];
	"scores(0)$0" -> "train(0)$2"	[label=train_model];
	"scores(0)$0" -> "max_len(0)$0"	[label=train_model];
	"CV mean score: {0:.4f}, std: {1:.4f}.(0)" -> "cnn-in-keras-on-folds.ipynb"	[label=appearsIn];
	"print[274/0]" -> "np(0)"	[label=print];
	"print[274/0]" -> "scores(0)$0"	[label=print];
	"print[274/0]" -> "CV mean score: {0:.4f}, std: {1:.4f}.(0)"	[label=print];
	"plt(0)$0" -> "plt(0)"	[label=hist];
	"plt(0)$0" -> "prediction(0)$0"	[label=hist];
	"plt(0)$1" -> "oof(0)$0"	[label=hist];
	"plt(0)$1" -> "plt(0)$0"	[label=hist];
	"plt(0)$2" -> "plt(0)$1"	[label=title];
	"plt(0)$2" -> "Distribution of predictions vs oof predictions(0)"	[label=title];
	"Distribution of predictions vs oof predictions(0)" -> "cnn-in-keras-on-folds.ipynb"	[label=appearsIn];
	"sub(0)$1" -> "sub(0)$0"	[label=assignedFrom];
	"sub(0)$1" -> "prediction(0)$0"	[label=assignedFrom];
	"sub(0)$2" -> "sub(0)$1"	[label=to_csv];
	"sub(0)$2" -> "submission.csv(0)"	[label=to_csv];
	"submission.csv(0)" -> "cnn-in-keras-on-folds.ipynb"	[label=appearsIn];
}
