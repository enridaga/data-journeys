digraph "" {
	os -> "image-segmentation-from-scratch-in-pytorch.ipynb"	[label=importedBy];
	"os(0)" -> os	[label=assignedFrom];
	"os(0)" -> "image-segmentation-from-scratch-in-pytorch.ipynb"	[label=appearsIn];
	gc -> "image-segmentation-from-scratch-in-pytorch.ipynb"	[label=importedBy];
	"gc(0)" -> "image-segmentation-from-scratch-in-pytorch.ipynb"	[label=appearsIn];
	"gc(0)" -> gc	[label=assignedFrom];
	cv2 -> "image-segmentation-from-scratch-in-pytorch.ipynb"	[label=importedBy];
	"cv2(0)" -> "image-segmentation-from-scratch-in-pytorch.ipynb"	[label=appearsIn];
	"cv2(0)" -> cv2	[label=assignedFrom];
	time -> "image-segmentation-from-scratch-in-pytorch.ipynb"	[label=importedBy];
	"time(0)" -> "image-segmentation-from-scratch-in-pytorch.ipynb"	[label=appearsIn];
	"time(0)" -> time	[label=assignedFrom];
	tqdm -> "image-segmentation-from-scratch-in-pytorch.ipynb"	[label=importedBy];
	tqdm -> "tqdm.auto"	[label=importedBy];
	"tqdm.auto" -> "image-segmentation-from-scratch-in-pytorch.ipynb"	[label=importedBy];
	"tqdm(0)" -> "image-segmentation-from-scratch-in-pytorch.ipynb"	[label=appearsIn];
	"tqdm(0)" -> tqdm	[label=assignedFrom];
	random -> "image-segmentation-from-scratch-in-pytorch.ipynb"	[label=importedBy];
	"random(0)" -> "image-segmentation-from-scratch-in-pytorch.ipynb"	[label=appearsIn];
	"random(0)" -> random	[label=assignedFrom];
	collections -> "image-segmentation-from-scratch-in-pytorch.ipynb"	[label=importedBy];
	"collections(0)" -> "image-segmentation-from-scratch-in-pytorch.ipynb"	[label=appearsIn];
	"collections(0)" -> collections	[label=assignedFrom];
	numpy -> "image-segmentation-from-scratch-in-pytorch.ipynb"	[label=importedBy];
	"np(0)" -> "image-segmentation-from-scratch-in-pytorch.ipynb"	[label=appearsIn];
	"np(0)" -> numpy	[label=assignedFrom];
	pandas -> "image-segmentation-from-scratch-in-pytorch.ipynb"	[label=importedBy];
	"pd(0)" -> "image-segmentation-from-scratch-in-pytorch.ipynb"	[label=appearsIn];
	"pd(0)" -> pandas	[label=assignedFrom];
	seaborn -> "image-segmentation-from-scratch-in-pytorch.ipynb"	[label=importedBy];
	"sns(0)" -> "image-segmentation-from-scratch-in-pytorch.ipynb"	[label=appearsIn];
	"sns(0)" -> seaborn	[label=assignedFrom];
	PIL -> "image-segmentation-from-scratch-in-pytorch.ipynb"	[label=importedBy];
	Image -> PIL	[label=importedBy];
	"Image(0)" -> "image-segmentation-from-scratch-in-pytorch.ipynb"	[label=appearsIn];
	"Image(0)" -> Image	[label=assignedFrom];
	functools -> "image-segmentation-from-scratch-in-pytorch.ipynb"	[label=importedBy];
	partial -> functools	[label=importedBy];
	"partial(0)" -> "image-segmentation-from-scratch-in-pytorch.ipynb"	[label=appearsIn];
	"partial(0)" -> partial	[label=assignedFrom];
	"matplotlib.pyplot" -> "image-segmentation-from-scratch-in-pytorch.ipynb"	[label=importedBy];
	"plt(0)" -> "image-segmentation-from-scratch-in-pytorch.ipynb"	[label=appearsIn];
	"plt(0)" -> "matplotlib.pyplot"	[label=assignedFrom];
	"tq(0)" -> "image-segmentation-from-scratch-in-pytorch.ipynb"	[label=appearsIn];
	"tq(0)" -> tqdm	[label=assignedFrom];
	"sklearn.model_selection" -> "image-segmentation-from-scratch-in-pytorch.ipynb"	[label=importedBy];
	StratifiedKFold -> "sklearn.model_selection"	[label=importedBy];
	"StratifiedKFold(0)" -> "image-segmentation-from-scratch-in-pytorch.ipynb"	[label=appearsIn];
	"StratifiedKFold(0)" -> StratifiedKFold	[label=assignedFrom];
	"sklearn.metrics" -> "image-segmentation-from-scratch-in-pytorch.ipynb"	[label=importedBy];
	roc_auc_score -> "sklearn.metrics"	[label=importedBy];
	"roc_auc_score(0)" -> "image-segmentation-from-scratch-in-pytorch.ipynb"	[label=appearsIn];
	"roc_auc_score(0)" -> roc_auc_score	[label=assignedFrom];
	torch -> "image-segmentation-from-scratch-in-pytorch.ipynb"	[label=importedBy];
	"torch(0)" -> "image-segmentation-from-scratch-in-pytorch.ipynb"	[label=appearsIn];
	"torch(0)" -> torch	[label=assignedFrom];
	torchvision -> "image-segmentation-from-scratch-in-pytorch.ipynb"	[label=importedBy];
	"torchvision(0)" -> "image-segmentation-from-scratch-in-pytorch.ipynb"	[label=appearsIn];
	"torchvision(0)" -> torchvision	[label=assignedFrom];
	"torch.nn" -> "image-segmentation-from-scratch-in-pytorch.ipynb"	[label=importedBy];
	"nn(0)" -> "image-segmentation-from-scratch-in-pytorch.ipynb"	[label=appearsIn];
	"nn(0)" -> "torch.nn"	[label=assignedFrom];
	"torch.optim" -> "image-segmentation-from-scratch-in-pytorch.ipynb"	[label=importedBy];
	"optim(0)" -> "image-segmentation-from-scratch-in-pytorch.ipynb"	[label=appearsIn];
	"optim(0)" -> "torch.optim"	[label=assignedFrom];
	"torch.nn.functional" -> "image-segmentation-from-scratch-in-pytorch.ipynb"	[label=importedBy];
	"F(0)" -> "image-segmentation-from-scratch-in-pytorch.ipynb"	[label=appearsIn];
	"F(0)" -> "torch.nn.functional"	[label=assignedFrom];
	lr_scheduler -> "torch.optim"	[label=importedBy];
	"lr_scheduler(0)" -> "image-segmentation-from-scratch-in-pytorch.ipynb"	[label=appearsIn];
	"lr_scheduler(0)" -> lr_scheduler	[label=assignedFrom];
	"torchvision.transforms" -> "image-segmentation-from-scratch-in-pytorch.ipynb"	[label=importedBy];
	"transforms(0)" -> "image-segmentation-from-scratch-in-pytorch.ipynb"	[label=appearsIn];
	"transforms(0)" -> "torchvision.transforms"	[label=assignedFrom];
	"torch.utils.data.sampler" -> "image-segmentation-from-scratch-in-pytorch.ipynb"	[label=importedBy];
	SubsetRandomSampler -> "torch.utils.data.sampler"	[label=importedBy];
	"SubsetRandomSampler(0)" -> "image-segmentation-from-scratch-in-pytorch.ipynb"	[label=appearsIn];
	"SubsetRandomSampler(0)" -> SubsetRandomSampler	[label=assignedFrom];
	"torch.utils.data" -> "image-segmentation-from-scratch-in-pytorch.ipynb"	[label=importedBy];
	TensorDataset -> "torch.utils.data"	[label=importedBy];
	"TensorDataset(0)" -> "image-segmentation-from-scratch-in-pytorch.ipynb"	[label=appearsIn];
	"TensorDataset(0)" -> TensorDataset	[label=assignedFrom];
	DataLoader -> "torch.utils.data"	[label=importedBy];
	"DataLoader(0)" -> "image-segmentation-from-scratch-in-pytorch.ipynb"	[label=appearsIn];
	"DataLoader(0)" -> DataLoader	[label=assignedFrom];
	Dataset -> "torch.utils.data"	[label=importedBy];
	"Dataset(0)" -> "image-segmentation-from-scratch-in-pytorch.ipynb"	[label=appearsIn];
	"Dataset(0)" -> Dataset	[label=assignedFrom];
	"torch.optim.lr_scheduler" -> "image-segmentation-from-scratch-in-pytorch.ipynb"	[label=importedBy];
	StepLR -> "torch.optim.lr_scheduler"	[label=importedBy];
	"StepLR(0)" -> "image-segmentation-from-scratch-in-pytorch.ipynb"	[label=appearsIn];
	"StepLR(0)" -> StepLR	[label=assignedFrom];
	ReduceLROnPlateau -> "torch.optim.lr_scheduler"	[label=importedBy];
	"ReduceLROnPlateau(0)" -> "image-segmentation-from-scratch-in-pytorch.ipynb"	[label=appearsIn];
	"ReduceLROnPlateau(0)" -> ReduceLROnPlateau	[label=assignedFrom];
	albumentations -> "image-segmentation-from-scratch-in-pytorch.ipynb"	[label=importedBy];
	"albu(0)" -> "image-segmentation-from-scratch-in-pytorch.ipynb"	[label=appearsIn];
	"albu(0)" -> albumentations	[label=assignedFrom];
	"plt(0)$0" -> "plt(0)"	[label=use];
	"plt(0)$0" -> "bmh(0)"	[label=use];
	"bmh(0)" -> "image-segmentation-from-scratch-in-pytorch.ipynb"	[label=appearsIn];
	"seed(1)" -> "seed_everything[0]"	[label=_argToVar];
	"random(1)$0" -> "seed(1)"	[label=seed];
	"random(1)$0" -> "random(1)"	[label=seed];
	"os(1)$0" -> "seed(1)"	[label=str];
	"os(1)$0" -> "os(1)"	[label=str];
	"np(1)$0" -> "seed(1)"	[label=seed];
	"np(1)$0" -> "np(1)"	[label=seed];
	"torch(1)$0" -> "seed(1)"	[label=manual_seed];
	"torch(1)$0" -> "torch(1)"	[label=manual_seed];
	"torch(1)$1" -> "seed(1)"	[label=manual_seed];
	"torch(1)$1" -> "torch(1)$0"	[label=manual_seed];
	"torch(1)$2" -> "torch(1)$1"	[label=assignedFrom];
	"torch(1)$2" -> "True(1)"	[label=assignedFrom];
	"x(2)" -> "resize_it[0]"	[label=_argToVar];
	"x(2)$0" -> "x(2)$0"	[label=resize];
	"x(2)$0" -> "cv2(2)"	[label=resize];
	"x(2)$0" -> "525(2)"	[label=resize];
	"x(2)$0" -> "350(2)"	[label=resize];
	"self(4)" -> "__init__[0]"	[label=_argToVar];
	"df(4)" -> "__init__[1]"	[label=_argToVar];
	"datatype(4)" -> "__init__[2]"	[label=_argToVar];
	"img_ids(4)" -> "__init__[3]"	[label=_argToVar];
	"transforms(4)" -> "__init__[4]"	[label=_argToVar];
	"self(4)$0" -> "self(4)"	[label=assignedFrom];
	"self(4)$0" -> "df(4)"	[label=assignedFrom];
	"self(4)$1" -> "self(4)$0"	[label=assignedFrom];
	"self(4)$1" -> "img_paths(4)"	[label=assignedFrom];
	"self(4)$1" -> "/train_images_525/train_images_525(4)"	[label=assignedFrom];
	"self(4)$2" -> "self(4)$1"	[label=assignedFrom];
	"self(4)$2" -> "img_paths(4)"	[label=assignedFrom];
	"self(4)$2" -> "/test_images_525/test_images_525(4)"	[label=assignedFrom];
	"self(4)$3" -> "img_ids(4)"	[label=assignedFrom];
	"self(4)$3" -> "self(4)$2"	[label=assignedFrom];
	"self(4)$4" -> "transforms(4)"	[label=assignedFrom];
	"self(4)$4" -> "self(4)$3"	[label=assignedFrom];
	"self(5)" -> "__getitem__[0]"	[label=_argToVar];
	"idx(5)" -> "__getitem__[1]"	[label=_argToVar];
	"image_name(5)$0" -> "self(5)"	[label=assignedFrom];
	"image_name(5)$0" -> "idx(5)"	[label=assignedFrom];
	"mask(5)$0" -> "self(5)"	[label=make_mask];
	"mask(5)$0" -> "image_name(5)$0"	[label=make_mask];
	"image_path(5)$0" -> "self(5)"	[label=join];
	"image_path(5)$0" -> "image_name(5)$0"	[label=join];
	"image_path(5)$0" -> "os(5)"	[label=join];
	"img(5)$0" -> "image_path(5)$0"	[label=imread];
	"img(5)$0" -> "cv2(5)"	[label=imread];
	"img(5)$1" -> "cv2(5)"	[label=cvtColor];
	"img(5)$1" -> "img(5)$1"	[label=cvtColor];
	"augmented(5)$0" -> "self(5)"	[label=transforms];
	"augmented(5)$0" -> "mask(5)$0"	[label=transforms];
	"augmented(5)$0" -> "img(5)$1"	[label=transforms];
	"img(5)$2" -> "augmented(5)$0"	[label=transpose];
	"img(5)$2" -> "np(5)"	[label=transpose];
	"img(5)$2" -> "image(5)"	[label=transpose];
	"img(5)$2" -> "[<_ast.Constant object at 0x7fd500832be0>, <_ast.Constant object at 0x7fd500832220>, <_ast.Constant object at 0x7fd500832f10>](5)"	[label=transpose];
	"mask(5)$1" -> "augmented(5)$0"	[label=transpose];
	"mask(5)$1" -> "np(5)"	[label=transpose];
	"mask(5)$1" -> "mask(5)$1"	[label=transpose];
	"mask(5)$1" -> "[<_ast.Constant object at 0x7fd500832400>, <_ast.Constant object at 0x7fd500832730>, <_ast.Constant object at 0x7fd500832250>](5)"	[label=transpose];
	"self(6)" -> "__len__[0]"	[label=_argToVar];
	"[<_ast.Constant object at 0x7fd5008325e0>, <_ast.Constant object at 0x7fd5008327c0>, <_ast.Constant object at 0x7fd500832f40>, <_\
ast.Constant object at 0x7fd5008326a0>](0)" -> "image-segmentation-from-scratch-in-pytorch.ipynb"	[label=appearsIn];
	"class_names(0)$0" -> "[<_ast.Constant object at 0x7fd5008325e0>, <_ast.Constant object at 0x7fd5008327c0>, <_ast.Constant object at 0x7fd500832f40>, <_\
ast.Constant object at 0x7fd5008326a0>](0)"	[label=assignedFrom];
	"mask(7)" -> "draw_convex_hull[0]"	[label=_argToVar];
	"mode(7)" -> "draw_convex_hull[1]"	[label=_argToVar];
	"img(7)$0" -> "mask(7)"	[label=zeros];
	"img(7)$0" -> "np(7)"	[label=zeros];
	"contours(7)$0" -> "mask(7)"	[label=findContours];
	"contours(7)$0" -> "cv2(7)"	[label=findContours];
	"hier(7)$0" -> "mask(7)"	[label=findContours];
	"hier(7)$0" -> "cv2(7)"	[label=findContours];
	"c(7)" -> "contours(7)$0"	[label=iteratorOf];
	"x(7)$0" -> "cv2(7)"	[label=boundingRect];
	"x(7)$0" -> "c(7)"	[label=boundingRect];
	"y(7)$0" -> "cv2(7)"	[label=boundingRect];
	"y(7)$0" -> "c(7)"	[label=boundingRect];
	"w(7)$0" -> "cv2(7)"	[label=boundingRect];
	"w(7)$0" -> "c(7)"	[label=boundingRect];
	"h(7)$0" -> "cv2(7)"	[label=boundingRect];
	"h(7)$0" -> "c(7)"	[label=boundingRect];
	"cv2(7)$0" -> "img(7)$0"	[label=rectangle];
	"cv2(7)$0" -> "cv2(7)"	[label=rectangle];
	"cv2(7)$0" -> "x(7)$0"	[label=rectangle];
	"cv2(7)$0" -> "y(7)$0"	[label=rectangle];
	"cv2(7)$0" -> "w(7)$0"	[label=rectangle];
	"cv2(7)$0" -> "h(7)$0"	[label=rectangle];
	"cv2(7)$0" -> "255(7)"	[label=rectangle];
	"cv2(7)$0" -> "1(7)"	[label=rectangle];
	"hull(7)$0" -> "c(7)"	[label=convexHull];
	"hull(7)$0" -> "cv2(7)$0"	[label=convexHull];
	"cv2(7)$1" -> "img(7)$0"	[label=drawContours];
	"cv2(7)$1" -> "cv2(7)$0"	[label=drawContours];
	"cv2(7)$1" -> "255(7)"	[label=drawContours];
	"cv2(7)$1" -> "1(7)"	[label=drawContours];
	"cv2(7)$1" -> "[<_ast.Name object at 0x7fd50080d070>](7)"	[label=drawContours];
	"cv2(7)$1" -> "0(7)"	[label=drawContours];
	"rect(7)$0" -> "c(7)"	[label=minAreaRect];
	"rect(7)$0" -> "cv2(7)$1"	[label=minAreaRect];
	"box(7)$0" -> "cv2(7)$1"	[label=boxPoints];
	"box(7)$0" -> "rect(7)$0"	[label=boxPoints];
	"box(7)$1" -> "np(7)"	[label=int0];
	"box(7)$1" -> "box(7)$1"	[label=int0];
	"cv2(7)$2" -> "img(7)$0"	[label=drawContours];
	"cv2(7)$2" -> "255(7)"	[label=drawContours];
	"cv2(7)$2" -> "1(7)"	[label=drawContours];
	"cv2(7)$2" -> "cv2(7)$1"	[label=drawContours];
	"cv2(7)$2" -> "0(7)"	[label=drawContours];
	"cv2(7)$2" -> "[<_ast.Name object at 0x7fd500999c70>](7)"	[label=drawContours];
	"x(8)" -> "get_img[0]"	[label=_argToVar];
	"folder(8)" -> "get_img[1]"	[label=_argToVar];
	"data_folder(8)$0" -> "folder(8)"	[label=assignedFrom];
	"data_folder(8)$0" -> "img_paths(8)"	[label=assignedFrom];
	"data_folder(8)$0" -> "/(8)"	[label=assignedFrom];
	"image_path(8)$0" -> "x(8)"	[label=join];
	"image_path(8)$0" -> "data_folder(8)$0"	[label=join];
	"image_path(8)$0" -> "os(8)"	[label=join];
	"img(8)$0" -> "image_path(8)$0"	[label=imread];
	"img(8)$0" -> "cv2(8)"	[label=imread];
	"img(8)$1" -> "cv2(8)"	[label=cvtColor];
	"img(8)$1" -> "img(8)$1"	[label=cvtColor];
	"mask_rle(9)" -> "rle_decode[0]"	[label=_argToVar];
	"shape(9)" -> "rle_decode[1]"	[label=_argToVar];
	"s(9)$0" -> "mask_rle(9)"	[label=split];
	"starts(9)$0" -> "s(9)$0"	[label=assignedFrom];
	"starts(9)$0" -> "np(9)"	[label=assignedFrom];
	"starts(9)$0" -> "x(9)"	[label=assignedFrom];
	"starts(9)$0" -> "int(9)"	[label=assignedFrom];
	"starts(9)$0" -> "0(9)"	[label=assignedFrom];
	"starts(9)$0" -> "2(9)"	[label=assignedFrom];
	"starts(9)$0" -> "1(9)"	[label=assignedFrom];
	"lengths(9)$0" -> "s(9)$0"	[label=assignedFrom];
	"lengths(9)$0" -> "np(9)"	[label=assignedFrom];
	"lengths(9)$0" -> "x(9)"	[label=assignedFrom];
	"lengths(9)$0" -> "int(9)"	[label=assignedFrom];
	"lengths(9)$0" -> "0(9)"	[label=assignedFrom];
	"lengths(9)$0" -> "2(9)"	[label=assignedFrom];
	"lengths(9)$0" -> "1(9)"	[label=assignedFrom];
	"starts(9)$1" -> "starts(9)$0"	[label=Sub];
	"starts(9)$1" -> "1(9)"	[label=Sub];
	"ends(9)$0" -> "lengths(9)$0"	[label=Add];
	"ends(9)$0" -> "starts(9)$1"	[label=Add];
	"img(9)$0" -> "shape(9)"	[label=zeros];
	"img(9)$0" -> "np(9)"	[label=zeros];
	"img(9)$0" -> "0(9)"	[label=zeros];
	"img(9)$0" -> "1(9)"	[label=zeros];
	"lo(9)" -> "starts(9)$1"	[label=iteratorOf];
	"lo(9)" -> "ends(9)$0"	[label=iteratorOf];
	"lo(9)" -> "zip(9)"	[label=iteratorOf];
	"hi(9)" -> "starts(9)$1"	[label=iteratorOf];
	"hi(9)" -> "ends(9)$0"	[label=iteratorOf];
	"hi(9)" -> "zip(9)"	[label=iteratorOf];
	"img(9)$1" -> "1(9)"	[label=assignedFrom];
	"img(9)$1" -> "img(9)$0"	[label=assignedFrom];
	"df(10)" -> "make_mask[0]"	[label=_argToVar];
	"image_name(10)" -> "make_mask[1]"	[label=_argToVar];
	"shape(10)" -> "make_mask[2]"	[label=_argToVar];
	"masks(10)$0" -> "shape(10)"	[label=zeros];
	"masks(10)$0" -> "np(10)"	[label=zeros];
	"masks(10)$0" -> "0(10)"	[label=zeros];
	"masks(10)$0" -> "1(10)"	[label=zeros];
	"masks(10)$0" -> "4(10)"	[label=zeros];
	"df(10)$0" -> "df(10)"	[label=assignedFrom];
	"df(10)$0" -> "image_name(10)"	[label=assignedFrom];
	"df(10)$0" -> "df(10)$0"	[label=assignedFrom];
	"df(10)$0" -> "im_id(10)"	[label=assignedFrom];
	"idx(10)" -> "df(10)$0"	[label=iteratorOf];
	"idx(10)" -> "im_id(10)"	[label=iteratorOf];
	"idx(10)" -> "enumerate(10)"	[label=iteratorOf];
	"im_name(10)" -> "df(10)$0"	[label=iteratorOf];
	"im_name(10)" -> "im_id(10)"	[label=iteratorOf];
	"im_name(10)" -> "enumerate(10)"	[label=iteratorOf];
	"classidx(10)" -> "enumerate(10)"	[label=iteratorOf];
	"classidx(10)" -> "[<_ast.Constant object at 0x7fd4c09aa4f0>, <_ast.Constant object at 0x7fd4c09aa7c0>, <_ast.Constant object at 0x7fd4c09aa460>, <_\
ast.Constant object at 0x7fd4c09aa610>](10)"	[label=iteratorOf];
	"classid(10)" -> "enumerate(10)"	[label=iteratorOf];
	"classid(10)" -> "[<_ast.Constant object at 0x7fd4c09aa4f0>, <_ast.Constant object at 0x7fd4c09aa7c0>, <_ast.Constant object at 0x7fd4c09aa460>, <_\
ast.Constant object at 0x7fd4c09aa610>](10)"	[label=iteratorOf];
	"mask(10)$0" -> "im_name(10)"	[label=imread];
	"mask(10)$0" -> "classid(10)"	[label=imread];
	"mask(10)$0" -> "cv2(10)"	[label=imread];
	"mask(10)$0" -> "../input/understanding-clouds-resized/train_masks_525/train_masks_525/(10)"	[label=imread];
	"mask(10)$1" -> "cv2(10)"	[label=resize];
	"mask(10)$1" -> "mask(10)$1"	[label=resize];
	"mask(10)$1" -> "525(10)"	[label=resize];
	"mask(10)$1" -> "350(10)"	[label=resize];
	"masks(10)$1" -> "masks(10)$0"	[label=assignedFrom];
	"masks(10)$1" -> "0(10)"	[label=assignedFrom];
	"masks(10)$1" -> "mask(10)$1"	[label=assignedFrom];
	"masks(10)$2" -> "masks(10)$1"	[label=Div];
	"masks(10)$2" -> "255(10)"	[label=Div];
	"x(11)" -> "to_tensor[0]"	[label=_argToVar];
	"img(12)" -> "mask2rle[0]"	[label=_argToVar];
	"pixels(12)$0" -> "img(12)"	[label=flatten];
	"pixels(12)$1" -> "np(12)"	[label=concatenate];
	"pixels(12)$1" -> "[<_ast.List object at 0x7fd4c04ab4c0>, <_ast.Name object at 0x7fd4c04ab520>, <_ast.List object at 0x7fd4c04ab550>](12)"	[label=concatenate];
	"runs(12)$0" -> "pixels(12)$1"	[label=Add];
	"runs(12)$0" -> "np(12)"	[label=Add];
	"runs(12)$0" -> "1(12)"	[label=Add];
	"runs(12)$0" -> "0(12)"	[label=Add];
	"runs(12)$1" -> "runs(12)$0"	[label=Sub];
	"runs(12)$1" -> "runs(12)$1"	[label=Sub];
	"runs(12)$1" -> "2(12)"	[label=Sub];
	"image(13)" -> "visualize[0]"	[label=_argToVar];
	"mask(13)" -> "visualize[1]"	[label=_argToVar];
	"original_image(13)" -> "visualize[2]"	[label=_argToVar];
	"original_mask(13)" -> "visualize[3]"	[label=_argToVar];
	"fontsize(13)$0" -> "14(13)"	[label=assignedFrom];
	"class_dict(13)$0" -> "0(13)"	[label=assignedFrom];
	"class_dict(13)$0" -> "1(13)"	[label=assignedFrom];
	"class_dict(13)$0" -> "2(13)"	[label=assignedFrom];
	"class_dict(13)$0" -> "3(13)"	[label=assignedFrom];
	"class_dict(13)$0" -> "Fish(13)"	[label=assignedFrom];
	"class_dict(13)$0" -> "Flower(13)"	[label=assignedFrom];
	"class_dict(13)$0" -> "Gravel(13)"	[label=assignedFrom];
	"class_dict(13)$0" -> "Sugar(13)"	[label=assignedFrom];
	"f(13)$0" -> "1(13)"	[label=subplots];
	"f(13)$0" -> "plt(13)"	[label=subplots];
	"f(13)$0" -> "5(13)"	[label=subplots];
	"f(13)$0" -> "24(13)"	[label=subplots];
	"ax(13)$0" -> "1(13)"	[label=subplots];
	"ax(13)$0" -> "plt(13)"	[label=subplots];
	"ax(13)$0" -> "5(13)"	[label=subplots];
	"ax(13)$0" -> "24(13)"	[label=subplots];
	"ax(13)$1" -> "image(13)"	[label=imshow];
	"ax(13)$1" -> "ax(13)$0"	[label=imshow];
	"i(13)" -> "range(13)"	[label=iteratorOf];
	"i(13)" -> "4(13)"	[label=iteratorOf];
	"ax(13)$2" -> "mask(13)"	[label=imshow];
	"ax(13)$2" -> "ax(13)$1"	[label=imshow];
	"ax(13)$2" -> "i(13)"	[label=imshow];
	"ax(13)$3" -> "class_dict(13)$0"	[label=set_title];
	"ax(13)$3" -> "i(13)"	[label=set_title];
	"ax(13)$3" -> "ax(13)$2"	[label=set_title];
	"ax(13)$3" -> "Mask (13)"	[label=set_title];
	"f(13)$1" -> "2(13)"	[label=subplots];
	"f(13)$1" -> "plt(13)"	[label=subplots];
	"f(13)$1" -> "5(13)"	[label=subplots];
	"f(13)$1" -> "24(13)"	[label=subplots];
	"f(13)$1" -> "12(13)"	[label=subplots];
	"ax(13)$4" -> "2(13)"	[label=subplots];
	"ax(13)$4" -> "plt(13)"	[label=subplots];
	"ax(13)$4" -> "5(13)"	[label=subplots];
	"ax(13)$4" -> "24(13)"	[label=subplots];
	"ax(13)$4" -> "12(13)"	[label=subplots];
	"ax(13)$5" -> "original_image(13)"	[label=imshow];
	"ax(13)$5" -> "ax(13)$4"	[label=imshow];
	"ax(13)$6" -> "ax(13)$5"	[label=set_title];
	"ax(13)$6" -> "Original image(13)"	[label=set_title];
	"ax(13)$7" -> "original_mask(13)"	[label=imshow];
	"ax(13)$7" -> "i(13)"	[label=imshow];
	"ax(13)$7" -> "ax(13)$6"	[label=imshow];
	"ax(13)$8" -> "class_dict(13)$0"	[label=set_title];
	"ax(13)$8" -> "i(13)"	[label=set_title];
	"ax(13)$8" -> "ax(13)$7"	[label=set_title];
	"ax(13)$8" -> "Original mask (13)"	[label=set_title];
	"ax(13)$9" -> "image(13)"	[label=imshow];
	"ax(13)$9" -> "ax(13)$8"	[label=imshow];
	"ax(13)$10" -> "ax(13)$9"	[label=set_title];
	"ax(13)$10" -> "Transformed image(13)"	[label=set_title];
	"ax(13)$11" -> "mask(13)"	[label=imshow];
	"ax(13)$11" -> "i(13)"	[label=imshow];
	"ax(13)$11" -> "ax(13)$10"	[label=imshow];
	"ax(13)$12" -> "class_dict(13)$0"	[label=set_title];
	"ax(13)$12" -> "i(13)"	[label=set_title];
	"ax(13)$12" -> "ax(13)$11"	[label=set_title];
	"ax(13)$12" -> "Transformed mask (13)"	[label=set_title];
	"image(14)" -> "visualize_with_raw[0]"	[label=_argToVar];
	"mask(14)" -> "visualize_with_raw[1]"	[label=_argToVar];
	"original_image(14)" -> "visualize_with_raw[2]"	[label=_argToVar];
	"original_mask(14)" -> "visualize_with_raw[3]"	[label=_argToVar];
	"raw_image(14)" -> "visualize_with_raw[4]"	[label=_argToVar];
	"raw_mask(14)" -> "visualize_with_raw[5]"	[label=_argToVar];
	"fontsize(14)$0" -> "14(14)"	[label=assignedFrom];
	"class_dict(14)$0" -> "0(14)"	[label=assignedFrom];
	"class_dict(14)$0" -> "1(14)"	[label=assignedFrom];
	"class_dict(14)$0" -> "2(14)"	[label=assignedFrom];
	"class_dict(14)$0" -> "3(14)"	[label=assignedFrom];
	"class_dict(14)$0" -> "Fish(14)"	[label=assignedFrom];
	"class_dict(14)$0" -> "Flower(14)"	[label=assignedFrom];
	"class_dict(14)$0" -> "Gravel(14)"	[label=assignedFrom];
	"class_dict(14)$0" -> "Sugar(14)"	[label=assignedFrom];
	"f(14)$0" -> "3(14)"	[label=subplots];
	"f(14)$0" -> "plt(14)"	[label=subplots];
	"f(14)$0" -> "5(14)"	[label=subplots];
	"f(14)$0" -> "24(14)"	[label=subplots];
	"f(14)$0" -> "12(14)"	[label=subplots];
	"ax(14)$0" -> "3(14)"	[label=subplots];
	"ax(14)$0" -> "plt(14)"	[label=subplots];
	"ax(14)$0" -> "5(14)"	[label=subplots];
	"ax(14)$0" -> "24(14)"	[label=subplots];
	"ax(14)$0" -> "12(14)"	[label=subplots];
	"ax(14)$1" -> "original_image(14)"	[label=imshow];
	"ax(14)$1" -> "ax(14)$0"	[label=imshow];
	"ax(14)$2" -> "ax(14)$1"	[label=set_title];
	"ax(14)$2" -> "Original image(14)"	[label=set_title];
	"i(14)" -> "range(14)"	[label=iteratorOf];
	"i(14)" -> "4(14)"	[label=iteratorOf];
	"ax(14)$3" -> "original_mask(14)"	[label=imshow];
	"ax(14)$3" -> "ax(14)$2"	[label=imshow];
	"ax(14)$3" -> "i(14)"	[label=imshow];
	"ax(14)$4" -> "class_dict(14)$0"	[label=set_title];
	"ax(14)$4" -> "i(14)"	[label=set_title];
	"ax(14)$4" -> "ax(14)$3"	[label=set_title];
	"ax(14)$4" -> "Original mask (14)"	[label=set_title];
	"ax(14)$5" -> "raw_image(14)"	[label=imshow];
	"ax(14)$5" -> "ax(14)$4"	[label=imshow];
	"ax(14)$6" -> "Original image(14)"	[label=set_title];
	"ax(14)$6" -> "ax(14)$5"	[label=set_title];
	"ax(14)$7" -> "raw_mask(14)"	[label=imshow];
	"ax(14)$7" -> "i(14)"	[label=imshow];
	"ax(14)$7" -> "ax(14)$6"	[label=imshow];
	"ax(14)$8" -> "class_dict(14)$0"	[label=set_title];
	"ax(14)$8" -> "i(14)"	[label=set_title];
	"ax(14)$8" -> "ax(14)$7"	[label=set_title];
	"ax(14)$8" -> "Raw predicted mask (14)"	[label=set_title];
	"ax(14)$9" -> "image(14)"	[label=imshow];
	"ax(14)$9" -> "ax(14)$8"	[label=imshow];
	"ax(14)$10" -> "ax(14)$9"	[label=set_title];
	"ax(14)$10" -> "Transformed image(14)"	[label=set_title];
	"ax(14)$11" -> "mask(14)"	[label=imshow];
	"ax(14)$11" -> "i(14)"	[label=imshow];
	"ax(14)$11" -> "ax(14)$10"	[label=imshow];
	"ax(14)$12" -> "class_dict(14)$0"	[label=set_title];
	"ax(14)$12" -> "i(14)"	[label=set_title];
	"ax(14)$12" -> "ax(14)$11"	[label=set_title];
	"ax(14)$12" -> "Predicted mask with processing (14)"	[label=set_title];
	"image(15)" -> "plot_with_augmentation[0]"	[label=_argToVar];
	"mask(15)" -> "plot_with_augmentation[1]"	[label=_argToVar];
	"augment(15)" -> "plot_with_augmentation[2]"	[label=_argToVar];
	"augmented(15)$0" -> "image(15)"	[label=augment];
	"augmented(15)$0" -> "mask(15)"	[label=augment];
	"image_flipped(15)$0" -> "image(15)"	[label=assignedFrom];
	"image_flipped(15)$0" -> "augmented(15)$0"	[label=assignedFrom];
	"mask_flipped(15)$0" -> "mask(15)"	[label=assignedFrom];
	"mask_flipped(15)$0" -> "augmented(15)$0"	[label=assignedFrom];
	"visualize[251/4]" -> "image(15)"	[label=visualize];
	"visualize[251/4]" -> "mask(15)"	[label=visualize];
	"visualize[251/4]" -> "image_flipped(15)$0"	[label=visualize];
	"visualize[251/4]" -> "mask_flipped(15)$0"	[label=visualize];
	"x(16)" -> "sigmoid[0]"	[label=_argToVar];
	"probability(17)" -> "post_process[0]"	[label=_argToVar];
	"threshold(17)" -> "post_process[1]"	[label=_argToVar];
	"min_size(17)" -> "post_process[2]"	[label=_argToVar];
	"mask(17)$0" -> "probability(17)"	[label=assignedFrom];
	"mask(17)$0" -> "threshold(17)"	[label=assignedFrom];
	"mask(17)$0" -> "cv2(17)"	[label=assignedFrom];
	"mask(17)$0" -> "1(17)"	[label=assignedFrom];
	"mask(17)$1" -> "mask(17)$0"	[label=draw_convex_hull];
	"mask(17)$1" -> "np(17)"	[label=draw_convex_hull];
	"num_component(17)$0" -> "cv2(17)"	[label=connectedComponents];
	"num_component(17)$0" -> "mask(17)$1"	[label=connectedComponents];
	"num_component(17)$0" -> "np(17)"	[label=connectedComponents];
	"component(17)$0" -> "cv2(17)"	[label=connectedComponents];
	"component(17)$0" -> "mask(17)$1"	[label=connectedComponents];
	"component(17)$0" -> "np(17)"	[label=connectedComponents];
	"predictions(17)$0" -> "np(17)"	[label=zeros];
	"predictions(17)$0" -> "350(17)"	[label=zeros];
	"predictions(17)$0" -> "525(17)"	[label=zeros];
	"num(17)$0" -> "0(17)"	[label=assignedFrom];
	"c(17)" -> "1(17)"	[label=iteratorOf];
	"c(17)" -> "num_component(17)$0"	[label=iteratorOf];
	"c(17)" -> "range(17)"	[label=iteratorOf];
	"p(17)$0" -> "component(17)$0"	[label=assignedFrom];
	"p(17)$0" -> "c(17)"	[label=assignedFrom];
	"predictions(17)$1" -> "1(17)"	[label=assignedFrom];
	"predictions(17)$1" -> "predictions(17)$0"	[label=assignedFrom];
	"num(17)$1" -> "1(17)"	[label=Add];
	"num(17)$1" -> "num(17)$0"	[label=Add];
	"train_transform(18)$0" -> "[<_ast.Call object at 0x7fd4d097c700>, <_ast.Call object at 0x7fd4d097c820>, <_ast.Call object at 0x7fd4d097ce20>, <_ast.Call object \
at 0x7fd4d097ceb0>, <_ast.Call object at 0x7fd4d097c070>](18)"	[label=assignedFrom];
	"test_transform(19)$0" -> "[<_ast.Call object at 0x7fd4d0976520>, <_ast.Call object at 0x7fd4d0976610>](19)"	[label=assignedFrom];
	"preprocessing_fn(20)" -> "get_preprocessing[0]"	[label=_argToVar];
	"_transform(20)$0" -> "[<_ast.Call object at 0x7fd4d0976be0>, <_ast.Call object at 0x7fd4d0976cd0>](20)"	[label=assignedFrom];
	"img1(21)" -> "dice[0]"	[label=_argToVar];
	"img2(21)" -> "dice[1]"	[label=_argToVar];
	"img1(21)$0" -> "img1(21)$0"	[label=astype];
	"img1(21)$0" -> "np(21)"	[label=astype];
	"img2(21)$0" -> "np(21)"	[label=astype];
	"img2(21)$0" -> "img2(21)$0"	[label=astype];
	"intersection(21)$0" -> "img1(21)$0"	[label=logical_and];
	"intersection(21)$0" -> "np(21)"	[label=logical_and];
	"intersection(21)$0" -> "img2(21)$0"	[label=logical_and];
	"outputs(22)" -> "dice_no_threshold[0]"	[label=_argToVar];
	"targets(22)" -> "dice_no_threshold[1]"	[label=_argToVar];
	"eps(22)" -> "dice_no_threshold[2]"	[label=_argToVar];
	"threshold(22)" -> "dice_no_threshold[3]"	[label=_argToVar];
	"outputs(22)$0" -> "outputs(22)"	[label=float];
	"outputs(22)$0" -> "threshold(22)"	[label=float];
	"intersection(22)$0" -> "targets(22)"	[label=sum];
	"intersection(22)$0" -> "outputs(22)$0"	[label=sum];
	"intersection(22)$0" -> "torch(22)"	[label=sum];
	"union(22)$0" -> "targets(22)"	[label=Add];
	"union(22)$0" -> "outputs(22)$0"	[label=Add];
	"union(22)$0" -> "torch(22)"	[label=Add];
	"dice(22)$0" -> "eps(22)"	[label=Div];
	"dice(22)$0" -> "intersection(22)$0"	[label=Div];
	"dice(22)$0" -> "union(22)$0"	[label=Div];
	"dice(22)$0" -> "2(22)"	[label=Div];
	"../input/understanding_cloud_organization(0)" -> "image-segmentation-from-scratch-in-pytorch.ipynb"	[label=appearsIn];
	"path(0)$0" -> "../input/understanding_cloud_organization(0)"	[label=assignedFrom];
	"../input/understanding-clouds-resized(0)" -> "image-segmentation-from-scratch-in-pytorch.ipynb"	[label=appearsIn];
	"img_paths(0)$0" -> "../input/understanding-clouds-resized(0)"	[label=assignedFrom];
	"train_on_gpu(0)$0" -> "torch(0)"	[label=is_available];
	"42(0)" -> "image-segmentation-from-scratch-in-pytorch.ipynb"	[label=appearsIn];
	"SEED(0)$0" -> "42(0)"	[label=assignedFrom];
	"0(0)" -> "image-segmentation-from-scratch-in-pytorch.ipynb"	[label=appearsIn];
	"MODEL_NO(0)$0" -> "0(0)"	[label=assignedFrom];
	"10(0)" -> "image-segmentation-from-scratch-in-pytorch.ipynb"	[label=appearsIn];
	"N_FOLDS(0)$0" -> "10(0)"	[label=assignedFrom];
	"seed_everything[356/0]" -> "SEED(0)$0"	[label=seed_everything];
	"os(0)$0" -> "os(0)"	[label=listdir];
	"os(0)$0" -> "path(0)$0"	[label=listdir];
	"train(0)$0" -> "pd(0)"	[label=read_csv];
	"train(0)$0" -> "path(0)$0"	[label=read_csv];
	"train(0)$0" -> "/train.csv(0)"	[label=read_csv];
	"/train.csv(0)" -> "image-segmentation-from-scratch-in-pytorch.ipynb"	[label=appearsIn];
	"train(0)$1" -> "train(0)$0"	[label=apply];
	"train(0)$1" -> "Image_Label(0)"	[label=apply];
	"train(0)$1" -> "x(0)"	[label=apply];
	"train(0)$1" -> "_(0)"	[label=apply];
	"train(0)$1" -> "1(0)"	[label=apply];
	"Image_Label(0)" -> "image-segmentation-from-scratch-in-pytorch.ipynb"	[label=appearsIn];
	"x(0)" -> "image-segmentation-from-scratch-in-pytorch.ipynb"	[label=appearsIn];
	"_(0)" -> "image-segmentation-from-scratch-in-pytorch.ipynb"	[label=appearsIn];
	"1(0)" -> "image-segmentation-from-scratch-in-pytorch.ipynb"	[label=appearsIn];
	"train(0)$2" -> "0(0)"	[label=apply];
	"train(0)$2" -> "train(0)$1"	[label=apply];
	"train(0)$2" -> "Image_Label(0)"	[label=apply];
	"train(0)$2" -> "x(0)"	[label=apply];
	"train(0)$2" -> "_(0)"	[label=apply];
	"sub(0)$0" -> "pd(0)"	[label=read_csv];
	"sub(0)$0" -> "path(0)$0"	[label=read_csv];
	"sub(0)$0" -> "/sample_submission.csv(0)"	[label=read_csv];
	"/sample_submission.csv(0)" -> "image-segmentation-from-scratch-in-pytorch.ipynb"	[label=appearsIn];
	"sub(0)$1" -> "Image_Label(0)"	[label=apply];
	"sub(0)$1" -> "x(0)"	[label=apply];
	"sub(0)$1" -> "_(0)"	[label=apply];
	"sub(0)$1" -> "1(0)"	[label=apply];
	"sub(0)$1" -> "sub(0)$0"	[label=apply];
	"sub(0)$2" -> "0(0)"	[label=apply];
	"sub(0)$2" -> "Image_Label(0)"	[label=apply];
	"sub(0)$2" -> "x(0)"	[label=apply];
	"sub(0)$2" -> "_(0)"	[label=apply];
	"sub(0)$2" -> "sub(0)$1"	[label=apply];
	"id_mask_count(0)$0" -> "0(0)"	[label=rename];
	"id_mask_count(0)$0" -> "Image_Label(0)"	[label=rename];
	"id_mask_count(0)$0" -> "x(0)"	[label=rename];
	"id_mask_count(0)$0" -> "_(0)"	[label=rename];
	"id_mask_count(0)$0" -> "train(0)$2"	[label=rename];
	"id_mask_count(0)$0" -> "EncodedPixels(0)"	[label=rename];
	"id_mask_count(0)$0" -> "False(0)"	[label=rename];
	"id_mask_count(0)$0" -> "index(0)"	[label=rename];
	"id_mask_count(0)$0" -> "img_id(0)"	[label=rename];
	"id_mask_count(0)$0" -> "count(0)"	[label=rename];
	"EncodedPixels(0)" -> "image-segmentation-from-scratch-in-pytorch.ipynb"	[label=appearsIn];
	"False(0)" -> "image-segmentation-from-scratch-in-pytorch.ipynb"	[label=appearsIn];
	"index(0)" -> "image-segmentation-from-scratch-in-pytorch.ipynb"	[label=appearsIn];
	"img_id(0)" -> "image-segmentation-from-scratch-in-pytorch.ipynb"	[label=appearsIn];
	"count(0)" -> "image-segmentation-from-scratch-in-pytorch.ipynb"	[label=appearsIn];
	"ids(0)$0" -> "id_mask_count(0)$0"	[label=assignedFrom];
	"ids(0)$0" -> "img_id(0)"	[label=assignedFrom];
	"[<_ast.Name object at 0x7fd500817af0>, <_ast.Name object at 0x7fd500817b20>](0)" -> "image-segmentation-from-scratch-in-pytorch.ipynb"	[label=appearsIn];
	"li(0)$0" -> "StratifiedKFold(0)"	[label=assignedFrom];
	"li(0)$0" -> "SEED(0)$0"	[label=assignedFrom];
	"li(0)$0" -> "N_FOLDS(0)$0"	[label=assignedFrom];
	"li(0)$0" -> "id_mask_count(0)$0"	[label=assignedFrom];
	"li(0)$0" -> "count(0)"	[label=assignedFrom];
	"li(0)$0" -> "ids(0)$0"	[label=assignedFrom];
	"li(0)$0" -> "[<_ast.Name object at 0x7fd500817af0>, <_ast.Name object at 0x7fd500817b20>](0)"	[label=assignedFrom];
	"li(0)$0" -> "train_index(0)"	[label=assignedFrom];
	"li(0)$0" -> "test_index(0)"	[label=assignedFrom];
	"train_index(0)" -> "image-segmentation-from-scratch-in-pytorch.ipynb"	[label=appearsIn];
	"test_index(0)" -> "image-segmentation-from-scratch-in-pytorch.ipynb"	[label=appearsIn];
	"train_ids(0)$0" -> "0(0)"	[label=assignedFrom];
	"train_ids(0)$0" -> "MODEL_NO(0)$0"	[label=assignedFrom];
	"train_ids(0)$0" -> "1(0)"	[label=assignedFrom];
	"train_ids(0)$0" -> "ids(0)$0"	[label=assignedFrom];
	"train_ids(0)$0" -> "li(0)$0"	[label=assignedFrom];
	"valid_ids(0)$0" -> "0(0)"	[label=assignedFrom];
	"valid_ids(0)$0" -> "MODEL_NO(0)$0"	[label=assignedFrom];
	"valid_ids(0)$0" -> "1(0)"	[label=assignedFrom];
	"valid_ids(0)$0" -> "ids(0)$0"	[label=assignedFrom];
	"valid_ids(0)$0" -> "li(0)$0"	[label=assignedFrom];
	"test_ids(0)$0" -> "0(0)"	[label=assignedFrom];
	"test_ids(0)$0" -> "Image_Label(0)"	[label=assignedFrom];
	"test_ids(0)$0" -> "x(0)"	[label=assignedFrom];
	"test_ids(0)$0" -> "_(0)"	[label=assignedFrom];
	"test_ids(0)$0" -> "sub(0)$2"	[label=assignedFrom];
	"training set   (0)" -> "image-segmentation-from-scratch-in-pytorch.ipynb"	[label=appearsIn];
	"print[385/0]" -> "train_ids(0)$0"	[label=print];
	"print[385/0]" -> "training set   (0)"	[label=print];
	"print[385/0]" -> "5(0)"	[label=print];
	"print[385/0]" -> ".. with length (0)"	[label=print];
	"print[385/0]" -> "len(0)"	[label=print];
	"5(0)" -> "image-segmentation-from-scratch-in-pytorch.ipynb"	[label=appearsIn];
	".. with length (0)" -> "image-segmentation-from-scratch-in-pytorch.ipynb"	[label=appearsIn];
	"len(0)" -> "image-segmentation-from-scratch-in-pytorch.ipynb"	[label=appearsIn];
	"validation set (0)" -> "image-segmentation-from-scratch-in-pytorch.ipynb"	[label=appearsIn];
	"print[386/0]" -> "valid_ids(0)$0"	[label=print];
	"print[386/0]" -> "5(0)"	[label=print];
	"print[386/0]" -> ".. with length (0)"	[label=print];
	"print[386/0]" -> "len(0)"	[label=print];
	"print[386/0]" -> "validation set (0)"	[label=print];
	"testing set    (0)" -> "image-segmentation-from-scratch-in-pytorch.ipynb"	[label=appearsIn];
	"print[387/0]" -> "test_ids(0)$0"	[label=print];
	"print[387/0]" -> "5(0)"	[label=print];
	"print[387/0]" -> ".. with length (0)"	[label=print];
	"print[387/0]" -> "len(0)"	[label=print];
	"print[387/0]" -> "testing set    (0)"	[label=print];
	"2(0)" -> "image-segmentation-from-scratch-in-pytorch.ipynb"	[label=appearsIn];
	"num_workers(0)$0" -> "2(0)"	[label=assignedFrom];
	"8(0)" -> "image-segmentation-from-scratch-in-pytorch.ipynb"	[label=appearsIn];
	"bs(0)$0" -> "8(0)"	[label=assignedFrom];
	"train_dataset(0)$0" -> "train(0)$2"	[label=CloudDataset];
	"train_dataset(0)$0" -> "train_ids(0)$0"	[label=CloudDataset];
	"train_dataset(0)$0" -> "get_training_augmentation(0)"	[label=CloudDataset];
	"get_training_augmentation(0)" -> "image-segmentation-from-scratch-in-pytorch.ipynb"	[label=appearsIn];
	"valid_dataset(0)$0" -> "train(0)$2"	[label=CloudDataset];
	"valid_dataset(0)$0" -> "valid_ids(0)$0"	[label=CloudDataset];
	"valid_dataset(0)$0" -> "valid(0)"	[label=CloudDataset];
	"valid_dataset(0)$0" -> "get_validation_augmentation(0)"	[label=CloudDataset];
	"valid(0)" -> "image-segmentation-from-scratch-in-pytorch.ipynb"	[label=appearsIn];
	"get_validation_augmentation(0)" -> "image-segmentation-from-scratch-in-pytorch.ipynb"	[label=appearsIn];
	"train_loader(0)$0" -> "num_workers(0)$0"	[label=DataLoader];
	"train_loader(0)$0" -> "bs(0)$0"	[label=DataLoader];
	"train_loader(0)$0" -> "train_dataset(0)$0"	[label=DataLoader];
	"train_loader(0)$0" -> "True(0)"	[label=DataLoader];
	"True(0)" -> "image-segmentation-from-scratch-in-pytorch.ipynb"	[label=appearsIn];
	"valid_loader(0)$0" -> "False(0)"	[label=DataLoader];
	"valid_loader(0)$0" -> "num_workers(0)$0"	[label=DataLoader];
	"valid_loader(0)$0" -> "bs(0)$0"	[label=DataLoader];
	"valid_loader(0)$0" -> "valid_dataset(0)$0"	[label=DataLoader];
	"self(24)" -> "__init__[0]"	[label=_argToVar];
	"in_ch(24)" -> "__init__[1]"	[label=_argToVar];
	"out_ch(24)" -> "__init__[2]"	[label=_argToVar];
	"super(24)$0" -> "super(24)"	[label=__init__];
	"self(24)$0" -> "self(24)"	[label=Sequential];
	"self(24)$0" -> "in_ch(24)"	[label=Sequential];
	"self(24)$0" -> "out_ch(24)"	[label=Sequential];
	"self(24)$0" -> "nn(24)"	[label=Sequential];
	"self(24)$0" -> "3(24)"	[label=Sequential];
	"self(24)$0" -> "1(24)"	[label=Sequential];
	"self(24)$0" -> "True(24)"	[label=Sequential];
	"self(25)" -> "forward[0]"	[label=_argToVar];
	"x(25)" -> "forward[1]"	[label=_argToVar];
	"x(25)$0" -> "self(25)"	[label=conv];
	"x(25)$0" -> "x(25)$0"	[label=conv];
	"self(27)" -> "__init__[0]"	[label=_argToVar];
	"in_ch(27)" -> "__init__[1]"	[label=_argToVar];
	"out_ch(27)" -> "__init__[2]"	[label=_argToVar];
	"super(27)$0" -> "super(27)"	[label=__init__];
	"self(27)$0" -> "self(27)"	[label=double_conv];
	"self(27)$0" -> "in_ch(27)"	[label=double_conv];
	"self(27)$0" -> "out_ch(27)"	[label=double_conv];
	"self(28)" -> "forward[0]"	[label=_argToVar];
	"x(28)" -> "forward[1]"	[label=_argToVar];
	"x(28)$0" -> "self(28)"	[label=conv];
	"x(28)$0" -> "x(28)$0"	[label=conv];
	"self(30)" -> "__init__[0]"	[label=_argToVar];
	"in_ch(30)" -> "__init__[1]"	[label=_argToVar];
	"out_ch(30)" -> "__init__[2]"	[label=_argToVar];
	"super(30)$0" -> "super(30)"	[label=__init__];
	"self(30)$0" -> "self(30)"	[label=Sequential];
	"self(30)$0" -> "in_ch(30)"	[label=Sequential];
	"self(30)$0" -> "out_ch(30)"	[label=Sequential];
	"self(30)$0" -> "nn(30)"	[label=Sequential];
	"self(30)$0" -> "2(30)"	[label=Sequential];
	"self(30)$0" -> "double_conv(30)"	[label=Sequential];
	"self(31)" -> "forward[0]"	[label=_argToVar];
	"x(31)" -> "forward[1]"	[label=_argToVar];
	"x(31)$0" -> "self(31)"	[label=mpconv];
	"x(31)$0" -> "x(31)$0"	[label=mpconv];
	"self(33)" -> "__init__[0]"	[label=_argToVar];
	"in_ch(33)" -> "__init__[1]"	[label=_argToVar];
	"out_ch(33)" -> "__init__[2]"	[label=_argToVar];
	"bilinear(33)" -> "__init__[3]"	[label=_argToVar];
	"super(33)$0" -> "super(33)"	[label=__init__];
	"self(33)$0" -> "self(33)"	[label=Upsample];
	"self(33)$0" -> "bilinear(33)"	[label=Upsample];
	"self(33)$0" -> "nn(33)"	[label=Upsample];
	"self(33)$0" -> "2(33)"	[label=Upsample];
	"self(33)$0" -> "True(33)"	[label=Upsample];
	"self(33)$1" -> "in_ch(33)"	[label=ConvTranspose2d];
	"self(33)$1" -> "self(33)$0"	[label=ConvTranspose2d];
	"self(33)$1" -> "nn(33)"	[label=ConvTranspose2d];
	"self(33)$1" -> "2(33)"	[label=ConvTranspose2d];
	"self(33)$2" -> "in_ch(33)"	[label=double_conv];
	"self(33)$2" -> "out_ch(33)"	[label=double_conv];
	"self(33)$2" -> "self(33)$1"	[label=double_conv];
	"self(34)" -> "forward[0]"	[label=_argToVar];
	"x1(34)" -> "forward[1]"	[label=_argToVar];
	"x2(34)" -> "forward[2]"	[label=_argToVar];
	"x1(34)$0" -> "self(34)"	[label=up];
	"x1(34)$0" -> "x1(34)$0"	[label=up];
	"diffY(34)$0" -> "x2(34)"	[label=Sub];
	"diffY(34)$0" -> "x1(34)$0"	[label=Sub];
	"diffY(34)$0" -> "2(34)"	[label=Sub];
	"diffX(34)$0" -> "x2(34)"	[label=Sub];
	"diffX(34)$0" -> "x1(34)$0"	[label=Sub];
	"diffX(34)$0" -> "3(34)"	[label=Sub];
	"x1(34)$1" -> "diffY(34)$0"	[label=pad];
	"x1(34)$1" -> "2(34)"	[label=pad];
	"x1(34)$1" -> "diffX(34)$0"	[label=pad];
	"x1(34)$1" -> "x1(34)$1"	[label=pad];
	"x1(34)$1" -> "F(34)"	[label=pad];
	"x(34)$0" -> "torch(34)"	[label=cat];
	"x(34)$0" -> "[<_ast.Name object at 0x7fd4c059e820>, <_ast.Name object at 0x7fd4c059e850>](34)"	[label=cat];
	"x(34)$0" -> "1(34)"	[label=cat];
	"self(36)" -> "__init__[0]"	[label=_argToVar];
	"in_ch(36)" -> "__init__[1]"	[label=_argToVar];
	"out_ch(36)" -> "__init__[2]"	[label=_argToVar];
	"super(36)$0" -> "super(36)"	[label=__init__];
	"self(36)$0" -> "self(36)"	[label=Conv2d];
	"self(36)$0" -> "in_ch(36)"	[label=Conv2d];
	"self(36)$0" -> "out_ch(36)"	[label=Conv2d];
	"self(36)$0" -> "nn(36)"	[label=Conv2d];
	"self(36)$0" -> "1(36)"	[label=Conv2d];
	"self(37)" -> "forward[0]"	[label=_argToVar];
	"x(37)" -> "forward[1]"	[label=_argToVar];
	"x(37)$0" -> "self(37)"	[label=conv];
	"x(37)$0" -> "x(37)$0"	[label=conv];
	"self(39)" -> "__init__[0]"	[label=_argToVar];
	"n_channels(39)" -> "__init__[1]"	[label=_argToVar];
	"n_classes(39)" -> "__init__[2]"	[label=_argToVar];
	"super(39)$0" -> "super(39)"	[label=__init__];
	"self(39)$0" -> "self(39)"	[label=inconv];
	"self(39)$0" -> "n_channels(39)"	[label=inconv];
	"self(39)$0" -> "64(39)"	[label=inconv];
	"self(39)$1" -> "self(39)$0"	[label=down];
	"self(39)$1" -> "64(39)"	[label=down];
	"self(39)$1" -> "128(39)"	[label=down];
	"self(39)$2" -> "self(39)$1"	[label=down];
	"self(39)$2" -> "128(39)"	[label=down];
	"self(39)$2" -> "256(39)"	[label=down];
	"self(39)$3" -> "self(39)$2"	[label=down];
	"self(39)$3" -> "256(39)"	[label=down];
	"self(39)$3" -> "512(39)"	[label=down];
	"self(39)$4" -> "self(39)$3"	[label=down];
	"self(39)$4" -> "512(39)"	[label=down];
	"self(39)$5" -> "256(39)"	[label=up];
	"self(39)$5" -> "self(39)$4"	[label=up];
	"self(39)$5" -> "1024(39)"	[label=up];
	"self(39)$5" -> "False(39)"	[label=up];
	"self(39)$6" -> "128(39)"	[label=up];
	"self(39)$6" -> "512(39)"	[label=up];
	"self(39)$6" -> "self(39)$5"	[label=up];
	"self(39)$6" -> "False(39)"	[label=up];
	"self(39)$7" -> "64(39)"	[label=up];
	"self(39)$7" -> "256(39)"	[label=up];
	"self(39)$7" -> "False(39)"	[label=up];
	"self(39)$7" -> "self(39)$6"	[label=up];
	"self(39)$8" -> "64(39)"	[label=up];
	"self(39)$8" -> "128(39)"	[label=up];
	"self(39)$8" -> "False(39)"	[label=up];
	"self(39)$8" -> "self(39)$7"	[label=up];
	"self(39)$9" -> "n_classes(39)"	[label=outconv];
	"self(39)$9" -> "64(39)"	[label=outconv];
	"self(39)$9" -> "self(39)$8"	[label=outconv];
	"self(40)" -> "forward[0]"	[label=_argToVar];
	"x(40)" -> "forward[1]"	[label=_argToVar];
	"x1(40)$0" -> "self(40)"	[label=inc];
	"x1(40)$0" -> "x(40)"	[label=inc];
	"x2(40)$0" -> "self(40)"	[label=down1];
	"x2(40)$0" -> "x1(40)$0"	[label=down1];
	"x3(40)$0" -> "self(40)"	[label=down2];
	"x3(40)$0" -> "x2(40)$0"	[label=down2];
	"x4(40)$0" -> "self(40)"	[label=down3];
	"x4(40)$0" -> "x3(40)$0"	[label=down3];
	"x5(40)$0" -> "self(40)"	[label=down4];
	"x5(40)$0" -> "x4(40)$0"	[label=down4];
	"x(40)$0" -> "self(40)"	[label=up1];
	"x(40)$0" -> "x4(40)$0"	[label=up1];
	"x(40)$0" -> "x5(40)$0"	[label=up1];
	"x(40)$1" -> "self(40)"	[label=up2];
	"x(40)$1" -> "x3(40)$0"	[label=up2];
	"x(40)$1" -> "x(40)$1"	[label=up2];
	"x(40)$2" -> "self(40)"	[label=up3];
	"x(40)$2" -> "x2(40)$0"	[label=up3];
	"x(40)$2" -> "x(40)$2"	[label=up3];
	"x(40)$3" -> "self(40)"	[label=up4];
	"x(40)$3" -> "x1(40)$0"	[label=up4];
	"x(40)$3" -> "x(40)$3"	[label=up4];
	"x(40)$4" -> "self(40)"	[label=outc];
	"x(40)$4" -> "x(40)$4"	[label=outc];
	"UNet(0)" -> "image-segmentation-from-scratch-in-pytorch.ipynb"	[label=appearsIn];
	"model(0)$0" -> "UNet(0)"	[label=float];
	"model(0)$0" -> "3(0)"	[label=float];
	"model(0)$0" -> "4(0)"	[label=float];
	"3(0)" -> "image-segmentation-from-scratch-in-pytorch.ipynb"	[label=appearsIn];
	"4(0)" -> "image-segmentation-from-scratch-in-pytorch.ipynb"	[label=appearsIn];
	"model(0)$1" -> "model(0)$0"	[label=cuda];
	"pr(41)" -> "f_score[0]"	[label=_argToVar];
	"gt(41)" -> "f_score[1]"	[label=_argToVar];
	"beta(41)" -> "f_score[2]"	[label=_argToVar];
	"eps(41)" -> "f_score[3]"	[label=_argToVar];
	"threshold(41)" -> "f_score[4]"	[label=_argToVar];
	"activation(41)" -> "f_score[5]"	[label=_argToVar];
	"activation_fn(41)$0" -> "x(41)"	[label=assignedFrom];
	"activation_fn(41)$1" -> "torch(41)"	[label=Sigmoid];
	"activation_fn(41)$2" -> "torch(41)"	[label=Softmax2d];
	"pr(41)$0" -> "pr(41)"	[label=activation_fn];
	"pr(41)$1" -> "threshold(41)"	[label=float];
	"pr(41)$1" -> "pr(41)$0"	[label=float];
	"tp(41)$0" -> "gt(41)"	[label=sum];
	"tp(41)$0" -> "torch(41)"	[label=sum];
	"tp(41)$0" -> "pr(41)$1"	[label=sum];
	"fp(41)$0" -> "torch(41)"	[label=Sub];
	"fp(41)$0" -> "pr(41)$1"	[label=Sub];
	"fp(41)$0" -> "tp(41)$0"	[label=Sub];
	"fn(41)$0" -> "gt(41)"	[label=Sub];
	"fn(41)$0" -> "torch(41)"	[label=Sub];
	"fn(41)$0" -> "tp(41)$0"	[label=Sub];
	"score(41)$0" -> "beta(41)"	[label=Div];
	"score(41)$0" -> "eps(41)"	[label=Div];
	"score(41)$0" -> "tp(41)$0"	[label=Div];
	"score(41)$0" -> "fp(41)$0"	[label=Div];
	"score(41)$0" -> "fn(41)$0"	[label=Div];
	"score(41)$0" -> "1(41)"	[label=Div];
	"score(41)$0" -> "2(41)"	[label=Div];
	"__name__(42)$0" -> "dice_loss(42)"	[label=assignedFrom];
	"self(43)" -> "__init__[0]"	[label=_argToVar];
	"eps(43)" -> "__init__[1]"	[label=_argToVar];
	"activation(43)" -> "__init__[2]"	[label=_argToVar];
	"super(43)$0" -> "super(43)"	[label=__init__];
	"self(43)$0" -> "self(43)"	[label=assignedFrom];
	"self(43)$0" -> "activation(43)"	[label=assignedFrom];
	"self(43)$1" -> "eps(43)"	[label=assignedFrom];
	"self(43)$1" -> "self(43)$0"	[label=assignedFrom];
	"self(44)" -> "forward[0]"	[label=_argToVar];
	"y_pr(44)" -> "forward[1]"	[label=_argToVar];
	"y_gt(44)" -> "forward[2]"	[label=_argToVar];
	"__name__(45)$0" -> "bce_dice_loss(45)"	[label=assignedFrom];
	"self(46)" -> "__init__[0]"	[label=_argToVar];
	"eps(46)" -> "__init__[1]"	[label=_argToVar];
	"activation(46)" -> "__init__[2]"	[label=_argToVar];
	"lambda_dice(46)" -> "__init__[3]"	[label=_argToVar];
	"lambda_bce(46)" -> "__init__[4]"	[label=_argToVar];
	"super(46)$0" -> "eps(46)"	[label=__init__];
	"super(46)$0" -> "activation(46)"	[label=__init__];
	"super(46)$0" -> "super(46)"	[label=__init__];
	"self(46)$0" -> "self(46)"	[label=BCELoss];
	"self(46)$0" -> "nn(46)"	[label=BCELoss];
	"self(46)$0" -> "mean(46)"	[label=BCELoss];
	"self(46)$1" -> "self(46)$0"	[label=BCEWithLogitsLoss];
	"self(46)$1" -> "nn(46)"	[label=BCEWithLogitsLoss];
	"self(46)$1" -> "mean(46)"	[label=BCEWithLogitsLoss];
	"self(46)$2" -> "lambda_dice(46)"	[label=assignedFrom];
	"self(46)$2" -> "self(46)$1"	[label=assignedFrom];
	"self(46)$3" -> "lambda_bce(46)"	[label=assignedFrom];
	"self(46)$3" -> "self(46)$2"	[label=assignedFrom];
	"self(47)" -> "forward[0]"	[label=_argToVar];
	"y_pr(47)" -> "forward[1]"	[label=_argToVar];
	"y_gt(47)" -> "forward[2]"	[label=_argToVar];
	"dice(47)$0" -> "y_pr(47)"	[label=forward];
	"dice(47)$0" -> "y_gt(47)"	[label=forward];
	"dice(47)$0" -> "super(47)"	[label=forward];
	"bce(47)$0" -> "self(47)"	[label=bce];
	"bce(47)$0" -> "y_pr(47)"	[label=bce];
	"bce(47)$0" -> "y_gt(47)"	[label=bce];
	math -> "image-segmentation-from-scratch-in-pytorch.ipynb"	[label=importedBy];
	"math(0)" -> "image-segmentation-from-scratch-in-pytorch.ipynb"	[label=appearsIn];
	"math(0)" -> math	[label=assignedFrom];
	"torch.optim.optimizer" -> "image-segmentation-from-scratch-in-pytorch.ipynb"	[label=importedBy];
	Optimizer -> "torch.optim.optimizer"	[label=importedBy];
	"Optimizer(0)" -> "image-segmentation-from-scratch-in-pytorch.ipynb"	[label=appearsIn];
	"Optimizer(0)" -> Optimizer	[label=assignedFrom];
	required -> "torch.optim.optimizer"	[label=importedBy];
	"required(0)" -> "image-segmentation-from-scratch-in-pytorch.ipynb"	[label=appearsIn];
	"required(0)" -> required	[label=assignedFrom];
	"self(49)" -> "__init__[0]"	[label=_argToVar];
	"params(49)" -> "__init__[1]"	[label=_argToVar];
	"lr(49)" -> "__init__[2]"	[label=_argToVar];
	"betas(49)" -> "__init__[3]"	[label=_argToVar];
	"eps(49)" -> "__init__[4]"	[label=_argToVar];
	"weight_decay(49)" -> "__init__[5]"	[label=_argToVar];
	"defaults(49)$0" -> "lr(49)"	[label=dict];
	"defaults(49)$0" -> "betas(49)"	[label=dict];
	"defaults(49)$0" -> "eps(49)"	[label=dict];
	"defaults(49)$0" -> "weight_decay(49)"	[label=dict];
	"self(49)$0" -> "self(49)"	[label=assignedFrom];
	"self(49)$0" -> "[<_ast.Constant object at 0x7fd4c05a5d90>, <_ast.Constant object at 0x7fd4c05a5dc0>, <_ast.Constant object at 0x7fd4c05a5df0>](49)"	[label=assignedFrom];
	"self(49)$0" -> "ind(49)"	[label=assignedFrom];
	"self(49)$0" -> "range(49)"	[label=assignedFrom];
	"self(49)$0" -> "10(49)"	[label=assignedFrom];
	"super(49)$0" -> "params(49)"	[label=__init__];
	"super(49)$0" -> "defaults(49)$0"	[label=__init__];
	"super(49)$0" -> "super(49)"	[label=__init__];
	"self(50)" -> "__setstate__[0]"	[label=_argToVar];
	"state(50)" -> "__setstate__[1]"	[label=_argToVar];
	"super(50)$0" -> "state(50)"	[label=__setstate__];
	"super(50)$0" -> "super(50)"	[label=__setstate__];
	"self(51)" -> "step[0]"	[label=_argToVar];
	"closure(51)" -> "step[1]"	[label=_argToVar];
	"loss(51)$0" -> "None(51)"	[label=assignedFrom];
	"group(51)" -> "self(51)"	[label=iteratorOf];
	"p(51)" -> "group(51)"	[label=iteratorOf];
	"p(51)" -> "params(51)"	[label=iteratorOf];
	"grad(51)$0" -> "p(51)"	[label=float];
	"p_data_fp32(51)$0" -> "p(51)"	[label=float];
	"state(51)$0" -> "self(51)"	[label=assignedFrom];
	"state(51)$0" -> "p(51)"	[label=assignedFrom];
	"state(51)$1" -> "state(51)$0"	[label=assignedFrom];
	"state(51)$1" -> "0(51)"	[label=assignedFrom];
	"state(51)$2" -> "p_data_fp32(51)$0"	[label=zeros_like];
	"state(51)$2" -> "state(51)$1"	[label=zeros_like];
	"state(51)$2" -> "torch(51)"	[label=zeros_like];
	"state(51)$3" -> "p_data_fp32(51)$0"	[label=zeros_like];
	"state(51)$3" -> "state(51)$2"	[label=zeros_like];
	"state(51)$3" -> "torch(51)"	[label=zeros_like];
	"state(51)$4" -> "p_data_fp32(51)$0"	[label=type_as];
	"state(51)$4" -> "state(51)$3"	[label=type_as];
	"state(51)$4" -> "exp_avg(51)"	[label=type_as];
	"state(51)$5" -> "p_data_fp32(51)$0"	[label=type_as];
	"state(51)$5" -> "state(51)$4"	[label=type_as];
	"state(51)$5" -> "exp_avg_sq(51)"	[label=type_as];
	"exp_avg(51)$0" -> "state(51)$5"	[label=assignedFrom];
	"exp_avg(51)$0" -> "exp_avg(51)$0"	[label=assignedFrom];
	"exp_avg(51)$0" -> "exp_avg_sq(51)$0"	[label=assignedFrom];
	"exp_avg_sq(51)$0" -> "state(51)$5"	[label=assignedFrom];
	"exp_avg_sq(51)$0" -> "exp_avg(51)$0"	[label=assignedFrom];
	"exp_avg_sq(51)$0" -> "exp_avg_sq(51)$0"	[label=assignedFrom];
	"beta1(51)$0" -> "group(51)"	[label=assignedFrom];
	"beta1(51)$0" -> "betas(51)"	[label=assignedFrom];
	"beta2(51)$0" -> "group(51)"	[label=assignedFrom];
	"beta2(51)$0" -> "betas(51)"	[label=assignedFrom];
	"exp_avg_sq(51)$1" -> "grad(51)$0"	[label=addcmul_];
	"exp_avg_sq(51)$1" -> "exp_avg_sq(51)$0"	[label=addcmul_];
	"exp_avg_sq(51)$1" -> "beta2(51)$0"	[label=addcmul_];
	"exp_avg_sq(51)$1" -> "1(51)"	[label=addcmul_];
	"exp_avg(51)$1" -> "grad(51)$0"	[label=add_];
	"exp_avg(51)$1" -> "exp_avg(51)$0"	[label=add_];
	"exp_avg(51)$1" -> "beta1(51)$0"	[label=add_];
	"exp_avg(51)$1" -> "1(51)"	[label=add_];
	"state(51)$6" -> "state(51)$5"	[label=Add];
	"state(51)$6" -> "1(51)"	[label=Add];
	"buffered(51)$0" -> "self(51)"	[label=assignedFrom];
	"buffered(51)$0" -> "state(51)$6"	[label=assignedFrom];
	"buffered(51)$0" -> "int(51)"	[label=assignedFrom];
	"buffered(51)$0" -> "step(51)"	[label=assignedFrom];
	"buffered(51)$0" -> "10(51)"	[label=assignedFrom];
	"N_sma(51)$0" -> "1(51)"	[label=assignedFrom];
	"N_sma(51)$0" -> "buffered(51)$0"	[label=assignedFrom];
	"N_sma(51)$0" -> "2(51)"	[label=assignedFrom];
	"step_size(51)$0" -> "1(51)"	[label=assignedFrom];
	"step_size(51)$0" -> "buffered(51)$0"	[label=assignedFrom];
	"step_size(51)$0" -> "2(51)"	[label=assignedFrom];
	"buffered(51)$1" -> "state(51)$6"	[label=assignedFrom];
	"buffered(51)$1" -> "buffered(51)$0"	[label=assignedFrom];
	"buffered(51)$1" -> "step(51)"	[label=assignedFrom];
	"beta2_t(51)$0" -> "beta2(51)$0"	[label=Pow];
	"beta2_t(51)$0" -> "state(51)$6"	[label=Pow];
	"beta2_t(51)$0" -> "step(51)"	[label=Pow];
	"N_sma_max(51)$0" -> "beta2(51)$0"	[label=Sub];
	"N_sma_max(51)$0" -> "1(51)"	[label=Sub];
	"N_sma_max(51)$0" -> "2(51)"	[label=Sub];
	"N_sma(51)$1" -> "1(51)"	[label=Sub];
	"N_sma(51)$1" -> "state(51)$6"	[label=Sub];
	"N_sma(51)$1" -> "step(51)"	[label=Sub];
	"N_sma(51)$1" -> "2(51)"	[label=Sub];
	"N_sma(51)$1" -> "beta2_t(51)$0"	[label=Sub];
	"N_sma(51)$1" -> "N_sma_max(51)$0"	[label=Sub];
	"buffered(51)$2" -> "buffered(51)$1"	[label=assignedFrom];
	"buffered(51)$2" -> "N_sma(51)$1"	[label=assignedFrom];
	"step_size(51)$1" -> "beta1(51)$0"	[label=Div];
	"step_size(51)$1" -> "1(51)"	[label=Div];
	"step_size(51)$1" -> "state(51)$6"	[label=Div];
	"step_size(51)$1" -> "step(51)"	[label=Div];
	"step_size(51)$1" -> "2(51)"	[label=Div];
	"step_size(51)$1" -> "beta2_t(51)$0"	[label=Div];
	"step_size(51)$1" -> "N_sma_max(51)$0"	[label=Div];
	"step_size(51)$1" -> "N_sma(51)$1"	[label=Div];
	"step_size(51)$1" -> "math(51)"	[label=Div];
	"step_size(51)$1" -> "4(51)"	[label=Div];
	"step_size(51)$2" -> "beta1(51)$0"	[label=Div];
	"step_size(51)$2" -> "1(51)"	[label=Div];
	"step_size(51)$2" -> "state(51)$6"	[label=Div];
	"step_size(51)$2" -> "step(51)"	[label=Div];
	"step_size(51)$2" -> "1.0(51)"	[label=Div];
	"buffered(51)$3" -> "buffered(51)$2"	[label=assignedFrom];
	"buffered(51)$3" -> "step_size(51)$2"	[label=assignedFrom];
	"p_data_fp32(51)$1" -> "group(51)"	[label=add_];
	"p_data_fp32(51)$1" -> "p_data_fp32(51)$0"	[label=add_];
	"p_data_fp32(51)$1" -> "p_data_fp32(51)$1"	[label=add_];
	"p_data_fp32(51)$1" -> "weight_decay(51)"	[label=add_];
	"p_data_fp32(51)$1" -> "lr(51)"	[label=add_];
	"denom(51)$0" -> "group(51)"	[label=add_];
	"denom(51)$0" -> "exp_avg_sq(51)$1"	[label=add_];
	"denom(51)$0" -> "eps(51)"	[label=add_];
	"p_data_fp32(51)$2" -> "group(51)"	[label=addcdiv_];
	"p_data_fp32(51)$2" -> "exp_avg(51)$1"	[label=addcdiv_];
	"p_data_fp32(51)$2" -> "step_size(51)$2"	[label=addcdiv_];
	"p_data_fp32(51)$2" -> "p_data_fp32(51)$1"	[label=addcdiv_];
	"p_data_fp32(51)$2" -> "lr(51)"	[label=addcdiv_];
	"p_data_fp32(51)$2" -> "denom(51)$0"	[label=addcdiv_];
	"p_data_fp32(51)$3" -> "group(51)"	[label=add_];
	"p_data_fp32(51)$3" -> "exp_avg(51)$1"	[label=add_];
	"p_data_fp32(51)$3" -> "step_size(51)$2"	[label=add_];
	"p_data_fp32(51)$3" -> "lr(51)"	[label=add_];
	"p_data_fp32(51)$3" -> "p_data_fp32(51)$2"	[label=add_];
	"p(51)$0" -> "p(51)"	[label=copy_];
	"p(51)$0" -> "p_data_fp32(51)$3"	[label=copy_];
	"1.0(0)" -> "image-segmentation-from-scratch-in-pytorch.ipynb"	[label=appearsIn];
	"criterion(0)$0" -> "1.0(0)"	[label=BCEDiceLoss];
	"criterion(0)$0" -> "None(0)"	[label=BCEDiceLoss];
	"None(0)" -> "image-segmentation-from-scratch-in-pytorch.ipynb"	[label=appearsIn];
	"optimizer(0)$0" -> "model(0)$1"	[label=RAdam];
	"optimizer(0)$0" -> "0.005(0)"	[label=RAdam];
	"0.005(0)" -> "image-segmentation-from-scratch-in-pytorch.ipynb"	[label=appearsIn];
	"param_group(0)" -> "image-segmentation-from-scratch-in-pytorch.ipynb"	[label=appearsIn];
	"current_lr(0)$0" -> "0(0)"	[label=assignedFrom];
	"current_lr(0)$0" -> "optimizer(0)$0"	[label=assignedFrom];
	"current_lr(0)$0" -> "param_group(0)"	[label=assignedFrom];
	"current_lr(0)$0" -> "lr(0)"	[label=assignedFrom];
	"lr(0)" -> "image-segmentation-from-scratch-in-pytorch.ipynb"	[label=appearsIn];
	"scheduler(0)$0" -> "torch(0)"	[label=ReduceLROnPlateau];
	"scheduler(0)$0" -> "2(0)"	[label=ReduceLROnPlateau];
	"scheduler(0)$0" -> "optimizer(0)$0"	[label=ReduceLROnPlateau];
	"scheduler(0)$0" -> "0.2(0)"	[label=ReduceLROnPlateau];
	"0.2(0)" -> "image-segmentation-from-scratch-in-pytorch.ipynb"	[label=appearsIn];
	"32(0)" -> "image-segmentation-from-scratch-in-pytorch.ipynb"	[label=appearsIn];
	"n_epochs(0)$0" -> "32(0)"	[label=assignedFrom];
	"[](0)" -> "image-segmentation-from-scratch-in-pytorch.ipynb"	[label=appearsIn];
	"train_loss_list(0)$0" -> "[](0)"	[label=assignedFrom];
	"valid_loss_list(0)$0" -> "[](0)"	[label=assignedFrom];
	"dice_score_list(0)$0" -> "[](0)"	[label=assignedFrom];
	"lr_rate_list(0)$0" -> "[](0)"	[label=assignedFrom];
	"valid_loss_min(0)$0" -> "np(0)"	[label=assignedFrom];
	"range(0)" -> "image-segmentation-from-scratch-in-pytorch.ipynb"	[label=appearsIn];
	"epoch(0)" -> "image-segmentation-from-scratch-in-pytorch.ipynb"	[label=appearsIn];
	"epoch(0)" -> "1(0)"	[label=iteratorOf];
	"epoch(0)" -> "n_epochs(0)$0"	[label=iteratorOf];
	"epoch(0)" -> "range(0)"	[label=iteratorOf];
	"0.0(0)" -> "image-segmentation-from-scratch-in-pytorch.ipynb"	[label=appearsIn];
	"train_loss(0)$0" -> "0.0(0)"	[label=assignedFrom];
	"valid_loss(0)$0" -> "0.0(0)"	[label=assignedFrom];
	"dice_score(0)$0" -> "0.0(0)"	[label=assignedFrom];
	"model(0)$2" -> "model(0)$1"	[label=train];
	"bar(0)$0" -> "train_loader(0)$0"	[label=tq];
	"bar(0)$0" -> "0.0(0)"	[label=tq];
	"bar(0)$0" -> "train_loss(0)$0"	[label=tq];
	"data(0)" -> "image-segmentation-from-scratch-in-pytorch.ipynb"	[label=appearsIn];
	"data(0)" -> "bar(0)$0"	[label=iteratorOf];
	"target(0)" -> "image-segmentation-from-scratch-in-pytorch.ipynb"	[label=appearsIn];
	"target(0)" -> "bar(0)$0"	[label=iteratorOf];
	"data(0)$0" -> "data(0)"	[label=assignedFrom];
	"data(0)$0" -> "target(0)$0"	[label=assignedFrom];
	"data(0)$0" -> "bar(0)$2"	[label=iteratorOf];
	"target(0)$0" -> "data(0)"	[label=assignedFrom];
	"target(0)$0" -> "target(0)$0"	[label=assignedFrom];
	"target(0)$0" -> "bar(0)$2"	[label=iteratorOf];
	"bar(0)$2" -> "valid_loader(0)$0"	[label=tq];
	"bar(0)$2" -> "0.0(0)"	[label=tq];
	"bar(0)$2" -> "valid_loss(0)$0"	[label=tq];
	"bar(0)$2" -> "dice_score(0)$0"	[label=tq];
	"optimizer(0)$1" -> "optimizer(0)$0"	[label=zero_grad];
	"output(0)$0" -> "data(0)$0"	[label=model];
	"loss(0)$0" -> "target(0)$0"	[label=criterion];
	"loss(0)$0" -> "output(0)$0"	[label=criterion];
	"loss(0)$1" -> "loss(0)$0"	[label=backward];
	"optimizer(0)$2" -> "optimizer(0)$1"	[label=step];
	"train_loss(0)$1" -> "0(0)"	[label=Add];
	"train_loss(0)$1" -> "train_loss(0)$0"	[label=Add];
	"train_loss(0)$1" -> "data(0)$0"	[label=Add];
	"train_loss(0)$1" -> "loss(0)$1"	[label=Add];
	"bar(0)$1" -> "bar(0)$0"	[label=set_postfix];
	"model(0)$3" -> "model(0)$2"	[label=eval];
	"data(0)$1" -> "tq(0)"	[label=iteratorOf];
	"data(0)$1" -> "valid_loader(0)$0"	[label=iteratorOf];
	"data(0)$1" -> "data(0)$0"	[label=assignedFrom];
	"data(0)$1" -> "target(0)$1"	[label=assignedFrom];
	"target(0)$1" -> "tq(0)"	[label=iteratorOf];
	"target(0)$1" -> "valid_loader(0)$0"	[label=iteratorOf];
	"target(0)$1" -> "data(0)$0"	[label=assignedFrom];
	"target(0)$1" -> "target(0)$1"	[label=assignedFrom];
	"output(0)$1" -> "data(0)$1"	[label=model];
	"loss(0)$2" -> "target(0)$1"	[label=criterion];
	"loss(0)$2" -> "output(0)$1"	[label=criterion];
	"valid_loss(0)$1" -> "0(0)"	[label=Add];
	"valid_loss(0)$1" -> "valid_loss(0)$0"	[label=Add];
	"valid_loss(0)$1" -> "data(0)$1"	[label=Add];
	"valid_loss(0)$1" -> "loss(0)$2"	[label=Add];
	"dice_no_threshold(0)" -> "image-segmentation-from-scratch-in-pytorch.ipynb"	[label=appearsIn];
	"dice_cof(0)$0" -> "target(0)$1"	[label=item];
	"dice_cof(0)$0" -> "output(0)$1"	[label=item];
	"dice_cof(0)$0" -> "dice_no_threshold(0)"	[label=item];
	"dice_score(0)$1" -> "0(0)"	[label=Add];
	"dice_score(0)$1" -> "dice_score(0)$0"	[label=Add];
	"dice_score(0)$1" -> "data(0)$1"	[label=Add];
	"dice_score(0)$1" -> "dice_cof(0)$0"	[label=Add];
	"bar(0)$3" -> "bar(0)$2"	[label=set_postfix];
	"train_loss(0)$2" -> "len(0)"	[label=Div];
	"train_loss(0)$2" -> "train_loader(0)$0"	[label=Div];
	"train_loss(0)$2" -> "train_loss(0)$1"	[label=Div];
	"valid_loss(0)$2" -> "len(0)"	[label=Div];
	"valid_loss(0)$2" -> "valid_loader(0)$0"	[label=Div];
	"valid_loss(0)$2" -> "valid_loss(0)$1"	[label=Div];
	"dice_score(0)$2" -> "len(0)"	[label=Div];
	"dice_score(0)$2" -> "valid_loader(0)$0"	[label=Div];
	"dice_score(0)$2" -> "dice_score(0)$1"	[label=Div];
	"train_loss_list(0)$1" -> "train_loss_list(0)$0"	[label=append];
	"train_loss_list(0)$1" -> "train_loss(0)$2"	[label=append];
	"valid_loss_list(0)$1" -> "valid_loss_list(0)$0"	[label=append];
	"valid_loss_list(0)$1" -> "valid_loss(0)$2"	[label=append];
	"dice_score_list(0)$1" -> "dice_score_list(0)$0"	[label=append];
	"dice_score_list(0)$1" -> "dice_score(0)$2"	[label=append];
	"lr_rate_list(0)$1" -> "param_group(0)"	[label=append];
	"lr_rate_list(0)$1" -> "lr(0)"	[label=append];
	"lr_rate_list(0)$1" -> "lr_rate_list(0)$0"	[label=append];
	"lr_rate_list(0)$1" -> "optimizer(0)$2"	[label=append];
	"Epoch: {}  Training Loss: {:.6f}  Validation Loss: {:.6f} Dice Score: {:.6f}(0)" -> "image-segmentation-from-scratch-in-pytorch.ipynb"	[label=appearsIn];
	"print[739/4]" -> "epoch(0)"	[label=print];
	"print[739/4]" -> "train_loss(0)$2"	[label=print];
	"print[739/4]" -> "valid_loss(0)$2"	[label=print];
	"print[739/4]" -> "dice_score(0)$2"	[label=print];
	"print[739/4]" -> "Epoch: {}  Training Loss: {:.6f}  Validation Loss: {:.6f} Dice Score: {:.6f}(0)"	[label=print];
	"Validation loss decreased ({:.6f} --> {:.6f}).  Saving model ...(0)" -> "image-segmentation-from-scratch-in-pytorch.ipynb"	[label=appearsIn];
	"print[744/8]" -> "valid_loss_min(0)$0"	[label=print];
	"print[744/8]" -> "valid_loss(0)$2"	[label=print];
	"print[744/8]" -> "Validation loss decreased ({:.6f} --> {:.6f}).  Saving model ...(0)"	[label=print];
	"torch(0)$0" -> "torch(0)"	[label=save];
	"torch(0)$0" -> "model(0)$3"	[label=save];
	"torch(0)$0" -> "model_cifar.pt(0)"	[label=save];
	"model_cifar.pt(0)" -> "image-segmentation-from-scratch-in-pytorch.ipynb"	[label=appearsIn];
	"valid_loss_min(0)$1" -> "valid_loss(0)$2"	[label=assignedFrom];
	"scheduler(0)$1" -> "scheduler(0)$0"	[label=step];
	"scheduler(0)$1" -> "valid_loss(0)$2"	[label=step];
	"plt(0)$1" -> "plt(0)$0"	[label=figure];
	"plt(0)$2" -> "0(0)"	[label=plot];
	"plt(0)$2" -> "lr_rate_list(0)$1"	[label=plot];
	"plt(0)$2" -> "plt(0)$1"	[label=plot];
	"plt(0)$2" -> "i(0)"	[label=plot];
	"i(0)" -> "image-segmentation-from-scratch-in-pytorch.ipynb"	[label=appearsIn];
	"i(0)" -> "len(0)"	[label=iteratorOf];
	"i(0)" -> "valid_loader(0)$0"	[label=iteratorOf];
	"i(0)" -> "4(0)"	[label=iteratorOf];
	"i(0)" -> "range(0)"	[label=iteratorOf];
	"i(0)" -> "valid_masks(0)$1"	[label=iteratorOf];
	"i(0)" -> "probabilities(0)$1"	[label=iteratorOf];
	"i(0)" -> "class_id(0)"	[label=iteratorOf];
	"i(0)" -> "masks(0)$1"	[label=iteratorOf];
	"i(0)" -> "zip(0)"	[label=iteratorOf];
	"i(0)" -> "enumerate(0)"	[label=iteratorOf];
	"i(0)" -> "output(0)$5"	[label=iteratorOf];
	"valid_masks(0)$1" -> "valid_masks(0)$0"	[label=append];
	"valid_masks(0)$1" -> "m(0)"	[label=append];
	"valid_masks(0)$1" -> "resize_it(0)"	[label=append];
	"probabilities(0)$1" -> "probabilities(0)$0"	[label=resize_it];
	"probabilities(0)$1" -> "probability(0)"	[label=resize_it];
	"class_id(0)" -> "image-segmentation-from-scratch-in-pytorch.ipynb"	[label=appearsIn];
	"class_id(0)" -> "4(0)"	[label=iteratorOf];
	"class_id(0)" -> "range(0)"	[label=iteratorOf];
	"masks(0)$1" -> "masks(0)$0"	[label=append];
	"masks(0)$1" -> "predict(0)$0"	[label=append];
	"zip(0)" -> "image-segmentation-from-scratch-in-pytorch.ipynb"	[label=appearsIn];
	"enumerate(0)" -> "image-segmentation-from-scratch-in-pytorch.ipynb"	[label=appearsIn];
	"output(0)$5" -> "data(0)$4"	[label=model];
	"plt(0)$3" -> "plt(0)$2"	[label=ylabel];
	"plt(0)$3" -> "learing rate during training(0)"	[label=ylabel];
	"learing rate during training(0)" -> "image-segmentation-from-scratch-in-pytorch.ipynb"	[label=appearsIn];
	"plt(0)$4" -> "plt(0)$3"	[label=show];
	"plt(0)$5" -> "plt(0)$4"	[label=figure];
	"plt(0)$6" -> "train_loss_list(0)$1"	[label=plot];
	"plt(0)$6" -> "plt(0)$5"	[label=plot];
	"plt(0)$7" -> "valid_loss_list(0)$1"	[label=plot];
	"plt(0)$7" -> "plt(0)$6"	[label=plot];
	"plt(0)$8" -> "loss(0)$2"	[label=ylabel];
	"plt(0)$8" -> "plt(0)$7"	[label=ylabel];
	"plt(0)$9" -> "plt(0)$8"	[label=legend];
	"plt(0)$10" -> "plt(0)$9"	[label=show];
	"plt(0)$11" -> "plt(0)$10"	[label=figure];
	"plt(0)$12" -> "dice_score_list(0)$1"	[label=plot];
	"plt(0)$12" -> "plt(0)$11"	[label=plot];
	"plt(0)$13" -> "plt(0)$12"	[label=ylabel];
	"plt(0)$13" -> "Dice score(0)"	[label=ylabel];
	"Dice score(0)" -> "image-segmentation-from-scratch-in-pytorch.ipynb"	[label=appearsIn];
	"plt(0)$14" -> "plt(0)$13"	[label=show];
	"model(0)$4" -> "model(0)$3"	[label=load_state_dict];
	"model(0)$4" -> "torch(0)$0"	[label=load_state_dict];
	"model(0)$4" -> "model_cifar.pt(0)"	[label=load_state_dict];
	"model(0)$5" -> "model(0)$4"	[label=eval];
	"valid_masks(0)$0" -> "[](0)"	[label=assignedFrom];
	"count(0)$0" -> "0(0)"	[label=assignedFrom];
	"tr(0)$0" -> "valid_ids(0)$0"	[label=min];
	"tr(0)$0" -> "len(0)"	[label=min];
	"tr(0)$0" -> "4(0)"	[label=min];
	"tr(0)$0" -> "2000(0)"	[label=min];
	"2000(0)" -> "image-segmentation-from-scratch-in-pytorch.ipynb"	[label=appearsIn];
	"probabilities(0)$0" -> "np(0)"	[label=zeros];
	"probabilities(0)$0" -> "tr(0)$0"	[label=zeros];
	"probabilities(0)$0" -> "350(0)"	[label=zeros];
	"probabilities(0)$0" -> "525(0)"	[label=zeros];
	"350(0)" -> "image-segmentation-from-scratch-in-pytorch.ipynb"	[label=appearsIn];
	"525(0)" -> "image-segmentation-from-scratch-in-pytorch.ipynb"	[label=appearsIn];
	"data(0)$2" -> "valid_loader(0)$0"	[label=iteratorOf];
	"data(0)$2" -> "data(0)$1"	[label=cuda];
	"data(0)$2" -> "enumerate(0)"	[label=iteratorOf];
	"target(0)$2" -> "tq(0)"	[label=iteratorOf];
	"target(0)$2" -> "valid_loader(0)$0"	[label=iteratorOf];
	"target(0)$2" -> "target(0)$1"	[label=numpy];
	"target(0)$2" -> "enumerate(0)"	[label=iteratorOf];
	"target(0)$2" -> "test_loader(0)$0"	[label=iteratorOf];
	"test_loader(0)$0" -> "False(0)"	[label=DataLoader];
	"test_loader(0)$0" -> "2(0)"	[label=DataLoader];
	"test_loader(0)$0" -> "4(0)"	[label=DataLoader];
	"test_loader(0)$0" -> "test_dataset(0)$0"	[label=DataLoader];
	"outpu(0)$0" -> "model(0)$5"	[label=numpy];
	"outpu(0)$0" -> "data(0)$2"	[label=numpy];
	"p(0)" -> "image-segmentation-from-scratch-in-pytorch.ipynb"	[label=appearsIn];
	"p(0)" -> "0(0)"	[label=iteratorOf];
	"p(0)" -> "range(0)"	[label=iteratorOf];
	"p(0)" -> "data(0)$2"	[label=iteratorOf];
	"output(0)$2" -> "target(0)$2"	[label=assignedFrom];
	"output(0)$2" -> "outpu(0)$0"	[label=assignedFrom];
	"output(0)$2" -> "p(0)"	[label=assignedFrom];
	"mask(0)$0" -> "target(0)$2"	[label=assignedFrom];
	"mask(0)$0" -> "outpu(0)$0"	[label=assignedFrom];
	"mask(0)$0" -> "p(0)"	[label=assignedFrom];
	"m(0)" -> "image-segmentation-from-scratch-in-pytorch.ipynb"	[label=appearsIn];
	"m(0)" -> "mask(0)$0"	[label=iteratorOf];
	"resize_it(0)" -> "image-segmentation-from-scratch-in-pytorch.ipynb"	[label=appearsIn];
	"probability(0)" -> "image-segmentation-from-scratch-in-pytorch.ipynb"	[label=appearsIn];
	"probability(0)" -> "output(0)$2"	[label=iteratorOf];
	"count(0)$1" -> "1(0)"	[label=Add];
	"count(0)$1" -> "count(0)$0"	[label=Add];
	"print[790/4]" -> "class_id(0)"	[label=print];
	"attempts(0)$0" -> "[](0)"	[label=assignedFrom];
	"t(0)" -> "image-segmentation-from-scratch-in-pytorch.ipynb"	[label=appearsIn];
	"t(0)" -> "0(0)"	[label=iteratorOf];
	"t(0)" -> "5(0)"	[label=iteratorOf];
	"t(0)" -> "range(0)"	[label=iteratorOf];
	"t(0)" -> "100(0)"	[label=iteratorOf];
	"100(0)" -> "image-segmentation-from-scratch-in-pytorch.ipynb"	[label=appearsIn];
	"t(0)$0" -> "t(0)"	[label=Div];
	"t(0)$0" -> "100(0)"	[label=Div];
	"[<_ast.Constant object at 0x7fd50084e370>, <_ast.Constant object at 0x7fd50084e3a0>, <_ast.Constant object at 0x7fd50084e3d0>, <_\
ast.Constant object at 0x7fd50084e400>, <_ast.Constant object at 0x7fd50084e430>, <_ast.Constant object at 0x7fd50084e460>](0)" -> "image-segmentation-from-scratch-in-pytorch.ipynb"	[label=appearsIn];
	"ms(0)" -> "image-segmentation-from-scratch-in-pytorch.ipynb"	[label=appearsIn];
	"ms(0)" -> "[<_ast.Constant object at 0x7fd50084e370>, <_ast.Constant object at 0x7fd50084e3a0>, <_ast.Constant object at 0x7fd50084e3d0>, <_\
ast.Constant object at 0x7fd50084e400>, <_ast.Constant object at 0x7fd50084e430>, <_ast.Constant object at 0x7fd50084e460>](0)"	[label=iteratorOf];
	"masks(0)$0" -> "[](0)"	[label=assignedFrom];
	"d(0)$0" -> "[](0)"	[label=assignedFrom];
	"probability(0)$0" -> "i(0)"	[label=assignedFrom];
	"probability(0)$0" -> "probabilities(0)$1"	[label=assignedFrom];
	"predict(0)$0" -> "t(0)$0"	[label=post_process];
	"predict(0)$0" -> "ms(0)"	[label=post_process];
	"predict(0)$0" -> "probability(0)$0"	[label=post_process];
	"num_predict(0)$0" -> "t(0)$0"	[label=post_process];
	"num_predict(0)$0" -> "ms(0)"	[label=post_process];
	"num_predict(0)$0" -> "probability(0)$0"	[label=post_process];
	"j(0)" -> "image-segmentation-from-scratch-in-pytorch.ipynb"	[label=appearsIn];
	"j(0)" -> "4(0)"	[label=iteratorOf];
	"j(0)" -> "range(0)"	[label=iteratorOf];
	"j(0)" -> "valid_masks(0)$1"	[label=iteratorOf];
	"j(0)" -> "class_id(0)"	[label=iteratorOf];
	"j(0)" -> "masks(0)$1"	[label=iteratorOf];
	"j(0)" -> "zip(0)"	[label=iteratorOf];
	"d(0)$1" -> "1(0)"	[label=append];
	"d(0)$1" -> "d(0)$0"	[label=append];
	"d(0)$2" -> "i(0)"	[label=append];
	"d(0)$2" -> "j(0)"	[label=append];
	"d(0)$2" -> "d(0)$1"	[label=append];
	"d(0)$2" -> "dice(0)"	[label=append];
	"dice(0)" -> "image-segmentation-from-scratch-in-pytorch.ipynb"	[label=appearsIn];
	"attempts(0)$1" -> "np(0)"	[label=append];
	"attempts(0)$1" -> "attempts(0)$0"	[label=append];
	"attempts(0)$1" -> "t(0)$0"	[label=append];
	"attempts(0)$1" -> "ms(0)"	[label=append];
	"attempts(0)$1" -> "d(0)$2"	[label=append];
	"attempts_df(0)$0" -> "pd(0)"	[label=DataFrame];
	"attempts_df(0)$0" -> "attempts(0)$1"	[label=DataFrame];
	"attempts_df(0)$0" -> "[<_ast.Constant object at 0x7fd4c09a4730>, <_ast.Constant object at 0x7fd4c09a4760>, <_ast.Constant object at 0x7fd4c09a4790>](0)"	[label=DataFrame];
	"[<_ast.Constant object at 0x7fd4c09a4730>, <_ast.Constant object at 0x7fd4c09a4760>, <_ast.Constant object at 0x7fd4c09a4790>](0)" -> "image-segmentation-from-scratch-in-pytorch.ipynb"	[label=appearsIn];
	"attempts_df(0)$1" -> "False(0)"	[label=sort_values];
	"attempts_df(0)$1" -> "dice(0)"	[label=sort_values];
	"attempts_df(0)$1" -> "attempts_df(0)$0"	[label=sort_values];
	"print[809/4]" -> "attempts_df(0)$1"	[label=print];
	"best_threshold(0)$0" -> "0(0)"	[label=assignedFrom];
	"best_threshold(0)$0" -> "attempts_df(0)$1"	[label=assignedFrom];
	"best_threshold(0)$0" -> "threshold(0)"	[label=assignedFrom];
	"threshold(0)" -> "image-segmentation-from-scratch-in-pytorch.ipynb"	[label=appearsIn];
	"best_size(0)$0" -> "0(0)"	[label=assignedFrom];
	"best_size(0)$0" -> "attempts_df(0)$1"	[label=assignedFrom];
	"best_size(0)$0" -> "size(0)"	[label=assignedFrom];
	"size(0)" -> "image-segmentation-from-scratch-in-pytorch.ipynb"	[label=appearsIn];
	"class_params(0)" -> "image-segmentation-from-scratch-in-pytorch.ipynb"	[label=appearsIn];
	"class_params(0)$0" -> "best_threshold(0)$0"	[label=assignedFrom];
	"class_params(0)$0" -> "best_size(0)$0"	[label=assignedFrom];
	"class_params(0)$0" -> "class_params(0)"	[label=assignedFrom];
	"gc(0)$0" -> "gc(0)"	[label=collect];
	"attempts_df(0)$2" -> "pd(0)"	[label=DataFrame];
	"attempts_df(0)$2" -> "attempts(0)$1"	[label=DataFrame];
	"attempts_df(0)$2" -> "[<_ast.Constant object at 0x7fd4c09bf580>, <_ast.Constant object at 0x7fd4c09bf5b0>, <_ast.Constant object at 0x7fd4c09bf5e0>](0)"	[label=DataFrame];
	"[<_ast.Constant object at 0x7fd4c09bf580>, <_ast.Constant object at 0x7fd4c09bf5b0>, <_ast.Constant object at 0x7fd4c09bf5e0>](0)" -> "image-segmentation-from-scratch-in-pytorch.ipynb"	[label=appearsIn];
	"print[818/0]" -> "class_params(0)$0"	[label=print];
	"attempts_df(0)$3" -> "attempts_df(0)$2"	[label=max];
	"attempts_df(0)$4" -> "attempts_df(0)$3"	[label=max];
	"attempts_df(0)$5" -> "False(0)"	[label=sort_values];
	"attempts_df(0)$5" -> "dice(0)"	[label=sort_values];
	"attempts_df(0)$5" -> "attempts_df(0)$4"	[label=sort_values];
	"attempts_df(0)$6" -> "10(0)"	[label=head];
	"attempts_df(0)$6" -> "attempts_df(0)$5"	[label=head];
	"sns(0)$0" -> "sns(0)"	[label=lineplot];
	"plt(0)$15" -> "plt(0)$14"	[label=title];
	"plt(0)$15" -> "Threshold and min size vs dice(0)"	[label=title];
	"Threshold and min size vs dice(0)" -> "image-segmentation-from-scratch-in-pytorch.ipynb"	[label=appearsIn];
	"best_threshold(0)$1" -> "0(0)"	[label=assignedFrom];
	"best_threshold(0)$1" -> "threshold(0)"	[label=assignedFrom];
	"best_threshold(0)$1" -> "attempts_df(0)$6"	[label=assignedFrom];
	"best_size(0)$1" -> "0(0)"	[label=assignedFrom];
	"best_size(0)$1" -> "size(0)"	[label=assignedFrom];
	"best_size(0)$1" -> "attempts_df(0)$6"	[label=assignedFrom];
	"data(0)$3" -> "tq(0)"	[label=iteratorOf];
	"data(0)$3" -> "data(0)$2"	[label=cuda];
	"data(0)$3" -> "test_loader(0)$0"	[label=iteratorOf];
	"output(0)$3" -> "0(0)"	[label=numpy];
	"output(0)$3" -> "model(0)$5"	[label=numpy];
	"output(0)$3" -> "data(0)$3"	[label=numpy];
	"image(0)$0" -> "0(0)"	[label=numpy];
	"image(0)$0" -> "data(0)$3"	[label=numpy];
	"mask(0)$1" -> "0(0)"	[label=numpy];
	"mask(0)$1" -> "target(0)$2"	[label=numpy];
	"output(0)$4" -> "0(0)"	[label=transpose];
	"output(0)$4" -> "1(0)"	[label=transpose];
	"output(0)$4" -> "2(0)"	[label=transpose];
	"output(0)$4" -> "output(0)$3"	[label=transpose];
	"image_vis(0)$0" -> "0(0)"	[label=transpose];
	"image_vis(0)$0" -> "1(0)"	[label=transpose];
	"image_vis(0)$0" -> "2(0)"	[label=transpose];
	"image_vis(0)$0" -> "image(0)$0"	[label=transpose];
	"mask(0)$2" -> "0(0)"	[label=transpose];
	"mask(0)$2" -> "1(0)"	[label=transpose];
	"mask(0)$2" -> "2(0)"	[label=transpose];
	"mask(0)$2" -> "mask(0)$1"	[label=transpose];
	"mask(0)$2" -> "uint8(0)"	[label=transpose];
	"uint8(0)" -> "image-segmentation-from-scratch-in-pytorch.ipynb"	[label=appearsIn];
	"pr_mask(0)$0" -> "np(0)"	[label=zeros];
	"pr_mask(0)$0" -> "4(0)"	[label=zeros];
	"pr_mask(0)$0" -> "350(0)"	[label=zeros];
	"pr_mask(0)$0" -> "525(0)"	[label=zeros];
	"probability(0)$1" -> "j(0)"	[label=resize_it];
	"probability(0)$1" -> "output(0)$4"	[label=resize_it];
	"probability(0)$1" -> "batch(0)"	[label=iteratorOf];
	"batch(0)" -> "image-segmentation-from-scratch-in-pytorch.ipynb"	[label=appearsIn];
	"batch(0)" -> "enumerate(0)"	[label=iteratorOf];
	"batch(0)" -> "output(0)$5"	[label=iteratorOf];
	"pr_mask(0)$1" -> "0(0)"	[label=post_process];
	"pr_mask(0)$1" -> "1(0)"	[label=post_process];
	"pr_mask(0)$1" -> "j(0)"	[label=post_process];
	"pr_mask(0)$1" -> "class_params(0)$0"	[label=post_process];
	"pr_mask(0)$1" -> "pr_mask(0)$0"	[label=post_process];
	"pr_mask(0)$1" -> "probability(0)$1"	[label=post_process];
	"_(0)$0" -> "0(0)"	[label=post_process];
	"_(0)$0" -> "1(0)"	[label=post_process];
	"_(0)$0" -> "j(0)"	[label=post_process];
	"_(0)$0" -> "class_params(0)$0"	[label=post_process];
	"_(0)$0" -> "probability(0)$1"	[label=post_process];
	"visualize_with_raw[842/4]" -> "output(0)$4"	[label=visualize_with_raw];
	"visualize_with_raw[842/4]" -> "image_vis(0)$0"	[label=visualize_with_raw];
	"visualize_with_raw[842/4]" -> "mask(0)$2"	[label=visualize_with_raw];
	"visualize_with_raw[842/4]" -> "pr_mask(0)$1"	[label=visualize_with_raw];
	"torch(0)$1" -> "torch(0)$0"	[label=empty_cache];
	"gc(0)$1" -> "gc(0)$0"	[label=collect];
	"test_dataset(0)$0" -> "sub(0)$2"	[label=CloudDataset];
	"test_dataset(0)$0" -> "test_ids(0)$0"	[label=CloudDataset];
	"test_dataset(0)$0" -> "get_validation_augmentation(0)"	[label=CloudDataset];
	"test_dataset(0)$0" -> "test(0)"	[label=CloudDataset];
	"test(0)" -> "image-segmentation-from-scratch-in-pytorch.ipynb"	[label=appearsIn];
	"gc(0)$2" -> "gc(0)$1"	[label=collect];
	"subm(0)$0" -> "pd(0)"	[label=read_csv];
	"subm(0)$0" -> "../input/understanding_cloud_organization/sample_submission.csv(0)"	[label=read_csv];
	"../input/understanding_cloud_organization/sample_submission.csv(0)" -> "image-segmentation-from-scratch-in-pytorch.ipynb"	[label=appearsIn];
	"../input/understanding_cloud_organization/test_images/(0)" -> "image-segmentation-from-scratch-in-pytorch.ipynb"	[label=appearsIn];
	"pathlist(0)$0" -> "0(0)"	[label=assignedFrom];
	"pathlist(0)$0" -> "Image_Label(0)"	[label=assignedFrom];
	"pathlist(0)$0" -> "i(0)"	[label=assignedFrom];
	"pathlist(0)$0" -> "_(0)$0"	[label=assignedFrom];
	"pathlist(0)$0" -> "subm(0)$0"	[label=assignedFrom];
	"pathlist(0)$0" -> "../input/understanding_cloud_organization/test_images/(0)"	[label=assignedFrom];
	"image_path(52)" -> "get_black_mask[0]"	[label=_argToVar];
	"img(52)$0" -> "image_path(52)"	[label=imread];
	"img(52)$0" -> "cv2(52)"	[label=imread];
	"img(52)$1" -> "cv2(52)"	[label=resize];
	"img(52)$1" -> "img(52)$1"	[label=resize];
	"img(52)$1" -> "525(52)"	[label=resize];
	"img(52)$1" -> "350(52)"	[label=resize];
	"hsv(52)$0" -> "cv2(52)"	[label=cvtColor];
	"hsv(52)$0" -> "img(52)$1"	[label=cvtColor];
	"lower(52)$0" -> "np(52)"	[label=array];
	"lower(52)$0" -> "[<_ast.Constant object at 0x7fd4c09d4f40>, <_ast.Constant object at 0x7fd4c09d4f70>, <_ast.Constant object at 0x7fd4c09d4fa0>](52)"	[label=array];
	"upper(52)$0" -> "np(52)"	[label=array];
	"upper(52)$0" -> "[<_ast.Constant object at 0x7fd4c09ca220>, <_ast.Constant object at 0x7fd4c09ca250>, <_ast.Constant object at 0x7fd4c09ca280>](52)"	[label=array];
	"plt(0)$16" -> "plt(0)$15"	[label=imshow];
	"plt(0)$16" -> "pathlist(0)$0"	[label=imshow];
	"plt(0)$16" -> "get_black_mask(0)"	[label=imshow];
	"plt(0)$16" -> "120(0)"	[label=imshow];
	"get_black_mask(0)" -> "image-segmentation-from-scratch-in-pytorch.ipynb"	[label=appearsIn];
	"120(0)" -> "image-segmentation-from-scratch-in-pytorch.ipynb"	[label=appearsIn];
	"plt(0)$17" -> "plt(0)$16"	[label=show];
	"encoded_pixels(0)$0" -> "[](0)"	[label=assignedFrom];
	"image_id(0)$0" -> "0(0)"	[label=assignedFrom];
	"cou(0)$0" -> "0(0)"	[label=assignedFrom];
	"np_saved(0)$0" -> "0(0)"	[label=assignedFrom];
	"data(0)$4" -> "data(0)$3"	[label=cuda];
	"probability(0)$2" -> "probability(0)$1"	[label=resize_it];
	"predict(0)$1" -> "0(0)"	[label=post_process];
	"predict(0)$1" -> "1(0)"	[label=post_process];
	"predict(0)$1" -> "4(0)"	[label=post_process];
	"predict(0)$1" -> "class_params(0)$0"	[label=post_process];
	"predict(0)$1" -> "image_id(0)$0"	[label=post_process];
	"predict(0)$1" -> "probability(0)$2"	[label=post_process];
	"num_predict(0)$1" -> "0(0)"	[label=post_process];
	"num_predict(0)$1" -> "1(0)"	[label=post_process];
	"num_predict(0)$1" -> "4(0)"	[label=post_process];
	"num_predict(0)$1" -> "class_params(0)$0"	[label=post_process];
	"num_predict(0)$1" -> "image_id(0)$0"	[label=post_process];
	"num_predict(0)$1" -> "probability(0)$2"	[label=post_process];
	"encoded_pixels(0)$1" -> "encoded_pixels(0)$0"	[label=append];
	"encoded_pixels(0)$1" -> "(0)"	[label=append];
	"(0)" -> "image-segmentation-from-scratch-in-pytorch.ipynb"	[label=appearsIn];
	"black_mask(0)$0" -> "pathlist(0)$0"	[label=get_black_mask];
	"black_mask(0)$0" -> "cou(0)$0"	[label=get_black_mask];
	"np_saved(0)$1" -> "np(0)"	[label=Add];
	"np_saved(0)$1" -> "np_saved(0)$0"	[label=Add];
	"np_saved(0)$1" -> "predict(0)$1"	[label=Add];
	"predict(0)$2" -> "np(0)"	[label=multiply];
	"predict(0)$2" -> "black_mask(0)$0"	[label=multiply];
	"predict(0)$2" -> "predict(0)$2"	[label=multiply];
	"np_saved(0)$2" -> "np(0)"	[label=Sub];
	"np_saved(0)$2" -> "np_saved(0)$1"	[label=Sub];
	"np_saved(0)$2" -> "predict(0)$2"	[label=Sub];
	"r(0)$0" -> "predict(0)$2"	[label=mask2rle];
	"encoded_pixels(0)$2" -> "encoded_pixels(0)$1"	[label=append];
	"encoded_pixels(0)$2" -> "r(0)$0"	[label=append];
	"cou(0)$1" -> "1(0)"	[label=Add];
	"cou(0)$1" -> "cou(0)$0"	[label=Add];
	"image_id(0)$1" -> "1(0)"	[label=Add];
	"image_id(0)$1" -> "image_id(0)$0"	[label=Add];
	"number of pixel saved (0)" -> "image-segmentation-from-scratch-in-pytorch.ipynb"	[label=appearsIn];
	"print[897/0]" -> "np_saved(0)$2"	[label=print];
	"print[897/0]" -> "number of pixel saved (0)"	[label=print];
	"sub(0)$3" -> "sub(0)$2"	[label=assignedFrom];
	"sub(0)$3" -> "encoded_pixels(0)$2"	[label=assignedFrom];
	"sub(0)$4" -> "sub(0)$3"	[label=to_csv];
	"sub(0)$4" -> "submission.csv(0)"	[label=to_csv];
	"submission.csv(0)" -> "image-segmentation-from-scratch-in-pytorch.ipynb"	[label=appearsIn];
}
