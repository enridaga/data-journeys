strict digraph "" {
	pandas -> "model-free-benchmark.ipynb"	[label=importedBy];
	"pd(0)" -> pandas	[label=assignedFrom];
	"pd(0)" -> "model-free-benchmark.ipynb"	[label=appearsIn];
	numpy -> "model-free-benchmark.ipynb"	[label=importedBy];
	"np(0)" -> "model-free-benchmark.ipynb"	[label=appearsIn];
	"np(0)" -> numpy	[label=assignedFrom];
	"train(0)$0" -> "pd(0)"	[label=read_csv];
	"train(0)$0" -> "../input/nfl-big-data-bowl-2020/train.csv(0)"	[label=read_csv];
	"../input/nfl-big-data-bowl-2020/train.csv(0)" -> "model-free-benchmark.ipynb"	[label=appearsIn];
	"train(0)$1" -> "train(0)$0"	[label=drop_duplicates];
	"train(0)$1" -> "PlayId(0)"	[label=drop_duplicates];
	"PlayId(0)" -> "model-free-benchmark.ipynb"	[label=appearsIn];
	"dist(0)$0" -> "train(0)$1"	[label=hist];
	"dist(0)$0" -> "Yards(0)"	[label=hist];
	"dist(0)$0" -> "True(0)"	[label=hist];
	"dist(0)$0" -> "200(0)"	[label=hist];
	"Yards(0)" -> "model-free-benchmark.ipynb"	[label=appearsIn];
	"True(0)" -> "model-free-benchmark.ipynb"	[label=appearsIn];
	"200(0)" -> "model-free-benchmark.ipynb"	[label=appearsIn];
	"train_own(0)$0" -> "train(0)$1"	[label=assignedFrom];
	"train_own(0)$0" -> "FieldPosition(0)"	[label=assignedFrom];
	"train_own(0)$0" -> "PossessionTeam(0)"	[label=assignedFrom];
	"FieldPosition(0)" -> "model-free-benchmark.ipynb"	[label=appearsIn];
	"PossessionTeam(0)" -> "model-free-benchmark.ipynb"	[label=appearsIn];
	"train_other(0)$0" -> "train(0)$1"	[label=assignedFrom];
	"train_other(0)$0" -> "FieldPosition(0)"	[label=assignedFrom];
	"train_other(0)$0" -> "PossessionTeam(0)"	[label=assignedFrom];
	"matplotlib.pyplot" -> "model-free-benchmark.ipynb"	[label=importedBy];
	"plt(0)" -> "model-free-benchmark.ipynb"	[label=appearsIn];
	"plt(0)" -> "matplotlib.pyplot"	[label=assignedFrom];
	"own_cdf(0)$0" -> "np(0)"	[label=cumsum];
	"own_cdf(0)$0" -> "Yards(0)"	[label=cumsum];
	"own_cdf(0)$0" -> "True(0)"	[label=cumsum];
	"own_cdf(0)$0" -> "train_own(0)$0"	[label=cumsum];
	"own_cdf(0)$0" -> "199(0)"	[label=cumsum];
	"own_cdf(0)$0" -> "99(0)"	[label=cumsum];
	"own_cdf(0)$0" -> "100(0)"	[label=cumsum];
	"own_cdf(0)$0" -> "0(0)"	[label=cumsum];
	"199(0)" -> "model-free-benchmark.ipynb"	[label=appearsIn];
	"99(0)" -> "model-free-benchmark.ipynb"	[label=appearsIn];
	"100(0)" -> "model-free-benchmark.ipynb"	[label=appearsIn];
	"0(0)" -> "model-free-benchmark.ipynb"	[label=appearsIn];
	"other_cdf(0)$0" -> "np(0)"	[label=cumsum];
	"other_cdf(0)$0" -> "Yards(0)"	[label=cumsum];
	"other_cdf(0)$0" -> "True(0)"	[label=cumsum];
	"other_cdf(0)$0" -> "train_other(0)$0"	[label=cumsum];
	"other_cdf(0)$0" -> "199(0)"	[label=cumsum];
	"other_cdf(0)$0" -> "99(0)"	[label=cumsum];
	"other_cdf(0)$0" -> "100(0)"	[label=cumsum];
	"other_cdf(0)$0" -> "0(0)"	[label=cumsum];
	"y_train(0)$0" -> "train(0)$1"	[label=assignedFrom];
	"y_train(0)$0" -> "Yards(0)"	[label=assignedFrom];
	"y_ans(0)$0" -> "np(0)"	[label=zeros];
	"y_ans(0)$0" -> "train(0)$1"	[label=zeros];
	"y_ans(0)$0" -> "199(0)"	[label=zeros];
	"y_ans(0)$0" -> "len(0)"	[label=zeros];
	"len(0)" -> "model-free-benchmark.ipynb"	[label=appearsIn];
	"enumerate(0)" -> "model-free-benchmark.ipynb"	[label=appearsIn];
	"i(0)" -> "model-free-benchmark.ipynb"	[label=appearsIn];
	"i(0)" -> "y_train(0)$0"	[label=iteratorOf];
	"i(0)" -> "enumerate(0)"	[label=iteratorOf];
	"p(0)" -> "model-free-benchmark.ipynb"	[label=appearsIn];
	"p(0)" -> "y_train(0)$0"	[label=iteratorOf];
	"p(0)" -> "enumerate(0)"	[label=iteratorOf];
	"range(0)" -> "model-free-benchmark.ipynb"	[label=appearsIn];
	"j(0)" -> "model-free-benchmark.ipynb"	[label=appearsIn];
	"j(0)" -> "199(0)"	[label=iteratorOf];
	"j(0)" -> "range(0)"	[label=iteratorOf];
	"1.0(0)" -> "model-free-benchmark.ipynb"	[label=appearsIn];
	"y_ans(0)$1" -> "y_ans(0)$0"	[label=assignedFrom];
	"y_ans(0)$1" -> "1.0(0)"	[label=assignedFrom];
	"validation score own half:(0)" -> "model-free-benchmark.ipynb"	[label=appearsIn];
	"print[23/0]" -> "np(0)"	[label=print];
	"print[23/0]" -> "train(0)$1"	[label=print];
	"print[23/0]" -> "own_cdf(0)$0"	[label=print];
	"print[23/0]" -> "199(0)"	[label=print];
	"print[23/0]" -> "len(0)"	[label=print];
	"print[23/0]" -> "y_ans(0)$1"	[label=print];
	"print[23/0]" -> "validation score own half:(0)"	[label=print];
	"print[23/0]" -> "2(0)"	[label=print];
	"2(0)" -> "model-free-benchmark.ipynb"	[label=appearsIn];
	"validation score other half:(0)" -> "model-free-benchmark.ipynb"	[label=appearsIn];
	"print[24/0]" -> "np(0)"	[label=print];
	"print[24/0]" -> "train(0)$1"	[label=print];
	"print[24/0]" -> "199(0)"	[label=print];
	"print[24/0]" -> "other_cdf(0)$0"	[label=print];
	"print[24/0]" -> "len(0)"	[label=print];
	"print[24/0]" -> "y_ans(0)$1"	[label=print];
	"print[24/0]" -> "2(0)"	[label=print];
	"print[24/0]" -> "validation score other half:(0)"	[label=print];
	"plt(0)$0" -> "plt(0)"	[label=plot];
	"plt(0)$0" -> "own_cdf(0)$0"	[label=plot];
	"plt(0)$1" -> "other_cdf(0)$0"	[label=plot];
	"plt(0)$1" -> "plt(0)$0"	[label=plot];
	"kaggle.competitions" -> "model-free-benchmark.ipynb"	[label=importedBy];
	nflrush -> "kaggle.competitions"	[label=importedBy];
	"nflrush(0)" -> "model-free-benchmark.ipynb"	[label=appearsIn];
	"nflrush(0)" -> nflrush	[label=assignedFrom];
	"env(0)$0" -> "nflrush(0)"	[label=make_env];
	"test_df(0)" -> "model-free-benchmark.ipynb"	[label=appearsIn];
	"test_df(0)" -> "env(0)$0"	[label=iteratorOf];
	"sample_prediction_df(0)" -> "model-free-benchmark.ipynb"	[label=appearsIn];
	"sample_prediction_df(0)" -> "env(0)$0"	[label=iteratorOf];
	"cdf(0)$0" -> "np(0)"	[label=copy];
	"cdf(0)$0" -> "other_cdf(0)$0"	[label=copy];
	"1(0)" -> "model-free-benchmark.ipynb"	[label=appearsIn];
	"cdf(0)$1" -> "cdf(0)$0"	[label=assignedFrom];
	"cdf(0)$1" -> "1(0)"	[label=assignedFrom];
	"sample_prediction_df(0)$0" -> "sample_prediction_df(0)"	[label=assignedFrom];
	"sample_prediction_df(0)$0" -> "cdf(0)$1"	[label=assignedFrom];
	"cdf(0)$2" -> "np(0)"	[label=copy];
	"cdf(0)$2" -> "own_cdf(0)$0"	[label=copy];
	"cdf(0)$3" -> "1(0)"	[label=assignedFrom];
	"cdf(0)$3" -> "cdf(0)$2"	[label=assignedFrom];
	"sample_prediction_df(0)$1" -> "sample_prediction_df(0)$0"	[label=assignedFrom];
	"sample_prediction_df(0)$1" -> "cdf(0)$3"	[label=assignedFrom];
	"env(0)$1" -> "env(0)$0"	[label=predict];
	"env(0)$1" -> "sample_prediction_df(0)$1"	[label=predict];
	"env(0)$2" -> "env(0)$1"	[label=write_submission_file];
	"print[44/0]" -> "sample_prediction_df(0)$1"	[label=print];
}
