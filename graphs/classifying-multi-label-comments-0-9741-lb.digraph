digraph "" {
	numpy -> "classifying-multi-label-comments-0-9741-lb.ipynb"	[label=importedBy];
	"np(0)" -> numpy	[label=assignedFrom];
	"np(0)" -> "classifying-multi-label-comments-0-9741-lb.ipynb"	[label=appearsIn];
	pandas -> "classifying-multi-label-comments-0-9741-lb.ipynb"	[label=importedBy];
	"pd(0)" -> "classifying-multi-label-comments-0-9741-lb.ipynb"	[label=appearsIn];
	"pd(0)" -> pandas	[label=assignedFrom];
	matplotlib -> "classifying-multi-label-comments-0-9741-lb.ipynb"	[label=importedBy];
	pyplot -> matplotlib	[label=importedBy];
	"plt(0)" -> "classifying-multi-label-comments-0-9741-lb.ipynb"	[label=appearsIn];
	"plt(0)" -> pyplot	[label=assignedFrom];
	seaborn -> "classifying-multi-label-comments-0-9741-lb.ipynb"	[label=importedBy];
	"sns(0)" -> "classifying-multi-label-comments-0-9741-lb.ipynb"	[label=appearsIn];
	"sns(0)" -> seaborn	[label=assignedFrom];
	re -> "classifying-multi-label-comments-0-9741-lb.ipynb"	[label=importedBy];
	"re(0)" -> "classifying-multi-label-comments-0-9741-lb.ipynb"	[label=appearsIn];
	"re(0)" -> re	[label=assignedFrom];
	"train_df(0)$0" -> "pd(0)"	[label=read_csv];
	"train_df(0)$0" -> "../input/train.csv(0)"	[label=read_csv];
	"../input/train.csv(0)" -> "classifying-multi-label-comments-0-9741-lb.ipynb"	[label=appearsIn];
	"test_df(0)$0" -> "pd(0)"	[label=read_csv];
	"test_df(0)$0" -> "../input/test.csv(0)"	[label=read_csv];
	"../input/test.csv(0)" -> "classifying-multi-label-comments-0-9741-lb.ipynb"	[label=appearsIn];
	"train_df(0)$1" -> "train_df(0)$0"	[label=sample];
	"train_df(0)$1" -> "5(0)"	[label=sample];
	"5(0)" -> "classifying-multi-label-comments-0-9741-lb.ipynb"	[label=appearsIn];
	"[<_ast.Constant object at 0x7fd5007f0400>, <_ast.Constant object at 0x7fd5007f0820>, <_ast.Constant object at 0x7fd5007f0280>, <_\
ast.Constant object at 0x7fd5007f0ee0>, <_ast.Constant object at 0x7fd5007f0ac0>, <_ast.Constant object at 0x7fd5007f05b0>](0)" -> "classifying-multi-label-comments-0-9741-lb.ipynb"	[label=appearsIn];
	"cols_target(0)$0" -> "[<_ast.Constant object at 0x7fd5007f0400>, <_ast.Constant object at 0x7fd5007f0820>, <_ast.Constant object at 0x7fd5007f0280>, <_\
ast.Constant object at 0x7fd5007f0ee0>, <_ast.Constant object at 0x7fd5007f0ac0>, <_ast.Constant object at 0x7fd5007f05b0>](0)"	[label=assignedFrom];
	"train_df(0)$2" -> "train_df(0)$1"	[label=describe];
	"no_comment(0)$0" -> "train_df(0)$2"	[label=assignedFrom];
	"no_comment(0)$0" -> "comment_text(0)"	[label=assignedFrom];
	"comment_text(0)" -> "classifying-multi-label-comments-0-9741-lb.ipynb"	[label=appearsIn];
	"len[25/0]" -> "no_comment(0)$0"	[label=len];
	"test_df(0)$1" -> "test_df(0)$0"	[label=head];
	"no_comment(0)$1" -> "comment_text(0)"	[label=assignedFrom];
	"no_comment(0)$1" -> "test_df(0)$1"	[label=assignedFrom];
	"test_df(0)$2" -> "test_df(0)$1"	[label=fillna];
	"test_df(0)$2" -> "unknown(0)"	[label=fillna];
	"unknown(0)" -> "classifying-multi-label-comments-0-9741-lb.ipynb"	[label=appearsIn];
	"Total rows in train is {}(0)" -> "classifying-multi-label-comments-0-9741-lb.ipynb"	[label=appearsIn];
	"print[35/0]" -> "train_df(0)$2"	[label=print];
	"print[35/0]" -> "Total rows in train is {}(0)"	[label=print];
	"print[35/0]" -> "len(0)"	[label=print];
	"len(0)" -> "classifying-multi-label-comments-0-9741-lb.ipynb"	[label=appearsIn];
	"Total rows in test is {}(0)" -> "classifying-multi-label-comments-0-9741-lb.ipynb"	[label=appearsIn];
	"print[37/0]" -> "test_df(0)$2"	[label=print];
	"print[37/0]" -> "len(0)"	[label=print];
	"print[37/0]" -> "Total rows in test is {}(0)"	[label=print];
	"print[38/0]" -> "cols_target(0)$0"	[label=print];
	"print[38/0]" -> "train_df(0)$2"	[label=print];
	"train_df(0)$3" -> "train_df(0)$2"	[label=len];
	"train_df(0)$3" -> "comment_text(0)"	[label=len];
	"sns(0)$0" -> "sns(0)"	[label=set];
	"train_df(0)$4" -> "train_df(0)$3"	[label=hist];
	"plt(0)$0" -> "plt(0)"	[label=show];
	"data(0)$0" -> "cols_target(0)$0"	[label=assignedFrom];
	"data(0)$0" -> "train_df(0)$4"	[label=assignedFrom];
	"colormap(0)$0" -> "plt(0)$0"	[label=assignedFrom];
	"plt(0)$1" -> "plt(0)$0"	[label=figure];
	"plt(0)$2" -> "plt(0)$1"	[label=title];
	"plt(0)$2" -> "Correlation of features & targets(0)"	[label=title];
	"Correlation of features & targets(0)" -> "classifying-multi-label-comments-0-9741-lb.ipynb"	[label=appearsIn];
	"sns(0)$1" -> "sns(0)$0"	[label=heatmap];
	"sns(0)$1" -> "data(0)$0"	[label=heatmap];
	"sns(0)$1" -> "float(0)"	[label=heatmap];
	"float(0)" -> "classifying-multi-label-comments-0-9741-lb.ipynb"	[label=appearsIn];
	"test_df(0)$3" -> "comment_text(0)"	[label=len];
	"test_df(0)$3" -> "test_df(0)$2"	[label=len];
	"plt(0)$3" -> "plt(0)$2"	[label=figure];
	"plt(0)$4" -> "test_df(0)$3"	[label=hist];
	"plt(0)$4" -> "plt(0)$3"	[label=hist];
	"plt(0)$4" -> "char_length(0)"	[label=hist];
	"char_length(0)" -> "classifying-multi-label-comments-0-9741-lb.ipynb"	[label=appearsIn];
	"plt(0)$5" -> "plt(0)$4"	[label=show];
	"test_comment(0)$0" -> "comment_text(0)"	[label=apply];
	"test_comment(0)$0" -> "test_df(0)$3"	[label=apply];
	"test_comment(0)$0" -> "x(0)"	[label=apply];
	"test_comment(0)$0" -> "5000(0)"	[label=apply];
	"x(0)" -> "classifying-multi-label-comments-0-9741-lb.ipynb"	[label=appearsIn];
	"5000(0)" -> "classifying-multi-label-comments-0-9741-lb.ipynb"	[label=appearsIn];
	"char_length(0)$0" -> "test_comment(0)$0"	[label=len];
	"plt(0)$6" -> "plt(0)$5"	[label=figure];
	"plt(0)$7" -> "char_length(0)$0"	[label=hist];
	"plt(0)$7" -> "plt(0)$6"	[label=hist];
	"plt(0)$8" -> "plt(0)$7"	[label=show];
	"text(1)" -> "clean_text[0]"	[label=_argToVar];
	"text(1)$0" -> "text(1)$0"	[label=sub];
	"text(1)$0" -> "re(1)"	[label=sub];
	"text(1)$0" -> "what's(1)"	[label=sub];
	"text(1)$0" -> "what is (1)"	[label=sub];
	"text(1)$1" -> "re(1)"	[label=sub];
	"text(1)$1" -> "text(1)$1"	[label=sub];
	"text(1)$1" -> "\'s(1)"	[label=sub];
	"text(1)$1" -> " (1)"	[label=sub];
	"text(1)$2" -> "re(1)"	[label=sub];
	"text(1)$2" -> "text(1)$2"	[label=sub];
	"text(1)$2" -> "\'ve(1)"	[label=sub];
	"text(1)$2" -> " have (1)"	[label=sub];
	"text(1)$3" -> "re(1)"	[label=sub];
	"text(1)$3" -> "text(1)$3"	[label=sub];
	"text(1)$3" -> "can't(1)"	[label=sub];
	"text(1)$3" -> "cannot (1)"	[label=sub];
	"text(1)$4" -> "re(1)"	[label=sub];
	"text(1)$4" -> "text(1)$4"	[label=sub];
	"text(1)$4" -> "n't(1)"	[label=sub];
	"text(1)$4" -> " not (1)"	[label=sub];
	"text(1)$5" -> "re(1)"	[label=sub];
	"text(1)$5" -> "text(1)$5"	[label=sub];
	"text(1)$5" -> "i'm(1)"	[label=sub];
	"text(1)$5" -> "i am (1)"	[label=sub];
	"text(1)$6" -> "re(1)"	[label=sub];
	"text(1)$6" -> "text(1)$6"	[label=sub];
	"text(1)$6" -> "\'re(1)"	[label=sub];
	"text(1)$6" -> " are (1)"	[label=sub];
	"text(1)$7" -> "re(1)"	[label=sub];
	"text(1)$7" -> "text(1)$7"	[label=sub];
	"text(1)$7" -> "\'d(1)"	[label=sub];
	"text(1)$7" -> " would (1)"	[label=sub];
	"text(1)$8" -> "re(1)"	[label=sub];
	"text(1)$8" -> "text(1)$8"	[label=sub];
	"text(1)$8" -> "\'ll(1)"	[label=sub];
	"text(1)$8" -> " will (1)"	[label=sub];
	"text(1)$9" -> "re(1)"	[label=sub];
	"text(1)$9" -> "text(1)$9"	[label=sub];
	"text(1)$9" -> "\'scuse(1)"	[label=sub];
	"text(1)$9" -> " excuse (1)"	[label=sub];
	"text(1)$10" -> "re(1)"	[label=sub];
	"text(1)$10" -> " (1)"	[label=sub];
	"text(1)$10" -> "text(1)$10"	[label=sub];
	"text(1)$10" -> "\.(1)"	[label=sub];
	"text(1)$11" -> "re(1)"	[label=sub];
	"text(1)$11" -> " (1)"	[label=sub];
	"text(1)$11" -> "text(1)$11"	[label=sub];
	"text(1)$11" -> "\W(1)"	[label=sub];
	"text(1)$12" -> "re(1)"	[label=sub];
	"text(1)$12" -> " (1)"	[label=sub];
	"text(1)$12" -> "text(1)$12"	[label=sub];
	"text(1)$12" -> "\s+(1)"	[label=sub];
	"text(1)$13" -> "text(1)$12"	[label=strip];
	"[](0)" -> "classifying-multi-label-comments-0-9741-lb.ipynb"	[label=appearsIn];
	"cleaned_train_comment(0)$0" -> "[](0)"	[label=assignedFrom];
	"range(0)" -> "classifying-multi-label-comments-0-9741-lb.ipynb"	[label=appearsIn];
	"i(0)" -> "classifying-multi-label-comments-0-9741-lb.ipynb"	[label=appearsIn];
	"i(0)" -> "len(0)"	[label=iteratorOf];
	"i(0)" -> "train_df(0)$4"	[label=iteratorOf];
	"i(0)" -> "test_df(0)$3"	[label=iteratorOf];
	"i(0)" -> "range(0)"	[label=iteratorOf];
	"i(0)" -> "0(0)"	[label=iteratorOf];
	"0(0)" -> "classifying-multi-label-comments-0-9741-lb.ipynb"	[label=appearsIn];
	"cleaned_comment(0)$0" -> "comment_text(0)"	[label=clean_text];
	"cleaned_comment(0)$0" -> "train_df(0)$4"	[label=clean_text];
	"cleaned_comment(0)$0" -> "i(0)"	[label=clean_text];
	"cleaned_train_comment(0)$1" -> "cleaned_train_comment(0)$0"	[label=append];
	"cleaned_train_comment(0)$1" -> "cleaned_comment(0)$0"	[label=append];
	"train_df(0)$5" -> "pd(0)"	[label=astype];
	"train_df(0)$5" -> "train_df(0)$4"	[label=astype];
	"train_df(0)$5" -> "cleaned_train_comment(0)$1"	[label=astype];
	"train_df(0)$5" -> "str(0)"	[label=astype];
	"str(0)" -> "classifying-multi-label-comments-0-9741-lb.ipynb"	[label=appearsIn];
	"cleaned_test_comment(0)$0" -> "[](0)"	[label=assignedFrom];
	"cleaned_comment(0)$1" -> "comment_text(0)"	[label=clean_text];
	"cleaned_comment(0)$1" -> "test_df(0)$3"	[label=clean_text];
	"cleaned_comment(0)$1" -> "i(0)"	[label=clean_text];
	"cleaned_test_comment(0)$1" -> "cleaned_test_comment(0)$0"	[label=append];
	"cleaned_test_comment(0)$1" -> "cleaned_comment(0)$1"	[label=append];
	"test_df(0)$4" -> "pd(0)"	[label=astype];
	"test_df(0)$4" -> "test_df(0)$3"	[label=astype];
	"test_df(0)$4" -> "str(0)"	[label=astype];
	"test_df(0)$4" -> "cleaned_test_comment(0)$1"	[label=astype];
	"train_df(0)$6" -> "char_length(0)$0"	[label=drop];
	"train_df(0)$6" -> "train_df(0)$5"	[label=drop];
	"train_df(0)$6" -> "1(0)"	[label=drop];
	"1(0)" -> "classifying-multi-label-comments-0-9741-lb.ipynb"	[label=appearsIn];
	"X(0)$0" -> "train_df(0)$6"	[label=assignedFrom];
	"test_X(0)$0" -> "test_df(0)$4"	[label=assignedFrom];
	"print[131/0]" -> "X(0)$0"	[label=print];
	"print[131/0]" -> "test_X(0)$0"	[label=print];
	"sklearn.feature_extraction.text" -> "classifying-multi-label-comments-0-9741-lb.ipynb"	[label=importedBy];
	CountVectorizer -> "sklearn.feature_extraction.text"	[label=importedBy];
	"CountVectorizer(0)" -> "classifying-multi-label-comments-0-9741-lb.ipynb"	[label=appearsIn];
	"CountVectorizer(0)" -> CountVectorizer	[label=assignedFrom];
	TfidfVectorizer -> "sklearn.feature_extraction.text"	[label=importedBy];
	"TfidfVectorizer(0)" -> "classifying-multi-label-comments-0-9741-lb.ipynb"	[label=appearsIn];
	"TfidfVectorizer(0)" -> TfidfVectorizer	[label=assignedFrom];
	"20000(0)" -> "classifying-multi-label-comments-0-9741-lb.ipynb"	[label=appearsIn];
	"vect(0)$0" -> "20000(0)"	[label=TfidfVectorizer];
	"vect(0)$0" -> "2(0)"	[label=TfidfVectorizer];
	"2(0)" -> "classifying-multi-label-comments-0-9741-lb.ipynb"	[label=appearsIn];
	"X_dtm(0)$0" -> "X(0)$0"	[label=fit_transform];
	"X_dtm(0)$0" -> "vect(0)$0"	[label=fit_transform];
	"test_X_dtm(0)$0" -> "test_X(0)$0"	[label=transform];
	"test_X_dtm(0)$0" -> "vect(0)$0"	[label=transform];
	"sklearn.linear_model" -> "classifying-multi-label-comments-0-9741-lb.ipynb"	[label=importedBy];
	LogisticRegression -> "sklearn.linear_model"	[label=importedBy];
	"LogisticRegression(0)" -> "classifying-multi-label-comments-0-9741-lb.ipynb"	[label=appearsIn];
	"LogisticRegression(0)" -> LogisticRegression	[label=assignedFrom];
	"sklearn.metrics" -> "classifying-multi-label-comments-0-9741-lb.ipynb"	[label=importedBy];
	accuracy_score -> "sklearn.metrics"	[label=importedBy];
	"accuracy_score(0)" -> "classifying-multi-label-comments-0-9741-lb.ipynb"	[label=appearsIn];
	"accuracy_score(0)" -> accuracy_score	[label=assignedFrom];
	"6.0(0)" -> "classifying-multi-label-comments-0-9741-lb.ipynb"	[label=appearsIn];
	"logreg(0)$0" -> "6.0(0)"	[label=LogisticRegression];
	"logreg(0)$0" -> "123(0)"	[label=LogisticRegression];
	"123(0)" -> "classifying-multi-label-comments-0-9741-lb.ipynb"	[label=appearsIn];
	"submission_binary(0)$0" -> "pd(0)"	[label=read_csv];
	"submission_binary(0)$0" -> "../input/sample_submission.csv(0)"	[label=read_csv];
	"../input/sample_submission.csv(0)" -> "classifying-multi-label-comments-0-9741-lb.ipynb"	[label=appearsIn];
	"label(0)" -> "classifying-multi-label-comments-0-9741-lb.ipynb"	[label=appearsIn];
	"label(0)" -> "cols_target(0)$0"	[label=iteratorOf];
	"... Processing {}(0)" -> "classifying-multi-label-comments-0-9741-lb.ipynb"	[label=appearsIn];
	"print[173/4]" -> "label(0)"	[label=print];
	"print[173/4]" -> "... Processing {}(0)"	[label=print];
	"y(0)$0" -> "train_df(0)$6"	[label=assignedFrom];
	"y(0)$0" -> "label(0)"	[label=assignedFrom];
	"logreg(0)$1" -> "X_dtm(0)$0"	[label=fit];
	"logreg(0)$1" -> "logreg(0)$0"	[label=fit];
	"logreg(0)$1" -> "y(0)$0"	[label=fit];
	"y_pred_X(0)$0" -> "X_dtm(0)$0"	[label=predict];
	"y_pred_X(0)$0" -> "logreg(0)$1"	[label=predict];
	"Training accuracy is {}(0)" -> "classifying-multi-label-comments-0-9741-lb.ipynb"	[label=appearsIn];
	"print[185/4]" -> "accuracy_score(0)"	[label=print];
	"print[185/4]" -> "y(0)$0"	[label=print];
	"print[185/4]" -> "y_pred_X(0)$0"	[label=print];
	"print[185/4]" -> "Training accuracy is {}(0)"	[label=print];
	"test_y_prob(0)$0" -> "1(0)"	[label=assignedFrom];
	"test_y_prob(0)$0" -> "test_X_dtm(0)$0"	[label=assignedFrom];
	"test_y_prob(0)$0" -> "logreg(0)$1"	[label=assignedFrom];
	"submission_binary(0)$1" -> "submission_binary(0)$0"	[label=assignedFrom];
	"submission_binary(0)$1" -> "test_y_prob(0)$0"	[label=assignedFrom];
	"submission_binary(0)$2" -> "submission_binary(0)$1"	[label=head];
	"submission_binary(0)$3" -> "submission_binary(0)$2"	[label=to_csv];
	"submission_binary(0)$3" -> "submission_binary.csv(0)"	[label=to_csv];
	"submission_binary.csv(0)" -> "classifying-multi-label-comments-0-9741-lb.ipynb"	[label=appearsIn];
	"submission_chains(0)$0" -> "pd(0)"	[label=read_csv];
	"submission_chains(0)$0" -> "../input/sample_submission.csv(0)"	[label=read_csv];
	"X(2)" -> "add_feature[0]"	[label=_argToVar];
	"feature_to_add(2)" -> "add_feature[1]"	[label=_argToVar];
	"scipy.sparse" -> "classifying-multi-label-comments-0-9741-lb.ipynb"	[label=importedBy];
	csr_matrix -> "scipy.sparse"	[label=importedBy];
	"csr_matrix(2)" -> csr_matrix	[label=assignedFrom];
	hstack -> "scipy.sparse"	[label=importedBy];
	"hstack(2)" -> hstack	[label=assignedFrom];
	"print[219/4]" -> "label(0)"	[label=print];
	"print[219/4]" -> "... Processing {}(0)"	[label=print];
	"y(0)$1" -> "train_df(0)$6"	[label=assignedFrom];
	"y(0)$1" -> "label(0)"	[label=assignedFrom];
	"logreg(0)$2" -> "X_dtm(0)$0"	[label=fit];
	"logreg(0)$2" -> "logreg(0)$1"	[label=fit];
	"logreg(0)$2" -> "y(0)$1"	[label=fit];
	"y_pred_X(0)$1" -> "X_dtm(0)$0"	[label=predict];
	"y_pred_X(0)$1" -> "logreg(0)$2"	[label=predict];
	"Training Accuracy is {}(0)" -> "classifying-multi-label-comments-0-9741-lb.ipynb"	[label=appearsIn];
	"print[231/4]" -> "accuracy_score(0)"	[label=print];
	"print[231/4]" -> "y(0)$1"	[label=print];
	"print[231/4]" -> "y_pred_X(0)$1"	[label=print];
	"print[231/4]" -> "Training Accuracy is {}(0)"	[label=print];
	"test_y(0)$0" -> "test_X_dtm(0)$0"	[label=predict];
	"test_y(0)$0" -> "logreg(0)$2"	[label=predict];
	"test_y_prob(0)$1" -> "1(0)"	[label=assignedFrom];
	"test_y_prob(0)$1" -> "test_X_dtm(0)$0"	[label=assignedFrom];
	"test_y_prob(0)$1" -> "logreg(0)$2"	[label=assignedFrom];
	"submission_chains(0)$1" -> "submission_chains(0)$0"	[label=assignedFrom];
	"submission_chains(0)$1" -> "test_y_prob(0)$1"	[label=assignedFrom];
	"X_dtm(0)$1" -> "X_dtm(0)$0"	[label=add_feature];
	"X_dtm(0)$1" -> "y(0)$1"	[label=add_feature];
	"Shape of X_dtm is now {}(0)" -> "classifying-multi-label-comments-0-9741-lb.ipynb"	[label=appearsIn];
	"print[245/4]" -> "X_dtm(0)$1"	[label=print];
	"print[245/4]" -> "Shape of X_dtm is now {}(0)"	[label=print];
	"test_X_dtm(0)$1" -> "test_X_dtm(0)$0"	[label=add_feature];
	"test_X_dtm(0)$1" -> "test_y(0)$0"	[label=add_feature];
	"Shape of test_X_dtm is now {}(0)" -> "classifying-multi-label-comments-0-9741-lb.ipynb"	[label=appearsIn];
	"print[251/4]" -> "test_X_dtm(0)$1"	[label=print];
	"print[251/4]" -> "Shape of test_X_dtm is now {}(0)"	[label=print];
	"submission_chains(0)$2" -> "submission_chains(0)$1"	[label=head];
	"submission_chains(0)$3" -> "submission_chains(0)$2"	[label=to_csv];
	"submission_chains(0)$3" -> "submission_chains.csv(0)"	[label=to_csv];
	"submission_chains.csv(0)" -> "classifying-multi-label-comments-0-9741-lb.ipynb"	[label=appearsIn];
}
