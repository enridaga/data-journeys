digraph "" {
	gc -> "baseline-with-news.ipynb"	[label=importedBy];
	"gc(0)" -> gc	[label=assignedFrom];
	"gc(0)" -> "baseline-with-news.ipynb"	[label=appearsIn];
	datetime -> "baseline-with-news.ipynb"	[label=importedBy];
	datetime -> datetime	[label=importedBy];
	"datetime(0)" -> "baseline-with-news.ipynb"	[label=appearsIn];
	"datetime(0)" -> datetime	[label=assignedFrom];
	timedelta -> datetime	[label=importedBy];
	"timedelta(0)" -> "baseline-with-news.ipynb"	[label=appearsIn];
	"timedelta(0)" -> timedelta	[label=assignedFrom];
	numpy -> "baseline-with-news.ipynb"	[label=importedBy];
	"np(0)" -> "baseline-with-news.ipynb"	[label=appearsIn];
	"np(0)" -> numpy	[label=assignedFrom];
	pandas -> "baseline-with-news.ipynb"	[label=importedBy];
	"pd(0)" -> "baseline-with-news.ipynb"	[label=appearsIn];
	"pd(0)" -> pandas	[label=assignedFrom];
	"sklearn.metrics" -> "baseline-with-news.ipynb"	[label=importedBy];
	log_loss -> "sklearn.metrics"	[label=importedBy];
	"log_loss(0)" -> "baseline-with-news.ipynb"	[label=appearsIn];
	"log_loss(0)" -> log_loss	[label=assignedFrom];
	"sklearn.model_selection" -> "baseline-with-news.ipynb"	[label=importedBy];
	train_test_split -> "sklearn.model_selection"	[label=importedBy];
	"train_test_split(0)" -> "baseline-with-news.ipynb"	[label=appearsIn];
	"train_test_split(0)" -> train_test_split	[label=assignedFrom];
	xgboost -> "baseline-with-news.ipynb"	[label=importedBy];
	XGBClassifier -> xgboost	[label=importedBy];
	"XGBClassifier(0)" -> "baseline-with-news.ipynb"	[label=appearsIn];
	"XGBClassifier(0)" -> XGBClassifier	[label=assignedFrom];
	lightgbm -> "baseline-with-news.ipynb"	[label=importedBy];
	LGBMClassifier -> lightgbm	[label=importedBy];
	"LGBMClassifier(0)" -> "baseline-with-news.ipynb"	[label=appearsIn];
	"LGBMClassifier(0)" -> LGBMClassifier	[label=assignedFrom];
	seaborn -> "baseline-with-news.ipynb"	[label=importedBy];
	"sns(0)" -> "baseline-with-news.ipynb"	[label=appearsIn];
	"sns(0)" -> seaborn	[label=assignedFrom];
	"matplotlib.pyplot" -> "baseline-with-news.ipynb"	[label=importedBy];
	"plt(0)" -> "baseline-with-news.ipynb"	[label=appearsIn];
	"plt(0)" -> "matplotlib.pyplot"	[label=assignedFrom];
	"kaggle.competitions" -> "baseline-with-news.ipynb"	[label=importedBy];
	twosigmanews -> "kaggle.competitions"	[label=importedBy];
	"twosigmanews(0)" -> "baseline-with-news.ipynb"	[label=appearsIn];
	"twosigmanews(0)" -> twosigmanews	[label=assignedFrom];
	"pd(0)$0" -> "pd(0)"	[label=set_option];
	"pd(0)$0" -> "max_columns(0)"	[label=set_option];
	"pd(0)$0" -> "50(0)"	[label=set_option];
	"max_columns(0)" -> "baseline-with-news.ipynb"	[label=appearsIn];
	"50(0)" -> "baseline-with-news.ipynb"	[label=appearsIn];
	"env(0)$0" -> "twosigmanews(0)"	[label=make_env];
	"market_train(0)$0" -> "env(0)$0"	[label=get_training_data];
	"news_train(0)$0" -> "env(0)$0"	[label=get_training_data];
	"start(0)$0" -> "datetime(0)"	[label=date];
	"start(0)$0" -> "2009(0)"	[label=date];
	"start(0)$0" -> "1(0)"	[label=date];
	"start(0)$0" -> "0(0)"	[label=date];
	"2009(0)" -> "baseline-with-news.ipynb"	[label=appearsIn];
	"1(0)" -> "baseline-with-news.ipynb"	[label=appearsIn];
	"0(0)" -> "baseline-with-news.ipynb"	[label=appearsIn];
	"market_train(0)$1" -> "market_train(0)$0"	[label=reset_index];
	"market_train(0)$1" -> "start(0)$0"	[label=reset_index];
	"market_train(0)$1" -> "market_train(0)$1"	[label=reset_index];
	"market_train(0)$1" -> "time(0)"	[label=reset_index];
	"market_train(0)$1" -> "True(0)"	[label=reset_index];
	"time(0)" -> "baseline-with-news.ipynb"	[label=appearsIn];
	"True(0)" -> "baseline-with-news.ipynb"	[label=appearsIn];
	"news_train(0)$1" -> "news_train(0)$0"	[label=reset_index];
	"news_train(0)$1" -> "start(0)$0"	[label=reset_index];
	"news_train(0)$1" -> "time(0)"	[label=reset_index];
	"news_train(0)$1" -> "True(0)"	[label=reset_index];
	"news_train(0)$1" -> "news_train(0)$1"	[label=reset_index];
	"market_train(0)$2" -> "market_train(0)$1"	[label=head];
	"market_train(0)$2" -> "3(0)"	[label=head];
	"3(0)" -> "baseline-with-news.ipynb"	[label=appearsIn];
	"news_train(0)$2" -> "news_train(0)$1"	[label=head];
	"news_train(0)$2" -> "3(0)"	[label=head];
	"news_train(1)" -> "preprocess_news[0]"	[label=_argToVar];
	"drop_list(1)$0" -> "[<_ast.Constant object at 0x7fd4c04ccd00>, <_ast.Constant object at 0x7fd4c04cc6a0>, <_ast.Constant object at 0x7fd4c04ccaf0>, <_\
ast.Constant object at 0x7fd4c04cc130>, <_ast.Constant object at 0x7fd4c04ccdc0>, <_ast.Constant object at 0x7fd4c04cc700>](1)"	[label=assignedFrom];
	"news_train(1)$0" -> "news_train(1)"	[label=drop];
	"news_train(1)$0" -> "drop_list(1)$0"	[label=drop];
	"col(1)" -> "[<_ast.Constant object at 0x7fd4c04cc0a0>, <_ast.Constant object at 0x7fd4c04cc940>, <_ast.Constant object at 0x7fd4c04cc610>](1)"	[label=iteratorOf];
	"news_train(1)$1" -> "news_train(1)$0"	[label=factorize];
	"news_train(1)$1" -> "col(1)"	[label=factorize];
	"news_train(1)$1" -> "news_train(1)$1"	[label=factorize];
	"news_train(1)$1" -> "pd(1)"	[label=factorize];
	"uniques(1)$0" -> "col(1)"	[label=factorize];
	"uniques(1)$0" -> "news_train(1)$1"	[label=factorize];
	"uniques(1)$0" -> "pd(1)"	[label=factorize];
	"news_train(1)$2" -> "news_train(1)$1"	[label=apply];
	"news_train(1)$2" -> "assetCodes(1)"	[label=apply];
	"news_train(1)$2" -> "x(1)"	[label=apply];
	"news_train(1)$2" -> "1(1)"	[label=apply];
	"news_train(1)$2" -> "'(1)"	[label=apply];
	"news_train(1)$2" -> "(1)"	[label=apply];
	"news_train(0)$3" -> "news_train(0)$2"	[label=preprocess_news];
	"news_train(2)" -> "unstack_asset_codes[0]"	[label=_argToVar];
	"codes(2)$0" -> "[](2)"	[label=assignedFrom];
	"indexes(2)$0" -> "[](2)"	[label=assignedFrom];
	"i(2)" -> "news_train(2)"	[label=iteratorOf];
	"i(2)" -> "assetCodes(2)"	[label=iteratorOf];
	"values(2)" -> "news_train(2)"	[label=iteratorOf];
	"values(2)" -> "assetCodes(2)"	[label=iteratorOf];
	"explode(2)$0" -> "values(2)"	[label=split];
	"explode(2)$0" -> ", (2)"	[label=split];
	"codes(2)$1" -> "codes(2)$0"	[label=extend];
	"codes(2)$1" -> "explode(2)$0"	[label=extend];
	"repeat_index(2)$0" -> "explode(2)$0"	[label=Mult];
	"repeat_index(2)$0" -> "[<_ast.Call object at 0x7fd4902ab5e0>](2)"	[label=Mult];
	"repeat_index(2)$0" -> "len(2)"	[label=Mult];
	"indexes(2)$1" -> "indexes(2)$0"	[label=extend];
	"indexes(2)$1" -> "repeat_index(2)$0"	[label=extend];
	"index_df(2)$0" -> "codes(2)$1"	[label=DataFrame];
	"index_df(2)$0" -> "indexes(2)$1"	[label=DataFrame];
	"index_df(2)$0" -> "pd(2)"	[label=DataFrame];
	"index_df(2)$0" -> "news_index(2)"	[label=DataFrame];
	"index_df(2)$0" -> "assetCode(2)"	[label=DataFrame];
	"gc(2)$0" -> "gc(2)"	[label=collect];
	"index_df(0)$0" -> "news_train(0)$3"	[label=unstack_asset_codes];
	"index_df(0)$1" -> "index_df(0)$0"	[label=head];
	"news_train(3)" -> "merge_news_on_index[0]"	[label=_argToVar];
	"index_df(3)" -> "merge_news_on_index[1]"	[label=_argToVar];
	"news_train(3)$0" -> "news_train(3)"	[label=copy];
	"news_unstack(3)$0" -> "index_df(3)"	[label=merge];
	"news_unstack(3)$0" -> "news_train(3)$0"	[label=merge];
	"news_unstack(3)$0" -> "left(3)"	[label=merge];
	"news_unstack(3)$0" -> "news_index(3)"	[label=merge];
	"news_unstack(3)$1" -> "news_unstack(3)$0"	[label=drop];
	"news_unstack(3)$1" -> "[<_ast.Constant object at 0x7fd50085b670>, <_ast.Constant object at 0x7fd50085b130>](3)"	[label=drop];
	"news_unstack(0)$0" -> "news_train(0)$3"	[label=merge_news_on_index];
	"news_unstack(0)$0" -> "index_df(0)$1"	[label=merge_news_on_index];
	"gc(0)$0" -> "gc(0)"	[label=collect];
	"news_unstack(0)$1" -> "3(0)"	[label=head];
	"news_unstack(0)$1" -> "news_unstack(0)$0"	[label=head];
	"news_frame(4)" -> "group_news[0]"	[label=_argToVar];
	"news_frame(4)$0" -> "news_frame(4)"	[label=assignedFrom];
	"aggregations(4)$0" -> "[<_ast.Constant object at 0x7fd50085b0a0>](4)"	[label=assignedFrom];
	"gp(4)$0" -> "news_frame(4)$0"	[label=agg];
	"gp(4)$0" -> "aggregations(4)$0"	[label=agg];
	"gp(4)$0" -> "[<_ast.Constant object at 0x7fd5009996a0>, <_ast.Constant object at 0x7fd5009997f0>](4)"	[label=agg];
	"gp(4)$1" -> "gp(4)$0"	[label=Index];
	"gp(4)$1" -> "gp(4)$1"	[label=Index];
	"gp(4)$1" -> "pd(4)"	[label=Index];
	"gp(4)$1" -> "{}_{}(4)"	[label=Index];
	"gp(4)$1" -> "e(4)"	[label=Index];
	"gp(4)$1" -> "0(4)"	[label=Index];
	"gp(4)$1" -> "1(4)"	[label=Index];
	"gp(4)$2" -> "gp(4)$1"	[label=reset_index];
	"float_cols(4)$0" -> "gp(4)$2"	[label=assignedFrom];
	"float_cols(4)$0" -> "c(4)"	[label=assignedFrom];
	"float_cols(4)$0" -> "float32(4)"	[label=assignedFrom];
	"float_cols(4)$0" -> "[<_ast.Constant object at 0x7fd500999850>, <_ast.Constant object at 0x7fd500999730>](4)"	[label=assignedFrom];
	"news_agg(0)$0" -> "news_unstack(0)$1"	[label=group_news];
	"gc(0)$1" -> "gc(0)$0"	[label=collect];
	"news_agg(0)$1" -> "3(0)"	[label=head];
	"news_agg(0)$1" -> "news_agg(0)$0"	[label=head];
	"market_train(0)$3" -> "market_train(0)$2"	[label=assignedFrom];
	"df(0)$0" -> "news_agg(0)$1"	[label=merge];
	"df(0)$0" -> "market_train(0)$3"	[label=merge];
	"df(0)$0" -> "left(0)"	[label=merge];
	"df(0)$0" -> "[<_ast.Constant object at 0x7fd5008321f0>, <_ast.Constant object at 0x7fd500832790>](0)"	[label=merge];
	"left(0)" -> "baseline-with-news.ipynb"	[label=appearsIn];
	"[<_ast.Constant object at 0x7fd5008321f0>, <_ast.Constant object at 0x7fd500832790>](0)" -> "baseline-with-news.ipynb"	[label=appearsIn];
	"gc(0)$2" -> "gc(0)$1"	[label=collect];
	"df(0)$1" -> "3(0)"	[label=head];
	"df(0)$1" -> "df(0)$0"	[label=head];
	"date(5)" -> "custom_metric[0]"	[label=_argToVar];
	"pred_proba(5)" -> "custom_metric[1]"	[label=_argToVar];
	"num_target(5)" -> "custom_metric[2]"	[label=_argToVar];
	"universe(5)" -> "custom_metric[3]"	[label=_argToVar];
	"y(5)$0" -> "pred_proba(5)"	[label=Sub];
	"y(5)$0" -> "2(5)"	[label=Sub];
	"y(5)$0" -> "1(5)"	[label=Sub];
	"r(5)$0" -> "num_target(5)"	[label=clip];
	"r(5)$0" -> "1(5)"	[label=clip];
	"x(5)$0" -> "universe(5)"	[label=Mult];
	"x(5)$0" -> "y(5)$0"	[label=Mult];
	"x(5)$0" -> "r(5)$0"	[label=Mult];
	"result(5)$0" -> "date(5)"	[label=DataFrame];
	"result(5)$0" -> "x(5)$0"	[label=DataFrame];
	"result(5)$0" -> "pd(5)"	[label=DataFrame];
	"result(5)$0" -> "day(5)"	[label=DataFrame];
	"x_t(5)$0" -> "result(5)$0"	[label=assignedFrom];
	"x_t(5)$0" -> "day(5)"	[label=assignedFrom];
	"date(0)$0" -> "df(0)$1"	[label=assignedFrom];
	"num_target(0)$0" -> "df(0)$1"	[label=astype];
	"num_target(0)$0" -> "float32(0)"	[label=astype];
	"float32(0)" -> "baseline-with-news.ipynb"	[label=appearsIn];
	"bin_target(0)$0" -> "0(0)"	[label=astype];
	"bin_target(0)$0" -> "df(0)$1"	[label=astype];
	"bin_target(0)$0" -> "int8(0)"	[label=astype];
	"int8(0)" -> "baseline-with-news.ipynb"	[label=appearsIn];
	"universe(0)$0" -> "df(0)$1"	[label=astype];
	"universe(0)$0" -> "int8(0)"	[label=astype];
	"df(0)$2" -> "df(0)$1"	[label=drop];
	"df(0)$2" -> "[<_ast.Constant object at 0x7fd50080df40>, <_ast.Constant object at 0x7fd50080dd30>, <_ast.Constant object at 0x7fd50080d520>, <_\
ast.Constant object at 0x7fd50080d760>, <_ast.Constant object at 0x7fd50080d1f0>, <_ast.Constant object at 0x7fd50080d040>](0)"	[label=drop];
	"[<_ast.Constant object at 0x7fd50080df40>, <_ast.Constant object at 0x7fd50080dd30>, <_ast.Constant object at 0x7fd50080d520>, <_\
ast.Constant object at 0x7fd50080d760>, <_ast.Constant object at 0x7fd50080d1f0>, <_ast.Constant object at 0x7fd50080d040>](0)" -> "baseline-with-news.ipynb"	[label=appearsIn];
	"df(0)$3" -> "float32(0)"	[label=astype];
	"df(0)$3" -> "df(0)$2"	[label=astype];
	"gc(0)$3" -> "gc(0)$2"	[label=collect];
	"train_index(0)$0" -> "df(0)$3"	[label=train_test_split];
	"train_index(0)$0" -> "0.1(0)"	[label=train_test_split];
	"train_index(0)$0" -> "False(0)"	[label=train_test_split];
	"0.1(0)" -> "baseline-with-news.ipynb"	[label=appearsIn];
	"False(0)" -> "baseline-with-news.ipynb"	[label=appearsIn];
	"test_index(0)$0" -> "df(0)$3"	[label=train_test_split];
	"test_index(0)$0" -> "0.1(0)"	[label=train_test_split];
	"test_index(0)$0" -> "False(0)"	[label=train_test_split];
	"df(6)" -> "evaluate_model[0]"	[label=_argToVar];
	"target(6)" -> "evaluate_model[1]"	[label=_argToVar];
	"train_index(6)" -> "evaluate_model[2]"	[label=_argToVar];
	"test_index(6)" -> "evaluate_model[3]"	[label=_argToVar];
	"params(6)" -> "evaluate_model[4]"	[label=_argToVar];
	"params(6)$0" -> "params(6)"	[label=assignedFrom];
	"params(6)$0" -> "2(6)"	[label=assignedFrom];
	"model(6)$0" -> "params(6)$0"	[label=LGBMClassifier];
	"model(6)$1" -> "df(6)"	[label=fit];
	"model(6)$1" -> "target(6)"	[label=fit];
	"model(6)$1" -> "train_index(6)"	[label=fit];
	"model(6)$1" -> "model(6)$0"	[label=fit];
	"learning_rate(0)" -> "baseline-with-news.ipynb"	[label=appearsIn];
	"param_grid(0)$0" -> "learning_rate(0)"	[label=assignedFrom];
	"param_grid(0)$0" -> "num_leaves(0)"	[label=assignedFrom];
	"param_grid(0)$0" -> "n_estimators(0)"	[label=assignedFrom];
	"param_grid(0)$0" -> "min_child_samples(0)"	[label=assignedFrom];
	"param_grid(0)$0" -> "colsample_bytree(0)"	[label=assignedFrom];
	"param_grid(0)$0" -> "subsample(0)"	[label=assignedFrom];
	"param_grid(0)$0" -> "reg_alpha(0)"	[label=assignedFrom];
	"param_grid(0)$0" -> "reg_lambda(0)"	[label=assignedFrom];
	"param_grid(0)$0" -> "[<_ast.Constant object at 0x7fd50082d910>, <_ast.Constant object at 0x7fd50082d8e0>, <_ast.Constant object at 0x7fd50082dc10>, <_\
ast.Constant object at 0x7fd50082da30>, <_ast.Constant object at 0x7fd50082dee0>](0)"	[label=assignedFrom];
	"param_grid(0)$0" -> "i(0)"	[label=assignedFrom];
	"param_grid(0)$0" -> "range(0)"	[label=assignedFrom];
	"param_grid(0)$0" -> "12(0)"	[label=assignedFrom];
	"param_grid(0)$0" -> "90(0)"	[label=assignedFrom];
	"param_grid(0)$0" -> "6(0)"	[label=assignedFrom];
	"param_grid(0)$0" -> "[<_ast.Constant object at 0x7fd4c04ff280>, <_ast.Constant object at 0x7fd4c04ff970>, <_ast.Constant object at 0x7fd4c04ff730>, <_\
ast.Constant object at 0x7fd4c04ff430>, <_ast.Constant object at 0x7fd4c04ff670>](0)"	[label=assignedFrom];
	"param_grid(0)$0" -> "10(0)"	[label=assignedFrom];
	"param_grid(0)$0" -> "100(0)"	[label=assignedFrom];
	"param_grid(0)$0" -> "[<_ast.Constant object at 0x7fd4c04ff610>, <_ast.Constant object at 0x7fd4c04fff70>, <_ast.Constant object at 0x7fd4c04ff460>, <_\
ast.Constant object at 0x7fd4c04ffd60>](0)"	[label=assignedFrom];
	"param_grid(0)$0" -> "[<_ast.Constant object at 0x7fd4c04ff910>, <_ast.Constant object at 0x7fd4c04ffb50>, <_ast.Constant object at 0x7fd4c04ffb20>, <_\
ast.Constant object at 0x7fd4c04ff640>](0)"	[label=assignedFrom];
	"param_grid(0)$0" -> "[<_ast.Constant object at 0x7fd4c04ff7c0>, <_ast.Constant object at 0x7fd4c04ff6d0>, <_ast.Constant object at 0x7fd4c04ff4c0>, <_\
ast.Constant object at 0x7fd4c04ffe50>, <_ast.Constant object at 0x7fd4c04ffa60>](0)"	[label=assignedFrom];
	"param_grid(0)$0" -> "[<_ast.Constant object at 0x7fd4c04ffd00>, <_ast.Constant object at 0x7fd4c04ff700>, <_ast.Constant object at 0x7fd4c04ffbb0>, <_\
ast.Constant object at 0x7fd4c04ff880>, <_ast.Constant object at 0x7fd4c04ffca0>](0)"	[label=assignedFrom];
	"num_leaves(0)" -> "baseline-with-news.ipynb"	[label=appearsIn];
	"n_estimators(0)" -> "baseline-with-news.ipynb"	[label=appearsIn];
	"min_child_samples(0)" -> "baseline-with-news.ipynb"	[label=appearsIn];
	"colsample_bytree(0)" -> "baseline-with-news.ipynb"	[label=appearsIn];
	"subsample(0)" -> "baseline-with-news.ipynb"	[label=appearsIn];
	"reg_alpha(0)" -> "baseline-with-news.ipynb"	[label=appearsIn];
	"reg_lambda(0)" -> "baseline-with-news.ipynb"	[label=appearsIn];
	"[<_ast.Constant object at 0x7fd50082d910>, <_ast.Constant object at 0x7fd50082d8e0>, <_ast.Constant object at 0x7fd50082dc10>, <_\
ast.Constant object at 0x7fd50082da30>, <_ast.Constant object at 0x7fd50082dee0>](0)" -> "baseline-with-news.ipynb"	[label=appearsIn];
	"i(0)" -> "baseline-with-news.ipynb"	[label=appearsIn];
	"i(0)" -> "range(0)"	[label=iteratorOf];
	"i(0)" -> "100(0)"	[label=iteratorOf];
	"range(0)" -> "baseline-with-news.ipynb"	[label=appearsIn];
	"12(0)" -> "baseline-with-news.ipynb"	[label=appearsIn];
	"90(0)" -> "baseline-with-news.ipynb"	[label=appearsIn];
	"6(0)" -> "baseline-with-news.ipynb"	[label=appearsIn];
	"[<_ast.Constant object at 0x7fd4c04ff280>, <_ast.Constant object at 0x7fd4c04ff970>, <_ast.Constant object at 0x7fd4c04ff730>, <_\
ast.Constant object at 0x7fd4c04ff430>, <_ast.Constant object at 0x7fd4c04ff670>](0)" -> "baseline-with-news.ipynb"	[label=appearsIn];
	"10(0)" -> "baseline-with-news.ipynb"	[label=appearsIn];
	"100(0)" -> "baseline-with-news.ipynb"	[label=appearsIn];
	"[<_ast.Constant object at 0x7fd4c04ff610>, <_ast.Constant object at 0x7fd4c04fff70>, <_ast.Constant object at 0x7fd4c04ff460>, <_\
ast.Constant object at 0x7fd4c04ffd60>](0)" -> "baseline-with-news.ipynb"	[label=appearsIn];
	"[<_ast.Constant object at 0x7fd4c04ff910>, <_ast.Constant object at 0x7fd4c04ffb50>, <_ast.Constant object at 0x7fd4c04ffb20>, <_\
ast.Constant object at 0x7fd4c04ff640>](0)" -> "baseline-with-news.ipynb"	[label=appearsIn];
	"[<_ast.Constant object at 0x7fd4c04ff7c0>, <_ast.Constant object at 0x7fd4c04ff6d0>, <_ast.Constant object at 0x7fd4c04ff4c0>, <_\
ast.Constant object at 0x7fd4c04ffe50>, <_ast.Constant object at 0x7fd4c04ffa60>](0)" -> "baseline-with-news.ipynb"	[label=appearsIn];
	"[<_ast.Constant object at 0x7fd4c04ffd00>, <_ast.Constant object at 0x7fd4c04ff700>, <_ast.Constant object at 0x7fd4c04ffbb0>, <_\
ast.Constant object at 0x7fd4c04ff880>, <_ast.Constant object at 0x7fd4c04ffca0>](0)" -> "baseline-with-news.ipynb"	[label=appearsIn];
	"best_eval_score(0)$0" -> "0(0)"	[label=assignedFrom];
	"k(0)" -> "baseline-with-news.ipynb"	[label=appearsIn];
	"params(0)$0" -> "np(0)"	[label=assignedFrom];
	"params(0)$0" -> "param_grid(0)$0"	[label=assignedFrom];
	"params(0)$0" -> "k(0)"	[label=assignedFrom];
	"params(0)$0" -> "v(0)"	[label=assignedFrom];
	"v(0)" -> "baseline-with-news.ipynb"	[label=appearsIn];
	"score(0)$0" -> "bin_target(0)$0"	[label=evaluate_model];
	"score(0)$0" -> "df(0)$3"	[label=evaluate_model];
	"score(0)$0" -> "train_index(0)$0"	[label=evaluate_model];
	"score(0)$0" -> "test_index(0)$0"	[label=evaluate_model];
	"score(0)$0" -> "params(0)$0"	[label=evaluate_model];
	"best_eval_score(0)$1" -> "score(0)$0"	[label=assignedFrom];
	"best_params(0)$0" -> "params(0)$0"	[label=assignedFrom];
	"Best evaluation logloss(0)" -> "baseline-with-news.ipynb"	[label=appearsIn];
	"print[125/0]" -> "best_eval_score(0)$1"	[label=print];
	"print[125/0]" -> "Best evaluation logloss(0)"	[label=print];
	"clf(0)$0" -> "best_params(0)$0"	[label=LGBMClassifier];
	"clf(0)$1" -> "bin_target(0)$0"	[label=fit];
	"clf(0)$1" -> "df(0)$3"	[label=fit];
	"clf(0)$1" -> "clf(0)$0"	[label=fit];
	"model(7)" -> "write_submission[0]"	[label=_argToVar];
	"env(7)" -> "write_submission[1]"	[label=_argToVar];
	"days(7)$0" -> "env(7)"	[label=get_prediction_days];
	"market_obs_df(7)" -> "days(7)$0"	[label=iteratorOf];
	"news_obs_df(7)" -> "days(7)$0"	[label=iteratorOf];
	"predictions_template_df(7)" -> "days(7)$0"	[label=iteratorOf];
	"news_obs_df(7)$0" -> "news_obs_df(7)"	[label=preprocess_news];
	"index_df(7)$0" -> "news_obs_df(7)$0"	[label=unstack_asset_codes];
	"news_unstack(7)$0" -> "news_obs_df(7)$0"	[label=merge_news_on_index];
	"news_unstack(7)$0" -> "index_df(7)$0"	[label=merge_news_on_index];
	"news_obs_agg(7)$0" -> "news_unstack(7)$0"	[label=group_news];
	"market_obs_df(7)$0" -> "market_obs_df(7)"	[label=assignedFrom];
	"obs_df(7)$0" -> "news_obs_agg(7)$0"	[label=merge];
	"obs_df(7)$0" -> "market_obs_df(7)$0"	[label=merge];
	"obs_df(7)$0" -> "left(7)"	[label=merge];
	"obs_df(7)$0" -> "[<_ast.Constant object at 0x7fd4c095c430>, <_ast.Constant object at 0x7fd4c095c7f0>](7)"	[label=merge];
	"gc(7)$0" -> "gc(7)"	[label=collect];
	"obs_df(7)$1" -> "predictions_template_df(7)"	[label=assignedFrom];
	"obs_df(7)$1" -> "obs_df(7)$0"	[label=assignedFrom];
	"obs_df(7)$1" -> "obs_df(7)$1"	[label=assignedFrom];
	"feats(7)$0" -> "obs_df(7)$1"	[label=assignedFrom];
	"feats(7)$0" -> "c(7)"	[label=assignedFrom];
	"feats(7)$0" -> "[<_ast.Constant object at 0x7fd4c095c820>, <_ast.Constant object at 0x7fd4c095c040>, <_ast.Constant object at 0x7fd4c095c940>, <_\
ast.Constant object at 0x7fd4c095cd90>](7)"	[label=assignedFrom];
	"preds(7)$0" -> "model(7)"	[label=Sub];
	"preds(7)$0" -> "obs_df(7)$1"	[label=Sub];
	"preds(7)$0" -> "feats(7)$0"	[label=Sub];
	"preds(7)$0" -> "1(7)"	[label=Sub];
	"preds(7)$0" -> "2(7)"	[label=Sub];
	"sub(7)$0" -> "obs_df(7)$1"	[label=DataFrame];
	"sub(7)$0" -> "preds(7)$0"	[label=DataFrame];
	"sub(7)$0" -> "pd(7)"	[label=DataFrame];
	"sub(7)$0" -> "assetCode(7)"	[label=DataFrame];
	"sub(7)$0" -> "confidence(7)"	[label=DataFrame];
	"predictions_template_df(7)$0" -> "predictions_template_df(7)"	[label=rename];
	"predictions_template_df(7)$0" -> "left(7)"	[label=rename];
	"predictions_template_df(7)$0" -> "1(7)"	[label=rename];
	"predictions_template_df(7)$0" -> "sub(7)$0"	[label=rename];
	"predictions_template_df(7)$0" -> "confidence(7)"	[label=rename];
	"predictions_template_df(7)$0" -> "confidenceValue(7)"	[label=rename];
	"predictions_template_df(7)$0" -> "0(7)"	[label=rename];
	"env(7)$0" -> "env(7)"	[label=predict];
	"env(7)$0" -> "predictions_template_df(7)$0"	[label=predict];
	"gc(7)$1" -> "gc(7)$0"	[label=collect];
	"env(7)$1" -> "env(7)$0"	[label=write_submission_file];
	"write_submission[159/0]" -> "env(0)$0"	[label=write_submission];
	"write_submission[159/0]" -> "clf(0)$1"	[label=write_submission];
	"feat_importance(0)$0" -> "pd(0)$0"	[label=DataFrame];
	"feat_importance(0)$1" -> "df(0)$3"	[label=assignedFrom];
	"feat_importance(0)$1" -> "feat_importance(0)$0"	[label=assignedFrom];
	"feat_importance(0)$2" -> "clf(0)$1"	[label=feature_importance];
	"feat_importance(0)$2" -> "feat_importance(0)$1"	[label=feature_importance];
	"feat_importance(0)$2" -> "gain(0)"	[label=feature_importance];
	"gain(0)" -> "baseline-with-news.ipynb"	[label=appearsIn];
	"feat_importance(0)$3" -> "feat_importance(0)$2"	[label=sort_values];
	"plt(0)$0" -> "plt(0)"	[label=figure];
	"ax(0)$0" -> "sns(0)"	[label=barplot];
	"ax(0)$0" -> "gain(0)"	[label=barplot];
	"ax(0)$0" -> "feat_importance(0)$3"	[label=barplot];
	"ax(0)$0" -> "feature(0)"	[label=barplot];
	"feature(0)" -> "baseline-with-news.ipynb"	[label=appearsIn];
}
