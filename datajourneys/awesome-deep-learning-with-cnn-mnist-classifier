digraph "" {
	__future__ -> "awesome-deep-learning-with-cnn-mnist-classifier.ipynb"	[label=importedBy];
	absolute_import -> __future__	[label=importedBy];
	"absolute_import(0)" -> "awesome-deep-learning-with-cnn-mnist-classifier.ipynb"	[label=appearsIn];
	"absolute_import(0)" -> absolute_import	[label=assignedFrom];
	division -> __future__	[label=importedBy];
	"division(0)" -> "awesome-deep-learning-with-cnn-mnist-classifier.ipynb"	[label=appearsIn];
	"division(0)" -> division	[label=assignedFrom];
	print_function -> __future__	[label=importedBy];
	"print_function(0)" -> "awesome-deep-learning-with-cnn-mnist-classifier.ipynb"	[label=appearsIn];
	"print_function(0)" -> print_function	[label=assignedFrom];
	tensorflow -> "awesome-deep-learning-with-cnn-mnist-classifier.ipynb"	[label=importedBy];
	"tf(0)" -> "awesome-deep-learning-with-cnn-mnist-classifier.ipynb"	[label=appearsIn];
	"tf(0)" -> tensorflow	[label=assignedFrom];
	numpy -> "awesome-deep-learning-with-cnn-mnist-classifier.ipynb"	[label=importedBy];
	"np(0)" -> "awesome-deep-learning-with-cnn-mnist-classifier.ipynb"	[label=appearsIn];
	"np(0)" -> numpy	[label=assignedFrom];
	"tf(0)$0" -> "tf(0)"	[label=set_verbosity];
	"tf(0)$0" -> "tf(0)$0"	[label=set_verbosity];
	"features(1)" -> "cnn_model_fn[0]"	[label=_argToVar];
	"labels(1)" -> "cnn_model_fn[1]"	[label=_argToVar];
	"mode(1)" -> "cnn_model_fn[2]"	[label=_argToVar];
	"input_layer(1)$0" -> "features(1)"	[label=reshape];
	"input_layer(1)$0" -> "tf(1)"	[label=reshape];
	"input_layer(1)$0" -> "x(1)"	[label=reshape];
	"input_layer(1)$0" -> "[<_ast.UnaryOp object at 0x7fd4c048ecd0>, <_ast.Constant object at 0x7fd4c048ed90>, <_ast.Constant object at 0x7fd4c048ec70>, <_\
ast.Constant object at 0x7fd4c048e5b0>](1)"	[label=reshape];
	"conv1(1)$0" -> "input_layer(1)$0"	[label=conv2d];
	"conv1(1)$0" -> "tf(1)"	[label=conv2d];
	"conv1(1)$0" -> "32(1)"	[label=conv2d];
	"conv1(1)$0" -> "[<_ast.Constant object at 0x7fd50080d8b0>, <_ast.Constant object at 0x7fd50080da00>](1)"	[label=conv2d];
	"conv1(1)$0" -> "same(1)"	[label=conv2d];
	"pool1(1)$0" -> "tf(1)"	[label=max_pooling2d];
	"pool1(1)$0" -> "conv1(1)$0"	[label=max_pooling2d];
	"pool1(1)$0" -> "[<_ast.Constant object at 0x7fd50080d8e0>, <_ast.Constant object at 0x7fd50080d610>](1)"	[label=max_pooling2d];
	"pool1(1)$0" -> "2(1)"	[label=max_pooling2d];
	"conv2(1)$0" -> "tf(1)"	[label=conv2d];
	"conv2(1)$0" -> "same(1)"	[label=conv2d];
	"conv2(1)$0" -> "pool1(1)$0"	[label=conv2d];
	"conv2(1)$0" -> "64(1)"	[label=conv2d];
	"conv2(1)$0" -> "[<_ast.Constant object at 0x7fd50080d460>, <_ast.Constant object at 0x7fd50080dbe0>](1)"	[label=conv2d];
	"pool2(1)$0" -> "tf(1)"	[label=max_pooling2d];
	"pool2(1)$0" -> "2(1)"	[label=max_pooling2d];
	"pool2(1)$0" -> "conv2(1)$0"	[label=max_pooling2d];
	"pool2(1)$0" -> "[<_ast.Constant object at 0x7fd50080d4f0>, <_ast.Constant object at 0x7fd50080d0d0>](1)"	[label=max_pooling2d];
	"pool2_flat(1)$0" -> "tf(1)"	[label=reshape];
	"pool2_flat(1)$0" -> "pool2(1)$0"	[label=reshape];
	"pool2_flat(1)$0" -> "[<_ast.UnaryOp object at 0x7fd4c04cc130>, <_ast.BinOp object at 0x7fd4c04ccfa0>](1)"	[label=reshape];
	"dense(1)$0" -> "tf(1)"	[label=dense];
	"dense(1)$0" -> "pool2_flat(1)$0"	[label=dense];
	"dense(1)$0" -> "1024(1)"	[label=dense];
	"dropout(1)$0" -> "mode(1)"	[label=dropout];
	"dropout(1)$0" -> "tf(1)"	[label=dropout];
	"dropout(1)$0" -> "dense(1)$0"	[label=dropout];
	"dropout(1)$0" -> "0.4(1)"	[label=dropout];
	"logits(1)$0" -> "tf(1)"	[label=dense];
	"logits(1)$0" -> "dropout(1)$0"	[label=dense];
	"logits(1)$0" -> "10(1)"	[label=dense];
	"predictions(1)$0" -> "tf(1)"	[label=assignedFrom];
	"predictions(1)$0" -> "logits(1)$0"	[label=assignedFrom];
	"predictions(1)$0" -> "classes(1)"	[label=assignedFrom];
	"predictions(1)$0" -> "probabilities(1)"	[label=assignedFrom];
	"predictions(1)$0" -> "1(1)"	[label=assignedFrom];
	"predictions(1)$0" -> "softmax_tensor(1)"	[label=assignedFrom];
	"loss(1)$0" -> "labels(1)"	[label=sparse_softmax_cross_entropy];
	"loss(1)$0" -> "tf(1)"	[label=sparse_softmax_cross_entropy];
	"loss(1)$0" -> "logits(1)$0"	[label=sparse_softmax_cross_entropy];
	"optimizer(1)$0" -> "tf(1)"	[label=GradientDescentOptimizer];
	"optimizer(1)$0" -> "0.001(1)"	[label=GradientDescentOptimizer];
	"train_op(1)$0" -> "tf(1)"	[label=minimize];
	"train_op(1)$0" -> "loss(1)$0"	[label=minimize];
	"train_op(1)$0" -> "optimizer(1)$0"	[label=minimize];
	"eval_metric_ops(1)$0" -> "labels(1)"	[label=assignedFrom];
	"eval_metric_ops(1)$0" -> "tf(1)"	[label=assignedFrom];
	"eval_metric_ops(1)$0" -> "predictions(1)$0"	[label=assignedFrom];
	"eval_metric_ops(1)$0" -> "classes(1)"	[label=assignedFrom];
	"eval_metric_ops(1)$0" -> "accuracy(1)"	[label=assignedFrom];
	"train_data(0)$0" -> "tf(0)$0"	[label=load_data];
	"train_labels(0)$0" -> "tf(0)$0"	[label=load_data];
	"eval_data(0)$0" -> "tf(0)$0"	[label=load_data];
	"eval_labels(0)$0" -> "tf(0)$0"	[label=load_data];
	"train_data(0)$1" -> "np(0)"	[label=Div];
	"train_data(0)$1" -> "train_data(0)$0"	[label=Div];
	"train_data(0)$1" -> "255(0)"	[label=Div];
	"255(0)" -> "awesome-deep-learning-with-cnn-mnist-classifier.ipynb"	[label=appearsIn];
	"train_labels(0)$1" -> "np(0)"	[label=astype];
	"train_labels(0)$1" -> "train_labels(0)$0"	[label=astype];
	"eval_data(0)$1" -> "np(0)"	[label=Div];
	"eval_data(0)$1" -> "eval_data(0)$0"	[label=Div];
	"eval_data(0)$1" -> "255(0)"	[label=Div];
	"eval_labels(0)$1" -> "np(0)"	[label=astype];
	"eval_labels(0)$1" -> "eval_labels(0)$0"	[label=astype];
	"mnist_classifier(0)$0" -> "tf(0)$0"	[label=Estimator];
	"mnist_classifier(0)$0" -> "cnn_model_fn(0)"	[label=Estimator];
	"mnist_classifier(0)$0" -> "/tmp/mnist_convnet_model(0)"	[label=Estimator];
	"cnn_model_fn(0)" -> "awesome-deep-learning-with-cnn-mnist-classifier.ipynb"	[label=appearsIn];
	"/tmp/mnist_convnet_model(0)" -> "awesome-deep-learning-with-cnn-mnist-classifier.ipynb"	[label=appearsIn];
	"probabilities(0)" -> "awesome-deep-learning-with-cnn-mnist-classifier.ipynb"	[label=appearsIn];
	"tensors_to_log(0)$0" -> "probabilities(0)"	[label=assignedFrom];
	"tensors_to_log(0)$0" -> "softmax_tensor(0)"	[label=assignedFrom];
	"softmax_tensor(0)" -> "awesome-deep-learning-with-cnn-mnist-classifier.ipynb"	[label=appearsIn];
	"logging_hook(0)$0" -> "tf(0)$0"	[label=LoggingTensorHook];
	"logging_hook(0)$0" -> "tensors_to_log(0)$0"	[label=LoggingTensorHook];
	"logging_hook(0)$0" -> "50(0)"	[label=LoggingTensorHook];
	"50(0)" -> "awesome-deep-learning-with-cnn-mnist-classifier.ipynb"	[label=appearsIn];
	"train_input_fn(0)$0" -> "tf(0)$0"	[label=numpy_input_fn];
	"train_input_fn(0)$0" -> "train_data(0)$1"	[label=numpy_input_fn];
	"train_input_fn(0)$0" -> "train_labels(0)$1"	[label=numpy_input_fn];
	"train_input_fn(0)$0" -> "x(0)"	[label=numpy_input_fn];
	"train_input_fn(0)$0" -> "100(0)"	[label=numpy_input_fn];
	"train_input_fn(0)$0" -> "None(0)"	[label=numpy_input_fn];
	"train_input_fn(0)$0" -> "True(0)"	[label=numpy_input_fn];
	"x(0)" -> "awesome-deep-learning-with-cnn-mnist-classifier.ipynb"	[label=appearsIn];
	"100(0)" -> "awesome-deep-learning-with-cnn-mnist-classifier.ipynb"	[label=appearsIn];
	"None(0)" -> "awesome-deep-learning-with-cnn-mnist-classifier.ipynb"	[label=appearsIn];
	"True(0)" -> "awesome-deep-learning-with-cnn-mnist-classifier.ipynb"	[label=appearsIn];
	"mnist_classifier(0)$1" -> "mnist_classifier(0)$0"	[label=train];
	"mnist_classifier(0)$2" -> "mnist_classifier(0)$1"	[label=train];
	"eval_input_fn(0)$0" -> "tf(0)$0"	[label=numpy_input_fn];
	"eval_input_fn(0)$0" -> "eval_data(0)$1"	[label=numpy_input_fn];
	"eval_input_fn(0)$0" -> "eval_labels(0)$1"	[label=numpy_input_fn];
	"eval_input_fn(0)$0" -> "x(0)"	[label=numpy_input_fn];
	"eval_input_fn(0)$0" -> "1(0)"	[label=numpy_input_fn];
	"eval_input_fn(0)$0" -> "False(0)"	[label=numpy_input_fn];
	"1(0)" -> "awesome-deep-learning-with-cnn-mnist-classifier.ipynb"	[label=appearsIn];
	"False(0)" -> "awesome-deep-learning-with-cnn-mnist-classifier.ipynb"	[label=appearsIn];
	"eval_results(0)$0" -> "mnist_classifier(0)$2"	[label=evaluate];
	"eval_results(0)$0" -> "eval_input_fn(0)$0"	[label=evaluate];
	"print[109/0]" -> "eval_results(0)$0"	[label=print];
}
