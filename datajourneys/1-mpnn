digraph "" {
	tensorflow -> "1-mpnn.ipynb"	[label=importedBy];
	"tf(0)" -> tensorflow	[label=assignedFrom];
	"tf(0)" -> "1-mpnn.ipynb"	[label=appearsIn];
	numpy -> "1-mpnn.ipynb"	[label=importedBy];
	"np(0)" -> "1-mpnn.ipynb"	[label=appearsIn];
	"np(0)" -> numpy	[label=assignedFrom];
	pandas -> "1-mpnn.ipynb"	[label=importedBy];
	"pd(0)" -> "1-mpnn.ipynb"	[label=appearsIn];
	"pd(0)" -> pandas	[label=assignedFrom];
	"sklearn.utils" -> "1-mpnn.ipynb"	[label=importedBy];
	shuffle -> "sklearn.utils"	[label=importedBy];
	"shuffle(0)" -> "1-mpnn.ipynb"	[label=appearsIn];
	"shuffle(0)" -> shuffle	[label=assignedFrom];
	os -> "1-mpnn.ipynb"	[label=importedBy];
	"os(0)" -> "1-mpnn.ipynb"	[label=appearsIn];
	"os(0)" -> os	[label=assignedFrom];
	"print[9/0]" -> "os(0)"	[label=print];
	"print[9/0]" -> "../input(0)"	[label=print];
	"../input(0)" -> "1-mpnn.ipynb"	[label=appearsIn];
	"print[11/0]" -> "tf(0)"	[label=print];
	"tf(0)$0" -> "tf(0)"	[label=is_gpu_available];
	"../input/(0)" -> "1-mpnn.ipynb"	[label=appearsIn];
	"datadir(0)$0" -> "../input/(0)"	[label=assignedFrom];
	"nodes_train(0)$0" -> "np(0)"	[label=assignedFrom];
	"nodes_train(0)$0" -> "datadir(0)$0"	[label=assignedFrom];
	"nodes_train(0)$0" -> "champs-basic-graph/nodes_train.npz(0)"	[label=assignedFrom];
	"nodes_train(0)$0" -> "arr_0(0)"	[label=assignedFrom];
	"champs-basic-graph/nodes_train.npz(0)" -> "1-mpnn.ipynb"	[label=appearsIn];
	"arr_0(0)" -> "1-mpnn.ipynb"	[label=appearsIn];
	"in_edges_train(0)$0" -> "np(0)"	[label=assignedFrom];
	"in_edges_train(0)$0" -> "datadir(0)$0"	[label=assignedFrom];
	"in_edges_train(0)$0" -> "arr_0(0)"	[label=assignedFrom];
	"in_edges_train(0)$0" -> "champs-basic-graph/in_edges_train.npz(0)"	[label=assignedFrom];
	"champs-basic-graph/in_edges_train.npz(0)" -> "1-mpnn.ipynb"	[label=appearsIn];
	"out_edges_train(0)$0" -> "np(0)"	[label=assignedFrom];
	"out_edges_train(0)$0" -> "datadir(0)$0"	[label=assignedFrom];
	"out_edges_train(0)$0" -> "arr_0(0)"	[label=assignedFrom];
	"out_edges_train(0)$0" -> "champs-basic-graph/out_edges_train.npz(0)"	[label=assignedFrom];
	"champs-basic-graph/out_edges_train.npz(0)" -> "1-mpnn.ipynb"	[label=appearsIn];
	"nodes_test(0)$0" -> "np(0)"	[label=assignedFrom];
	"nodes_test(0)$0" -> "datadir(0)$0"	[label=assignedFrom];
	"nodes_test(0)$0" -> "arr_0(0)"	[label=assignedFrom];
	"nodes_test(0)$0" -> "champs-basic-graph/nodes_test.npz(0)"	[label=assignedFrom];
	"champs-basic-graph/nodes_test.npz(0)" -> "1-mpnn.ipynb"	[label=appearsIn];
	"in_edges_test(0)$0" -> "np(0)"	[label=assignedFrom];
	"in_edges_test(0)$0" -> "datadir(0)$0"	[label=assignedFrom];
	"in_edges_test(0)$0" -> "arr_0(0)"	[label=assignedFrom];
	"in_edges_test(0)$0" -> "champs-basic-graph/in_edges_test.npz(0)"	[label=assignedFrom];
	"champs-basic-graph/in_edges_test.npz(0)" -> "1-mpnn.ipynb"	[label=appearsIn];
	"out_labels(0)$0" -> "out_edges_train(0)$0"	[label=reshape];
	"out_labels(0)$0" -> "1(0)"	[label=reshape];
	"out_labels(0)$0" -> "2(0)"	[label=reshape];
	"1(0)" -> "1-mpnn.ipynb"	[label=appearsIn];
	"2(0)" -> "1-mpnn.ipynb"	[label=appearsIn];
	"in_edges_train(0)$1" -> "in_edges_train(0)$0"	[label=reshape];
	"in_edges_train(0)$1" -> "1(0)"	[label=reshape];
	"in_edges_train(0)$1" -> "2(0)"	[label=reshape];
	"in_edges_train(0)$1" -> "in_edges_train(0)$1"	[label=reshape];
	"in_edges_train(0)$1" -> "3(0)"	[label=reshape];
	"3(0)" -> "1-mpnn.ipynb"	[label=appearsIn];
	"in_edges_test(0)$1" -> "in_edges_test(0)$0"	[label=reshape];
	"in_edges_test(0)$1" -> "1(0)"	[label=reshape];
	"in_edges_test(0)$1" -> "2(0)"	[label=reshape];
	"in_edges_test(0)$1" -> "3(0)"	[label=reshape];
	"in_edges_test(0)$1" -> "in_edges_test(0)$1"	[label=reshape];
	"nodes_train(0)$1" -> "nodes_train(0)$0"	[label=shuffle];
	"nodes_train(0)$1" -> "in_edges_train(0)$2"	[label=shuffle];
	"nodes_train(0)$1" -> "out_labels(0)$1"	[label=shuffle];
	"in_edges_train(0)$2" -> "nodes_train(0)$0"	[label=shuffle];
	"in_edges_train(0)$2" -> "in_edges_train(0)$2"	[label=shuffle];
	"in_edges_train(0)$2" -> "out_labels(0)$1"	[label=shuffle];
	"out_labels(0)$1" -> "nodes_train(0)$0"	[label=shuffle];
	"out_labels(0)$1" -> "in_edges_train(0)$2"	[label=shuffle];
	"out_labels(0)$1" -> "out_labels(0)$1"	[label=shuffle];
	"self(2)" -> "__init__[0]"	[label=_argToVar];
	"node_dim(2)" -> "__init__[1]"	[label=_argToVar];
	"super(2)$0" -> "super(2)"	[label=__init__];
	"self(2)$0" -> "self(2)"	[label=assignedFrom];
	"self(2)$0" -> "node_dim(2)"	[label=assignedFrom];
	"self(2)$1" -> "self(2)$0"	[label=Dense];
	"self(2)$1" -> "self(2)$1"	[label=Dense];
	"self(2)$1" -> "tf(2)"	[label=Dense];
	"self(3)" -> "call[0]"	[label=_argToVar];
	"node_j(3)" -> "call[1]"	[label=_argToVar];
	"edge_ij(3)" -> "call[2]"	[label=_argToVar];
	"A(3)$0" -> "self(3)"	[label=nn];
	"A(3)$0" -> "edge_ij(3)"	[label=nn];
	"A(3)$1" -> "A(3)$1"	[label=reshape];
	"A(3)$1" -> "tf(3)"	[label=reshape];
	"A(3)$1" -> "[<_ast.UnaryOp object at 0x7fd500832ca0>, <_ast.Attribute object at 0x7fd500832dc0>, <_ast.Attribute object at 0x7fd500832280>](\
3)"	[label=reshape];
	"node_j(3)$0" -> "tf(3)"	[label=reshape];
	"node_j(3)$0" -> "node_j(3)$0"	[label=reshape];
	"node_j(3)$0" -> "[<_ast.UnaryOp object at 0x7fd500832910>, <_ast.Attribute object at 0x7fd500832cd0>, <_ast.Constant object at 0x7fd500832400>](3)"	[label=reshape];
	"messages(3)$0" -> "A(3)$1"	[label=matmul];
	"messages(3)$0" -> "tf(3)"	[label=matmul];
	"messages(3)$0" -> "node_j(3)$0"	[label=matmul];
	"messages(3)$1" -> "tf(3)"	[label=reshape];
	"messages(3)$1" -> "messages(3)$1"	[label=reshape];
	"messages(3)$1" -> "[<_ast.UnaryOp object at 0x7fd500832130>, <_ast.Subscript object at 0x7fd500832f40>, <_ast.Attribute object at 0x7fd500832a30>](\
3)"	[label=reshape];
	"self(5)" -> "__init__[0]"	[label=_argToVar];
	"super(5)$0" -> "super(5)"	[label=__init__];
	"self(6)" -> "call[0]"	[label=_argToVar];
	"messages(6)" -> "call[1]"	[label=_argToVar];
	"self(8)" -> "__init__[0]"	[label=_argToVar];
	"state_dim(8)" -> "__init__[1]"	[label=_argToVar];
	"super(8)$0" -> "super(8)"	[label=__init__];
	"self(8)$0" -> "self(8)"	[label=Concatenate];
	"self(8)$0" -> "tf(8)"	[label=Concatenate];
	"self(8)$0" -> "1(8)"	[label=Concatenate];
	"self(8)$1" -> "state_dim(8)"	[label=GRU];
	"self(8)$1" -> "self(8)$0"	[label=GRU];
	"self(8)$1" -> "tf(8)"	[label=GRU];
	"self(9)" -> "call[0]"	[label=_argToVar];
	"old_state(9)" -> "call[1]"	[label=_argToVar];
	"agg_messages(9)" -> "call[2]"	[label=_argToVar];
	"n_nodes(9)$0" -> "old_state(9)"	[label=assignedFrom];
	"n_nodes(9)$0" -> "tf(9)"	[label=assignedFrom];
	"n_nodes(9)$0" -> "1(9)"	[label=assignedFrom];
	"node_dim(9)$0" -> "old_state(9)"	[label=assignedFrom];
	"node_dim(9)$0" -> "tf(9)"	[label=assignedFrom];
	"node_dim(9)$0" -> "2(9)"	[label=assignedFrom];
	"old_state(9)$0" -> "tf(9)"	[label=reshape];
	"old_state(9)$0" -> "old_state(9)$0"	[label=reshape];
	"old_state(9)$0" -> "[<_ast.UnaryOp object at 0x7fd4c04cc730>, <_ast.Constant object at 0x7fd4c04cc970>, <_ast.Subscript object at 0x7fd4c04ccb80>](9)"	[label=reshape];
	"agg_messages(9)$0" -> "tf(9)"	[label=reshape];
	"agg_messages(9)$0" -> "agg_messages(9)$0"	[label=reshape];
	"agg_messages(9)$0" -> "[<_ast.UnaryOp object at 0x7fd4c04cc8e0>, <_ast.Constant object at 0x7fd4c04ccc10>, <_ast.Subscript object at 0x7fd4c04ccb20>](9)"	[label=reshape];
	"concat(9)$0" -> "self(9)"	[label=concat_layer];
	"concat(9)$0" -> "[<_ast.Name object at 0x7fd4c04cc2b0>, <_ast.Name object at 0x7fd4c04cc7c0>](9)"	[label=concat_layer];
	"activation(9)$0" -> "self(9)"	[label=GRU];
	"activation(9)$0" -> "concat(9)$0"	[label=GRU];
	"activation(9)$1" -> "tf(9)"	[label=reshape];
	"activation(9)$1" -> "activation(9)$1"	[label=reshape];
	"activation(9)$1" -> "[<_ast.UnaryOp object at 0x7fd4c04cc8b0>, <_ast.Name object at 0x7fd4c04cc790>, <_ast.Name object at 0x7fd4c04cce50>](9)"	[label=reshape];
	"self(11)" -> "__init__[0]"	[label=_argToVar];
	"intermediate_dim(11)" -> "__init__[1]"	[label=_argToVar];
	"super(11)$0" -> "super(11)"	[label=__init__];
	"self(11)$0" -> "self(11)"	[label=Concatenate];
	"self(11)$0" -> "tf(11)"	[label=Concatenate];
	"self(11)$1" -> "intermediate_dim(11)"	[label=Dense];
	"self(11)$1" -> "self(11)$0"	[label=Dense];
	"self(11)$1" -> "tf(11)"	[label=Dense];
	"self(11)$2" -> "intermediate_dim(11)"	[label=Dense];
	"self(11)$2" -> "tf(11)"	[label=Dense];
	"self(11)$2" -> "self(11)$1"	[label=Dense];
	"self(11)$3" -> "tf(11)"	[label=Dense];
	"self(11)$3" -> "self(11)$2"	[label=Dense];
	"self(11)$3" -> "1(11)"	[label=Dense];
	"self(11)$3" -> "None(11)"	[label=Dense];
	"self(12)" -> "call[0]"	[label=_argToVar];
	"nodes(12)" -> "call[1]"	[label=_argToVar];
	"edges(12)" -> "call[2]"	[label=_argToVar];
	"n_nodes(12)$0" -> "nodes(12)"	[label=assignedFrom];
	"n_nodes(12)$0" -> "tf(12)"	[label=assignedFrom];
	"n_nodes(12)$0" -> "1(12)"	[label=assignedFrom];
	"node_dim(12)$0" -> "nodes(12)"	[label=assignedFrom];
	"node_dim(12)$0" -> "tf(12)"	[label=assignedFrom];
	"node_dim(12)$0" -> "2(12)"	[label=assignedFrom];
	"state_i(12)$0" -> "nodes(12)"	[label=reshape];
	"state_i(12)$0" -> "tf(12)"	[label=reshape];
	"state_i(12)$0" -> "[<_ast.Constant object at 0x7fd500890070>, <_ast.Constant object at 0x7fd500890100>, <_ast.Name object at 0x7fd5008905b0>](12)"	[label=reshape];
	"state_i(12)$0" -> "[<_ast.UnaryOp object at 0x7fd500890820>, <_ast.BinOp object at 0x7fd5008909d0>, <_ast.Name object at 0x7fd5008902e0>](12)"	[label=reshape];
	"state_j(12)$0" -> "nodes(12)"	[label=tile];
	"state_j(12)$0" -> "tf(12)"	[label=tile];
	"state_j(12)$0" -> "[<_ast.Constant object at 0x7fd500890d00>, <_ast.Name object at 0x7fd500890cd0>, <_ast.Constant object at 0x7fd500890eb0>](12)"	[label=tile];
	"concat(12)$0" -> "self(12)"	[label=concat_layer];
	"concat(12)$0" -> "[<_ast.Name object at 0x7fd500890e20>, <_ast.Name object at 0x7fd500890280>, <_ast.Name object at 0x7fd500890bb0>](12)"	[label=concat_layer];
	"activation_1(12)$0" -> "self(12)"	[label=hidden_layer_1];
	"activation_1(12)$0" -> "concat(12)$0"	[label=hidden_layer_1];
	"activation_2(12)$0" -> "self(12)"	[label=hidden_layer_2];
	"activation_2(12)$0" -> "activation_1(12)$0"	[label=hidden_layer_2];
	"self(14)" -> "__init__[0]"	[label=_argToVar];
	"state_dim(14)" -> "__init__[1]"	[label=_argToVar];
	"super(14)$0" -> "self(14)"	[label=__init__];
	"super(14)$0" -> "super(14)"	[label=__init__];
	"self(14)$0" -> "self(14)"	[label=Message_Passer_NNM];
	"self(14)$0" -> "state_dim(14)"	[label=Message_Passer_NNM];
	"self(14)$1" -> "state_dim(14)"	[label=Update_Func_GRU];
	"self(14)$1" -> "self(14)$0"	[label=Update_Func_GRU];
	"self(14)$2" -> "state_dim(14)"	[label=assignedFrom];
	"self(14)$2" -> "self(14)$1"	[label=assignedFrom];
	"self(15)" -> "call[0]"	[label=_argToVar];
	"nodes(15)" -> "call[1]"	[label=_argToVar];
	"edges(15)" -> "call[2]"	[label=_argToVar];
	"mask(15)" -> "call[3]"	[label=_argToVar];
	"n_nodes(15)$0" -> "nodes(15)"	[label=assignedFrom];
	"n_nodes(15)$0" -> "tf(15)"	[label=assignedFrom];
	"n_nodes(15)$0" -> "1(15)"	[label=assignedFrom];
	"node_dim(15)$0" -> "nodes(15)"	[label=assignedFrom];
	"node_dim(15)$0" -> "tf(15)"	[label=assignedFrom];
	"node_dim(15)$0" -> "2(15)"	[label=assignedFrom];
	"state_j(15)$0" -> "nodes(15)"	[label=tile];
	"state_j(15)$0" -> "tf(15)"	[label=tile];
	"state_j(15)$0" -> "[<_ast.Constant object at 0x7fd4c096d730>, <_ast.Name object at 0x7fd4c096d550>, <_ast.Constant object at 0x7fd4c096d790>](15)"	[label=tile];
	"messages(15)$0" -> "self(15)"	[label=message_passers];
	"messages(15)$0" -> "edges(15)"	[label=message_passers];
	"messages(15)$0" -> "state_j(15)$0"	[label=message_passers];
	"masked(15)$0" -> "mask(15)"	[label=multiply];
	"masked(15)$0" -> "tf(15)"	[label=multiply];
	"masked(15)$0" -> "messages(15)$0"	[label=multiply];
	"masked(15)$1" -> "tf(15)"	[label=reshape];
	"masked(15)$1" -> "masked(15)$1"	[label=reshape];
	"masked(15)$1" -> "[<_ast.Subscript object at 0x7fd4c096df70>, <_ast.Name object at 0x7fd50080d670>, <_ast.Name object at 0x7fd50080dbb0>, <_ast.Name \
object at 0x7fd50080dc40>](15)"	[label=reshape];
	"agg_m(15)$0" -> "self(15)"	[label=message_aggs];
	"agg_m(15)$0" -> "masked(15)$1"	[label=message_aggs];
	"updated_nodes(15)$0" -> "self(15)"	[label=update_functions];
	"updated_nodes(15)$0" -> "nodes(15)"	[label=update_functions];
	"updated_nodes(15)$0" -> "agg_m(15)$0"	[label=update_functions];
	"nodes_out(15)$0" -> "updated_nodes(15)$0"	[label=assignedFrom];
	"adj_input(0)$0" -> "tf(0)$0"	[label=Input];
	"adj_input(0)$0" -> "adj_input(0)$0"	[label=Input];
	"adj_input(0)$0" -> "None(0)"	[label=Input];
	"None(0)" -> "1-mpnn.ipynb"	[label=appearsIn];
	"nod_input(0)$0" -> "tf(0)$0"	[label=Input];
	"nod_input(0)$0" -> "None(0)"	[label=Input];
	"nod_input(0)$0" -> "nod_input(0)$0"	[label=Input];
	"self(17)" -> "__init__[0]"	[label=_argToVar];
	"out_int_dim(17)" -> "__init__[1]"	[label=_argToVar];
	"state_dim(17)" -> "__init__[2]"	[label=_argToVar];
	"T(17)" -> "__init__[3]"	[label=_argToVar];
	"super(17)$0" -> "self(17)"	[label=__init__];
	"super(17)$0" -> "super(17)"	[label=__init__];
	"self(17)$0" -> "self(17)"	[label=assignedFrom];
	"self(17)$0" -> "T(17)"	[label=assignedFrom];
	"self(17)$1" -> "state_dim(17)"	[label=Dense];
	"self(17)$1" -> "self(17)$0"	[label=Dense];
	"self(17)$1" -> "tf(17)"	[label=Dense];
	"self(17)$2" -> "state_dim(17)"	[label=MP_Layer];
	"self(17)$2" -> "self(17)$1"	[label=MP_Layer];
	"self(17)$3" -> "out_int_dim(17)"	[label=Edge_Regressor];
	"self(17)$3" -> "self(17)$2"	[label=Edge_Regressor];
	"self(18)" -> "call[0]"	[label=_argToVar];
	"inputs(18)" -> "call[1]"	[label=_argToVar];
	"nodes(18)$0" -> "inputs(18)"	[label=assignedFrom];
	"nodes(18)$0" -> "nod_input(18)"	[label=assignedFrom];
	"edges(18)$0" -> "inputs(18)"	[label=assignedFrom];
	"edges(18)$0" -> "adj_input(18)"	[label=assignedFrom];
	"len_edges(18)$0" -> "edges(18)$0"	[label=assignedFrom];
	"len_edges(18)$0" -> "tf(18)"	[label=assignedFrom];
	"len_edges(18)$0" -> "1(18)"	[label=assignedFrom];
	"_(18)$0" -> "edges(18)$0"	[label=split];
	"_(18)$0" -> "tf(18)"	[label=split];
	"_(18)$0" -> "[<_ast.BinOp object at 0x7fd5007f0eb0>, <_ast.Constant object at 0x7fd5007f0cd0>](18)"	[label=split];
	"_(18)$0" -> "2(18)"	[label=split];
	"x(18)$0" -> "edges(18)$0"	[label=split];
	"x(18)$0" -> "tf(18)"	[label=split];
	"x(18)$0" -> "[<_ast.BinOp object at 0x7fd5007f0eb0>, <_ast.Constant object at 0x7fd5007f0cd0>](18)"	[label=split];
	"x(18)$0" -> "2(18)"	[label=split];
	"mask(18)$0" -> "tf(18)"	[label=where];
	"mask(18)$0" -> "x(18)$0"	[label=where];
	"mask(18)$0" -> "0(18)"	[label=where];
	"nodes(18)$1" -> "self(18)"	[label=embed];
	"nodes(18)$1" -> "nodes(18)$1"	[label=embed];
	"mp(18)" -> "self(18)"	[label=iteratorOf];
	"mp(18)" -> "range(18)"	[label=iteratorOf];
	"nodes(18)$2" -> "self(18)"	[label=MP];
	"nodes(18)$2" -> "edges(18)$0"	[label=MP];
	"nodes(18)$2" -> "mask(18)$0"	[label=MP];
	"nodes(18)$2" -> "nodes(18)$2"	[label=MP];
	"con_edges(18)$0" -> "self(18)"	[label=edge_regressor];
	"con_edges(18)$0" -> "edges(18)$0"	[label=edge_regressor];
	"con_edges(18)$0" -> "nodes(18)$2"	[label=edge_regressor];
	"orig(19)" -> "mse[0]"	[label=_argToVar];
	"preds(19)" -> "mse[1]"	[label=_argToVar];
	"mask(19)$0" -> "orig(19)"	[label=where];
	"mask(19)$0" -> "tf(19)"	[label=where];
	"mask(19)$0" -> "0(19)"	[label=where];
	"nums(19)$0" -> "orig(19)"	[label=boolean_mask];
	"nums(19)$0" -> "mask(19)$0"	[label=boolean_mask];
	"nums(19)$0" -> "tf(19)"	[label=boolean_mask];
	"preds(19)$0" -> "mask(19)$0"	[label=boolean_mask];
	"preds(19)$0" -> "tf(19)"	[label=boolean_mask];
	"preds(19)$0" -> "preds(19)$0"	[label=boolean_mask];
	"reconstruction_error(19)$0" -> "tf(19)"	[label=reduce_mean];
	"reconstruction_error(19)$0" -> "nums(19)$0"	[label=reduce_mean];
	"reconstruction_error(19)$0" -> "preds(19)$0"	[label=reduce_mean];
	"orig(20)" -> "log_mse[0]"	[label=_argToVar];
	"preds(20)" -> "log_mse[1]"	[label=_argToVar];
	"mask(20)$0" -> "orig(20)"	[label=where];
	"mask(20)$0" -> "tf(20)"	[label=where];
	"mask(20)$0" -> "0(20)"	[label=where];
	"nums(20)$0" -> "orig(20)"	[label=boolean_mask];
	"nums(20)$0" -> "mask(20)$0"	[label=boolean_mask];
	"nums(20)$0" -> "tf(20)"	[label=boolean_mask];
	"preds(20)$0" -> "mask(20)$0"	[label=boolean_mask];
	"preds(20)$0" -> "tf(20)"	[label=boolean_mask];
	"preds(20)$0" -> "preds(20)$0"	[label=boolean_mask];
	"reconstruction_error(20)$0" -> "tf(20)"	[label=log];
	"reconstruction_error(20)$0" -> "nums(20)$0"	[label=log];
	"reconstruction_error(20)$0" -> "preds(20)$0"	[label=log];
	"orig(21)" -> "mae[0]"	[label=_argToVar];
	"preds(21)" -> "mae[1]"	[label=_argToVar];
	"mask(21)$0" -> "orig(21)"	[label=where];
	"mask(21)$0" -> "tf(21)"	[label=where];
	"mask(21)$0" -> "0(21)"	[label=where];
	"nums(21)$0" -> "orig(21)"	[label=boolean_mask];
	"nums(21)$0" -> "mask(21)$0"	[label=boolean_mask];
	"nums(21)$0" -> "tf(21)"	[label=boolean_mask];
	"preds(21)$0" -> "mask(21)$0"	[label=boolean_mask];
	"preds(21)$0" -> "tf(21)"	[label=boolean_mask];
	"preds(21)$0" -> "preds(21)$0"	[label=boolean_mask];
	"reconstruction_error(21)$0" -> "tf(21)"	[label=reduce_mean];
	"reconstruction_error(21)$0" -> "nums(21)$0"	[label=reduce_mean];
	"reconstruction_error(21)$0" -> "preds(21)$0"	[label=reduce_mean];
	"orig(22)" -> "log_mae[0]"	[label=_argToVar];
	"preds(22)" -> "log_mae[1]"	[label=_argToVar];
	"mask(22)$0" -> "orig(22)"	[label=where];
	"mask(22)$0" -> "tf(22)"	[label=where];
	"mask(22)$0" -> "0(22)"	[label=where];
	"nums(22)$0" -> "orig(22)"	[label=boolean_mask];
	"nums(22)$0" -> "mask(22)$0"	[label=boolean_mask];
	"nums(22)$0" -> "tf(22)"	[label=boolean_mask];
	"preds(22)$0" -> "mask(22)$0"	[label=boolean_mask];
	"preds(22)$0" -> "tf(22)"	[label=boolean_mask];
	"preds(22)$0" -> "preds(22)$0"	[label=boolean_mask];
	"reconstruction_error(22)$0" -> "tf(22)"	[label=log];
	"reconstruction_error(22)$0" -> "nums(22)$0"	[label=log];
	"reconstruction_error(22)$0" -> "preds(22)$0"	[label=log];
	"0.001(0)" -> "1-mpnn.ipynb"	[label=appearsIn];
	"learning_rate(0)$0" -> "0.001(0)"	[label=assignedFrom];
	"epoch(23)" -> "step_decay[0]"	[label=_argToVar];
	"initial_lrate(23)$0" -> "learning_rate(23)"	[label=assignedFrom];
	"drop(23)$0" -> "0.1(23)"	[label=assignedFrom];
	"epochs_drop(23)$0" -> "20.0(23)"	[label=assignedFrom];
	"lrate(23)$0" -> "epoch(23)"	[label=Mult];
	"lrate(23)$0" -> "initial_lrate(23)$0"	[label=Mult];
	"lrate(23)$0" -> "drop(23)$0"	[label=Mult];
	"lrate(23)$0" -> "epochs_drop(23)$0"	[label=Mult];
	"lrate(23)$0" -> "np(23)"	[label=Mult];
	"tf(23)$0" -> "lrate(23)$0"	[label=print];
	"tf(23)$0" -> "tf(23)"	[label=print];
	"tf(23)$0" -> "Learning rate: (23)"	[label=print];
	"lrate(0)$0" -> "tf(0)$0"	[label=LearningRateScheduler];
	"lrate(0)$0" -> "step_decay(0)"	[label=LearningRateScheduler];
	"step_decay(0)" -> "1-mpnn.ipynb"	[label=appearsIn];
	"stop_early(0)$0" -> "tf(0)$0"	[label=EarlyStopping];
	"stop_early(0)$0" -> "val_loss(0)"	[label=EarlyStopping];
	"stop_early(0)$0" -> "15(0)"	[label=EarlyStopping];
	"stop_early(0)$0" -> "True(0)"	[label=EarlyStopping];
	"val_loss(0)" -> "1-mpnn.ipynb"	[label=appearsIn];
	"15(0)" -> "1-mpnn.ipynb"	[label=appearsIn];
	"True(0)" -> "1-mpnn.ipynb"	[label=appearsIn];
	"opt(0)$0" -> "tf(0)$0"	[label=Adam];
	"opt(0)$0" -> "learning_rate(0)$0"	[label=Adam];
	"512(0)" -> "1-mpnn.ipynb"	[label=appearsIn];
	"mpnn(0)$0" -> "512(0)"	[label=MPNN];
	"mpnn(0)$0" -> "128(0)"	[label=MPNN];
	"mpnn(0)$0" -> "4(0)"	[label=MPNN];
	"128(0)" -> "1-mpnn.ipynb"	[label=appearsIn];
	"4(0)" -> "1-mpnn.ipynb"	[label=appearsIn];
	"mpnn(0)$1" -> "opt(0)$0"	[label=compile];
	"mpnn(0)$1" -> "mpnn(0)$0"	[label=compile];
	"mpnn(0)$1" -> "log_mae(0)"	[label=compile];
	"log_mae(0)" -> "1-mpnn.ipynb"	[label=appearsIn];
	"len(0)" -> "1-mpnn.ipynb"	[label=appearsIn];
	"train_size(0)$0" -> "out_labels(0)$1"	[label=int];
	"train_size(0)$0" -> "len(0)"	[label=int];
	"train_size(0)$0" -> "0.8(0)"	[label=int];
	"0.8(0)" -> "1-mpnn.ipynb"	[label=appearsIn];
	"16(0)" -> "1-mpnn.ipynb"	[label=appearsIn];
	"batch_size(0)$0" -> "16(0)"	[label=assignedFrom];
	"25(0)" -> "1-mpnn.ipynb"	[label=appearsIn];
	"epochs(0)$0" -> "25(0)"	[label=assignedFrom];
	"mpnn(0)$2" -> "nodes_train(0)$1"	[label=call];
	"mpnn(0)$2" -> "in_edges_train(0)$2"	[label=call];
	"mpnn(0)$2" -> "adj_input(0)$0"	[label=call];
	"mpnn(0)$2" -> "nod_input(0)$0"	[label=call];
	"mpnn(0)$2" -> "mpnn(0)$1"	[label=call];
	"mpnn(0)$2" -> "10(0)"	[label=call];
	"10(0)" -> "1-mpnn.ipynb"	[label=appearsIn];
	"mpnn(0)$3" -> "nodes_train(0)$1"	[label=fit];
	"mpnn(0)$3" -> "in_edges_train(0)$2"	[label=fit];
	"mpnn(0)$3" -> "adj_input(0)$0"	[label=fit];
	"mpnn(0)$3" -> "nod_input(0)$0"	[label=fit];
	"mpnn(0)$3" -> "train_size(0)$0"	[label=fit];
	"mpnn(0)$3" -> "mpnn(0)$2"	[label=fit];
	"preds(0)$0" -> "nodes_test(0)$0"	[label=predict];
	"preds(0)$0" -> "in_edges_test(0)$1"	[label=predict];
	"preds(0)$0" -> "adj_input(0)$0"	[label=predict];
	"preds(0)$0" -> "nod_input(0)$0"	[label=predict];
	"preds(0)$0" -> "mpnn(0)$3"	[label=predict];
	"np(0)$0" -> "np(0)"	[label=save];
	"np(0)$0" -> "preds(0)$0"	[label=save];
	"np(0)$0" -> "preds_kernel.npy(0)"	[label=save];
	"preds_kernel.npy(0)" -> "1-mpnn.ipynb"	[label=appearsIn];
	"train(0)$0" -> "pd(0)"	[label=read_csv];
	"train(0)$0" -> "datadir(0)$0"	[label=read_csv];
	"train(0)$0" -> "champs-scalar-coupling/train.csv(0)"	[label=read_csv];
	"champs-scalar-coupling/train.csv(0)" -> "1-mpnn.ipynb"	[label=appearsIn];
	"test(0)$0" -> "pd(0)"	[label=read_csv];
	"test(0)$0" -> "datadir(0)$0"	[label=read_csv];
	"test(0)$0" -> "champs-scalar-coupling/test.csv(0)"	[label=read_csv];
	"champs-scalar-coupling/test.csv(0)" -> "1-mpnn.ipynb"	[label=appearsIn];
	"test_group(0)$0" -> "test(0)$0"	[label=groupby];
	"test_group(0)$0" -> "molecule_name(0)"	[label=groupby];
	"molecule_name(0)" -> "1-mpnn.ipynb"	[label=appearsIn];
	"scale_min(0)$0" -> "train(0)$0"	[label=min];
	"scale_min(0)$0" -> "scalar_coupling_constant(0)"	[label=min];
	"scalar_coupling_constant(0)" -> "1-mpnn.ipynb"	[label=appearsIn];
	"scale_max(0)$0" -> "train(0)$0"	[label=max];
	"scale_max(0)$0" -> "scalar_coupling_constant(0)"	[label=max];
	"scale_mid(0)$0" -> "2(0)"	[label=Div];
	"scale_mid(0)$0" -> "scale_min(0)$0"	[label=Div];
	"scale_mid(0)$0" -> "scale_max(0)$0"	[label=Div];
	"scale_norm(0)$0" -> "scale_max(0)$0"	[label=Sub];
	"scale_norm(0)$0" -> "scale_mid(0)$0"	[label=Sub];
	"test_group(24)" -> "make_outs[0]"	[label=_argToVar];
	"preds(24)" -> "test_group(24)"	[label=iteratorOf];
	"preds(24)" -> "preds(24)"	[label=iteratorOf];
	"preds(24)" -> "make_outs[1]"	[label=_argToVar];
	"preds(24)" -> "zip(24)"	[label=iteratorOf];
	"i(24)$0" -> "0(24)"	[label=assignedFrom];
	"x(24)$0" -> "np(24)"	[label=array];
	"x(24)$0" -> "[](24)"	[label=array];
	"test_gp(24)" -> "test_group(24)"	[label=iteratorOf];
	"test_gp(24)" -> "preds(24)"	[label=iteratorOf];
	"test_gp(24)" -> "zip(24)"	[label=iteratorOf];
	"print[272/12]" -> "i(24)$0"	[label=print];
	"gp(24)$0" -> "test_gp(24)"	[label=assignedFrom];
	"gp(24)$0" -> "1(24)"	[label=assignedFrom];
	"x(24)$1" -> "preds(24)"	[label=append];
	"x(24)$1" -> "np(24)"	[label=append];
	"x(24)$1" -> "gp(24)$0"	[label=append];
	"x(24)$1" -> "x(24)$1"	[label=append];
	"x(24)$1" -> "atom_index_0(24)"	[label=append];
	"x(24)$1" -> "atom_index_1(24)"	[label=append];
	"x(24)$1" -> "2.0(24)"	[label=append];
	"i(24)$1" -> "i(24)$0"	[label=Add];
	"i(24)$1" -> "1(24)"	[label=Add];
	"29(0)" -> "1-mpnn.ipynb"	[label=appearsIn];
	"max_size(0)$0" -> "29(0)"	[label=assignedFrom];
	"preds(0)$1" -> "1(0)"	[label=reshape];
	"preds(0)$1" -> "preds(0)$0"	[label=reshape];
	"preds(0)$1" -> "max_size(0)$0"	[label=reshape];
	"out_unscaled(0)$0" -> "test_group(0)$0"	[label=make_outs];
	"out_unscaled(0)$0" -> "preds(0)$1"	[label=make_outs];
	"test(0)$1" -> "test(0)$0"	[label=assignedFrom];
	"test(0)$1" -> "out_unscaled(0)$0"	[label=assignedFrom];
	"test(0)$2" -> "scalar_coupling_constant(0)"	[label=Add];
	"test(0)$2" -> "scale_mid(0)$0"	[label=Add];
	"test(0)$2" -> "scale_norm(0)$0"	[label=Add];
	"test(0)$2" -> "test(0)$1"	[label=Add];
	"test(0)$3" -> "test(0)$2"	[label=to_csv];
	"test(0)$3" -> "submission.csv(0)"	[label=to_csv];
	"submission.csv(0)" -> "1-mpnn.ipynb"	[label=appearsIn];
}
