digraph "" {
	os -> "fake-detect-basic.ipynb"	[label=importedBy];
	"os(0)" -> os	[label=assignedFrom];
	"os(0)" -> "fake-detect-basic.ipynb"	[label=appearsIn];
	pandas -> "fake-detect-basic.ipynb"	[label=importedBy];
	"pd(0)" -> "fake-detect-basic.ipynb"	[label=appearsIn];
	"pd(0)" -> pandas	[label=assignedFrom];
	numpy -> "fake-detect-basic.ipynb"	[label=importedBy];
	"np(0)" -> "fake-detect-basic.ipynb"	[label=appearsIn];
	"np(0)" -> numpy	[label=assignedFrom];
	"matplotlib.pyplot" -> "fake-detect-basic.ipynb"	[label=importedBy];
	"plt(0)" -> "fake-detect-basic.ipynb"	[label=appearsIn];
	"plt(0)" -> "matplotlib.pyplot"	[label=assignedFrom];
	keras -> "fake-detect-basic.ipynb"	[label=importedBy];
	"keras(0)" -> "fake-detect-basic.ipynb"	[label=appearsIn];
	"keras(0)" -> keras	[label=assignedFrom];
	glob -> "fake-detect-basic.ipynb"	[label=importedBy];
	"glob(0)" -> "fake-detect-basic.ipynb"	[label=appearsIn];
	"glob(0)" -> glob	[label=assignedFrom];
	cv2 -> "fake-detect-basic.ipynb"	[label=importedBy];
	"cv2(0)" -> "fake-detect-basic.ipynb"	[label=appearsIn];
	"cv2(0)" -> cv2	[label=assignedFrom];
	albumentations -> "fake-detect-basic.ipynb"	[label=importedBy];
	"*" -> albumentations	[label=importedBy];
	"*(0)" -> "fake-detect-basic.ipynb"	[label=appearsIn];
	"*(0)" -> "*"	[label=assignedFrom];
	tqdm -> "fake-detect-basic.ipynb"	[label=importedBy];
	tqdm_notebook -> tqdm	[label=importedBy];
	"tqdm(0)" -> "fake-detect-basic.ipynb"	[label=appearsIn];
	"tqdm(0)" -> tqdm_notebook	[label=assignedFrom];
	gc -> "fake-detect-basic.ipynb"	[label=importedBy];
	"gc(0)" -> "fake-detect-basic.ipynb"	[label=appearsIn];
	"gc(0)" -> gc	[label=assignedFrom];
	"keras.models" -> "fake-detect-basic.ipynb"	[label=importedBy];
	Model -> "keras.models"	[label=importedBy];
	"KerasModel(0)" -> "fake-detect-basic.ipynb"	[label=appearsIn];
	"KerasModel(0)" -> Model	[label=assignedFrom];
	"keras.layers" -> "fake-detect-basic.ipynb"	[label=importedBy];
	Input -> "keras.layers"	[label=importedBy];
	"Input(0)" -> "fake-detect-basic.ipynb"	[label=appearsIn];
	"Input(0)" -> Input	[label=assignedFrom];
	Dense -> "keras.layers"	[label=importedBy];
	"Dense(0)" -> "fake-detect-basic.ipynb"	[label=appearsIn];
	"Dense(0)" -> Dense	[label=assignedFrom];
	Flatten -> "keras.layers"	[label=importedBy];
	"Flatten(0)" -> "fake-detect-basic.ipynb"	[label=appearsIn];
	"Flatten(0)" -> Flatten	[label=assignedFrom];
	Conv2D -> "keras.layers"	[label=importedBy];
	"Conv2D(0)" -> "fake-detect-basic.ipynb"	[label=appearsIn];
	"Conv2D(0)" -> Conv2D	[label=assignedFrom];
	MaxPooling2D -> "keras.layers"	[label=importedBy];
	"MaxPooling2D(0)" -> "fake-detect-basic.ipynb"	[label=appearsIn];
	"MaxPooling2D(0)" -> MaxPooling2D	[label=assignedFrom];
	BatchNormalization -> "keras.layers"	[label=importedBy];
	"BatchNormalization(0)" -> "fake-detect-basic.ipynb"	[label=appearsIn];
	"BatchNormalization(0)" -> BatchNormalization	[label=assignedFrom];
	Dropout -> "keras.layers"	[label=importedBy];
	"Dropout(0)" -> "fake-detect-basic.ipynb"	[label=appearsIn];
	"Dropout(0)" -> Dropout	[label=assignedFrom];
	Reshape -> "keras.layers"	[label=importedBy];
	"Reshape(0)" -> "fake-detect-basic.ipynb"	[label=appearsIn];
	"Reshape(0)" -> Reshape	[label=assignedFrom];
	Concatenate -> "keras.layers"	[label=importedBy];
	"Concatenate(0)" -> "fake-detect-basic.ipynb"	[label=appearsIn];
	"Concatenate(0)" -> Concatenate	[label=assignedFrom];
	LeakyReLU -> "keras.layers"	[label=importedBy];
	"LeakyReLU(0)" -> "fake-detect-basic.ipynb"	[label=appearsIn];
	"LeakyReLU(0)" -> LeakyReLU	[label=assignedFrom];
	"keras.optimizers" -> "fake-detect-basic.ipynb"	[label=importedBy];
	Adam -> "keras.optimizers"	[label=importedBy];
	"Adam(0)" -> "fake-detect-basic.ipynb"	[label=appearsIn];
	"Adam(0)" -> Adam	[label=assignedFrom];
	face_recognition -> "fake-detect-basic.ipynb"	[label=importedBy];
	"face_recognition(0)" -> "fake-detect-basic.ipynb"	[label=appearsIn];
	"face_recognition(0)" -> face_recognition	[label=assignedFrom];
	imageio -> "fake-detect-basic.ipynb"	[label=importedBy];
	"imageio(0)" -> "fake-detect-basic.ipynb"	[label=appearsIn];
	"imageio(0)" -> imageio	[label=assignedFrom];
	tensorflow -> "fake-detect-basic.ipynb"	[label=importedBy];
	"tf(0)" -> "fake-detect-basic.ipynb"	[label=appearsIn];
	"tf(0)" -> tensorflow	[label=assignedFrom];
	warnings -> "fake-detect-basic.ipynb"	[label=importedBy];
	"warnings(0)" -> "fake-detect-basic.ipynb"	[label=appearsIn];
	"warnings(0)" -> warnings	[label=assignedFrom];
	"warnings(0)$0" -> "warnings(0)"	[label=filterwarnings];
	"warnings(0)$0" -> "ignore(0)"	[label=filterwarnings];
	"ignore(0)" -> "fake-detect-basic.ipynb"	[label=appearsIn];
	"../input/deepfake-detection-challenge/(0)" -> "fake-detect-basic.ipynb"	[label=appearsIn];
	"PATH(0)$0" -> "../input/deepfake-detection-challenge/(0)"	[label=assignedFrom];
	"print[31/0]" -> "os(0)"	[label=print];
	"print[31/0]" -> "PATH(0)$0"	[label=print];
	"dirname(0)" -> "fake-detect-basic.ipynb"	[label=appearsIn];
	"dirname(0)" -> "os(0)"	[label=iteratorOf];
	"dirname(0)" -> "/kaggle/input/meso-pretrain(0)"	[label=iteratorOf];
	"/kaggle/input/meso-pretrain(0)" -> "fake-detect-basic.ipynb"	[label=appearsIn];
	"_(0)" -> "fake-detect-basic.ipynb"	[label=appearsIn];
	"_(0)" -> "os(0)"	[label=iteratorOf];
	"_(0)" -> "/kaggle/input/meso-pretrain(0)"	[label=iteratorOf];
	"filenames(0)" -> "fake-detect-basic.ipynb"	[label=appearsIn];
	"filenames(0)" -> "os(0)"	[label=iteratorOf];
	"filenames(0)" -> "/kaggle/input/meso-pretrain(0)"	[label=iteratorOf];
	"filename(0)" -> "fake-detect-basic.ipynb"	[label=appearsIn];
	"filename(0)" -> "filenames(0)"	[label=iteratorOf];
	"print[34/8]" -> "os(0)"	[label=print];
	"print[34/8]" -> "dirname(0)"	[label=print];
	"print[34/8]" -> "filename(0)"	[label=print];
	"IPython.display" -> "fake-detect-basic.ipynb"	[label=importedBy];
	HTML -> "IPython.display"	[label=importedBy];
	"HTML(0)" -> "fake-detect-basic.ipynb"	[label=appearsIn];
	"HTML(0)" -> HTML	[label=assignedFrom];
	base64 -> "fake-detect-basic.ipynb"	[label=importedBy];
	b64encode -> base64	[label=importedBy];
	"b64encode(0)" -> "fake-detect-basic.ipynb"	[label=appearsIn];
	"b64encode(0)" -> b64encode	[label=assignedFrom];
	"open(0)" -> "fake-detect-basic.ipynb"	[label=appearsIn];
	"vid1(0)$0" -> "open(0)"	[label=read];
	"vid1(0)$0" -> "/kaggle/input/deepfake-detection-challenge/test_videos/ytddugrwph.mp4(0)"	[label=read];
	"vid1(0)$0" -> "rb(0)"	[label=read];
	"/kaggle/input/deepfake-detection-challenge/test_videos/ytddugrwph.mp4(0)" -> "fake-detect-basic.ipynb"	[label=appearsIn];
	"rb(0)" -> "fake-detect-basic.ipynb"	[label=appearsIn];
	"data:video/mp4;base64,(0)" -> "fake-detect-basic.ipynb"	[label=appearsIn];
	"data_url(0)$0" -> "b64encode(0)"	[label=Add];
	"data_url(0)$0" -> "vid1(0)$0"	[label=Add];
	"data_url(0)$0" -> "data:video/mp4;base64,(0)"	[label=Add];
	"
<video width=600 controls>
      <source src=\"\%s\" type=\"video/mp4\">
</video>
(0)" -> "fake-detect-basic.ipynb"	[label=appearsIn];
	"HTML[39/0]" -> "data_url(0)$0"	[label=HTML];
	"HTML[39/0]" -> "
<video width=600 controls>
      <source src=\"\%s\" type=\"video/mp4\">
</video>
(0)"	[label=HTML];
	"self(2)" -> "__init__[0]"	[label=_argToVar];
	"path(2)" -> "__init__[1]"	[label=_argToVar];
	"self(2)$0" -> "self(2)"	[label=assignedFrom];
	"self(2)$0" -> "path(2)"	[label=assignedFrom];
	"self(2)$1" -> "path(2)"	[label=get_reader];
	"self(2)$1" -> "self(2)$0"	[label=get_reader];
	"self(2)$1" -> "imageio(2)"	[label=get_reader];
	"self(2)$1" -> "ffmpeg(2)"	[label=get_reader];
	"self(2)$2" -> "self(2)$1"	[label=count_frames];
	"self(2)$3" -> "self(2)$2"	[label=assignedFrom];
	"self(2)$3" -> "fps(2)"	[label=assignedFrom];
	"self(3)" -> "init_head[0]"	[label=_argToVar];
	"self(3)$0" -> "self(3)"	[label=set_image_index];
	"self(3)$0" -> "0(3)"	[label=set_image_index];
	"self(4)" -> "next_frame[0]"	[label=_argToVar];
	"self(4)$0" -> "self(4)"	[label=get_next_data];
	"self(5)" -> "get[0]"	[label=_argToVar];
	"key(5)" -> "get[1]"	[label=_argToVar];
	"self(6)" -> "__call__[0]"	[label=_argToVar];
	"key(6)" -> "__call__[1]"	[label=_argToVar];
	"self(7)" -> "__len__[0]"	[label=_argToVar];
	"256(0)" -> "fake-detect-basic.ipynb"	[label=appearsIn];
	"IMGWIDTH(0)$0" -> "256(0)"	[label=assignedFrom];
	"self(9)$0" -> "self(9)"	[label=assignedFrom];
	"self(9)$0" -> "0(9)"	[label=assignedFrom];
	"self(10)" -> "predict[0]"	[label=_argToVar];
	"x(10)" -> "predict[1]"	[label=_argToVar];
	"self(11)" -> "fit[0]"	[label=_argToVar];
	"x(11)" -> "fit[1]"	[label=_argToVar];
	"y(11)" -> "fit[2]"	[label=_argToVar];
	"self(12)" -> "get_accuracy[0]"	[label=_argToVar];
	"x(12)" -> "get_accuracy[1]"	[label=_argToVar];
	"y(12)" -> "get_accuracy[2]"	[label=_argToVar];
	"self(13)" -> "load[0]"	[label=_argToVar];
	"path(13)" -> "load[1]"	[label=_argToVar];
	"self(13)$0" -> "self(13)"	[label=load_weights];
	"self(13)$0" -> "path(13)"	[label=load_weights];
	"self(15)" -> "__init__[0]"	[label=_argToVar];
	"learning_rate(15)" -> "__init__[1]"	[label=_argToVar];
	"self(15)$0" -> "self(15)"	[label=init_model];
	"optimizer(15)$0" -> "learning_rate(15)"	[label=Adam];
	"self(15)$1" -> "self(15)$0"	[label=compile];
	"self(16)" -> "init_model[0]"	[label=_argToVar];
	"x(16)$0" -> "IMGWIDTH(16)"	[label=Input];
	"x(16)$0" -> "3(16)"	[label=Input];
	"x1(16)$0" -> "x(16)$0"	[label=assignedFrom];
	"x1(16)$0" -> "3(16)"	[label=assignedFrom];
	"x1(16)$0" -> "Conv2D(16)"	[label=assignedFrom];
	"x1(16)$0" -> "8(16)"	[label=assignedFrom];
	"x1(16)$0" -> "same(16)"	[label=assignedFrom];
	"x1(16)$0" -> "relu(16)"	[label=assignedFrom];
	"x1(16)$1" -> "x1(16)$1"	[label=assignedFrom];
	"x1(16)$1" -> "BatchNormalization(16)"	[label=assignedFrom];
	"x1(16)$2" -> "same(16)"	[label=assignedFrom];
	"x1(16)$2" -> "x1(16)$2"	[label=assignedFrom];
	"x1(16)$2" -> "MaxPooling2D(16)"	[label=assignedFrom];
	"x1(16)$2" -> "2(16)"	[label=assignedFrom];
	"x2(16)$0" -> "Conv2D(16)"	[label=assignedFrom];
	"x2(16)$0" -> "8(16)"	[label=assignedFrom];
	"x2(16)$0" -> "same(16)"	[label=assignedFrom];
	"x2(16)$0" -> "relu(16)"	[label=assignedFrom];
	"x2(16)$0" -> "x1(16)$2"	[label=assignedFrom];
	"x2(16)$0" -> "5(16)"	[label=assignedFrom];
	"x2(16)$1" -> "BatchNormalization(16)"	[label=assignedFrom];
	"x2(16)$1" -> "x2(16)$1"	[label=assignedFrom];
	"x2(16)$2" -> "same(16)"	[label=assignedFrom];
	"x2(16)$2" -> "MaxPooling2D(16)"	[label=assignedFrom];
	"x2(16)$2" -> "2(16)"	[label=assignedFrom];
	"x2(16)$2" -> "x2(16)$2"	[label=assignedFrom];
	"x3(16)$0" -> "Conv2D(16)"	[label=assignedFrom];
	"x3(16)$0" -> "same(16)"	[label=assignedFrom];
	"x3(16)$0" -> "relu(16)"	[label=assignedFrom];
	"x3(16)$0" -> "5(16)"	[label=assignedFrom];
	"x3(16)$0" -> "x2(16)$2"	[label=assignedFrom];
	"x3(16)$0" -> "16(16)"	[label=assignedFrom];
	"x3(16)$1" -> "BatchNormalization(16)"	[label=assignedFrom];
	"x3(16)$1" -> "x3(16)$1"	[label=assignedFrom];
	"x3(16)$2" -> "same(16)"	[label=assignedFrom];
	"x3(16)$2" -> "MaxPooling2D(16)"	[label=assignedFrom];
	"x3(16)$2" -> "2(16)"	[label=assignedFrom];
	"x3(16)$2" -> "x3(16)$2"	[label=assignedFrom];
	"x4(16)$0" -> "Conv2D(16)"	[label=assignedFrom];
	"x4(16)$0" -> "same(16)"	[label=assignedFrom];
	"x4(16)$0" -> "relu(16)"	[label=assignedFrom];
	"x4(16)$0" -> "5(16)"	[label=assignedFrom];
	"x4(16)$0" -> "16(16)"	[label=assignedFrom];
	"x4(16)$0" -> "x3(16)$2"	[label=assignedFrom];
	"x4(16)$1" -> "BatchNormalization(16)"	[label=assignedFrom];
	"x4(16)$1" -> "x4(16)$1"	[label=assignedFrom];
	"x4(16)$2" -> "same(16)"	[label=assignedFrom];
	"x4(16)$2" -> "MaxPooling2D(16)"	[label=assignedFrom];
	"x4(16)$2" -> "x4(16)$2"	[label=assignedFrom];
	"x4(16)$2" -> "4(16)"	[label=assignedFrom];
	"y(16)$0" -> "x4(16)$2"	[label=assignedFrom];
	"y(16)$0" -> "Flatten(16)"	[label=assignedFrom];
	"y(16)$1" -> "y(16)$1"	[label=assignedFrom];
	"y(16)$1" -> "Dropout(16)"	[label=assignedFrom];
	"y(16)$1" -> "0.5(16)"	[label=assignedFrom];
	"y(16)$2" -> "16(16)"	[label=assignedFrom];
	"y(16)$2" -> "y(16)$2"	[label=assignedFrom];
	"y(16)$2" -> "Dense(16)"	[label=assignedFrom];
	"y(16)$3" -> "y(16)$3"	[label=assignedFrom];
	"y(16)$3" -> "LeakyReLU(16)"	[label=assignedFrom];
	"y(16)$3" -> "0.1(16)"	[label=assignedFrom];
	"y(16)$4" -> "Dropout(16)"	[label=assignedFrom];
	"y(16)$4" -> "0.5(16)"	[label=assignedFrom];
	"y(16)$4" -> "y(16)$4"	[label=assignedFrom];
	"y(16)$5" -> "Dense(16)"	[label=assignedFrom];
	"y(16)$5" -> "y(16)$5"	[label=assignedFrom];
	"y(16)$5" -> "1(16)"	[label=assignedFrom];
	"y(16)$5" -> "sigmoid(16)"	[label=assignedFrom];
	"tf(0)$0" -> "tf(0)"	[label=is_gpu_available];
	"classifier(0)" -> "fake-detect-basic.ipynb"	[label=appearsIn];
	"classifier(0)$0" -> "classifier(0)"	[label=load];
	"classifier(0)$0" -> "/kaggle/input/meso-pretrain/Meso4_DF(0)"	[label=load];
	"/kaggle/input/meso-pretrain/Meso4_DF(0)" -> "fake-detect-basic.ipynb"	[label=appearsIn];
	"100(0)" -> "fake-detect-basic.ipynb"	[label=appearsIn];
	"save_interval(0)$0" -> "100(0)"	[label=assignedFrom];
	"0.1(0)" -> "fake-detect-basic.ipynb"	[label=appearsIn];
	"margin(0)$0" -> "0.1(0)"	[label=assignedFrom];
	"vi(0)" -> "fake-detect-basic.ipynb"	[label=appearsIn];
	"vi(0)" -> "os(0)"	[label=iteratorOf];
	"vi(0)" -> "/kaggle/input/deepfake-detection-challenge/test_videos(0)"	[label=iteratorOf];
	"/kaggle/input/deepfake-detection-challenge/test_videos(0)" -> "fake-detect-basic.ipynb"	[label=appearsIn];
	"video(0)$0" -> "os(0)"	[label=Video];
	"video(0)$0" -> "vi(0)"	[label=Video];
	"video(0)$0" -> "/kaggle/input/deepfake-detection-challenge/test_videos/(0)"	[label=Video];
	"/kaggle/input/deepfake-detection-challenge/test_videos/(0)" -> "fake-detect-basic.ipynb"	[label=appearsIn];
	"[](0)" -> "fake-detect-basic.ipynb"	[label=appearsIn];
	"re_imgs(0)$0" -> "[](0)"	[label=assignedFrom];
	"range(0)" -> "fake-detect-basic.ipynb"	[label=appearsIn];
	"i(0)" -> "fake-detect-basic.ipynb"	[label=appearsIn];
	"i(0)" -> "save_interval(0)$0"	[label=iteratorOf];
	"i(0)" -> "video(0)$0"	[label=iteratorOf];
	"i(0)" -> "range(0)"	[label=iteratorOf];
	"i(0)" -> "0(0)"	[label=iteratorOf];
	"0(0)" -> "fake-detect-basic.ipynb"	[label=appearsIn];
	"img(0)$0" -> "video(0)$0"	[label=get];
	"img(0)$0" -> "i(0)"	[label=get];
	"face_positions(0)$0" -> "face_recognition(0)"	[label=face_locations];
	"face_positions(0)$0" -> "img(0)$0"	[label=face_locations];
	"face_position(0)" -> "fake-detect-basic.ipynb"	[label=appearsIn];
	"face_position(0)" -> "face_positions(0)$0"	[label=iteratorOf];
	"offset(0)$0" -> "margin(0)$0"	[label=round];
	"offset(0)$0" -> "0(0)"	[label=round];
	"offset(0)$0" -> "face_position(0)"	[label=round];
	"offset(0)$0" -> "2(0)"	[label=round];
	"2(0)" -> "fake-detect-basic.ipynb"	[label=appearsIn];
	"y0(0)$0" -> "0(0)"	[label=max];
	"y0(0)$0" -> "face_position(0)"	[label=max];
	"y0(0)$0" -> "offset(0)$0"	[label=max];
	"x1(0)$0" -> "img(0)$0"	[label=min];
	"x1(0)$0" -> "face_position(0)"	[label=min];
	"x1(0)$0" -> "offset(0)$0"	[label=min];
	"x1(0)$0" -> "1(0)"	[label=min];
	"1(0)" -> "fake-detect-basic.ipynb"	[label=appearsIn];
	"y1(0)$0" -> "0(0)"	[label=min];
	"y1(0)$0" -> "img(0)$0"	[label=min];
	"y1(0)$0" -> "face_position(0)"	[label=min];
	"y1(0)$0" -> "offset(0)$0"	[label=min];
	"y1(0)$0" -> "2(0)"	[label=min];
	"x0(0)$0" -> "0(0)"	[label=max];
	"x0(0)$0" -> "face_position(0)"	[label=max];
	"x0(0)$0" -> "offset(0)$0"	[label=max];
	"x0(0)$0" -> "3(0)"	[label=max];
	"3(0)" -> "fake-detect-basic.ipynb"	[label=appearsIn];
	"face(0)$0" -> "img(0)$0"	[label=assignedFrom];
	"face(0)$0" -> "y0(0)$0"	[label=assignedFrom];
	"face(0)$0" -> "x1(0)$0"	[label=assignedFrom];
	"face(0)$0" -> "y1(0)$0"	[label=assignedFrom];
	"face(0)$0" -> "x0(0)$0"	[label=assignedFrom];
	"inp(0)$0" -> "cv2(0)"	[label=Div];
	"inp(0)$0" -> "256(0)"	[label=Div];
	"inp(0)$0" -> "face(0)$0"	[label=Div];
	"inp(0)$0" -> "255.0(0)"	[label=Div];
	"255.0(0)" -> "fake-detect-basic.ipynb"	[label=appearsIn];
	"re_img(0)$0" -> "np(0)"	[label=predict];
	"re_img(0)$0" -> "classifier(0)$0"	[label=predict];
	"re_img(0)$0" -> "[<_ast.Name object at 0x7fd4c04a84f0>](0)"	[label=predict];
	"[<_ast.Name object at 0x7fd4c04a84f0>](0)" -> "fake-detect-basic.ipynb"	[label=appearsIn];
	"re_imgs(0)$1" -> "re_imgs(0)$0"	[label=append];
	"re_imgs(0)$1" -> "0(0)"	[label=append];
	"re_imgs(0)$1" -> "re_img(0)$0"	[label=append];
	"re_video(0)$0" -> "np(0)"	[label=average];
	"re_video(0)$0" -> "re_imgs(0)$1"	[label=average];
	"submit(0)" -> "fake-detect-basic.ipynb"	[label=appearsIn];
	"submit(0)$0" -> "re_video(0)$0"	[label=assignedFrom];
	"submit(0)$0" -> "submit(0)"	[label=assignedFrom];
	"print[150/4]" -> "vi(0)"	[label=print];
	"print[150/4]" -> "1(0)"	[label=print];
	"print[150/4]" -> "re_video(0)$0"	[label=print];
	"print[150/4]" -> ": (0)"	[label=print];
	"print[150/4]" -> "str(0)"	[label=print];
	": (0)" -> "fake-detect-basic.ipynb"	[label=appearsIn];
	"str(0)" -> "fake-detect-basic.ipynb"	[label=appearsIn];
	"key(0)" -> "fake-detect-basic.ipynb"	[label=appearsIn];
	"key(0)" -> "submit(0)$0"	[label=iteratorOf];
	"f(0)" -> "fake-detect-basic.ipynb"	[label=appearsIn];
	"f(0)$0" -> "key(0)"	[label=write];
	"f(0)$0" -> "f(0)"	[label=write];
	"f(0)$0" -> "\%s,\%s
(0)"	[label=write];
	"f(0)$0" -> "0.5(0)"	[label=write];
	"\%s,\%s
(0)" -> "fake-detect-basic.ipynb"	[label=appearsIn];
	"0.5(0)" -> "fake-detect-basic.ipynb"	[label=appearsIn];
	"f(0)$1" -> "submit(0)$0"	[label=write];
	"f(0)$1" -> "key(0)"	[label=write];
	"f(0)$1" -> "f(0)$0"	[label=write];
	"f(0)$1" -> "\%s,\%s
(0)"	[label=write];
	"submission(0)$0" -> "pd(0)"	[label=read_csv];
	"submission(0)$0" -> "submit2.csv(0)"	[label=read_csv];
	"submission(0)$0" -> "[<_ast.Constant object at 0x7fd4c04c7760>, <_ast.Constant object at 0x7fd4c04c7790>](0)"	[label=read_csv];
	"submit2.csv(0)" -> "fake-detect-basic.ipynb"	[label=appearsIn];
	"[<_ast.Constant object at 0x7fd4c04c7760>, <_ast.Constant object at 0x7fd4c04c7790>](0)" -> "fake-detect-basic.ipynb"	[label=appearsIn];
	"submission(0)$1" -> "filename(0)"	[label=sort_values];
	"submission(0)$1" -> "submission(0)$0"	[label=sort_values];
	"submission(0)$2" -> "submission(0)$1"	[label=to_csv];
	"submission(0)$2" -> "submission.csv(0)"	[label=to_csv];
	"submission.csv(0)" -> "fake-detect-basic.ipynb"	[label=appearsIn];
}
