strict digraph "" {
	pandas -> "omg-nlp-with-the-djia-and-reddit.ipynb"	[label=importedBy];
	"pd(0)" -> pandas	[label=assignedFrom];
	"pd(0)" -> "omg-nlp-with-the-djia-and-reddit.ipynb"	[label=appearsIn];
	"sklearn.feature_extraction.text" -> "omg-nlp-with-the-djia-and-reddit.ipynb"	[label=importedBy];
	CountVectorizer -> "sklearn.feature_extraction.text"	[label=importedBy];
	"CountVectorizer(0)" -> "omg-nlp-with-the-djia-and-reddit.ipynb"	[label=appearsIn];
	"CountVectorizer(0)" -> CountVectorizer	[label=assignedFrom];
	"sklearn.linear_model" -> "omg-nlp-with-the-djia-and-reddit.ipynb"	[label=importedBy];
	LogisticRegression -> "sklearn.linear_model"	[label=importedBy];
	"LogisticRegression(0)" -> "omg-nlp-with-the-djia-and-reddit.ipynb"	[label=appearsIn];
	"LogisticRegression(0)" -> LogisticRegression	[label=assignedFrom];
	"data(0)$0" -> "pd(0)"	[label=read_csv];
	"data(0)$0" -> "../input/Combined_News_DJIA.csv(0)"	[label=read_csv];
	"../input/Combined_News_DJIA.csv(0)" -> "omg-nlp-with-the-djia-and-reddit.ipynb"	[label=appearsIn];
	"data(0)$1" -> "data(0)$0"	[label=head];
	"train(0)$0" -> "data(0)$1"	[label=assignedFrom];
	"train(0)$0" -> "Date(0)"	[label=assignedFrom];
	"train(0)$0" -> "2015-01-01(0)"	[label=assignedFrom];
	"Date(0)" -> "omg-nlp-with-the-djia-and-reddit.ipynb"	[label=appearsIn];
	"2015-01-01(0)" -> "omg-nlp-with-the-djia-and-reddit.ipynb"	[label=appearsIn];
	"test(0)$0" -> "data(0)$1"	[label=assignedFrom];
	"test(0)$0" -> "Date(0)"	[label=assignedFrom];
	"test(0)$0" -> "2014-12-31(0)"	[label=assignedFrom];
	"2014-12-31(0)" -> "omg-nlp-with-the-djia-and-reddit.ipynb"	[label=appearsIn];
	"example(0)$0" -> "train(0)$0"	[label=assignedFrom];
	"example(0)$0" -> "3(0)"	[label=assignedFrom];
	"example(0)$0" -> "10(0)"	[label=assignedFrom];
	"3(0)" -> "omg-nlp-with-the-djia-and-reddit.ipynb"	[label=appearsIn];
	"10(0)" -> "omg-nlp-with-the-djia-and-reddit.ipynb"	[label=appearsIn];
	"print[14/0]" -> "example(0)$0"	[label=print];
	"example2(0)$0" -> "example(0)$0"	[label=lower];
	"print[17/0]" -> "example2(0)$0"	[label=print];
	"example3(0)$0" -> "CountVectorizer(0)"	[label=assignedFrom];
	"example3(0)$0" -> "example2(0)$0"	[label=assignedFrom];
	"print[20/0]" -> "example3(0)$0"	[label=print];
	"pd(0)$0" -> "pd(0)"	[label=DataFrame];
	"pd(0)$0" -> "example3(0)$0"	[label=DataFrame];
	"pd(0)$0" -> "[<_ast.Name object at 0x7fd4902abc10>, <_ast.Call object at 0x7fd4902abd30>](0)"	[label=DataFrame];
	"pd(0)$0" -> "x(0)"	[label=DataFrame];
	"pd(0)$0" -> "set(0)"	[label=DataFrame];
	"[<_ast.Name object at 0x7fd4902abc10>, <_ast.Call object at 0x7fd4902abd30>](0)" -> "omg-nlp-with-the-djia-and-reddit.ipynb"	[label=appearsIn];
	"x(0)" -> "omg-nlp-with-the-djia-and-reddit.ipynb"	[label=appearsIn];
	"set(0)" -> "omg-nlp-with-the-djia-and-reddit.ipynb"	[label=appearsIn];
	"[](0)" -> "omg-nlp-with-the-djia-and-reddit.ipynb"	[label=appearsIn];
	"trainheadlines(0)$0" -> "[](0)"	[label=assignedFrom];
	"range(0)" -> "omg-nlp-with-the-djia-and-reddit.ipynb"	[label=appearsIn];
	"row(0)" -> "omg-nlp-with-the-djia-and-reddit.ipynb"	[label=appearsIn];
	"row(0)" -> "train(0)$0"	[label=iteratorOf];
	"row(0)" -> "test(0)$0"	[label=iteratorOf];
	"row(0)" -> "range(0)"	[label=iteratorOf];
	"row(0)" -> "0(0)"	[label=iteratorOf];
	"row(0)" -> "len(0)"	[label=iteratorOf];
	"0(0)" -> "omg-nlp-with-the-djia-and-reddit.ipynb"	[label=appearsIn];
	"len(0)" -> "omg-nlp-with-the-djia-and-reddit.ipynb"	[label=appearsIn];
	"trainheadlines(0)$1" -> "train(0)$0"	[label=append];
	"trainheadlines(0)$1" -> "x(0)"	[label=append];
	"trainheadlines(0)$1" -> "trainheadlines(0)$0"	[label=append];
	"trainheadlines(0)$1" -> "row(0)"	[label=append];
	"trainheadlines(0)$1" -> " (0)"	[label=append];
	"trainheadlines(0)$1" -> "str(0)"	[label=append];
	"trainheadlines(0)$1" -> "2(0)"	[label=append];
	"trainheadlines(0)$1" -> "27(0)"	[label=append];
	" (0)" -> "omg-nlp-with-the-djia-and-reddit.ipynb"	[label=appearsIn];
	"str(0)" -> "omg-nlp-with-the-djia-and-reddit.ipynb"	[label=appearsIn];
	"2(0)" -> "omg-nlp-with-the-djia-and-reddit.ipynb"	[label=appearsIn];
	"27(0)" -> "omg-nlp-with-the-djia-and-reddit.ipynb"	[label=appearsIn];
	"basicvectorizer(0)" -> "omg-nlp-with-the-djia-and-reddit.ipynb"	[label=appearsIn];
	"basictrain(0)$0" -> "trainheadlines(0)$1"	[label=fit_transform];
	"basictrain(0)$0" -> "basicvectorizer(0)"	[label=fit_transform];
	"print[31/0]" -> "basictrain(0)$0"	[label=print];
	"basicmodel(0)" -> "omg-nlp-with-the-djia-and-reddit.ipynb"	[label=appearsIn];
	"basicmodel(0)$0" -> "train(0)$0"	[label=fit];
	"basicmodel(0)$0" -> "basictrain(0)$0"	[label=fit];
	"basicmodel(0)$0" -> "basicmodel(0)"	[label=fit];
	"basicmodel(0)$0" -> "Label(0)"	[label=fit];
	"Label(0)" -> "omg-nlp-with-the-djia-and-reddit.ipynb"	[label=appearsIn];
	"testheadlines(0)$0" -> "[](0)"	[label=assignedFrom];
	"testheadlines(0)$1" -> "test(0)$0"	[label=append];
	"testheadlines(0)$1" -> "x(0)"	[label=append];
	"testheadlines(0)$1" -> "row(0)"	[label=append];
	"testheadlines(0)$1" -> " (0)"	[label=append];
	"testheadlines(0)$1" -> "str(0)"	[label=append];
	"testheadlines(0)$1" -> "2(0)"	[label=append];
	"testheadlines(0)$1" -> "27(0)"	[label=append];
	"testheadlines(0)$1" -> "testheadlines(0)$0"	[label=append];
	"basictest(0)$0" -> "basicvectorizer(0)"	[label=transform];
	"basictest(0)$0" -> "testheadlines(0)$1"	[label=transform];
	"predictions(0)$0" -> "basicmodel(0)$0"	[label=predict];
	"predictions(0)$0" -> "basictest(0)$0"	[label=predict];
	"pd(0)$1" -> "test(0)$0"	[label=crosstab];
	"pd(0)$1" -> "pd(0)$0"	[label=crosstab];
	"pd(0)$1" -> "Label(0)"	[label=crosstab];
	"pd(0)$1" -> "predictions(0)$0"	[label=crosstab];
	"basicwords(0)$0" -> "basicvectorizer(0)"	[label=get_feature_names];
	"basiccoeffs(0)$0" -> "0(0)"	[label=assignedFrom];
	"basiccoeffs(0)$0" -> "basicmodel(0)$0"	[label=assignedFrom];
	"coeffdf(0)$0" -> "pd(0)$1"	[label=DataFrame];
	"coeffdf(0)$0" -> "basicwords(0)$0"	[label=DataFrame];
	"coeffdf(0)$0" -> "basiccoeffs(0)$0"	[label=DataFrame];
	"coeffdf(0)$0" -> "Word(0)"	[label=DataFrame];
	"coeffdf(0)$0" -> "Coefficient(0)"	[label=DataFrame];
	"Word(0)" -> "omg-nlp-with-the-djia-and-reddit.ipynb"	[label=appearsIn];
	"Coefficient(0)" -> "omg-nlp-with-the-djia-and-reddit.ipynb"	[label=appearsIn];
	"coeffdf(0)$1" -> "coeffdf(0)$0"	[label=sort_values];
	"coeffdf(0)$1" -> "[<_ast.Constant object at 0x7fd5008325e0>, <_ast.Constant object at 0x7fd500832250>](0)"	[label=sort_values];
	"coeffdf(0)$1" -> "[<_ast.Constant object at 0x7fd500832940>, <_ast.Constant object at 0x7fd500832760>](0)"	[label=sort_values];
	"[<_ast.Constant object at 0x7fd5008325e0>, <_ast.Constant object at 0x7fd500832250>](0)" -> "omg-nlp-with-the-djia-and-reddit.ipynb"	[label=appearsIn];
	"[<_ast.Constant object at 0x7fd500832940>, <_ast.Constant object at 0x7fd500832760>](0)" -> "omg-nlp-with-the-djia-and-reddit.ipynb"	[label=appearsIn];
	"coeffdf(0)$2" -> "10(0)"	[label=head];
	"coeffdf(0)$2" -> "coeffdf(0)$1"	[label=head];
	"coeffdf(0)$3" -> "10(0)"	[label=tail];
	"coeffdf(0)$3" -> "coeffdf(0)$2"	[label=tail];
	"advancedvectorizer(0)$0" -> "2(0)"	[label=CountVectorizer];
	"advancedtrain(0)$0" -> "trainheadlines(0)$1"	[label=fit_transform];
	"advancedtrain(0)$0" -> "advancedvectorizer(0)$0"	[label=fit_transform];
	"print[60/0]" -> "advancedtrain(0)$0"	[label=print];
	"advancedmodel(0)" -> "omg-nlp-with-the-djia-and-reddit.ipynb"	[label=appearsIn];
	"advancedmodel(0)$0" -> "train(0)$0"	[label=fit];
	"advancedmodel(0)$0" -> "Label(0)"	[label=fit];
	"advancedmodel(0)$0" -> "advancedtrain(0)$0"	[label=fit];
	"advancedmodel(0)$0" -> "advancedmodel(0)"	[label=fit];
	"testheadlines(0)$2" -> "[](0)"	[label=assignedFrom];
	"testheadlines(0)$3" -> "test(0)$0"	[label=append];
	"testheadlines(0)$3" -> "x(0)"	[label=append];
	"testheadlines(0)$3" -> "row(0)"	[label=append];
	"testheadlines(0)$3" -> " (0)"	[label=append];
	"testheadlines(0)$3" -> "str(0)"	[label=append];
	"testheadlines(0)$3" -> "2(0)"	[label=append];
	"testheadlines(0)$3" -> "27(0)"	[label=append];
	"testheadlines(0)$3" -> "testheadlines(0)$2"	[label=append];
	"advancedtest(0)$0" -> "advancedvectorizer(0)$0"	[label=transform];
	"advancedtest(0)$0" -> "testheadlines(0)$3"	[label=transform];
	"advpredictions(0)$0" -> "advancedmodel(0)$0"	[label=predict];
	"advpredictions(0)$0" -> "advancedtest(0)$0"	[label=predict];
	"pd(0)$2" -> "test(0)$0"	[label=crosstab];
	"pd(0)$2" -> "Label(0)"	[label=crosstab];
	"pd(0)$2" -> "pd(0)$1"	[label=crosstab];
	"pd(0)$2" -> "advpredictions(0)$0"	[label=crosstab];
	"advwords(0)$0" -> "advancedvectorizer(0)$0"	[label=get_feature_names];
	"advcoeffs(0)$0" -> "0(0)"	[label=assignedFrom];
	"advcoeffs(0)$0" -> "advancedmodel(0)$0"	[label=assignedFrom];
	"advcoeffdf(0)$0" -> "Coefficient(0)"	[label=DataFrame];
	"advcoeffdf(0)$0" -> "pd(0)$2"	[label=DataFrame];
	"advcoeffdf(0)$0" -> "advwords(0)$0"	[label=DataFrame];
	"advcoeffdf(0)$0" -> "advcoeffs(0)$0"	[label=DataFrame];
	"advcoeffdf(0)$0" -> "Words(0)"	[label=DataFrame];
	"Words(0)" -> "omg-nlp-with-the-djia-and-reddit.ipynb"	[label=appearsIn];
	"advcoeffdf(0)$1" -> "advcoeffdf(0)$0"	[label=sort_values];
	"advcoeffdf(0)$1" -> "[<_ast.Constant object at 0x7fd5008362b0>, <_ast.Constant object at 0x7fd5008361c0>](0)"	[label=sort_values];
	"advcoeffdf(0)$1" -> "[<_ast.Constant object at 0x7fd5008367c0>, <_ast.Constant object at 0x7fd500836670>](0)"	[label=sort_values];
	"[<_ast.Constant object at 0x7fd5008362b0>, <_ast.Constant object at 0x7fd5008361c0>](0)" -> "omg-nlp-with-the-djia-and-reddit.ipynb"	[label=appearsIn];
	"[<_ast.Constant object at 0x7fd5008367c0>, <_ast.Constant object at 0x7fd500836670>](0)" -> "omg-nlp-with-the-djia-and-reddit.ipynb"	[label=appearsIn];
	"advcoeffdf(0)$2" -> "10(0)"	[label=head];
	"advcoeffdf(0)$2" -> "advcoeffdf(0)$1"	[label=head];
	"advcoeffdf(0)$3" -> "10(0)"	[label=tail];
	"advcoeffdf(0)$3" -> "advcoeffdf(0)$2"	[label=tail];
}
