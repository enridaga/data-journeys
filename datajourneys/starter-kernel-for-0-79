digraph "" {
	torch -> "starter-kernel-for-0-79.ipynb"	[label=importedBy];
	"torch(0)" -> torch	[label=assignedFrom];
	"torch(0)" -> "starter-kernel-for-0-79.ipynb"	[label=appearsIn];
	numpy -> "starter-kernel-for-0-79.ipynb"	[label=importedBy];
	"np(0)" -> "starter-kernel-for-0-79.ipynb"	[label=appearsIn];
	"np(0)" -> numpy	[label=assignedFrom];
	pandas -> "starter-kernel-for-0-79.ipynb"	[label=importedBy];
	"pd(0)" -> "starter-kernel-for-0-79.ipynb"	[label=appearsIn];
	"pd(0)" -> pandas	[label=assignedFrom];
	"matplotlib.pyplot" -> "starter-kernel-for-0-79.ipynb"	[label=importedBy];
	"plt(0)" -> "starter-kernel-for-0-79.ipynb"	[label=appearsIn];
	"plt(0)" -> "matplotlib.pyplot"	[label=assignedFrom];
	matplotlib -> "starter-kernel-for-0-79.ipynb"	[label=importedBy];
	style -> matplotlib	[label=importedBy];
	"style(0)" -> "starter-kernel-for-0-79.ipynb"	[label=appearsIn];
	"style(0)" -> style	[label=assignedFrom];
	seaborn -> "starter-kernel-for-0-79.ipynb"	[label=importedBy];
	"sns(0)" -> "starter-kernel-for-0-79.ipynb"	[label=appearsIn];
	"sns(0)" -> seaborn	[label=assignedFrom];
	"sklearn.model_selection" -> "starter-kernel-for-0-79.ipynb"	[label=importedBy];
	StratifiedKFold -> "sklearn.model_selection"	[label=importedBy];
	"StratifiedKFold(0)" -> "starter-kernel-for-0-79.ipynb"	[label=appearsIn];
	"StratifiedKFold(0)" -> StratifiedKFold	[label=assignedFrom];
	joblib -> "starter-kernel-for-0-79.ipynb"	[label=importedBy];
	load -> joblib	[label=importedBy];
	"load(0)" -> "starter-kernel-for-0-79.ipynb"	[label=appearsIn];
	"load(0)" -> load	[label=assignedFrom];
	dump -> joblib	[label=importedBy];
	"dump(0)" -> "starter-kernel-for-0-79.ipynb"	[label=appearsIn];
	"dump(0)" -> dump	[label=assignedFrom];
	"sklearn.metrics" -> "starter-kernel-for-0-79.ipynb"	[label=importedBy];
	cohen_kappa_score -> "sklearn.metrics"	[label=importedBy];
	"cohen_kappa_score(0)" -> "starter-kernel-for-0-79.ipynb"	[label=appearsIn];
	"cohen_kappa_score(0)" -> cohen_kappa_score	[label=assignedFrom];
	confusion_matrix -> "sklearn.metrics"	[label=importedBy];
	"confusion_matrix(0)" -> "starter-kernel-for-0-79.ipynb"	[label=appearsIn];
	"confusion_matrix(0)" -> confusion_matrix	[label=assignedFrom];
	fastai -> "starter-kernel-for-0-79.ipynb"	[label=importedBy];
	"*" -> fastai	[label=importedBy];
	"*" -> "fastai.vision"	[label=importedBy];
	"*" -> "fastai.callbacks"	[label=importedBy];
	"fastai.vision" -> "starter-kernel-for-0-79.ipynb"	[label=importedBy];
	"fastai.callbacks" -> "starter-kernel-for-0-79.ipynb"	[label=importedBy];
	"*(0)" -> "starter-kernel-for-0-79.ipynb"	[label=appearsIn];
	"*(0)" -> "*"	[label=assignedFrom];
	torchvision -> "starter-kernel-for-0-79.ipynb"	[label=importedBy];
	models -> torchvision	[label=importedBy];
	"md(0)" -> "starter-kernel-for-0-79.ipynb"	[label=appearsIn];
	"md(0)" -> models	[label=assignedFrom];
	nn -> torch	[label=importedBy];
	"nn(0)" -> "starter-kernel-for-0-79.ipynb"	[label=appearsIn];
	"nn(0)" -> nn	[label=assignedFrom];
	"torch.nn" -> "starter-kernel-for-0-79.ipynb"	[label=importedBy];
	functional -> "torch.nn"	[label=importedBy];
	"F(0)" -> "starter-kernel-for-0-79.ipynb"	[label=appearsIn];
	"F(0)" -> functional	[label=assignedFrom];
	re -> "starter-kernel-for-0-79.ipynb"	[label=importedBy];
	"re(0)" -> "starter-kernel-for-0-79.ipynb"	[label=appearsIn];
	"re(0)" -> re	[label=assignedFrom];
	math -> "starter-kernel-for-0-79.ipynb"	[label=importedBy];
	"math(0)" -> "starter-kernel-for-0-79.ipynb"	[label=appearsIn];
	"math(0)" -> math	[label=assignedFrom];
	collections -> "starter-kernel-for-0-79.ipynb"	[label=importedBy];
	"collections(0)" -> "starter-kernel-for-0-79.ipynb"	[label=appearsIn];
	"collections(0)" -> collections	[label=assignedFrom];
	functools -> "starter-kernel-for-0-79.ipynb"	[label=importedBy];
	partial -> functools	[label=importedBy];
	"partial(0)" -> "starter-kernel-for-0-79.ipynb"	[label=appearsIn];
	"partial(0)" -> partial	[label=assignedFrom];
	"torch.utils" -> "starter-kernel-for-0-79.ipynb"	[label=importedBy];
	model_zoo -> "torch.utils"	[label=importedBy];
	"model_zoo(0)" -> "starter-kernel-for-0-79.ipynb"	[label=appearsIn];
	"model_zoo(0)" -> model_zoo	[label=assignedFrom];
	sklearn -> "starter-kernel-for-0-79.ipynb"	[label=importedBy];
	metrics -> sklearn	[label=importedBy];
	"metrics(0)" -> "starter-kernel-for-0-79.ipynb"	[label=appearsIn];
	"metrics(0)" -> metrics	[label=assignedFrom];
	Counter -> collections	[label=importedBy];
	"Counter(0)" -> "starter-kernel-for-0-79.ipynb"	[label=appearsIn];
	"Counter(0)" -> Counter	[label=assignedFrom];
	json -> "starter-kernel-for-0-79.ipynb"	[label=importedBy];
	"json(0)" -> "starter-kernel-for-0-79.ipynb"	[label=appearsIn];
	"json(0)" -> json	[label=assignedFrom];
	"GlobalParams(0)$0" -> "collections(0)"	[label=namedtuple];
	"GlobalParams(0)$0" -> "GlobalParams(0)$0"	[label=namedtuple];
	"GlobalParams(0)$0" -> "[<_ast.Constant object at 0x7fd500832d30>, <_ast.Constant object at 0x7fd500832d90>, <_ast.Constant object at 0x7fd500832bb0>, <_\
ast.Constant object at 0x7fd5008329d0>, <_ast.Constant object at 0x7fd500832520>, <_ast.Constant object at 0x7fd500832b80>, <_ast.Constant \
object at 0x7fd500832c70>, <_ast.Constant object at 0x7fd500832d60>, <_ast.Constant object at 0x7fd500832df0>, <_ast.Constant object \
at 0x7fd5009997f0>](0)"	[label=namedtuple];
	"[<_ast.Constant object at 0x7fd500832d30>, <_ast.Constant object at 0x7fd500832d90>, <_ast.Constant object at 0x7fd500832bb0>, <_\
ast.Constant object at 0x7fd5008329d0>, <_ast.Constant object at 0x7fd500832520>, <_ast.Constant object at 0x7fd500832b80>, <_ast.Constant \
object at 0x7fd500832c70>, <_ast.Constant object at 0x7fd500832d60>, <_ast.Constant object at 0x7fd500832df0>, <_ast.Constant object \
at 0x7fd5009997f0>](0)" -> "starter-kernel-for-0-79.ipynb"	[label=appearsIn];
	"BlockArgs(0)$0" -> "collections(0)"	[label=namedtuple];
	"BlockArgs(0)$0" -> "BlockArgs(0)$0"	[label=namedtuple];
	"BlockArgs(0)$0" -> "[<_ast.Constant object at 0x7fd500999ca0>, <_ast.Constant object at 0x7fd500999880>, <_ast.Constant object at 0x7fd5009992b0>, <_\
ast.Constant object at 0x7fd5009993d0>, <_ast.Constant object at 0x7fd500999a00>, <_ast.Constant object at 0x7fd5009995b0>, <_ast.Constant \
object at 0x7fd500999040>, <_ast.Constant object at 0x7fd500999460>](0)"	[label=namedtuple];
	"[<_ast.Constant object at 0x7fd500999ca0>, <_ast.Constant object at 0x7fd500999880>, <_ast.Constant object at 0x7fd5009992b0>, <_\
ast.Constant object at 0x7fd5009993d0>, <_ast.Constant object at 0x7fd500999a00>, <_ast.Constant object at 0x7fd5009995b0>, <_ast.Constant \
object at 0x7fd500999040>, <_ast.Constant object at 0x7fd500999460>](0)" -> "starter-kernel-for-0-79.ipynb"	[label=appearsIn];
	"None(0)" -> "starter-kernel-for-0-79.ipynb"	[label=appearsIn];
	"GlobalParams(0)$1" -> "GlobalParams(0)$0"	[label=Mult];
	"GlobalParams(0)$1" -> "None(0)"	[label=Mult];
	"GlobalParams(0)$1" -> "GlobalParams(0)$1"	[label=Mult];
	"GlobalParams(0)$1" -> "len(0)"	[label=Mult];
	"len(0)" -> "starter-kernel-for-0-79.ipynb"	[label=appearsIn];
	"BlockArgs(0)$1" -> "BlockArgs(0)$0"	[label=Mult];
	"BlockArgs(0)$1" -> "None(0)"	[label=Mult];
	"BlockArgs(0)$1" -> "len(0)"	[label=Mult];
	"BlockArgs(0)$1" -> "BlockArgs(0)$1"	[label=Mult];
	"x(1)" -> "relu_fn[0]"	[label=_argToVar];
	"filters(2)" -> "round_filters[0]"	[label=_argToVar];
	"global_params(2)" -> "round_filters[1]"	[label=_argToVar];
	"multiplier(2)$0" -> "global_params(2)"	[label=assignedFrom];
	"divisor(2)$0" -> "global_params(2)"	[label=assignedFrom];
	"min_depth(2)$0" -> "global_params(2)"	[label=assignedFrom];
	"filters(2)$0" -> "filters(2)"	[label=Mult];
	"filters(2)$0" -> "multiplier(2)$0"	[label=Mult];
	"min_depth(2)$1" -> "divisor(2)$0"	[label=assignedFrom];
	"min_depth(2)$1" -> "min_depth(2)$0"	[label=assignedFrom];
	"new_filters(2)$0" -> "divisor(2)$0"	[label=max];
	"new_filters(2)$0" -> "filters(2)$0"	[label=max];
	"new_filters(2)$0" -> "min_depth(2)$1"	[label=max];
	"new_filters(2)$0" -> "int(2)"	[label=max];
	"new_filters(2)$0" -> "2(2)"	[label=max];
	"new_filters(2)$1" -> "divisor(2)$0"	[label=Add];
	"new_filters(2)$1" -> "new_filters(2)$0"	[label=Add];
	"repeats(3)" -> "round_repeats[0]"	[label=_argToVar];
	"global_params(3)" -> "round_repeats[1]"	[label=_argToVar];
	"multiplier(3)$0" -> "global_params(3)"	[label=assignedFrom];
	"inputs(4)" -> "drop_connect[0]"	[label=_argToVar];
	"p(4)" -> "drop_connect[1]"	[label=_argToVar];
	"training(4)" -> "drop_connect[2]"	[label=_argToVar];
	"batch_size(4)$0" -> "inputs(4)"	[label=assignedFrom];
	"batch_size(4)$0" -> "0(4)"	[label=assignedFrom];
	"keep_prob(4)$0" -> "p(4)"	[label=Sub];
	"keep_prob(4)$0" -> "1(4)"	[label=Sub];
	"random_tensor(4)$0" -> "keep_prob(4)$0"	[label=assignedFrom];
	"random_tensor(4)$1" -> "inputs(4)"	[label=Add];
	"random_tensor(4)$1" -> "random_tensor(4)$0"	[label=Add];
	"random_tensor(4)$1" -> "torch(4)"	[label=Add];
	"random_tensor(4)$1" -> "[<_ast.Name object at 0x7fd4c04cc190>, <_ast.Constant object at 0x7fd4c04ccfa0>, <_ast.Constant object at 0x7fd4c04cc0d0>, <_ast.Constant \
object at 0x7fd4c04cc940>](4)"	[label=Add];
	"binary_tensor(4)$0" -> "random_tensor(4)$1"	[label=floor];
	"binary_tensor(4)$0" -> "torch(4)"	[label=floor];
	"output(4)$0" -> "inputs(4)"	[label=Mult];
	"output(4)$0" -> "keep_prob(4)$0"	[label=Mult];
	"output(4)$0" -> "binary_tensor(4)$0"	[label=Mult];
	"image_size(5)" -> "get_same_padding_conv2d[0]"	[label=_argToVar];
	"self(7)" -> "__init__[0]"	[label=_argToVar];
	"in_channels(7)" -> "__init__[1]"	[label=_argToVar];
	"out_channels(7)" -> "__init__[2]"	[label=_argToVar];
	"kernel_size(7)" -> "__init__[3]"	[label=_argToVar];
	"stride(7)" -> "__init__[4]"	[label=_argToVar];
	"dilation(7)" -> "__init__[5]"	[label=_argToVar];
	"groups(7)" -> "__init__[6]"	[label=_argToVar];
	"bias(7)" -> "__init__[7]"	[label=_argToVar];
	"super(7)$0" -> "in_channels(7)"	[label=__init__];
	"super(7)$0" -> "out_channels(7)"	[label=__init__];
	"super(7)$0" -> "kernel_size(7)"	[label=__init__];
	"super(7)$0" -> "stride(7)"	[label=__init__];
	"super(7)$0" -> "dilation(7)"	[label=__init__];
	"super(7)$0" -> "groups(7)"	[label=__init__];
	"super(7)$0" -> "bias(7)"	[label=__init__];
	"super(7)$0" -> "super(7)"	[label=__init__];
	"super(7)$0" -> "0(7)"	[label=__init__];
	"self(7)$0" -> "self(7)"	[label=assignedFrom];
	"self(7)$0" -> "self(7)$0"	[label=assignedFrom];
	"self(7)$0" -> "len(7)"	[label=assignedFrom];
	"self(7)$0" -> "2(7)"	[label=assignedFrom];
	"self(7)$0" -> "[<_ast.Subscript object at 0x7fd4c048e5b0>](7)"	[label=assignedFrom];
	"self(8)" -> "forward[0]"	[label=_argToVar];
	"x(8)" -> "forward[1]"	[label=_argToVar];
	"ih(8)$0" -> "x(8)"	[label=assignedFrom];
	"ih(8)$0" -> "2(8)"	[label=assignedFrom];
	"iw(8)$0" -> "x(8)"	[label=assignedFrom];
	"iw(8)$0" -> "2(8)"	[label=assignedFrom];
	"kh(8)$0" -> "self(8)"	[label=assignedFrom];
	"kh(8)$0" -> "2(8)"	[label=assignedFrom];
	"kw(8)$0" -> "self(8)"	[label=assignedFrom];
	"kw(8)$0" -> "2(8)"	[label=assignedFrom];
	"sh(8)$0" -> "self(8)"	[label=assignedFrom];
	"sw(8)$0" -> "self(8)"	[label=assignedFrom];
	"oh(8)$0" -> "ih(8)$0"	[label=assignedFrom];
	"oh(8)$0" -> "iw(8)$0"	[label=assignedFrom];
	"oh(8)$0" -> "sh(8)$0"	[label=assignedFrom];
	"oh(8)$0" -> "sw(8)$0"	[label=assignedFrom];
	"oh(8)$0" -> "math(8)"	[label=assignedFrom];
	"ow(8)$0" -> "ih(8)$0"	[label=assignedFrom];
	"ow(8)$0" -> "iw(8)$0"	[label=assignedFrom];
	"ow(8)$0" -> "sh(8)$0"	[label=assignedFrom];
	"ow(8)$0" -> "sw(8)$0"	[label=assignedFrom];
	"ow(8)$0" -> "math(8)"	[label=assignedFrom];
	"pad_h(8)$0" -> "self(8)"	[label=max];
	"pad_h(8)$0" -> "ih(8)$0"	[label=max];
	"pad_h(8)$0" -> "kh(8)$0"	[label=max];
	"pad_h(8)$0" -> "oh(8)$0"	[label=max];
	"pad_h(8)$0" -> "1(8)"	[label=max];
	"pad_h(8)$0" -> "0(8)"	[label=max];
	"pad_w(8)$0" -> "self(8)"	[label=max];
	"pad_w(8)$0" -> "iw(8)$0"	[label=max];
	"pad_w(8)$0" -> "kw(8)$0"	[label=max];
	"pad_w(8)$0" -> "ow(8)$0"	[label=max];
	"pad_w(8)$0" -> "1(8)"	[label=max];
	"pad_w(8)$0" -> "0(8)"	[label=max];
	"x(8)$0" -> "x(8)$0"	[label=pad];
	"x(8)$0" -> "F(8)"	[label=pad];
	"x(8)$0" -> "[<_ast.BinOp object at 0x7fd4d0583d30>, <_ast.BinOp object at 0x7fd4d0583670>, <_ast.BinOp object at 0x7fd4d0583cd0>, <_ast.BinOp \
object at 0x7fd4d0583eb0>](8)"	[label=pad];
	"self(10)" -> "__init__[0]"	[label=_argToVar];
	"in_channels(10)" -> "__init__[1]"	[label=_argToVar];
	"out_channels(10)" -> "__init__[2]"	[label=_argToVar];
	"kernel_size(10)" -> "__init__[3]"	[label=_argToVar];
	"image_size(10)" -> "__init__[4]"	[label=_argToVar];
	"super(10)$0" -> "in_channels(10)"	[label=__init__];
	"super(10)$0" -> "out_channels(10)"	[label=__init__];
	"super(10)$0" -> "kernel_size(10)"	[label=__init__];
	"super(10)$0" -> "super(10)"	[label=__init__];
	"self(10)$0" -> "self(10)"	[label=assignedFrom];
	"self(10)$0" -> "self(10)$0"	[label=assignedFrom];
	"self(10)$0" -> "len(10)"	[label=assignedFrom];
	"self(10)$0" -> "2(10)"	[label=assignedFrom];
	"self(10)$0" -> "[<_ast.Subscript object at 0x7fd4902abdf0>](10)"	[label=assignedFrom];
	"ih(10)$0" -> "image_size(10)"	[label=assignedFrom];
	"ih(10)$0" -> "type(10)"	[label=assignedFrom];
	"ih(10)$0" -> "list(10)"	[label=assignedFrom];
	"ih(10)$0" -> "[<_ast.Name object at 0x7fd4902ab250>, <_ast.Name object at 0x7fd4902aba30>](10)"	[label=assignedFrom];
	"iw(10)$0" -> "image_size(10)"	[label=assignedFrom];
	"iw(10)$0" -> "type(10)"	[label=assignedFrom];
	"iw(10)$0" -> "list(10)"	[label=assignedFrom];
	"iw(10)$0" -> "[<_ast.Name object at 0x7fd4902ab250>, <_ast.Name object at 0x7fd4902aba30>](10)"	[label=assignedFrom];
	"kh(10)$0" -> "self(10)$0"	[label=assignedFrom];
	"kh(10)$0" -> "2(10)"	[label=assignedFrom];
	"kw(10)$0" -> "self(10)$0"	[label=assignedFrom];
	"kw(10)$0" -> "2(10)"	[label=assignedFrom];
	"sh(10)$0" -> "self(10)$0"	[label=assignedFrom];
	"sw(10)$0" -> "self(10)$0"	[label=assignedFrom];
	"oh(10)$0" -> "ih(10)$0"	[label=assignedFrom];
	"oh(10)$0" -> "iw(10)$0"	[label=assignedFrom];
	"oh(10)$0" -> "sh(10)$0"	[label=assignedFrom];
	"oh(10)$0" -> "sw(10)$0"	[label=assignedFrom];
	"oh(10)$0" -> "math(10)"	[label=assignedFrom];
	"ow(10)$0" -> "ih(10)$0"	[label=assignedFrom];
	"ow(10)$0" -> "iw(10)$0"	[label=assignedFrom];
	"ow(10)$0" -> "sh(10)$0"	[label=assignedFrom];
	"ow(10)$0" -> "sw(10)$0"	[label=assignedFrom];
	"ow(10)$0" -> "math(10)"	[label=assignedFrom];
	"pad_h(10)$0" -> "self(10)$0"	[label=max];
	"pad_h(10)$0" -> "ih(10)$0"	[label=max];
	"pad_h(10)$0" -> "kh(10)$0"	[label=max];
	"pad_h(10)$0" -> "oh(10)$0"	[label=max];
	"pad_h(10)$0" -> "1(10)"	[label=max];
	"pad_h(10)$0" -> "0(10)"	[label=max];
	"pad_w(10)$0" -> "self(10)$0"	[label=max];
	"pad_w(10)$0" -> "iw(10)$0"	[label=max];
	"pad_w(10)$0" -> "kw(10)$0"	[label=max];
	"pad_w(10)$0" -> "ow(10)$0"	[label=max];
	"pad_w(10)$0" -> "1(10)"	[label=max];
	"pad_w(10)$0" -> "0(10)"	[label=max];
	"self(10)$1" -> "self(10)$0"	[label=ZeroPad2d];
	"self(10)$1" -> "2(10)"	[label=ZeroPad2d];
	"self(10)$1" -> "pad_h(10)$0"	[label=ZeroPad2d];
	"self(10)$1" -> "pad_w(10)$0"	[label=ZeroPad2d];
	"self(10)$1" -> "nn(10)"	[label=ZeroPad2d];
	"self(11)" -> "forward[0]"	[label=_argToVar];
	"x(11)" -> "forward[1]"	[label=_argToVar];
	"x(11)$0" -> "self(11)"	[label=static_padding];
	"x(11)$0" -> "x(11)$0"	[label=static_padding];
	"x(11)$1" -> "self(11)"	[label=conv2d];
	"x(11)$1" -> "x(11)$1"	[label=conv2d];
	"x(11)$1" -> "F(11)"	[label=conv2d];
	"self(13)" -> "__init__[0]"	[label=_argToVar];
	"super(13)$0" -> "super(13)"	[label=__init__];
	"self(14)" -> "forward[0]"	[label=_argToVar];
	"input(14)" -> "forward[1]"	[label=_argToVar];
	"model_name(15)" -> "efficientnet_params[0]"	[label=_argToVar];
	"params_dict(15)$0" -> "efficientnet-b0(15)"	[label=assignedFrom];
	"params_dict(15)$0" -> "efficientnet-b1(15)"	[label=assignedFrom];
	"params_dict(15)$0" -> "efficientnet-b2(15)"	[label=assignedFrom];
	"params_dict(15)$0" -> "efficientnet-b3(15)"	[label=assignedFrom];
	"params_dict(15)$0" -> "efficientnet-b4(15)"	[label=assignedFrom];
	"params_dict(15)$0" -> "efficientnet-b5(15)"	[label=assignedFrom];
	"params_dict(15)$0" -> "efficientnet-b6(15)"	[label=assignedFrom];
	"params_dict(15)$0" -> "efficientnet-b7(15)"	[label=assignedFrom];
	"params_dict(15)$0" -> "1.0(15)"	[label=assignedFrom];
	"params_dict(15)$0" -> "224(15)"	[label=assignedFrom];
	"params_dict(15)$0" -> "0.2(15)"	[label=assignedFrom];
	"params_dict(15)$0" -> "1.1(15)"	[label=assignedFrom];
	"params_dict(15)$0" -> "240(15)"	[label=assignedFrom];
	"params_dict(15)$0" -> "1.2(15)"	[label=assignedFrom];
	"params_dict(15)$0" -> "260(15)"	[label=assignedFrom];
	"params_dict(15)$0" -> "0.3(15)"	[label=assignedFrom];
	"params_dict(15)$0" -> "1.4(15)"	[label=assignedFrom];
	"params_dict(15)$0" -> "300(15)"	[label=assignedFrom];
	"params_dict(15)$0" -> "1.8(15)"	[label=assignedFrom];
	"params_dict(15)$0" -> "380(15)"	[label=assignedFrom];
	"params_dict(15)$0" -> "0.4(15)"	[label=assignedFrom];
	"params_dict(15)$0" -> "1.6(15)"	[label=assignedFrom];
	"params_dict(15)$0" -> "2.2(15)"	[label=assignedFrom];
	"params_dict(15)$0" -> "456(15)"	[label=assignedFrom];
	"params_dict(15)$0" -> "2.6(15)"	[label=assignedFrom];
	"params_dict(15)$0" -> "528(15)"	[label=assignedFrom];
	"params_dict(15)$0" -> "0.5(15)"	[label=assignedFrom];
	"params_dict(15)$0" -> "2.0(15)"	[label=assignedFrom];
	"params_dict(15)$0" -> "3.1(15)"	[label=assignedFrom];
	"params_dict(15)$0" -> "600(15)"	[label=assignedFrom];
	"block_string(17)" -> "_decode_block_string[0]"	[label=_argToVar];
	"ops(17)$0" -> "block_string(17)"	[label=split];
	"ops(17)$0" -> "_(17)"	[label=split];
	"op(17)" -> "ops(17)$0"	[label=iteratorOf];
	"splits(17)$0" -> "op(17)"	[label=split];
	"splits(17)$0" -> "re(17)"	[label=split];
	"splits(17)$0" -> "(\d.*)(17)"	[label=split];
	"key(17)$0" -> "splits(17)$0"	[label=assignedFrom];
	"key(17)$0" -> "2(17)"	[label=assignedFrom];
	"value(17)$0" -> "splits(17)$0"	[label=assignedFrom];
	"value(17)$0" -> "2(17)"	[label=assignedFrom];
	"options(17)$0" -> "value(17)$0"	[label=assignedFrom];
	"options(17)$0" -> "options(17)"	[label=assignedFrom];
	"block(18)" -> "_encode_block_string[0]"	[label=_argToVar];
	"args(18)$0" -> "[<_ast.BinOp object at 0x7fd4c05be460>, <_ast.BinOp object at 0x7fd4c05be430>, <_ast.BinOp object at 0x7fd4c05be8e0>, <_ast.BinOp \
object at 0x7fd4c05be610>, <_ast.BinOp object at 0x7fd4c05bea90>, <_ast.BinOp object at 0x7fd4c05beaf0>](18)"	[label=assignedFrom];
	"args(18)$1" -> "block(18)"	[label=append];
	"args(18)$1" -> "args(18)$0"	[label=append];
	"args(18)$1" -> "se\%s(18)"	[label=append];
	"args(18)$2" -> "args(18)$1"	[label=append];
	"args(18)$2" -> "noskip(18)"	[label=append];
	"string_list(19)" -> "decode[0]"	[label=_argToVar];
	"blocks_args(19)$0" -> "[](19)"	[label=assignedFrom];
	"block_string(19)" -> "string_list(19)"	[label=iteratorOf];
	"blocks_args(19)$1" -> "blocks_args(19)$0"	[label=append];
	"blocks_args(19)$1" -> "block_string(19)"	[label=append];
	"blocks_args(19)$1" -> "BlockDecoder(19)"	[label=append];
	"blocks_args(20)" -> "encode[0]"	[label=_argToVar];
	"block_strings(20)$0" -> "[](20)"	[label=assignedFrom];
	"block(20)" -> "blocks_args(20)"	[label=iteratorOf];
	"block_strings(20)$1" -> "block_strings(20)$0"	[label=append];
	"block_strings(20)$1" -> "block(20)"	[label=append];
	"block_strings(20)$1" -> "BlockDecoder(20)"	[label=append];
	"width_coefficient(21)" -> "efficientnet[0]"	[label=_argToVar];
	"depth_coefficient(21)" -> "efficientnet[1]"	[label=_argToVar];
	"dropout_rate(21)" -> "efficientnet[2]"	[label=_argToVar];
	"drop_connect_rate(21)" -> "efficientnet[3]"	[label=_argToVar];
	"image_size(21)" -> "efficientnet[4]"	[label=_argToVar];
	"num_classes(21)" -> "efficientnet[5]"	[label=_argToVar];
	"blocks_args(21)$0" -> "[<_ast.Constant object at 0x7fd500822130>, <_ast.Constant object at 0x7fd500822190>, <_ast.Constant object at 0x7fd5008221f0>, <_\
ast.Constant object at 0x7fd500822220>, <_ast.Constant object at 0x7fd500822250>, <_ast.Constant object at 0x7fd500822280>, <_ast.Constant \
object at 0x7fd5008222b0>](21)"	[label=assignedFrom];
	"blocks_args(21)$1" -> "blocks_args(21)$1"	[label=decode];
	"blocks_args(21)$1" -> "BlockDecoder(21)"	[label=decode];
	"global_params(21)$0" -> "width_coefficient(21)"	[label=GlobalParams];
	"global_params(21)$0" -> "depth_coefficient(21)"	[label=GlobalParams];
	"global_params(21)$0" -> "dropout_rate(21)"	[label=GlobalParams];
	"global_params(21)$0" -> "drop_connect_rate(21)"	[label=GlobalParams];
	"global_params(21)$0" -> "image_size(21)"	[label=GlobalParams];
	"global_params(21)$0" -> "num_classes(21)"	[label=GlobalParams];
	"global_params(21)$0" -> "0.99(21)"	[label=GlobalParams];
	"global_params(21)$0" -> "0.001(21)"	[label=GlobalParams];
	"global_params(21)$0" -> "8(21)"	[label=GlobalParams];
	"global_params(21)$0" -> "None(21)"	[label=GlobalParams];
	"model_name(22)" -> "get_model_params[0]"	[label=_argToVar];
	"override_params(22)" -> "get_model_params[1]"	[label=_argToVar];
	"w(22)$0" -> "model_name(22)"	[label=efficientnet_params];
	"d(22)$0" -> "model_name(22)"	[label=efficientnet_params];
	"s(22)$0" -> "model_name(22)"	[label=efficientnet_params];
	"p(22)$0" -> "model_name(22)"	[label=efficientnet_params];
	"blocks_args(22)$0" -> "w(22)$0"	[label=efficientnet];
	"blocks_args(22)$0" -> "d(22)$0"	[label=efficientnet];
	"blocks_args(22)$0" -> "s(22)$0"	[label=efficientnet];
	"blocks_args(22)$0" -> "p(22)$0"	[label=efficientnet];
	"global_params(22)$0" -> "w(22)$0"	[label=efficientnet];
	"global_params(22)$0" -> "d(22)$0"	[label=efficientnet];
	"global_params(22)$0" -> "s(22)$0"	[label=efficientnet];
	"global_params(22)$0" -> "p(22)$0"	[label=efficientnet];
	"global_params(22)$1" -> "override_params(22)"	[label=_replace];
	"global_params(22)$1" -> "global_params(22)$0"	[label=_replace];
	"efficientnet-b0(0)" -> "starter-kernel-for-0-79.ipynb"	[label=appearsIn];
	"url_map(0)$0" -> "efficientnet-b0(0)"	[label=assignedFrom];
	"url_map(0)$0" -> "efficientnet-b1(0)"	[label=assignedFrom];
	"url_map(0)$0" -> "efficientnet-b2(0)"	[label=assignedFrom];
	"url_map(0)$0" -> "efficientnet-b3(0)"	[label=assignedFrom];
	"url_map(0)$0" -> "efficientnet-b4(0)"	[label=assignedFrom];
	"url_map(0)$0" -> "efficientnet-b5(0)"	[label=assignedFrom];
	"url_map(0)$0" -> "http://storage.googleapis.com/public-models/efficientnet-b0-08094119.pth(0)"	[label=assignedFrom];
	"url_map(0)$0" -> "http://storage.googleapis.com/public-models/efficientnet-b1-dbc7070a.pth(0)"	[label=assignedFrom];
	"url_map(0)$0" -> "http://storage.googleapis.com/public-models/efficientnet-b2-27687264.pth(0)"	[label=assignedFrom];
	"url_map(0)$0" -> "http://storage.googleapis.com/public-models/efficientnet-b3-c8376fa2.pth(0)"	[label=assignedFrom];
	"url_map(0)$0" -> "http://storage.googleapis.com/public-models/efficientnet-b4-e116e8b3.pth(0)"	[label=assignedFrom];
	"url_map(0)$0" -> "http://storage.googleapis.com/public-models/efficientnet-b5-586e6cc6.pth(0)"	[label=assignedFrom];
	"efficientnet-b1(0)" -> "starter-kernel-for-0-79.ipynb"	[label=appearsIn];
	"efficientnet-b2(0)" -> "starter-kernel-for-0-79.ipynb"	[label=appearsIn];
	"efficientnet-b3(0)" -> "starter-kernel-for-0-79.ipynb"	[label=appearsIn];
	"efficientnet-b4(0)" -> "starter-kernel-for-0-79.ipynb"	[label=appearsIn];
	"efficientnet-b5(0)" -> "starter-kernel-for-0-79.ipynb"	[label=appearsIn];
	"http://storage.googleapis.com/public-models/efficientnet-b0-08094119.pth(0)" -> "starter-kernel-for-0-79.ipynb"	[label=appearsIn];
	"http://storage.googleapis.com/public-models/efficientnet-b1-dbc7070a.pth(0)" -> "starter-kernel-for-0-79.ipynb"	[label=appearsIn];
	"http://storage.googleapis.com/public-models/efficientnet-b2-27687264.pth(0)" -> "starter-kernel-for-0-79.ipynb"	[label=appearsIn];
	"http://storage.googleapis.com/public-models/efficientnet-b3-c8376fa2.pth(0)" -> "starter-kernel-for-0-79.ipynb"	[label=appearsIn];
	"http://storage.googleapis.com/public-models/efficientnet-b4-e116e8b3.pth(0)" -> "starter-kernel-for-0-79.ipynb"	[label=appearsIn];
	"http://storage.googleapis.com/public-models/efficientnet-b5-586e6cc6.pth(0)" -> "starter-kernel-for-0-79.ipynb"	[label=appearsIn];
	"model(23)" -> "load_pretrained_weights[0]"	[label=_argToVar];
	"model_name(23)" -> "load_pretrained_weights[1]"	[label=_argToVar];
	"load_fc(23)" -> "load_pretrained_weights[2]"	[label=_argToVar];
	"state_dict(23)$0" -> "model_name(23)"	[label=load_url];
	"state_dict(23)$0" -> "model_zoo(23)"	[label=load_url];
	"state_dict(23)$0" -> "url_map(23)"	[label=load_url];
	"model(23)$0" -> "model(23)"	[label=load_state_dict];
	"model(23)$0" -> "state_dict(23)$0"	[label=load_state_dict];
	"state_dict(23)$1" -> "state_dict(23)$0"	[label=pop];
	"state_dict(23)$1" -> "_fc.weight(23)"	[label=pop];
	"state_dict(23)$2" -> "state_dict(23)$1"	[label=pop];
	"state_dict(23)$2" -> "_fc.bias(23)"	[label=pop];
	"res(23)$0" -> "model(23)$0"	[label=load_state_dict];
	"res(23)$0" -> "state_dict(23)$2"	[label=load_state_dict];
	"res(23)$0" -> "False(23)"	[label=load_state_dict];
	"print[320/4]" -> "model_name(23)"	[label=print];
	"print[320/4]" -> "Loaded pretrained weights for {}(23)"	[label=print];
	"self(25)" -> "__init__[0]"	[label=_argToVar];
	"block_args(25)" -> "__init__[1]"	[label=_argToVar];
	"global_params(25)" -> "__init__[2]"	[label=_argToVar];
	"super(25)$0" -> "super(25)"	[label=__init__];
	"self(25)$0" -> "self(25)"	[label=assignedFrom];
	"self(25)$0" -> "block_args(25)"	[label=assignedFrom];
	"self(25)$1" -> "global_params(25)"	[label=Sub];
	"self(25)$1" -> "self(25)$0"	[label=Sub];
	"self(25)$1" -> "1(25)"	[label=Sub];
	"self(25)$2" -> "global_params(25)"	[label=assignedFrom];
	"self(25)$2" -> "self(25)$1"	[label=assignedFrom];
	"self(25)$3" -> "1(25)"	[label=assignedFrom];
	"self(25)$3" -> "self(25)$2"	[label=assignedFrom];
	"self(25)$3" -> "self(25)$3"	[label=assignedFrom];
	"self(25)$3" -> "None(25)"	[label=assignedFrom];
	"self(25)$3" -> "0(25)"	[label=assignedFrom];
	"self(25)$4" -> "block_args(25)"	[label=assignedFrom];
	"self(25)$4" -> "self(25)$3"	[label=assignedFrom];
	"Conv2d(25)$0" -> "global_params(25)"	[label=get_same_padding_conv2d];
	"inp(25)$0" -> "self(25)$4"	[label=assignedFrom];
	"oup(25)$0" -> "self(25)$4"	[label=Mult];
	"self(25)$5" -> "1(25)"	[label=Conv2d];
	"self(25)$5" -> "self(25)$4"	[label=Conv2d];
	"self(25)$5" -> "inp(25)$0"	[label=Conv2d];
	"self(25)$5" -> "oup(25)$0"	[label=Conv2d];
	"self(25)$5" -> "False(25)"	[label=Conv2d];
	"self(25)$6" -> "oup(25)$0"	[label=BatchNorm2d];
	"self(25)$6" -> "self(25)$5"	[label=BatchNorm2d];
	"self(25)$6" -> "self(25)$6"	[label=BatchNorm2d];
	"self(25)$6" -> "nn(25)"	[label=BatchNorm2d];
	"k(25)$0" -> "self(25)$6"	[label=assignedFrom];
	"s(25)$0" -> "self(25)$6"	[label=assignedFrom];
	"self(25)$7" -> "oup(25)$0"	[label=Conv2d];
	"self(25)$7" -> "False(25)"	[label=Conv2d];
	"self(25)$7" -> "self(25)$6"	[label=Conv2d];
	"self(25)$7" -> "k(25)$0"	[label=Conv2d];
	"self(25)$7" -> "s(25)$0"	[label=Conv2d];
	"self(25)$8" -> "oup(25)$0"	[label=BatchNorm2d];
	"self(25)$8" -> "nn(25)"	[label=BatchNorm2d];
	"self(25)$8" -> "self(25)$7"	[label=BatchNorm2d];
	"self(25)$8" -> "self(25)$8"	[label=BatchNorm2d];
	"num_squeezed_channels(25)$0" -> "1(25)"	[label=max];
	"num_squeezed_channels(25)$0" -> "self(25)$8"	[label=max];
	"num_squeezed_channels(25)$0" -> "int(25)"	[label=max];
	"self(25)$9" -> "1(25)"	[label=Conv2d];
	"self(25)$9" -> "oup(25)$0"	[label=Conv2d];
	"self(25)$9" -> "self(25)$8"	[label=Conv2d];
	"self(25)$9" -> "num_squeezed_channels(25)$0"	[label=Conv2d];
	"self(25)$10" -> "1(25)"	[label=Conv2d];
	"self(25)$10" -> "oup(25)$0"	[label=Conv2d];
	"self(25)$10" -> "num_squeezed_channels(25)$0"	[label=Conv2d];
	"self(25)$10" -> "self(25)$9"	[label=Conv2d];
	"final_oup(25)$0" -> "self(25)$10"	[label=assignedFrom];
	"self(25)$11" -> "1(25)"	[label=Conv2d];
	"self(25)$11" -> "oup(25)$0"	[label=Conv2d];
	"self(25)$11" -> "False(25)"	[label=Conv2d];
	"self(25)$11" -> "self(25)$10"	[label=Conv2d];
	"self(25)$11" -> "final_oup(25)$0"	[label=Conv2d];
	"self(25)$12" -> "nn(25)"	[label=BatchNorm2d];
	"self(25)$12" -> "final_oup(25)$0"	[label=BatchNorm2d];
	"self(25)$12" -> "self(25)$11"	[label=BatchNorm2d];
	"self(25)$12" -> "self(25)$12"	[label=BatchNorm2d];
	"self(26)" -> "forward[0]"	[label=_argToVar];
	"inputs(26)" -> "forward[1]"	[label=_argToVar];
	"drop_connect_rate(26)" -> "forward[2]"	[label=_argToVar];
	"x(26)$0" -> "inputs(26)"	[label=assignedFrom];
	"x(26)$1" -> "self(26)"	[label=relu_fn];
	"x(26)$1" -> "inputs(26)"	[label=relu_fn];
	"x(26)$2" -> "self(26)"	[label=relu_fn];
	"x(26)$2" -> "x(26)$2"	[label=relu_fn];
	"x_squeezed(26)$0" -> "x(26)$2"	[label=adaptive_avg_pool2d];
	"x_squeezed(26)$0" -> "F(26)"	[label=adaptive_avg_pool2d];
	"x_squeezed(26)$0" -> "1(26)"	[label=adaptive_avg_pool2d];
	"x_squeezed(26)$1" -> "self(26)"	[label=_se_expand];
	"x_squeezed(26)$1" -> "x_squeezed(26)$1"	[label=_se_expand];
	"x_squeezed(26)$1" -> "relu_fn(26)"	[label=_se_expand];
	"x(26)$3" -> "x_squeezed(26)$1"	[label=Mult];
	"x(26)$3" -> "x(26)$3"	[label=Mult];
	"x(26)$3" -> "torch(26)"	[label=Mult];
	"x(26)$4" -> "self(26)"	[label=_bn2];
	"x(26)$4" -> "x(26)$4"	[label=_bn2];
	"input_filters(26)$0" -> "self(26)"	[label=assignedFrom];
	"output_filters(26)$0" -> "self(26)"	[label=assignedFrom];
	"x(26)$5" -> "self(26)"	[label=drop_connect];
	"x(26)$5" -> "drop_connect_rate(26)"	[label=drop_connect];
	"x(26)$5" -> "x(26)$4"	[label=drop_connect];
	"x(26)$6" -> "inputs(26)"	[label=Add];
	"x(26)$6" -> "x(26)$5"	[label=Add];
	"self(28)" -> "__init__[0]"	[label=_argToVar];
	"blocks_args(28)" -> "__init__[1]"	[label=_argToVar];
	"global_params(28)" -> "__init__[2]"	[label=_argToVar];
	"super(28)$0" -> "super(28)"	[label=__init__];
	"self(28)$0" -> "self(28)"	[label=assignedFrom];
	"self(28)$0" -> "global_params(28)"	[label=assignedFrom];
	"self(28)$1" -> "blocks_args(28)"	[label=assignedFrom];
	"self(28)$1" -> "self(28)$0"	[label=assignedFrom];
	"Conv2d(28)$0" -> "global_params(28)"	[label=get_same_padding_conv2d];
	"bn_mom(28)$0" -> "self(28)$1"	[label=Sub];
	"bn_mom(28)$0" -> "1(28)"	[label=Sub];
	"bn_eps(28)$0" -> "self(28)$1"	[label=assignedFrom];
	"in_channels(28)$0" -> "3(28)"	[label=assignedFrom];
	"out_channels(28)$0" -> "self(28)$1"	[label=round_filters];
	"out_channels(28)$0" -> "32(28)"	[label=round_filters];
	"self(28)$2" -> "self(28)$1"	[label=Conv2d];
	"self(28)$2" -> "in_channels(28)$0"	[label=Conv2d];
	"self(28)$2" -> "3(28)"	[label=Conv2d];
	"self(28)$2" -> "out_channels(28)$0"	[label=Conv2d];
	"self(28)$2" -> "2(28)"	[label=Conv2d];
	"self(28)$2" -> "False(28)"	[label=Conv2d];
	"self(28)$3" -> "bn_mom(28)$0"	[label=BatchNorm2d];
	"self(28)$3" -> "bn_eps(28)$0"	[label=BatchNorm2d];
	"self(28)$3" -> "out_channels(28)$0"	[label=BatchNorm2d];
	"self(28)$3" -> "self(28)$2"	[label=BatchNorm2d];
	"self(28)$3" -> "nn(28)"	[label=BatchNorm2d];
	"self(28)$4" -> "self(28)$3"	[label=ModuleList];
	"self(28)$4" -> "nn(28)"	[label=ModuleList];
	"self(28)$4" -> "[](28)"	[label=ModuleList];
	"block_args(28)" -> "self(28)$4"	[label=iteratorOf];
	"block_args(28)$0" -> "self(28)$4"	[label=_replace];
	"block_args(28)$0" -> "block_args(28)"	[label=_replace];
	"block_args(28)$0" -> "block_args(28)$0"	[label=_replace];
	"block_args(28)$0" -> "round_filters(28)"	[label=_replace];
	"block_args(28)$0" -> "round_repeats(28)"	[label=_replace];
	"self(28)$5" -> "self(28)$4"	[label=append];
	"self(28)$5" -> "block_args(28)$0"	[label=append];
	"self(28)$5" -> "self(28)$5"	[label=append];
	"self(28)$5" -> "MBConvBlock(28)"	[label=append];
	"block_args(28)$1" -> "1(28)"	[label=_replace];
	"block_args(28)$1" -> "block_args(28)$0"	[label=_replace];
	"block_args(28)$1" -> "block_args(28)$1"	[label=_replace];
	"_(28)" -> "1(28)"	[label=iteratorOf];
	"_(28)" -> "block_args(28)$1"	[label=iteratorOf];
	"_(28)" -> "range(28)"	[label=iteratorOf];
	"self(28)$6" -> "self(28)$5"	[label=append];
	"self(28)$6" -> "MBConvBlock(28)"	[label=append];
	"self(28)$6" -> "block_args(28)$1"	[label=append];
	"self(28)$6" -> "self(28)$6"	[label=append];
	"in_channels(28)$1" -> "block_args(28)$1"	[label=assignedFrom];
	"out_channels(28)$1" -> "self(28)$6"	[label=round_filters];
	"out_channels(28)$1" -> "1280(28)"	[label=round_filters];
	"self(28)$7" -> "1(28)"	[label=Conv2d];
	"self(28)$7" -> "False(28)"	[label=Conv2d];
	"self(28)$7" -> "self(28)$6"	[label=Conv2d];
	"self(28)$7" -> "in_channels(28)$1"	[label=Conv2d];
	"self(28)$7" -> "out_channels(28)$1"	[label=Conv2d];
	"self(28)$8" -> "bn_mom(28)$0"	[label=BatchNorm2d];
	"self(28)$8" -> "bn_eps(28)$0"	[label=BatchNorm2d];
	"self(28)$8" -> "nn(28)"	[label=BatchNorm2d];
	"self(28)$8" -> "out_channels(28)$1"	[label=BatchNorm2d];
	"self(28)$8" -> "self(28)$7"	[label=BatchNorm2d];
	"self(28)$9" -> "self(28)$8"	[label=assignedFrom];
	"self(28)$10" -> "nn(28)"	[label=Linear];
	"self(28)$10" -> "out_channels(28)$1"	[label=Linear];
	"self(28)$10" -> "self(28)$9"	[label=Linear];
	"self(28)$10" -> "self(28)$10"	[label=Linear];
	"self(29)" -> "extract_features[0]"	[label=_argToVar];
	"inputs(29)" -> "extract_features[1]"	[label=_argToVar];
	"x(29)$0" -> "self(29)"	[label=relu_fn];
	"x(29)$0" -> "inputs(29)"	[label=relu_fn];
	"idx(29)" -> "self(29)"	[label=iteratorOf];
	"idx(29)" -> "enumerate(29)"	[label=iteratorOf];
	"block(29)" -> "self(29)"	[label=iteratorOf];
	"block(29)" -> "enumerate(29)"	[label=iteratorOf];
	"drop_connect_rate(29)$0" -> "self(29)"	[label=assignedFrom];
	"drop_connect_rate(29)$1" -> "self(29)"	[label=Mult];
	"drop_connect_rate(29)$1" -> "idx(29)"	[label=Mult];
	"drop_connect_rate(29)$1" -> "drop_connect_rate(29)$0"	[label=Mult];
	"drop_connect_rate(29)$1" -> "float(29)"	[label=Mult];
	"drop_connect_rate(29)$1" -> "len(29)"	[label=Mult];
	"x(29)$1" -> "x(29)$0"	[label=block];
	"x(29)$1" -> "drop_connect_rate(29)$1"	[label=block];
	"x(29)$2" -> "self(29)"	[label=relu_fn];
	"x(29)$2" -> "x(29)$2"	[label=relu_fn];
	"self(30)" -> "forward[0]"	[label=_argToVar];
	"inputs(30)" -> "forward[1]"	[label=_argToVar];
	"x(30)$0" -> "self(30)"	[label=extract_features];
	"x(30)$0" -> "inputs(30)"	[label=extract_features];
	"x(30)$1" -> "x(30)$1"	[label=squeeze];
	"x(30)$1" -> "F(30)"	[label=squeeze];
	"x(30)$1" -> "1(30)"	[label=squeeze];
	"x(30)$2" -> "self(30)"	[label=dropout];
	"x(30)$2" -> "F(30)"	[label=dropout];
	"x(30)$2" -> "x(30)$2"	[label=dropout];
	"x(30)$3" -> "self(30)"	[label=_fc];
	"x(30)$3" -> "x(30)$3"	[label=_fc];
	"cls(31)" -> "from_name[0]"	[label=_argToVar];
	"model_name(31)" -> "from_name[1]"	[label=_argToVar];
	"override_params(31)" -> "from_name[2]"	[label=_argToVar];
	"cls(31)$0" -> "cls(31)"	[label=_check_model_name_is_valid];
	"cls(31)$0" -> "model_name(31)"	[label=_check_model_name_is_valid];
	"blocks_args(31)$0" -> "model_name(31)"	[label=get_model_params];
	"blocks_args(31)$0" -> "override_params(31)"	[label=get_model_params];
	"global_params(31)$0" -> "model_name(31)"	[label=get_model_params];
	"global_params(31)$0" -> "override_params(31)"	[label=get_model_params];
	"cls(32)" -> "from_pretrained[0]"	[label=_argToVar];
	"model_name(32)" -> "from_pretrained[1]"	[label=_argToVar];
	"num_classes(32)" -> "from_pretrained[2]"	[label=_argToVar];
	"model(32)$0" -> "model_name(32)"	[label=from_name];
	"model(32)$0" -> "num_classes(32)"	[label=from_name];
	"model(32)$0" -> "EfficientNet(32)"	[label=from_name];
	"cls(33)" -> "get_image_size[0]"	[label=_argToVar];
	"model_name(33)" -> "get_image_size[1]"	[label=_argToVar];
	"cls(33)$0" -> "cls(33)"	[label=_check_model_name_is_valid];
	"cls(33)$0" -> "model_name(33)"	[label=_check_model_name_is_valid];
	"_(33)$0" -> "model_name(33)"	[label=efficientnet_params];
	"res(33)$0" -> "model_name(33)"	[label=efficientnet_params];
	"cls(34)" -> "_check_model_name_is_valid[0]"	[label=_argToVar];
	"model_name(34)" -> "_check_model_name_is_valid[1]"	[label=_argToVar];
	"also_need_pretrained_weights(34)" -> "_check_model_name_is_valid[2]"	[label=_argToVar];
	"num_models(34)$0" -> "also_need_pretrained_weights(34)"	[label=assignedFrom];
	"num_models(34)$0" -> "4(34)"	[label=assignedFrom];
	"num_models(34)$0" -> "8(34)"	[label=assignedFrom];
	"valid_models(34)$0" -> "num_models(34)$0"	[label=assignedFrom];
	"valid_models(34)$0" -> "efficientnet_b(34)"	[label=assignedFrom];
	"valid_models(34)$0" -> "str(34)"	[label=assignedFrom];
	"valid_models(34)$0" -> "i(34)"	[label=assignedFrom];
	"valid_models(34)$0" -> "range(34)"	[label=assignedFrom];
	"EfficientNet(0)" -> "starter-kernel-for-0-79.ipynb"	[label=appearsIn];
	"md_ef(0)$0" -> "efficientnet-b5(0)"	[label=from_pretrained];
	"md_ef(0)$0" -> "EfficientNet(0)"	[label=from_pretrained];
	"md_ef(0)$0" -> "1(0)"	[label=from_pretrained];
	"1(0)" -> "starter-kernel-for-0-79.ipynb"	[label=appearsIn];
	"base_image_dir(35)$0" -> "os(35)"	[label=join];
	"base_image_dir(35)$0" -> "..(35)"	[label=join];
	"base_image_dir(35)$0" -> "input/aptos2019-blindness-detection/(35)"	[label=join];
	"train_dir(35)$0" -> "base_image_dir(35)$0"	[label=join];
	"train_dir(35)$0" -> "os(35)"	[label=join];
	"train_dir(35)$0" -> "train_images/(35)"	[label=join];
	"df(35)$0" -> "base_image_dir(35)$0"	[label=read_csv];
	"df(35)$0" -> "os(35)"	[label=read_csv];
	"df(35)$0" -> "pd(35)"	[label=read_csv];
	"df(35)$0" -> "train.csv(35)"	[label=read_csv];
	"df(35)$1" -> "os(35)"	[label=map];
	"df(35)$1" -> "train_dir(35)$0"	[label=map];
	"df(35)$1" -> "df(35)$0"	[label=map];
	"df(35)$1" -> "id_code(35)"	[label=map];
	"df(35)$1" -> "{}.png(35)"	[label=map];
	"df(35)$1" -> "x(35)"	[label=map];
	"df(35)$2" -> "df(35)$1"	[label=drop];
	"df(35)$2" -> "[<_ast.Constant object at 0x7fd4c05b1700>](35)"	[label=drop];
	"df(35)$3" -> "df(35)$2"	[label=reset_index];
	"df(35)$3" -> "1(35)"	[label=reset_index];
	"df(35)$3" -> "True(35)"	[label=reset_index];
	"test_df(35)$0" -> "pd(35)"	[label=read_csv];
	"test_df(35)$0" -> "../input/aptos2019-blindness-detection/sample_submission.csv(35)"	[label=read_csv];
	"64(0)" -> "starter-kernel-for-0-79.ipynb"	[label=appearsIn];
	"bs(0)$0" -> "64(0)"	[label=assignedFrom];
	"224(0)" -> "starter-kernel-for-0-79.ipynb"	[label=appearsIn];
	"sz(0)$0" -> "224(0)"	[label=assignedFrom];
	"True(0)" -> "starter-kernel-for-0-79.ipynb"	[label=appearsIn];
	"tfms(0)$0" -> "True(0)"	[label=get_transforms];
	"ImageList(0)" -> "starter-kernel-for-0-79.ipynb"	[label=appearsIn];
	"data(0)$0" -> "bs(0)$0"	[label=normalize];
	"data(0)$0" -> "sz(0)$0"	[label=normalize];
	"data(0)$0" -> "tfms(0)$0"	[label=normalize];
	"data(0)$0" -> "ImageList(0)"	[label=normalize];
	"data(0)$0" -> "df(0)"	[label=normalize];
	"data(0)$0" -> "./(0)"	[label=normalize];
	"data(0)$0" -> "path(0)"	[label=normalize];
	"data(0)$0" -> "0.2(0)"	[label=normalize];
	"data(0)$0" -> "diagnosis(0)"	[label=normalize];
	"data(0)$0" -> "FloatList(0)"	[label=normalize];
	"data(0)$0" -> "ResizeMethod(0)"	[label=normalize];
	"data(0)$0" -> "zeros(0)"	[label=normalize];
	"data(0)$0" -> "4(0)"	[label=normalize];
	"data(0)$0" -> "imagenet_stats(0)"	[label=normalize];
	"df(0)" -> "starter-kernel-for-0-79.ipynb"	[label=appearsIn];
	"./(0)" -> "starter-kernel-for-0-79.ipynb"	[label=appearsIn];
	"path(0)" -> "starter-kernel-for-0-79.ipynb"	[label=appearsIn];
	"0.2(0)" -> "starter-kernel-for-0-79.ipynb"	[label=appearsIn];
	"diagnosis(0)" -> "starter-kernel-for-0-79.ipynb"	[label=appearsIn];
	"FloatList(0)" -> "starter-kernel-for-0-79.ipynb"	[label=appearsIn];
	"ResizeMethod(0)" -> "starter-kernel-for-0-79.ipynb"	[label=appearsIn];
	"zeros(0)" -> "starter-kernel-for-0-79.ipynb"	[label=appearsIn];
	"4(0)" -> "starter-kernel-for-0-79.ipynb"	[label=appearsIn];
	"imagenet_stats(0)" -> "starter-kernel-for-0-79.ipynb"	[label=appearsIn];
	"y_pred(36)" -> "qk[0]"	[label=_argToVar];
	"y(36)" -> "qk[1]"	[label=_argToVar];
	"Learner(0)" -> "starter-kernel-for-0-79.ipynb"	[label=appearsIn];
	"learn(0)$0" -> "md_ef(0)$0"	[label=to_fp16];
	"learn(0)$0" -> "data(0)$0"	[label=to_fp16];
	"learn(0)$0" -> "Learner(0)"	[label=to_fp16];
	"learn(0)$0" -> "[<_ast.Name object at 0x7fd500853fd0>](0)"	[label=to_fp16];
	"learn(0)$0" -> "models(0)"	[label=to_fp16];
	"[<_ast.Name object at 0x7fd500853fd0>](0)" -> "starter-kernel-for-0-79.ipynb"	[label=appearsIn];
	"models(0)" -> "starter-kernel-for-0-79.ipynb"	[label=appearsIn];
	"learn(0)$1" -> "ImageList(0)"	[label=add_test];
	"learn(0)$1" -> "learn(0)$0"	[label=add_test];
	"learn(0)$1" -> "test_df(0)"	[label=add_test];
	"learn(0)$1" -> "../input/aptos2019-blindness-detection(0)"	[label=add_test];
	"learn(0)$1" -> "test_images(0)"	[label=add_test];
	"learn(0)$1" -> ".png(0)"	[label=add_test];
	"test_df(0)" -> "starter-kernel-for-0-79.ipynb"	[label=appearsIn];
	"../input/aptos2019-blindness-detection(0)" -> "starter-kernel-for-0-79.ipynb"	[label=appearsIn];
	"test_images(0)" -> "starter-kernel-for-0-79.ipynb"	[label=appearsIn];
	".png(0)" -> "starter-kernel-for-0-79.ipynb"	[label=appearsIn];
	"learn(0)$2" -> "learn(0)$1"	[label=load];
	"learn(0)$2" -> "abcdef(0)"	[label=load];
	"abcdef(0)" -> "starter-kernel-for-0-79.ipynb"	[label=appearsIn];
	"self(38)" -> "__init__[0]"	[label=_argToVar];
	"self(38)$0" -> "self(38)"	[label=assignedFrom];
	"self(38)$0" -> "0(38)"	[label=assignedFrom];
	"self(39)" -> "_kappa_loss[0]"	[label=_argToVar];
	"coef(39)" -> "_kappa_loss[1]"	[label=_argToVar];
	"X(39)" -> "_kappa_loss[2]"	[label=_argToVar];
	"y(39)" -> "_kappa_loss[3]"	[label=_argToVar];
	"X_p(39)$0" -> "X(39)"	[label=copy];
	"X_p(39)$0" -> "np(39)"	[label=copy];
	"i(39)" -> "X_p(39)$0"	[label=iteratorOf];
	"i(39)" -> "enumerate(39)"	[label=iteratorOf];
	"pred(39)" -> "X_p(39)$0"	[label=iteratorOf];
	"pred(39)" -> "enumerate(39)"	[label=iteratorOf];
	"X_p(39)$1" -> "X_p(39)$0"	[label=assignedFrom];
	"X_p(39)$1" -> "0(39)"	[label=assignedFrom];
	"X_p(39)$2" -> "X_p(39)$1"	[label=assignedFrom];
	"X_p(39)$2" -> "1(39)"	[label=assignedFrom];
	"X_p(39)$3" -> "X_p(39)$2"	[label=assignedFrom];
	"X_p(39)$3" -> "2(39)"	[label=assignedFrom];
	"X_p(39)$4" -> "X_p(39)$3"	[label=assignedFrom];
	"X_p(39)$4" -> "3(39)"	[label=assignedFrom];
	"X_p(39)$5" -> "X_p(39)$4"	[label=assignedFrom];
	"X_p(39)$5" -> "4(39)"	[label=assignedFrom];
	"ll(39)$0" -> "y(39)"	[label=cohen_kappa_score];
	"ll(39)$0" -> "X_p(39)$5"	[label=cohen_kappa_score];
	"ll(39)$0" -> "metrics(39)"	[label=cohen_kappa_score];
	"ll(39)$0" -> "quadratic(39)"	[label=cohen_kappa_score];
	"self(40)" -> "fit[0]"	[label=_argToVar];
	"X(40)" -> "fit[1]"	[label=_argToVar];
	"y(40)" -> "fit[2]"	[label=_argToVar];
	"loss_partial(40)$0" -> "self(40)"	[label=partial];
	"loss_partial(40)$0" -> "X(40)"	[label=partial];
	"loss_partial(40)$0" -> "y(40)"	[label=partial];
	"initial_coef(40)$0" -> "[<_ast.Constant object at 0x7fd500857220>, <_ast.Constant object at 0x7fd500857280>, <_ast.Constant object at 0x7fd5008572b0>, <_\
ast.Constant object at 0x7fd5008572e0>](40)"	[label=assignedFrom];
	"self(40)$0" -> "self(40)"	[label=minimize];
	"self(40)$0" -> "loss_partial(40)$0"	[label=minimize];
	"self(40)$0" -> "initial_coef(40)$0"	[label=minimize];
	"self(40)$0" -> "sp(40)"	[label=minimize];
	"self(40)$0" -> "nelder-mead(40)"	[label=minimize];
	"print[586/8]" -> "loss_partial(40)$0"	[label=print];
	"print[586/8]" -> "self(40)$0"	[label=print];
	"print[586/8]" -> "x(40)"	[label=print];
	"self(41)" -> "predict[0]"	[label=_argToVar];
	"X(41)" -> "predict[1]"	[label=_argToVar];
	"coef(41)" -> "predict[2]"	[label=_argToVar];
	"X_p(41)$0" -> "X(41)"	[label=copy];
	"X_p(41)$0" -> "np(41)"	[label=copy];
	"i(41)" -> "X_p(41)$0"	[label=iteratorOf];
	"i(41)" -> "enumerate(41)"	[label=iteratorOf];
	"pred(41)" -> "X_p(41)$0"	[label=iteratorOf];
	"pred(41)" -> "enumerate(41)"	[label=iteratorOf];
	"X_p(41)$1" -> "X_p(41)$0"	[label=assignedFrom];
	"X_p(41)$1" -> "0(41)"	[label=assignedFrom];
	"X_p(41)$2" -> "X_p(41)$1"	[label=assignedFrom];
	"X_p(41)$2" -> "1(41)"	[label=assignedFrom];
	"X_p(41)$3" -> "X_p(41)$2"	[label=assignedFrom];
	"X_p(41)$3" -> "2(41)"	[label=assignedFrom];
	"X_p(41)$4" -> "X_p(41)$3"	[label=assignedFrom];
	"X_p(41)$4" -> "3(41)"	[label=assignedFrom];
	"X_p(41)$5" -> "X_p(41)$4"	[label=assignedFrom];
	"X_p(41)$5" -> "4(41)"	[label=assignedFrom];
	"self(42)" -> "coefficients[0]"	[label=_argToVar];
	"learn(43)" -> "run_subm[0]"	[label=_argToVar];
	"coefficients(43)" -> "run_subm[1]"	[label=_argToVar];
	"preds(43)$0" -> "learn(43)"	[label=get_preds];
	"preds(43)$0" -> "DatasetType(43)"	[label=get_preds];
	"y(43)$0" -> "learn(43)"	[label=get_preds];
	"y(43)$0" -> "DatasetType(43)"	[label=get_preds];
	"tst_pred(43)$0" -> "coefficients(43)"	[label=predict];
	"tst_pred(43)$0" -> "preds(43)$0"	[label=predict];
	"tst_pred(43)$0" -> "opt(43)"	[label=predict];
	"test_df(43)$0" -> "tst_pred(43)$0"	[label=astype];
	"test_df(43)$0" -> "test_df(43)"	[label=astype];
	"test_df(43)$0" -> "int(43)"	[label=astype];
	"test_df(43)$1" -> "test_df(43)$0"	[label=to_csv];
	"test_df(43)$1" -> "submission.csv(43)"	[label=to_csv];
	"print[611/4]" -> "done(43)"	[label=print];
}
