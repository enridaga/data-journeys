digraph "" {
	numpy -> "optimizer-for-quadratic-weighted-kappa.ipynb"	[label=importedBy];
	"np(0)" -> numpy	[label=assignedFrom];
	"np(0)" -> "optimizer-for-quadratic-weighted-kappa.ipynb"	[label=appearsIn];
	pandas -> "optimizer-for-quadratic-weighted-kappa.ipynb"	[label=importedBy];
	"pd(0)" -> "optimizer-for-quadratic-weighted-kappa.ipynb"	[label=appearsIn];
	"pd(0)" -> pandas	[label=assignedFrom];
	os -> "optimizer-for-quadratic-weighted-kappa.ipynb"	[label=importedBy];
	"os(0)" -> "optimizer-for-quadratic-weighted-kappa.ipynb"	[label=appearsIn];
	"os(0)" -> os	[label=assignedFrom];
	scipy -> "optimizer-for-quadratic-weighted-kappa.ipynb"	[label=importedBy];
	"sp(0)" -> "optimizer-for-quadratic-weighted-kappa.ipynb"	[label=appearsIn];
	"sp(0)" -> scipy	[label=assignedFrom];
	functools -> "optimizer-for-quadratic-weighted-kappa.ipynb"	[label=importedBy];
	partial -> functools	[label=importedBy];
	"partial(0)" -> "optimizer-for-quadratic-weighted-kappa.ipynb"	[label=appearsIn];
	"partial(0)" -> partial	[label=assignedFrom];
	sklearn -> "optimizer-for-quadratic-weighted-kappa.ipynb"	[label=importedBy];
	metrics -> sklearn	[label=importedBy];
	"metrics(0)" -> "optimizer-for-quadratic-weighted-kappa.ipynb"	[label=appearsIn];
	"metrics(0)" -> metrics	[label=assignedFrom];
	collections -> "optimizer-for-quadratic-weighted-kappa.ipynb"	[label=importedBy];
	Counter -> collections	[label=importedBy];
	"Counter(0)" -> "optimizer-for-quadratic-weighted-kappa.ipynb"	[label=appearsIn];
	"Counter(0)" -> Counter	[label=assignedFrom];
	json -> "optimizer-for-quadratic-weighted-kappa.ipynb"	[label=importedBy];
	"json(0)" -> "optimizer-for-quadratic-weighted-kappa.ipynb"	[label=appearsIn];
	"json(0)" -> json	[label=assignedFrom];
	"self(2)" -> "__init__[0]"	[label=_argToVar];
	"self(2)$0" -> "self(2)"	[label=assignedFrom];
	"self(2)$0" -> "0(2)"	[label=assignedFrom];
	"self(3)" -> "_kappa_loss[0]"	[label=_argToVar];
	"coef(3)" -> "_kappa_loss[1]"	[label=_argToVar];
	"X(3)" -> "_kappa_loss[2]"	[label=_argToVar];
	"y(3)" -> "_kappa_loss[3]"	[label=_argToVar];
	"X_p(3)$0" -> "X(3)"	[label=copy];
	"X_p(3)$0" -> "np(3)"	[label=copy];
	"i(3)" -> "X_p(3)$0"	[label=iteratorOf];
	"i(3)" -> "enumerate(3)"	[label=iteratorOf];
	"pred(3)" -> "X_p(3)$0"	[label=iteratorOf];
	"pred(3)" -> "enumerate(3)"	[label=iteratorOf];
	"X_p(3)$1" -> "X_p(3)$0"	[label=assignedFrom];
	"X_p(3)$1" -> "0(3)"	[label=assignedFrom];
	"X_p(3)$2" -> "X_p(3)$1"	[label=assignedFrom];
	"X_p(3)$2" -> "1(3)"	[label=assignedFrom];
	"X_p(3)$3" -> "X_p(3)$2"	[label=assignedFrom];
	"X_p(3)$3" -> "2(3)"	[label=assignedFrom];
	"X_p(3)$4" -> "X_p(3)$3"	[label=assignedFrom];
	"X_p(3)$4" -> "3(3)"	[label=assignedFrom];
	"X_p(3)$5" -> "X_p(3)$4"	[label=assignedFrom];
	"X_p(3)$5" -> "4(3)"	[label=assignedFrom];
	"ll(3)$0" -> "y(3)"	[label=cohen_kappa_score];
	"ll(3)$0" -> "X_p(3)$5"	[label=cohen_kappa_score];
	"ll(3)$0" -> "metrics(3)"	[label=cohen_kappa_score];
	"ll(3)$0" -> "quadratic(3)"	[label=cohen_kappa_score];
	"self(4)" -> "fit[0]"	[label=_argToVar];
	"X(4)" -> "fit[1]"	[label=_argToVar];
	"y(4)" -> "fit[2]"	[label=_argToVar];
	"loss_partial(4)$0" -> "self(4)"	[label=partial];
	"loss_partial(4)$0" -> "X(4)"	[label=partial];
	"loss_partial(4)$0" -> "y(4)"	[label=partial];
	"initial_coef(4)$0" -> "[<_ast.Constant object at 0x7fd4902abfd0>, <_ast.Constant object at 0x7fd4902ab190>, <_ast.Constant object at 0x7fd4902abe20>, <_\
ast.Constant object at 0x7fd4902ab940>](4)"	[label=assignedFrom];
	"self(4)$0" -> "self(4)"	[label=minimize];
	"self(4)$0" -> "loss_partial(4)$0"	[label=minimize];
	"self(4)$0" -> "initial_coef(4)$0"	[label=minimize];
	"self(4)$0" -> "sp(4)"	[label=minimize];
	"self(4)$0" -> "nelder-mead(4)"	[label=minimize];
	"self(5)" -> "predict[0]"	[label=_argToVar];
	"X(5)" -> "predict[1]"	[label=_argToVar];
	"coef(5)" -> "predict[2]"	[label=_argToVar];
	"X_p(5)$0" -> "X(5)"	[label=copy];
	"X_p(5)$0" -> "np(5)"	[label=copy];
	"i(5)" -> "X_p(5)$0"	[label=iteratorOf];
	"i(5)" -> "enumerate(5)"	[label=iteratorOf];
	"pred(5)" -> "X_p(5)$0"	[label=iteratorOf];
	"pred(5)" -> "enumerate(5)"	[label=iteratorOf];
	"X_p(5)$1" -> "X_p(5)$0"	[label=assignedFrom];
	"X_p(5)$1" -> "0(5)"	[label=assignedFrom];
	"X_p(5)$2" -> "X_p(5)$1"	[label=assignedFrom];
	"X_p(5)$2" -> "1(5)"	[label=assignedFrom];
	"X_p(5)$3" -> "X_p(5)$2"	[label=assignedFrom];
	"X_p(5)$3" -> "2(5)"	[label=assignedFrom];
	"X_p(5)$4" -> "X_p(5)$3"	[label=assignedFrom];
	"X_p(5)$4" -> "3(5)"	[label=assignedFrom];
	"X_p(5)$5" -> "X_p(5)$4"	[label=assignedFrom];
	"X_p(5)$5" -> "4(5)"	[label=assignedFrom];
	"self(6)" -> "coefficients[0]"	[label=_argToVar];
	"optR(0)" -> "optimizer-for-quadratic-weighted-kappa.ipynb"	[label=appearsIn];
	"optR(0)$0" -> "optR(0)"	[label=fit];
	"optR(0)$0" -> "valid_predictions(0)"	[label=fit];
	"optR(0)$0" -> "targets(0)"	[label=fit];
	"valid_predictions(0)" -> "optimizer-for-quadratic-weighted-kappa.ipynb"	[label=appearsIn];
	"targets(0)" -> "optimizer-for-quadratic-weighted-kappa.ipynb"	[label=appearsIn];
	"coefficients(0)$0" -> "optR(0)$0"	[label=coefficients];
	"valid_predictions(0)$0" -> "optR(0)$0"	[label=predict];
	"valid_predictions(0)$0" -> "coefficients(0)$0"	[label=predict];
	"valid_predictions(0)$0" -> "valid_predictions(0)$0"	[label=predict];
	"test_predictions(0)$0" -> "optR(0)$0"	[label=predict];
	"test_predictions(0)$0" -> "coefficients(0)$0"	[label=predict];
	"test_predictions(0)$0" -> "test_predictions(0)$0"	[label=predict];
}
