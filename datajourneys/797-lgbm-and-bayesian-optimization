digraph "" {
	numpy -> "797-lgbm-and-bayesian-optimization.ipynb"	[label=importedBy];
	"np(0)" -> numpy	[label=assignedFrom];
	"np(0)" -> "797-lgbm-and-bayesian-optimization.ipynb"	[label=appearsIn];
	pandas -> "797-lgbm-and-bayesian-optimization.ipynb"	[label=importedBy];
	"pd(0)" -> "797-lgbm-and-bayesian-optimization.ipynb"	[label=appearsIn];
	"pd(0)" -> pandas	[label=assignedFrom];
	"matplotlib.pyplot" -> "797-lgbm-and-bayesian-optimization.ipynb"	[label=importedBy];
	"plt(0)" -> "797-lgbm-and-bayesian-optimization.ipynb"	[label=appearsIn];
	"plt(0)" -> "matplotlib.pyplot"	[label=assignedFrom];
	seaborn -> "797-lgbm-and-bayesian-optimization.ipynb"	[label=importedBy];
	"sns(0)" -> "797-lgbm-and-bayesian-optimization.ipynb"	[label=appearsIn];
	"sns(0)" -> seaborn	[label=assignedFrom];
	gc -> "797-lgbm-and-bayesian-optimization.ipynb"	[label=importedBy];
	"gc(0)" -> "797-lgbm-and-bayesian-optimization.ipynb"	[label=appearsIn];
	"gc(0)" -> gc	[label=assignedFrom];
	time -> "797-lgbm-and-bayesian-optimization.ipynb"	[label=importedBy];
	"time(0)" -> "797-lgbm-and-bayesian-optimization.ipynb"	[label=appearsIn];
	"time(0)" -> time	[label=assignedFrom];
	warnings -> "797-lgbm-and-bayesian-optimization.ipynb"	[label=importedBy];
	"warnings(0)" -> "797-lgbm-and-bayesian-optimization.ipynb"	[label=appearsIn];
	"warnings(0)" -> warnings	[label=assignedFrom];
	"warnings(0)$0" -> "warnings(0)"	[label=simplefilter];
	"sklearn.metrics" -> "797-lgbm-and-bayesian-optimization.ipynb"	[label=importedBy];
	roc_auc_score -> "sklearn.metrics"	[label=importedBy];
	"roc_auc_score(0)" -> "797-lgbm-and-bayesian-optimization.ipynb"	[label=appearsIn];
	"roc_auc_score(0)" -> roc_auc_score	[label=assignedFrom];
	precision_score -> "sklearn.metrics"	[label=importedBy];
	"precision_score(0)" -> "797-lgbm-and-bayesian-optimization.ipynb"	[label=appearsIn];
	"precision_score(0)" -> precision_score	[label=assignedFrom];
	recall_score -> "sklearn.metrics"	[label=importedBy];
	"recall_score(0)" -> "797-lgbm-and-bayesian-optimization.ipynb"	[label=appearsIn];
	"recall_score(0)" -> recall_score	[label=assignedFrom];
	"sklearn.model_selection" -> "797-lgbm-and-bayesian-optimization.ipynb"	[label=importedBy];
	KFold -> "sklearn.model_selection"	[label=importedBy];
	"KFold(0)" -> "797-lgbm-and-bayesian-optimization.ipynb"	[label=appearsIn];
	"KFold(0)" -> KFold	[label=assignedFrom];
	StratifiedKFold -> "sklearn.model_selection"	[label=importedBy];
	"StratifiedKFold(0)" -> "797-lgbm-and-bayesian-optimization.ipynb"	[label=appearsIn];
	"StratifiedKFold(0)" -> StratifiedKFold	[label=assignedFrom];
	lightgbm -> "797-lgbm-and-bayesian-optimization.ipynb"	[label=importedBy];
	LGBMClassifier -> lightgbm	[label=importedBy];
	"LGBMClassifier(0)" -> "797-lgbm-and-bayesian-optimization.ipynb"	[label=appearsIn];
	"LGBMClassifier(0)" -> LGBMClassifier	[label=assignedFrom];
	"scipy.stats" -> "797-lgbm-and-bayesian-optimization.ipynb"	[label=importedBy];
	ranksums -> "scipy.stats"	[label=importedBy];
	"ranksums(0)" -> "797-lgbm-and-bayesian-optimization.ipynb"	[label=appearsIn];
	"ranksums(0)" -> ranksums	[label=assignedFrom];
	bayes_opt -> "797-lgbm-and-bayesian-optimization.ipynb"	[label=importedBy];
	BayesianOptimization -> bayes_opt	[label=importedBy];
	"BayesianOptimization(0)" -> "797-lgbm-and-bayesian-optimization.ipynb"	[label=appearsIn];
	"BayesianOptimization(0)" -> BayesianOptimization	[label=assignedFrom];
	"data(1)" -> "reduce_mem_usage[0]"	[label=_argToVar];
	"verbose(1)" -> "reduce_mem_usage[1]"	[label=_argToVar];
	"start_mem(1)$0" -> "data(1)"	[label=Div];
	"start_mem(1)$0" -> "1024(1)"	[label=Div];
	"start_mem(1)$0" -> "2(1)"	[label=Div];
	"print[18/8]" -> "start_mem(1)$0"	[label=print];
	"print[18/8]" -> "Memory usage of dataframe: {:.2f} MB(1)"	[label=print];
	"col(1)" -> "data(1)"	[label=iteratorOf];
	"col_type(1)$0" -> "data(1)"	[label=assignedFrom];
	"col_type(1)$0" -> "col(1)"	[label=assignedFrom];
	"c_min(1)$0" -> "data(1)"	[label=min];
	"c_min(1)$0" -> "col(1)"	[label=min];
	"c_max(1)$0" -> "data(1)"	[label=max];
	"c_max(1)$0" -> "col(1)"	[label=max];
	"data(1)$0" -> "data(1)"	[label=astype];
	"data(1)$0" -> "col(1)"	[label=astype];
	"data(1)$0" -> "np(1)"	[label=astype];
	"data(1)$1" -> "col(1)"	[label=astype];
	"data(1)$1" -> "data(1)$0"	[label=astype];
	"data(1)$1" -> "np(1)"	[label=astype];
	"data(1)$2" -> "col(1)"	[label=astype];
	"data(1)$2" -> "np(1)"	[label=astype];
	"data(1)$2" -> "data(1)$1"	[label=astype];
	"data(1)$3" -> "col(1)"	[label=astype];
	"data(1)$3" -> "np(1)"	[label=astype];
	"data(1)$3" -> "data(1)$2"	[label=astype];
	"data(1)$4" -> "col(1)"	[label=astype];
	"data(1)$4" -> "np(1)"	[label=astype];
	"data(1)$4" -> "data(1)$3"	[label=astype];
	"data(1)$5" -> "col(1)"	[label=astype];
	"data(1)$5" -> "np(1)"	[label=astype];
	"data(1)$5" -> "data(1)$4"	[label=astype];
	"data(1)$6" -> "col(1)"	[label=astype];
	"data(1)$6" -> "np(1)"	[label=astype];
	"data(1)$6" -> "data(1)$5"	[label=astype];
	"end_mem(1)$0" -> "1024(1)"	[label=Div];
	"end_mem(1)$0" -> "2(1)"	[label=Div];
	"end_mem(1)$0" -> "data(1)$6"	[label=Div];
	"print[45/8]" -> "end_mem(1)$0"	[label=print];
	"print[45/8]" -> "Memory usage after optimization: {:.2f} MB(1)"	[label=print];
	"print[46/8]" -> "start_mem(1)$0"	[label=print];
	"print[46/8]" -> "end_mem(1)$0"	[label=print];
	"print[46/8]" -> "Decreased by {:.1f}\%(1)"	[label=print];
	"print[46/8]" -> "100(1)"	[label=print];
	"data(2)" -> "one_hot_encoder[0]"	[label=_argToVar];
	"nan_as_category(2)" -> "one_hot_encoder[1]"	[label=_argToVar];
	"original_columns(2)$0" -> "data(2)"	[label=list];
	"categorical_columns(2)$0" -> "data(2)"	[label=assignedFrom];
	"categorical_columns(2)$0" -> "col(2)"	[label=assignedFrom];
	"categorical_columns(2)$0" -> "pd(2)"	[label=assignedFrom];
	"c(2)" -> "categorical_columns(2)$0"	[label=iteratorOf];
	"data(2)$0" -> "data(2)"	[label=fillna];
	"data(2)$0" -> "NaN(2)"	[label=fillna];
	"values(2)$0" -> "c(2)"	[label=list];
	"values(2)$0" -> "data(2)$0"	[label=list];
	"v(2)" -> "values(2)$0"	[label=iteratorOf];
	"data(2)$1" -> "c(2)"	[label=astype];
	"data(2)$1" -> "data(2)$0"	[label=astype];
	"data(2)$1" -> "v(2)"	[label=astype];
	"data(2)$1" -> "np(2)"	[label=astype];
	"data(2)$2" -> "categorical_columns(2)$0"	[label=drop];
	"data(2)$2" -> "data(2)$1"	[label=drop];
	"../input/(0)" -> "797-lgbm-and-bayesian-optimization.ipynb"	[label=appearsIn];
	"file_path(0)$0" -> "../input/(0)"	[label=assignedFrom];
	"file_path(3)" -> "application_train_test[0]"	[label=_argToVar];
	"nan_as_category(3)" -> "application_train_test[1]"	[label=_argToVar];
	"df_train(3)$0" -> "file_path(3)"	[label=read_csv];
	"df_train(3)$0" -> "pd(3)"	[label=read_csv];
	"df_train(3)$0" -> "application_train.csv(3)"	[label=read_csv];
	"df_test(3)$0" -> "file_path(3)"	[label=read_csv];
	"df_test(3)$0" -> "pd(3)"	[label=read_csv];
	"df_test(3)$0" -> "application_test.csv(3)"	[label=read_csv];
	"df(3)$0" -> "pd(3)"	[label=concat];
	"df(3)$0" -> "[<_ast.Name object at 0x7fd4c04ff580>, <_ast.Name object at 0x7fd4c04ff640>](3)"	[label=concat];
	"df(3)$0" -> "0(3)"	[label=concat];
	"df(3)$0" -> "True(3)"	[label=concat];
	"gc(3)$0" -> "gc(3)"	[label=collect];
	"df(3)$1" -> "df(3)$0"	[label=drop];
	"df(3)$1" -> "df(3)$1"	[label=drop];
	"df(3)$1" -> "CODE_GENDER(3)"	[label=drop];
	"df(3)$1" -> "XNA(3)"	[label=drop];
	"df(3)$2" -> "df(3)$1"	[label=drop];
	"df(3)$2" -> "df(3)$2"	[label=drop];
	"df(3)$2" -> "NAME_INCOME_TYPE(3)"	[label=drop];
	"df(3)$2" -> "Maternity leave(3)"	[label=drop];
	"df(3)$3" -> "df(3)$2"	[label=drop];
	"df(3)$3" -> "df(3)$3"	[label=drop];
	"df(3)$3" -> "NAME_FAMILY_STATUS(3)"	[label=drop];
	"df(3)$3" -> "Unknown(3)"	[label=drop];
	"df(3)$4" -> "df(3)$3"	[label=drop];
	"df(3)$4" -> "[<_ast.Constant object at 0x7fd4c04cc0a0>, <_ast.Constant object at 0x7fd4c04ccfa0>, <_ast.Constant object at 0x7fd4c04cc460>, <_\
ast.Constant object at 0x7fd4c04cc1f0>, <_ast.Constant object at 0x7fd4c04cc9a0>, <_ast.Constant object at 0x7fd50080dbb0>, <_ast.Constant \
object at 0x7fd50080dcd0>, <_ast.Constant object at 0x7fd50080d4c0>, <_ast.Constant object at 0x7fd50080d1c0>, <_ast.Constant object \
at 0x7fd50080d790>, <_ast.Constant object at 0x7fd50080d3d0>](3)"	[label=drop];
	"df(3)$5" -> "df(3)$4"	[label=replace];
	"df(3)$5" -> "365243(3)"	[label=replace];
	"df(3)$5" -> "np(3)"	[label=replace];
	"df(3)$6" -> "df(3)$5"	[label=assignedFrom];
	"df(3)$6" -> "np(3)"	[label=assignedFrom];
	"df(3)$7" -> "np(3)"	[label=assignedFrom];
	"df(3)$7" -> "df(3)$6"	[label=assignedFrom];
	"df(3)$8" -> "np(3)"	[label=assignedFrom];
	"df(3)$8" -> "df(3)$7"	[label=assignedFrom];
	"df(3)$9" -> "np(3)"	[label=assignedFrom];
	"df(3)$9" -> "df(3)$8"	[label=assignedFrom];
	"df(3)$10" -> "np(3)"	[label=assignedFrom];
	"df(3)$10" -> "df(3)$9"	[label=assignedFrom];
	"bin_feature(3)" -> "[<_ast.Constant object at 0x7fd490296670>, <_ast.Constant object at 0x7fd4902966a0>, <_ast.Constant object at 0x7fd4902966d0>](3)"	[label=iteratorOf];
	"df(3)$11" -> "pd(3)"	[label=factorize];
	"df(3)$11" -> "df(3)$10"	[label=factorize];
	"df(3)$11" -> "bin_feature(3)"	[label=factorize];
	"df(3)$11" -> "df(3)$11"	[label=factorize];
	"_(3)$0" -> "pd(3)"	[label=factorize];
	"_(3)$0" -> "bin_feature(3)"	[label=factorize];
	"_(3)$0" -> "df(3)$11"	[label=factorize];
	"df(3)$12" -> "nan_as_category(3)"	[label=one_hot_encoder];
	"df(3)$12" -> "df(3)$11"	[label=one_hot_encoder];
	"_(3)$1" -> "nan_as_category(3)"	[label=one_hot_encoder];
	"_(3)$1" -> "df(3)$11"	[label=one_hot_encoder];
	"df(3)$13" -> "df(3)$12"	[label=assignedFrom];
	"df(3)$13" -> "1(3)"	[label=assignedFrom];
	"df(3)$14" -> "df(3)$13"	[label=mean];
	"df(3)$14" -> "1(3)"	[label=mean];
	"df(3)$14" -> "[<_ast.Constant object at 0x7fd4902a00d0>, <_ast.Constant object at 0x7fd4902a0100>, <_ast.Constant object at 0x7fd4902a0130>](3)"	[label=mean];
	"df(3)$15" -> "1(3)"	[label=std];
	"df(3)$15" -> "df(3)$14"	[label=std];
	"df(3)$15" -> "[<_ast.Constant object at 0x7fd4902a0460>, <_ast.Constant object at 0x7fd4902a0490>, <_ast.Constant object at 0x7fd4902a04c0>](3)"	[label=std];
	"df(3)$16" -> "df(3)$15"	[label=Mult];
	"df(3)$16" -> "df(3)$16"	[label=Mult];
	"df(3)$16" -> "EXT_SOURCE_1(3)"	[label=Mult];
	"df(3)$16" -> "EXT_SOURCE_2(3)"	[label=Mult];
	"df(3)$16" -> "EXT_SOURCE_3(3)"	[label=Mult];
	"df(3)$17" -> "df(3)$16"	[label=Mult];
	"df(3)$17" -> "EXT_SOURCE_1(3)"	[label=Mult];
	"df(3)$17" -> "EXT_SOURCE_2(3)"	[label=Mult];
	"df(3)$17" -> "df(3)$17"	[label=Mult];
	"df(3)$18" -> "EXT_SOURCE_1(3)"	[label=Mult];
	"df(3)$18" -> "EXT_SOURCE_3(3)"	[label=Mult];
	"df(3)$18" -> "df(3)$17"	[label=Mult];
	"df(3)$18" -> "df(3)$18"	[label=Mult];
	"df(3)$19" -> "EXT_SOURCE_2(3)"	[label=Mult];
	"df(3)$19" -> "EXT_SOURCE_3(3)"	[label=Mult];
	"df(3)$19" -> "df(3)$18"	[label=Mult];
	"df(3)$19" -> "df(3)$19"	[label=Mult];
	"df(3)$20" -> "EXT_SOURCE_1(3)"	[label=Mult];
	"df(3)$20" -> "df(3)$19"	[label=Mult];
	"df(3)$20" -> "df(3)$20"	[label=Mult];
	"df(3)$20" -> "DAYS_EMPLOYED(3)"	[label=Mult];
	"df(3)$21" -> "EXT_SOURCE_2(3)"	[label=Mult];
	"df(3)$21" -> "df(3)$20"	[label=Mult];
	"df(3)$21" -> "DAYS_EMPLOYED(3)"	[label=Mult];
	"df(3)$21" -> "df(3)$21"	[label=Mult];
	"df(3)$22" -> "EXT_SOURCE_3(3)"	[label=Mult];
	"df(3)$22" -> "DAYS_EMPLOYED(3)"	[label=Mult];
	"df(3)$22" -> "df(3)$21"	[label=Mult];
	"df(3)$22" -> "df(3)$22"	[label=Mult];
	"df(3)$23" -> "EXT_SOURCE_1(3)"	[label=Div];
	"df(3)$23" -> "df(3)$22"	[label=Div];
	"df(3)$23" -> "df(3)$23"	[label=Div];
	"df(3)$23" -> "DAYS_BIRTH(3)"	[label=Div];
	"df(3)$24" -> "EXT_SOURCE_2(3)"	[label=Div];
	"df(3)$24" -> "df(3)$23"	[label=Div];
	"df(3)$24" -> "DAYS_BIRTH(3)"	[label=Div];
	"df(3)$24" -> "df(3)$24"	[label=Div];
	"df(3)$25" -> "EXT_SOURCE_3(3)"	[label=Div];
	"df(3)$25" -> "DAYS_BIRTH(3)"	[label=Div];
	"df(3)$25" -> "df(3)$24"	[label=Div];
	"df(3)$25" -> "df(3)$25"	[label=Div];
	"df(3)$26" -> "df(3)$25"	[label=Sub];
	"df(3)$26" -> "df(3)$26"	[label=Sub];
	"df(3)$26" -> "AMT_CREDIT(3)"	[label=Sub];
	"df(3)$26" -> "AMT_GOODS_PRICE(3)"	[label=Sub];
	"df(3)$27" -> "df(3)$26"	[label=Div];
	"df(3)$27" -> "AMT_CREDIT(3)"	[label=Div];
	"df(3)$27" -> "AMT_GOODS_PRICE(3)"	[label=Div];
	"df(3)$27" -> "df(3)$27"	[label=Div];
	"df(3)$28" -> "AMT_CREDIT(3)"	[label=Div];
	"df(3)$28" -> "df(3)$27"	[label=Div];
	"df(3)$28" -> "df(3)$28"	[label=Div];
	"df(3)$28" -> "AMT_ANNUITY(3)"	[label=Div];
	"df(3)$29" -> "AMT_CREDIT(3)"	[label=Div];
	"df(3)$29" -> "df(3)$28"	[label=Div];
	"df(3)$29" -> "df(3)$29"	[label=Div];
	"df(3)$29" -> "AMT_INCOME_TOTAL(3)"	[label=Div];
	"df(3)$30" -> "AMT_ANNUITY(3)"	[label=Sub];
	"df(3)$30" -> "df(3)$29"	[label=Sub];
	"df(3)$30" -> "AMT_INCOME_TOTAL(3)"	[label=Sub];
	"df(3)$30" -> "df(3)$30"	[label=Sub];
	"df(3)$30" -> "12.0(3)"	[label=Sub];
	"df(3)$31" -> "AMT_ANNUITY(3)"	[label=Div];
	"df(3)$31" -> "AMT_INCOME_TOTAL(3)"	[label=Div];
	"df(3)$31" -> "df(3)$30"	[label=Div];
	"df(3)$31" -> "df(3)$31"	[label=Div];
	"df(3)$32" -> "AMT_GOODS_PRICE(3)"	[label=Sub];
	"df(3)$32" -> "AMT_INCOME_TOTAL(3)"	[label=Sub];
	"df(3)$32" -> "df(3)$31"	[label=Sub];
	"df(3)$32" -> "df(3)$32"	[label=Sub];
	"df(3)$33" -> "AMT_INCOME_TOTAL(3)"	[label=Div];
	"df(3)$33" -> "df(3)$32"	[label=Div];
	"df(3)$33" -> "df(3)$33"	[label=Div];
	"df(3)$33" -> "CNT_FAM_MEMBERS(3)"	[label=Div];
	"df(3)$34" -> "1(3)"	[label=Div];
	"df(3)$34" -> "AMT_INCOME_TOTAL(3)"	[label=Div];
	"df(3)$34" -> "df(3)$33"	[label=Div];
	"df(3)$34" -> "df(3)$34"	[label=Div];
	"df(3)$34" -> "CNT_CHILDREN(3)"	[label=Div];
	"df(3)$35" -> "0(3)"	[label=map];
	"df(3)$35" -> "True(3)"	[label=map];
	"df(3)$35" -> "1(3)"	[label=map];
	"df(3)$35" -> "AMT_GOODS_PRICE(3)"	[label=map];
	"df(3)$35" -> "df(3)$34"	[label=map];
	"df(3)$35" -> "[<_ast.Constant object at 0x7fd50081d820>, <_ast.Constant object at 0x7fd50081d850>, <_ast.Constant object at 0x7fd50081d880>, <_\
ast.Constant object at 0x7fd50081d8b0>](3)"	[label=map];
	"df(3)$35" -> "False(3)"	[label=map];
	"df(3)$36" -> "0(3)"	[label=map];
	"df(3)$36" -> "True(3)"	[label=map];
	"df(3)$36" -> "1(3)"	[label=map];
	"df(3)$36" -> "AMT_GOODS_PRICE(3)"	[label=map];
	"df(3)$36" -> "df(3)$35"	[label=map];
	"df(3)$36" -> "False(3)"	[label=map];
	"df(3)$36" -> "[<_ast.Constant object at 0x7fd50081dd30>, <_ast.Constant object at 0x7fd50081dd90>, <_ast.Constant object at 0x7fd50081ddc0>, <_\
ast.Constant object at 0x7fd50081ddf0>, <_ast.Constant object at 0x7fd50081de20>](3)"	[label=map];
	"df(3)$37" -> "DAYS_BIRTH(3)"	[label=Div];
	"df(3)$37" -> "df(3)$36"	[label=Div];
	"df(3)$37" -> "df(3)$37"	[label=Div];
	"df(3)$37" -> "OWN_CAR_AGE(3)"	[label=Div];
	"df(3)$38" -> "DAYS_EMPLOYED(3)"	[label=Div];
	"df(3)$38" -> "df(3)$37"	[label=Div];
	"df(3)$38" -> "OWN_CAR_AGE(3)"	[label=Div];
	"df(3)$38" -> "df(3)$38"	[label=Div];
	"df(3)$39" -> "DAYS_BIRTH(3)"	[label=Div];
	"df(3)$39" -> "df(3)$38"	[label=Div];
	"df(3)$39" -> "df(3)$39"	[label=Div];
	"df(3)$39" -> "DAYS_LAST_PHONE_CHANGE(3)"	[label=Div];
	"df(3)$40" -> "DAYS_EMPLOYED(3)"	[label=Div];
	"df(3)$40" -> "df(3)$39"	[label=Div];
	"df(3)$40" -> "DAYS_LAST_PHONE_CHANGE(3)"	[label=Div];
	"df(3)$40" -> "df(3)$40"	[label=Div];
	"df(3)$41" -> "DAYS_EMPLOYED(3)"	[label=Sub];
	"df(3)$41" -> "DAYS_BIRTH(3)"	[label=Sub];
	"df(3)$41" -> "df(3)$40"	[label=Sub];
	"df(3)$41" -> "df(3)$41"	[label=Sub];
	"df(3)$42" -> "DAYS_EMPLOYED(3)"	[label=Div];
	"df(3)$42" -> "DAYS_BIRTH(3)"	[label=Div];
	"df(3)$42" -> "df(3)$41"	[label=Div];
	"df(3)$42" -> "df(3)$42"	[label=Div];
	"df(3)$43" -> "CNT_FAM_MEMBERS(3)"	[label=Div];
	"df(3)$43" -> "CNT_CHILDREN(3)"	[label=Div];
	"df(3)$43" -> "df(3)$42"	[label=Div];
	"df(3)$43" -> "df(3)$43"	[label=Div];
	"file_path(4)" -> "bureau_and_balance[0]"	[label=_argToVar];
	"nan_as_category(4)" -> "bureau_and_balance[1]"	[label=_argToVar];
	"df_bureau_b(4)$0" -> "file_path(4)"	[label=reduce_mem_usage];
	"df_bureau_b(4)$0" -> "pd(4)"	[label=reduce_mem_usage];
	"df_bureau_b(4)$0" -> "bureau_balance.csv(4)"	[label=reduce_mem_usage];
	"df_bureau_b(4)$0" -> "False(4)"	[label=reduce_mem_usage];
	"tmp(4)$0" -> "df_bureau_b(4)$0"	[label=groupby];
	"tmp(4)$0" -> "[<_ast.Constant object at 0x7fd500833bb0>, <_ast.Constant object at 0x7fd500833be0>](4)"	[label=groupby];
	"tmp(4)$0" -> "SK_ID_BUREAU(4)"	[label=groupby];
	"tmp_last(4)$0" -> "tmp(4)$0"	[label=last];
	"tmp_last(4)$1" -> "tmp_last(4)$0"	[label=assignedFrom];
	"tmp_last(4)$1" -> "[<_ast.Constant object at 0x7fd500833e20>](4)"	[label=assignedFrom];
	"df_bureau_b(4)$1" -> "df_bureau_b(4)$0"	[label=join];
	"df_bureau_b(4)$1" -> "SK_ID_BUREAU(4)"	[label=join];
	"df_bureau_b(4)$1" -> "tmp_last(4)$1"	[label=join];
	"df_bureau_b(4)$1" -> "left(4)"	[label=join];
	"tmp_first(4)$0" -> "tmp(4)$0"	[label=first];
	"tmp_first(4)$1" -> "tmp_first(4)$0"	[label=assignedFrom];
	"tmp_first(4)$1" -> "[<_ast.Constant object at 0x7fd50082a280>](4)"	[label=assignedFrom];
	"df_bureau_b(4)$2" -> "SK_ID_BUREAU(4)"	[label=join];
	"df_bureau_b(4)$2" -> "df_bureau_b(4)$1"	[label=join];
	"df_bureau_b(4)$2" -> "left(4)"	[label=join];
	"df_bureau_b(4)$2" -> "tmp_first(4)$1"	[label=join];
	"gc(4)$0" -> "gc(4)"	[label=collect];
	"tmp(4)$1" -> "SK_ID_BUREAU(4)"	[label=last];
	"tmp(4)$1" -> "df_bureau_b(4)$2"	[label=last];
	"tmp(4)$1" -> "[<_ast.Constant object at 0x7fd50082a8b0>, <_ast.Constant object at 0x7fd50082a8e0>](4)"	[label=last];
	"tmp(4)$2" -> "tmp(4)$1"	[label=apply];
	"tmp(4)$2" -> "abs(4)"	[label=apply];
	"tmp(4)$3" -> "tmp(4)$2"	[label=assignedFrom];
	"tmp(4)$3" -> "[<_ast.Constant object at 0x7fd50082ab50>](4)"	[label=assignedFrom];
	"df_bureau_b(4)$3" -> "SK_ID_BUREAU(4)"	[label=join];
	"df_bureau_b(4)$3" -> "left(4)"	[label=join];
	"df_bureau_b(4)$3" -> "df_bureau_b(4)$2"	[label=join];
	"df_bureau_b(4)$3" -> "tmp(4)$3"	[label=join];
	"gc(4)$1" -> "gc(4)$0"	[label=collect];
	"tmp(4)$4" -> "SK_ID_BUREAU(4)"	[label=last];
	"tmp(4)$4" -> "df_bureau_b(4)$3"	[label=last];
	"tmp(4)$4" -> "STATUS(4)"	[label=last];
	"tmp(4)$4" -> "C(4)"	[label=last];
	"tmp(4)$4" -> "[<_ast.Constant object at 0x7fd500817310>, <_ast.Constant object at 0x7fd500817340>](4)"	[label=last];
	"tmp(4)$5" -> "abs(4)"	[label=apply];
	"tmp(4)$5" -> "tmp(4)$4"	[label=apply];
	"tmp(4)$6" -> "tmp(4)$5"	[label=assignedFrom];
	"tmp(4)$6" -> "[<_ast.Constant object at 0x7fd5008175b0>](4)"	[label=assignedFrom];
	"df_bureau_b(4)$4" -> "SK_ID_BUREAU(4)"	[label=join];
	"df_bureau_b(4)$4" -> "left(4)"	[label=join];
	"df_bureau_b(4)$4" -> "df_bureau_b(4)$3"	[label=join];
	"df_bureau_b(4)$4" -> "tmp(4)$6"	[label=join];
	"gc(4)$2" -> "gc(4)$1"	[label=collect];
	"df_bureau_b(4)$5" -> "df_bureau_b(4)$4"	[label=Sub];
	"df_bureau_b(4)$5" -> "df_bureau_b(4)$5"	[label=Sub];
	"df_bureau_b(4)$5" -> "Month(4)"	[label=Sub];
	"df_bureau_b(4)$5" -> "When_closed(4)"	[label=Sub];
	"c(4)" -> "range(4)"	[label=iteratorOf];
	"c(4)" -> "6(4)"	[label=iteratorOf];
	"tmp(4)$7" -> "SK_ID_BUREAU(4)"	[label=count];
	"tmp(4)$7" -> "STATUS(4)"	[label=count];
	"tmp(4)$7" -> "df_bureau_b(4)$5"	[label=count];
	"tmp(4)$7" -> "c(4)"	[label=count];
	"tmp(4)$7" -> "str(4)"	[label=count];
	"tmp(4)$7" -> "[<_ast.Constant object at 0x7fd500837250>, <_ast.Constant object at 0x7fd500837280>](4)"	[label=count];
	"tmp(4)$8" -> "tmp(4)$7"	[label=assignedFrom];
	"tmp(4)$8" -> "[<_ast.BinOp object at 0x7fd5008373d0>](4)"	[label=assignedFrom];
	"df_bureau_b(4)$6" -> "SK_ID_BUREAU(4)"	[label=join];
	"df_bureau_b(4)$6" -> "left(4)"	[label=join];
	"df_bureau_b(4)$6" -> "df_bureau_b(4)$5"	[label=join];
	"df_bureau_b(4)$6" -> "tmp(4)$8"	[label=join];
	"df_bureau_b(4)$7" -> "Month(4)"	[label=Div];
	"df_bureau_b(4)$7" -> "c(4)"	[label=Div];
	"df_bureau_b(4)$7" -> "str(4)"	[label=Div];
	"df_bureau_b(4)$7" -> "df_bureau_b(4)$6"	[label=Div];
	"df_bureau_b(4)$7" -> "df_bureau_b(4)$7"	[label=Div];
	"df_bureau_b(4)$7" -> "DPD_(4)"	[label=Div];
	"df_bureau_b(4)$7" -> "_cnt(4)"	[label=Div];
	"gc(4)$3" -> "gc(4)$2"	[label=collect];
	"df_bureau_b(4)$8" -> "df_bureau_b(4)$7"	[label=sum];
	"df_bureau_b(4)$8" -> "[<_ast.Constant object at 0x7fd5008110d0>, <_ast.Constant object at 0x7fd500811100>, <_ast.Constant object at 0x7fd500811130>, <_\
ast.Constant object at 0x7fd500811160>, <_ast.Constant object at 0x7fd500811190>](4)"	[label=sum];
	"df_bureau_b(4)$8" -> "1(4)"	[label=sum];
	"df_bureau_b(4)$9" -> "nan_as_category(4)"	[label=one_hot_encoder];
	"df_bureau_b(4)$9" -> "df_bureau_b(4)$8"	[label=one_hot_encoder];
	"bureau_b_cat(4)$0" -> "nan_as_category(4)"	[label=one_hot_encoder];
	"bureau_b_cat(4)$0" -> "df_bureau_b(4)$8"	[label=one_hot_encoder];
	"col(4)" -> "df_bureau_b(4)$9"	[label=iteratorOf];
	"col(4)" -> "df_bureau(4)$19"	[label=iteratorOf];
	"df_bureau(4)$19" -> "SK_ID_BUREAU(4)"	[label=drop];
	"df_bureau(4)$19" -> "df_bureau(4)$18"	[label=drop];
	"aggregations(4)$0" -> "bureau_b_cat(4)$0"	[label=assignedFrom];
	"aggregations(4)$0" -> "col(4)"	[label=assignedFrom];
	"aggregations(4)$0" -> "aggregations(4)"	[label=assignedFrom];
	"aggregations(4)$0" -> "[<_ast.Constant object at 0x7fd500811760>](4)"	[label=assignedFrom];
	"aggregations(4)$0" -> "[<_ast.Constant object at 0x7fd5008117c0>, <_ast.Constant object at 0x7fd5008117f0>, <_ast.Constant object at 0x7fd500811820>](4)"	[label=assignedFrom];
	"df_bureau_b_agg(4)$0" -> "SK_ID_BUREAU(4)"	[label=agg];
	"df_bureau_b_agg(4)$0" -> "df_bureau_b(4)$9"	[label=agg];
	"df_bureau_b_agg(4)$0" -> "aggregations(4)$0"	[label=agg];
	"df_bureau_b_agg(4)$1" -> "pd(4)"	[label=Index];
	"df_bureau_b_agg(4)$1" -> "1(4)"	[label=Index];
	"df_bureau_b_agg(4)$1" -> "df_bureau_b_agg(4)$0"	[label=Index];
	"df_bureau_b_agg(4)$1" -> "df_bureau_b_agg(4)$1"	[label=Index];
	"df_bureau_b_agg(4)$1" -> "e(4)"	[label=Index];
	"df_bureau_b_agg(4)$1" -> "0(4)"	[label=Index];
	"df_bureau_b_agg(4)$1" -> "_(4)"	[label=Index];
	"gc(4)$4" -> "gc(4)$3"	[label=collect];
	"df_bureau(4)$0" -> "file_path(4)"	[label=reduce_mem_usage];
	"df_bureau(4)$0" -> "pd(4)"	[label=reduce_mem_usage];
	"df_bureau(4)$0" -> "False(4)"	[label=reduce_mem_usage];
	"df_bureau(4)$0" -> "bureau.csv(4)"	[label=reduce_mem_usage];
	"df_bureau(4)$1" -> "df_bureau(4)$0"	[label=assignedFrom];
	"df_bureau(4)$1" -> "np(4)"	[label=assignedFrom];
	"df_bureau(4)$2" -> "df_bureau(4)$1"	[label=assignedFrom];
	"df_bureau(4)$2" -> "np(4)"	[label=assignedFrom];
	"df_bureau(4)$3" -> "np(4)"	[label=assignedFrom];
	"df_bureau(4)$3" -> "df_bureau(4)$2"	[label=assignedFrom];
	"df_bureau(4)$4" -> "np(4)"	[label=assignedFrom];
	"df_bureau(4)$4" -> "df_bureau(4)$3"	[label=assignedFrom];
	"df_bureau(4)$5" -> "np(4)"	[label=assignedFrom];
	"df_bureau(4)$5" -> "df_bureau(4)$4"	[label=assignedFrom];
	"df_bureau(4)$6" -> "np(4)"	[label=assignedFrom];
	"df_bureau(4)$6" -> "df_bureau(4)$5"	[label=assignedFrom];
	"df_bureau(4)$7" -> "np(4)"	[label=assignedFrom];
	"df_bureau(4)$7" -> "df_bureau(4)$6"	[label=assignedFrom];
	"df_bureau(4)$8" -> "df_bureau(4)$7"	[label=drop];
	"df_bureau(4)$8" -> "df_bureau(4)$8"	[label=drop];
	"df_bureau(4)$8" -> "DAYS_ENDDATE_FACT(4)"	[label=drop];
	"df_bureau(4)$8" -> "DAYS_CREDIT(4)"	[label=drop];
	"df_bureau(4)$9" -> "df_bureau(4)$8"	[label=Sub];
	"df_bureau(4)$9" -> "df_bureau(4)$9"	[label=Sub];
	"df_bureau(4)$9" -> "AMT_CREDIT_SUM(4)"	[label=Sub];
	"df_bureau(4)$9" -> "AMT_CREDIT_SUM_DEBT(4)"	[label=Sub];
	"df_bureau(4)$10" -> "df_bureau(4)$9"	[label=Sub];
	"df_bureau(4)$10" -> "AMT_CREDIT_SUM(4)"	[label=Sub];
	"df_bureau(4)$10" -> "df_bureau(4)$10"	[label=Sub];
	"df_bureau(4)$10" -> "AMT_CREDIT_SUM_LIMIT(4)"	[label=Sub];
	"df_bureau(4)$11" -> "AMT_CREDIT_SUM(4)"	[label=Sub];
	"df_bureau(4)$11" -> "df_bureau(4)$10"	[label=Sub];
	"df_bureau(4)$11" -> "df_bureau(4)$11"	[label=Sub];
	"df_bureau(4)$11" -> "AMT_CREDIT_SUM_OVERDUE(4)"	[label=Sub];
	"df_bureau(4)$12" -> "DAYS_CREDIT(4)"	[label=Sub];
	"df_bureau(4)$12" -> "df_bureau(4)$11"	[label=Sub];
	"df_bureau(4)$12" -> "df_bureau(4)$12"	[label=Sub];
	"df_bureau(4)$12" -> "CREDIT_DAY_OVERDUE(4)"	[label=Sub];
	"df_bureau(4)$13" -> "DAYS_CREDIT(4)"	[label=Sub];
	"df_bureau(4)$13" -> "df_bureau(4)$12"	[label=Sub];
	"df_bureau(4)$13" -> "df_bureau(4)$13"	[label=Sub];
	"df_bureau(4)$13" -> "DAYS_CREDIT_ENDDATE(4)"	[label=Sub];
	"df_bureau(4)$14" -> "DAYS_ENDDATE_FACT(4)"	[label=Sub];
	"df_bureau(4)$14" -> "DAYS_CREDIT(4)"	[label=Sub];
	"df_bureau(4)$14" -> "df_bureau(4)$13"	[label=Sub];
	"df_bureau(4)$14" -> "df_bureau(4)$14"	[label=Sub];
	"df_bureau(4)$15" -> "DAYS_ENDDATE_FACT(4)"	[label=Sub];
	"df_bureau(4)$15" -> "DAYS_CREDIT_ENDDATE(4)"	[label=Sub];
	"df_bureau(4)$15" -> "df_bureau(4)$14"	[label=Sub];
	"df_bureau(4)$15" -> "df_bureau(4)$15"	[label=Sub];
	"df_bureau(4)$16" -> "DAYS_CREDIT_ENDDATE(4)"	[label=Sub];
	"df_bureau(4)$16" -> "df_bureau(4)$15"	[label=Sub];
	"df_bureau(4)$16" -> "df_bureau(4)$16"	[label=Sub];
	"df_bureau(4)$16" -> "DAYS_CREDIT_UPDATE(4)"	[label=Sub];
	"df_bureau(4)$17" -> "nan_as_category(4)"	[label=one_hot_encoder];
	"df_bureau(4)$17" -> "df_bureau(4)$16"	[label=one_hot_encoder];
	"bureau_cat(4)$0" -> "nan_as_category(4)"	[label=one_hot_encoder];
	"bureau_cat(4)$0" -> "df_bureau(4)$16"	[label=one_hot_encoder];
	"df_bureau(4)$18" -> "SK_ID_BUREAU(4)"	[label=join];
	"df_bureau(4)$18" -> "left(4)"	[label=join];
	"df_bureau(4)$18" -> "df_bureau_b_agg(4)$1"	[label=join];
	"df_bureau(4)$18" -> "df_bureau(4)$17"	[label=join];
	"gc(4)$5" -> "gc(4)$4"	[label=collect];
	"categorical(4)$0" -> "bureau_b_cat(4)$0"	[label=Add];
	"categorical(4)$0" -> "bureau_cat(4)$0"	[label=Add];
	"aggregations(4)$1" -> "col(4)"	[label=assignedFrom];
	"aggregations(4)$1" -> "aggregations(4)$0"	[label=assignedFrom];
	"aggregations(4)$1" -> "categorical(4)$0"	[label=assignedFrom];
	"aggregations(4)$1" -> "[<_ast.Constant object at 0x7fd5008216d0>](4)"	[label=assignedFrom];
	"aggregations(4)$1" -> "[<_ast.Constant object at 0x7fd500821760>, <_ast.Constant object at 0x7fd500821790>, <_ast.Constant object at 0x7fd5008217c0>, <_\
ast.Constant object at 0x7fd5008217f0>, <_ast.Constant object at 0x7fd500821820>, <_ast.Constant object at 0x7fd500821850>](4)"	[label=assignedFrom];
	"df_bureau_agg(4)$0" -> "df_bureau(4)$19"	[label=agg];
	"df_bureau_agg(4)$0" -> "aggregations(4)$1"	[label=agg];
	"df_bureau_agg(4)$0" -> "SK_ID_CURR(4)"	[label=agg];
	"df_bureau_agg(4)$1" -> "pd(4)"	[label=Index];
	"df_bureau_agg(4)$1" -> "1(4)"	[label=Index];
	"df_bureau_agg(4)$1" -> "e(4)"	[label=Index];
	"df_bureau_agg(4)$1" -> "0(4)"	[label=Index];
	"df_bureau_agg(4)$1" -> "_(4)"	[label=Index];
	"df_bureau_agg(4)$1" -> "df_bureau_agg(4)$0"	[label=Index];
	"df_bureau_agg(4)$1" -> "df_bureau_agg(4)$1"	[label=Index];
	"df_bureau_agg(4)$1" -> "BURO_(4)"	[label=Index];
	"active_agg(4)$0" -> "1(4)"	[label=agg];
	"active_agg(4)$0" -> "df_bureau(4)$19"	[label=agg];
	"active_agg(4)$0" -> "aggregations(4)$1"	[label=agg];
	"active_agg(4)$0" -> "SK_ID_CURR(4)"	[label=agg];
	"active_agg(4)$0" -> "CREDIT_ACTIVE_Active(4)"	[label=agg];
	"active_agg(4)$1" -> "pd(4)"	[label=Index];
	"active_agg(4)$1" -> "1(4)"	[label=Index];
	"active_agg(4)$1" -> "e(4)"	[label=Index];
	"active_agg(4)$1" -> "0(4)"	[label=Index];
	"active_agg(4)$1" -> "_(4)"	[label=Index];
	"active_agg(4)$1" -> "active_agg(4)$0"	[label=Index];
	"active_agg(4)$1" -> "active_agg(4)$1"	[label=Index];
	"active_agg(4)$1" -> "ACTIVE_(4)"	[label=Index];
	"df_bureau_agg(4)$2" -> "left(4)"	[label=join];
	"df_bureau_agg(4)$2" -> "df_bureau_agg(4)$1"	[label=join];
	"df_bureau_agg(4)$2" -> "active_agg(4)$1"	[label=join];
	"gc(4)$6" -> "gc(4)$5"	[label=collect];
	"closed_agg(4)$0" -> "1(4)"	[label=agg];
	"closed_agg(4)$0" -> "df_bureau(4)$19"	[label=agg];
	"closed_agg(4)$0" -> "aggregations(4)$1"	[label=agg];
	"closed_agg(4)$0" -> "SK_ID_CURR(4)"	[label=agg];
	"closed_agg(4)$0" -> "CREDIT_ACTIVE_Closed(4)"	[label=agg];
	"closed_agg(4)$1" -> "pd(4)"	[label=Index];
	"closed_agg(4)$1" -> "1(4)"	[label=Index];
	"closed_agg(4)$1" -> "e(4)"	[label=Index];
	"closed_agg(4)$1" -> "0(4)"	[label=Index];
	"closed_agg(4)$1" -> "_(4)"	[label=Index];
	"closed_agg(4)$1" -> "closed_agg(4)$0"	[label=Index];
	"closed_agg(4)$1" -> "closed_agg(4)$1"	[label=Index];
	"closed_agg(4)$1" -> "CLOSED_(4)"	[label=Index];
	"df_bureau_agg(4)$3" -> "left(4)"	[label=join];
	"df_bureau_agg(4)$3" -> "df_bureau_agg(4)$2"	[label=join];
	"df_bureau_agg(4)$3" -> "closed_agg(4)$1"	[label=join];
	"gc(4)$7" -> "gc(4)$6"	[label=collect];
	"file_path(5)" -> "previous_application[0]"	[label=_argToVar];
	"nan_as_category(5)" -> "previous_application[1]"	[label=_argToVar];
	"df_prev(5)$0" -> "file_path(5)"	[label=read_csv];
	"df_prev(5)$0" -> "pd(5)"	[label=read_csv];
	"df_prev(5)$0" -> "previous_application.csv(5)"	[label=read_csv];
	"df_prev(5)$1" -> "df_prev(5)$0"	[label=assignedFrom];
	"df_prev(5)$1" -> "np(5)"	[label=assignedFrom];
	"df_prev(5)$2" -> "df_prev(5)$1"	[label=assignedFrom];
	"df_prev(5)$2" -> "np(5)"	[label=assignedFrom];
	"df_prev(5)$3" -> "np(5)"	[label=replace];
	"df_prev(5)$3" -> "df_prev(5)$2"	[label=replace];
	"df_prev(5)$3" -> "365243(5)"	[label=replace];
	"df_prev(5)$4" -> "df_prev(5)$3"	[label=assignedFrom];
	"df_prev(5)$4" -> "1(5)"	[label=assignedFrom];
	"df_prev(5)$5" -> "df_prev(5)$4"	[label=Div];
	"df_prev(5)$5" -> "df_prev(5)$5"	[label=Div];
	"df_prev(5)$5" -> "AMT_APPLICATION(5)"	[label=Div];
	"df_prev(5)$5" -> "AMT_CREDIT(5)"	[label=Div];
	"df_prev(5)$6" -> "df_prev(5)$5"	[label=Sub];
	"df_prev(5)$6" -> "AMT_APPLICATION(5)"	[label=Sub];
	"df_prev(5)$6" -> "AMT_CREDIT(5)"	[label=Sub];
	"df_prev(5)$6" -> "df_prev(5)$6"	[label=Sub];
	"df_prev(5)$7" -> "AMT_APPLICATION(5)"	[label=Sub];
	"df_prev(5)$7" -> "df_prev(5)$6"	[label=Sub];
	"df_prev(5)$7" -> "df_prev(5)$7"	[label=Sub];
	"df_prev(5)$7" -> "AMT_GOODS_PRICE(5)"	[label=Sub];
	"df_prev(5)$8" -> "AMT_CREDIT(5)"	[label=Sub];
	"df_prev(5)$8" -> "df_prev(5)$7"	[label=Sub];
	"df_prev(5)$8" -> "AMT_GOODS_PRICE(5)"	[label=Sub];
	"df_prev(5)$8" -> "df_prev(5)$8"	[label=Sub];
	"df_prev(5)$9" -> "df_prev(5)$8"	[label=Sub];
	"df_prev(5)$9" -> "df_prev(5)$9"	[label=Sub];
	"df_prev(5)$9" -> "DAYS_FIRST_DRAWING(5)"	[label=Sub];
	"df_prev(5)$9" -> "DAYS_FIRST_DUE(5)"	[label=Sub];
	"df_prev(5)$10" -> "df_prev(5)$9"	[label=astype];
	"df_prev(5)$10" -> "DAYS_TERMINATION(5)"	[label=astype];
	"df_prev(5)$10" -> "500(5)"	[label=astype];
	"df_prev(5)$10" -> "int(5)"	[label=astype];
	"df_prev(5)$11" -> "nan_as_category(5)"	[label=one_hot_encoder];
	"df_prev(5)$11" -> "df_prev(5)$10"	[label=one_hot_encoder];
	"categorical(5)$0" -> "nan_as_category(5)"	[label=one_hot_encoder];
	"categorical(5)$0" -> "df_prev(5)$10"	[label=one_hot_encoder];
	"col(5)" -> "df_prev(5)$11"	[label=iteratorOf];
	"aggregations(5)$0" -> "categorical(5)$0"	[label=assignedFrom];
	"aggregations(5)$0" -> "col(5)"	[label=assignedFrom];
	"aggregations(5)$0" -> "aggregations(5)"	[label=assignedFrom];
	"aggregations(5)$0" -> "[<_ast.Constant object at 0x7fd500860370>](5)"	[label=assignedFrom];
	"aggregations(5)$0" -> "[<_ast.Constant object at 0x7fd5008603d0>, <_ast.Constant object at 0x7fd500860430>, <_ast.Constant object at 0x7fd500860460>, <_\
ast.Constant object at 0x7fd500860490>, <_ast.Constant object at 0x7fd5008604c0>, <_ast.Constant object at 0x7fd5008604f0>](5)"	[label=assignedFrom];
	"df_prev_agg(5)$0" -> "df_prev(5)$11"	[label=agg];
	"df_prev_agg(5)$0" -> "aggregations(5)$0"	[label=agg];
	"df_prev_agg(5)$0" -> "SK_ID_CURR(5)"	[label=agg];
	"df_prev_agg(5)$1" -> "pd(5)"	[label=Index];
	"df_prev_agg(5)$1" -> "1(5)"	[label=Index];
	"df_prev_agg(5)$1" -> "df_prev_agg(5)$0"	[label=Index];
	"df_prev_agg(5)$1" -> "df_prev_agg(5)$1"	[label=Index];
	"df_prev_agg(5)$1" -> "PREV_(5)"	[label=Index];
	"df_prev_agg(5)$1" -> "e(5)"	[label=Index];
	"df_prev_agg(5)$1" -> "0(5)"	[label=Index];
	"df_prev_agg(5)$1" -> "_(5)"	[label=Index];
	"approved_agg(5)$0" -> "1(5)"	[label=agg];
	"approved_agg(5)$0" -> "df_prev(5)$11"	[label=agg];
	"approved_agg(5)$0" -> "aggregations(5)$0"	[label=agg];
	"approved_agg(5)$0" -> "SK_ID_CURR(5)"	[label=agg];
	"approved_agg(5)$0" -> "NAME_CONTRACT_STATUS_Approved(5)"	[label=agg];
	"approved_agg(5)$1" -> "pd(5)"	[label=Index];
	"approved_agg(5)$1" -> "1(5)"	[label=Index];
	"approved_agg(5)$1" -> "e(5)"	[label=Index];
	"approved_agg(5)$1" -> "0(5)"	[label=Index];
	"approved_agg(5)$1" -> "_(5)"	[label=Index];
	"approved_agg(5)$1" -> "approved_agg(5)$0"	[label=Index];
	"approved_agg(5)$1" -> "approved_agg(5)$1"	[label=Index];
	"approved_agg(5)$1" -> "APPROVED_(5)"	[label=Index];
	"df_prev_agg(5)$2" -> "df_prev_agg(5)$1"	[label=join];
	"df_prev_agg(5)$2" -> "approved_agg(5)$1"	[label=join];
	"df_prev_agg(5)$2" -> "left(5)"	[label=join];
	"gc(5)$0" -> "gc(5)"	[label=collect];
	"refused_agg(5)$0" -> "1(5)"	[label=agg];
	"refused_agg(5)$0" -> "df_prev(5)$11"	[label=agg];
	"refused_agg(5)$0" -> "aggregations(5)$0"	[label=agg];
	"refused_agg(5)$0" -> "SK_ID_CURR(5)"	[label=agg];
	"refused_agg(5)$0" -> "NAME_CONTRACT_STATUS_Refused(5)"	[label=agg];
	"refused_agg(5)$1" -> "pd(5)"	[label=Index];
	"refused_agg(5)$1" -> "1(5)"	[label=Index];
	"refused_agg(5)$1" -> "e(5)"	[label=Index];
	"refused_agg(5)$1" -> "0(5)"	[label=Index];
	"refused_agg(5)$1" -> "_(5)"	[label=Index];
	"refused_agg(5)$1" -> "refused_agg(5)$0"	[label=Index];
	"refused_agg(5)$1" -> "refused_agg(5)$1"	[label=Index];
	"refused_agg(5)$1" -> "REFUSED_(5)"	[label=Index];
	"df_prev_agg(5)$3" -> "df_prev_agg(5)$2"	[label=join];
	"df_prev_agg(5)$3" -> "left(5)"	[label=join];
	"df_prev_agg(5)$3" -> "refused_agg(5)$1"	[label=join];
	"gc(5)$1" -> "gc(5)$0"	[label=collect];
	"file_path(6)" -> "pos_cash[0]"	[label=_argToVar];
	"nan_as_category(6)" -> "pos_cash[1]"	[label=_argToVar];
	"df_pos(6)$0" -> "file_path(6)"	[label=read_csv];
	"df_pos(6)$0" -> "pd(6)"	[label=read_csv];
	"df_pos(6)$0" -> "POS_CASH_balance.csv(6)"	[label=read_csv];
	"df_pos(6)$1" -> "df_pos(6)$0"	[label=assignedFrom];
	"df_pos(6)$1" -> "np(6)"	[label=assignedFrom];
	"df_pos(6)$2" -> "df_pos(6)$1"	[label=astype];
	"df_pos(6)$2" -> "df_pos(6)$2"	[label=astype];
	"df_pos(6)$2" -> "CNT_INSTALMENT(6)"	[label=astype];
	"df_pos(6)$2" -> "CNT_INSTALMENT_FUTURE(6)"	[label=astype];
	"df_pos(6)$2" -> "int(6)"	[label=astype];
	"df_pos(6)$3" -> "nan_as_category(6)"	[label=one_hot_encoder];
	"df_pos(6)$3" -> "df_pos(6)$2"	[label=one_hot_encoder];
	"categorical(6)$0" -> "nan_as_category(6)"	[label=one_hot_encoder];
	"categorical(6)$0" -> "df_pos(6)$2"	[label=one_hot_encoder];
	"col(6)" -> "df_pos(6)$3"	[label=iteratorOf];
	"aggregations(6)$0" -> "categorical(6)$0"	[label=assignedFrom];
	"aggregations(6)$0" -> "col(6)"	[label=assignedFrom];
	"aggregations(6)$0" -> "aggregations(6)"	[label=assignedFrom];
	"aggregations(6)$0" -> "[<_ast.Constant object at 0x7fd5008415e0>](6)"	[label=assignedFrom];
	"aggregations(6)$0" -> "[<_ast.Constant object at 0x7fd500841670>, <_ast.Constant object at 0x7fd5008416a0>, <_ast.Constant object at 0x7fd5008416d0>, <_\
ast.Constant object at 0x7fd500841700>, <_ast.Constant object at 0x7fd500841730>, <_ast.Constant object at 0x7fd500841760>](6)"	[label=assignedFrom];
	"df_pos_agg(6)$0" -> "df_pos(6)$3"	[label=agg];
	"df_pos_agg(6)$0" -> "aggregations(6)$0"	[label=agg];
	"df_pos_agg(6)$0" -> "SK_ID_CURR(6)"	[label=agg];
	"df_pos_agg(6)$1" -> "pd(6)"	[label=Index];
	"df_pos_agg(6)$1" -> "df_pos_agg(6)$0"	[label=Index];
	"df_pos_agg(6)$1" -> "df_pos_agg(6)$1"	[label=Index];
	"df_pos_agg(6)$1" -> "POS_(6)"	[label=Index];
	"df_pos_agg(6)$1" -> "e(6)"	[label=Index];
	"df_pos_agg(6)$1" -> "0(6)"	[label=Index];
	"df_pos_agg(6)$1" -> "_(6)"	[label=Index];
	"df_pos_agg(6)$1" -> "1(6)"	[label=Index];
	"df_pos_agg(6)$2" -> "df_pos(6)$3"	[label=size];
	"df_pos_agg(6)$2" -> "SK_ID_CURR(6)"	[label=size];
	"df_pos_agg(6)$2" -> "df_pos_agg(6)$1"	[label=size];
	"gc(6)$0" -> "gc(6)"	[label=collect];
	"file_path(7)" -> "installments_payments[0]"	[label=_argToVar];
	"nan_as_category(7)" -> "installments_payments[1]"	[label=_argToVar];
	"df_ins(7)$0" -> "file_path(7)"	[label=read_csv];
	"df_ins(7)$0" -> "pd(7)"	[label=read_csv];
	"df_ins(7)$0" -> "installments_payments.csv(7)"	[label=read_csv];
	"df_ins(7)$1" -> "df_ins(7)$0"	[label=assignedFrom];
	"df_ins(7)$1" -> "np(7)"	[label=assignedFrom];
	"df_ins(7)$2" -> "df_ins(7)$1"	[label=assignedFrom];
	"df_ins(7)$2" -> "np(7)"	[label=assignedFrom];
	"df_ins(7)$3" -> "df_ins(7)$2"	[label=Sub];
	"df_ins(7)$3" -> "df_ins(7)$3"	[label=Sub];
	"df_ins(7)$3" -> "DAYS_ENTRY_PAYMENT(7)"	[label=Sub];
	"df_ins(7)$3" -> "DAYS_INSTALMENT(7)"	[label=Sub];
	"df_ins(7)$4" -> "df_ins(7)$3"	[label=astype];
	"df_ins(7)$4" -> "NUM_INSTALMENT_NUMBER(7)"	[label=astype];
	"df_ins(7)$4" -> "100(7)"	[label=astype];
	"df_ins(7)$4" -> "int(7)"	[label=astype];
	"df_ins(7)$5" -> "DAYS_INSTALMENT(7)"	[label=astype];
	"df_ins(7)$5" -> "df_ins(7)$4"	[label=astype];
	"df_ins(7)$5" -> "NUM_INSTALMENT_NUMBER(7)"	[label=astype];
	"df_ins(7)$5" -> "int(7)"	[label=astype];
	"df_ins(7)$5" -> "df_ins(7)$5"	[label=astype];
	"df_ins(7)$5" -> "50(7)"	[label=astype];
	"df_ins(7)$5" -> "3(7)"	[label=astype];
	"df_ins(7)$5" -> "11500(7)"	[label=astype];
	"df_ins(7)$6" -> "df_ins(7)$5"	[label=Sub];
	"df_ins(7)$6" -> "df_ins(7)$6"	[label=Sub];
	"df_ins(7)$6" -> "AMT_INSTALMENT(7)"	[label=Sub];
	"df_ins(7)$6" -> "AMT_PAYMENT(7)"	[label=Sub];
	"df_ins(7)$7" -> "df_ins(7)$6"	[label=Div];
	"df_ins(7)$7" -> "AMT_INSTALMENT(7)"	[label=Div];
	"df_ins(7)$7" -> "AMT_PAYMENT(7)"	[label=Div];
	"df_ins(7)$7" -> "df_ins(7)$7"	[label=Div];
	"df_ins(7)$8" -> "nan_as_category(7)"	[label=one_hot_encoder];
	"df_ins(7)$8" -> "df_ins(7)$7"	[label=one_hot_encoder];
	"categorical(7)$0" -> "nan_as_category(7)"	[label=one_hot_encoder];
	"categorical(7)$0" -> "df_ins(7)$7"	[label=one_hot_encoder];
	"col(7)" -> "df_ins(7)$8"	[label=iteratorOf];
	"aggregations(7)$0" -> "categorical(7)$0"	[label=assignedFrom];
	"aggregations(7)$0" -> "col(7)"	[label=assignedFrom];
	"aggregations(7)$0" -> "aggregations(7)"	[label=assignedFrom];
	"aggregations(7)$0" -> "[<_ast.Constant object at 0x7fd500866370>](7)"	[label=assignedFrom];
	"aggregations(7)$0" -> "[<_ast.Constant object at 0x7fd500866400>, <_ast.Constant object at 0x7fd500866430>, <_ast.Constant object at 0x7fd500866460>, <_\
ast.Constant object at 0x7fd500866490>, <_ast.Constant object at 0x7fd5008664c0>, <_ast.Constant object at 0x7fd5008664f0>](7)"	[label=assignedFrom];
	"df_ins_agg(7)$0" -> "df_ins(7)$8"	[label=agg];
	"df_ins_agg(7)$0" -> "aggregations(7)$0"	[label=agg];
	"df_ins_agg(7)$0" -> "SK_ID_CURR(7)"	[label=agg];
	"df_ins_agg(7)$1" -> "pd(7)"	[label=Index];
	"df_ins_agg(7)$1" -> "df_ins_agg(7)$0"	[label=Index];
	"df_ins_agg(7)$1" -> "df_ins_agg(7)$1"	[label=Index];
	"df_ins_agg(7)$1" -> "INS_(7)"	[label=Index];
	"df_ins_agg(7)$1" -> "e(7)"	[label=Index];
	"df_ins_agg(7)$1" -> "0(7)"	[label=Index];
	"df_ins_agg(7)$1" -> "_(7)"	[label=Index];
	"df_ins_agg(7)$1" -> "1(7)"	[label=Index];
	"df_ins_agg(7)$2" -> "df_ins(7)$8"	[label=size];
	"df_ins_agg(7)$2" -> "SK_ID_CURR(7)"	[label=size];
	"df_ins_agg(7)$2" -> "df_ins_agg(7)$1"	[label=size];
	"gc(7)$0" -> "gc(7)"	[label=collect];
	"file_path(8)" -> "credit_card_balance[0]"	[label=_argToVar];
	"nan_as_category(8)" -> "credit_card_balance[1]"	[label=_argToVar];
	"df_card(8)$0" -> "file_path(8)"	[label=read_csv];
	"df_card(8)$0" -> "pd(8)"	[label=read_csv];
	"df_card(8)$0" -> "credit_card_balance.csv(8)"	[label=read_csv];
	"df_card(8)$1" -> "df_card(8)$0"	[label=assignedFrom];
	"df_card(8)$1" -> "np(8)"	[label=assignedFrom];
	"df_card(8)$2" -> "df_card(8)$1"	[label=assignedFrom];
	"df_card(8)$2" -> "np(8)"	[label=assignedFrom];
	"df_card(8)$3" -> "df_card(8)$2"	[label=assignedFrom];
	"df_card(8)$3" -> "1(8)"	[label=assignedFrom];
	"df_card(8)$4" -> "df_card(8)$3"	[label=Sub];
	"df_card(8)$4" -> "df_card(8)$4"	[label=Sub];
	"df_card(8)$4" -> "SK_DPD(8)"	[label=Sub];
	"df_card(8)$4" -> "MONTHS_BALANCE(8)"	[label=Sub];
	"df_card(8)$5" -> "df_card(8)$4"	[label=Sub];
	"df_card(8)$5" -> "MONTHS_BALANCE(8)"	[label=Sub];
	"df_card(8)$5" -> "df_card(8)$5"	[label=Sub];
	"df_card(8)$5" -> "SK_DPD_DEF(8)"	[label=Sub];
	"df_card(8)$6" -> "SK_DPD(8)"	[label=Sub];
	"df_card(8)$6" -> "df_card(8)$5"	[label=Sub];
	"df_card(8)$6" -> "SK_DPD_DEF(8)"	[label=Sub];
	"df_card(8)$6" -> "df_card(8)$6"	[label=Sub];
	"df_card(8)$7" -> "df_card(8)$6"	[label=Sub];
	"df_card(8)$7" -> "df_card(8)$7"	[label=Sub];
	"df_card(8)$7" -> "AMT_TOTAL_RECEIVABLE(8)"	[label=Sub];
	"df_card(8)$7" -> "AMT_RECIVABLE(8)"	[label=Sub];
	"df_card(8)$8" -> "df_card(8)$7"	[label=Sub];
	"df_card(8)$8" -> "AMT_TOTAL_RECEIVABLE(8)"	[label=Sub];
	"df_card(8)$8" -> "df_card(8)$8"	[label=Sub];
	"df_card(8)$8" -> "AMT_RECEIVABLE_PRINCIPAL(8)"	[label=Sub];
	"df_card(8)$9" -> "AMT_RECIVABLE(8)"	[label=Sub];
	"df_card(8)$9" -> "df_card(8)$8"	[label=Sub];
	"df_card(8)$9" -> "AMT_RECEIVABLE_PRINCIPAL(8)"	[label=Sub];
	"df_card(8)$9" -> "df_card(8)$9"	[label=Sub];
	"df_card(8)$10" -> "AMT_RECIVABLE(8)"	[label=Sub];
	"df_card(8)$10" -> "df_card(8)$9"	[label=Sub];
	"df_card(8)$10" -> "df_card(8)$10"	[label=Sub];
	"df_card(8)$10" -> "AMT_BALANCE(8)"	[label=Sub];
	"df_card(8)$11" -> "AMT_RECEIVABLE_PRINCIPAL(8)"	[label=Sub];
	"df_card(8)$11" -> "df_card(8)$10"	[label=Sub];
	"df_card(8)$11" -> "AMT_BALANCE(8)"	[label=Sub];
	"df_card(8)$11" -> "df_card(8)$11"	[label=Sub];
	"df_card(8)$12" -> "AMT_TOTAL_RECEIVABLE(8)"	[label=Sub];
	"df_card(8)$12" -> "AMT_BALANCE(8)"	[label=Sub];
	"df_card(8)$12" -> "df_card(8)$11"	[label=Sub];
	"df_card(8)$12" -> "df_card(8)$12"	[label=Sub];
	"df_card(8)$13" -> "df_card(8)$12"	[label=Sub];
	"df_card(8)$13" -> "df_card(8)$13"	[label=Sub];
	"df_card(8)$13" -> "AMT_DRAWINGS_CURRENT(8)"	[label=Sub];
	"df_card(8)$13" -> "AMT_DRAWINGS_ATM_CURRENT(8)"	[label=Sub];
	"df_card(8)$14" -> "df_card(8)$13"	[label=Sub];
	"df_card(8)$14" -> "AMT_DRAWINGS_CURRENT(8)"	[label=Sub];
	"df_card(8)$14" -> "df_card(8)$14"	[label=Sub];
	"df_card(8)$14" -> "AMT_DRAWINGS_OTHER_CURRENT(8)"	[label=Sub];
	"df_card(8)$15" -> "AMT_DRAWINGS_CURRENT(8)"	[label=Sub];
	"df_card(8)$15" -> "df_card(8)$14"	[label=Sub];
	"df_card(8)$15" -> "df_card(8)$15"	[label=Sub];
	"df_card(8)$15" -> "AMT_DRAWINGS_POS_CURRENT(8)"	[label=Sub];
	"df_card(8)$16" -> "nan_as_category(8)"	[label=one_hot_encoder];
	"df_card(8)$16" -> "df_card(8)$15"	[label=one_hot_encoder];
	"categorical(8)$0" -> "nan_as_category(8)"	[label=one_hot_encoder];
	"categorical(8)$0" -> "df_card(8)$15"	[label=one_hot_encoder];
	"col(8)" -> "df_card(8)$16"	[label=iteratorOf];
	"aggregations(8)$0" -> "categorical(8)$0"	[label=assignedFrom];
	"aggregations(8)$0" -> "col(8)"	[label=assignedFrom];
	"aggregations(8)$0" -> "aggregations(8)"	[label=assignedFrom];
	"aggregations(8)$0" -> "[<_ast.Constant object at 0x7fd50085e970>](8)"	[label=assignedFrom];
	"aggregations(8)$0" -> "[<_ast.Constant object at 0x7fd50085ea00>, <_ast.Constant object at 0x7fd50085ea30>, <_ast.Constant object at 0x7fd50085ea60>, <_\
ast.Constant object at 0x7fd50085eac0>, <_ast.Constant object at 0x7fd50085ea90>, <_ast.Constant object at 0x7fd50085eaf0>](8)"	[label=assignedFrom];
	"df_card_agg(8)$0" -> "df_card(8)$16"	[label=agg];
	"df_card_agg(8)$0" -> "aggregations(8)$0"	[label=agg];
	"df_card_agg(8)$0" -> "SK_ID_CURR(8)"	[label=agg];
	"df_card_agg(8)$1" -> "pd(8)"	[label=Index];
	"df_card_agg(8)$1" -> "1(8)"	[label=Index];
	"df_card_agg(8)$1" -> "df_card_agg(8)$0"	[label=Index];
	"df_card_agg(8)$1" -> "df_card_agg(8)$1"	[label=Index];
	"df_card_agg(8)$1" -> "CARD_(8)"	[label=Index];
	"df_card_agg(8)$1" -> "e(8)"	[label=Index];
	"df_card_agg(8)$1" -> "0(8)"	[label=Index];
	"df_card_agg(8)$1" -> "_(8)"	[label=Index];
	"df_card_agg(8)$2" -> "df_card(8)$16"	[label=size];
	"df_card_agg(8)$2" -> "SK_ID_CURR(8)"	[label=size];
	"df_card_agg(8)$2" -> "df_card_agg(8)$1"	[label=size];
	"gc(8)$0" -> "gc(8)"	[label=collect];
	"file_path(9)" -> "aggregate[0]"	[label=_argToVar];
	"warnings(9)$0" -> "warnings(9)"	[label=simplefilter];
	"print[389/4]" -> "-(9)"	[label=print];
	"print[389/4]" -> "20(9)"	[label=print];
	"print[390/4]" -> "1: application train & test ((9)"	[label=print];
	"print[390/4]" -> "time(9)"	[label=print];
	"print[390/4]" -> ")(9)"	[label=print];
	"print[391/4]" -> "-(9)"	[label=print];
	"print[391/4]" -> "20(9)"	[label=print];
	"df(9)$0" -> "file_path(9)"	[label=application_train_test];
	"print[393/4]" -> "df(9)$0"	[label=print];
	"print[393/4]" -> "     DF shape:(9)"	[label=print];
	"print[395/4]" -> "-(9)"	[label=print];
	"print[395/4]" -> "20(9)"	[label=print];
	"print[396/4]" -> "time(9)"	[label=print];
	"print[396/4]" -> ")(9)"	[label=print];
	"print[396/4]" -> "2: bureau & balance ((9)"	[label=print];
	"print[397/4]" -> "-(9)"	[label=print];
	"print[397/4]" -> "20(9)"	[label=print];
	"bureau(9)$0" -> "file_path(9)"	[label=bureau_and_balance];
	"df(9)$1" -> "df(9)$0"	[label=join];
	"df(9)$1" -> "bureau(9)$0"	[label=join];
	"df(9)$1" -> "left(9)"	[label=join];
	"df(9)$1" -> "SK_ID_CURR(9)"	[label=join];
	"print[400/4]" -> "     DF shape:(9)"	[label=print];
	"print[400/4]" -> "df(9)$1"	[label=print];
	"gc(9)$0" -> "gc(9)"	[label=collect];
	"print[404/4]" -> "-(9)"	[label=print];
	"print[404/4]" -> "20(9)"	[label=print];
	"print[405/4]" -> "time(9)"	[label=print];
	"print[405/4]" -> ")(9)"	[label=print];
	"print[405/4]" -> "3: previous_application ((9)"	[label=print];
	"print[406/4]" -> "-(9)"	[label=print];
	"print[406/4]" -> "20(9)"	[label=print];
	"prev(9)$0" -> "file_path(9)"	[label=previous_application];
	"df(9)$2" -> "df(9)$1"	[label=join];
	"df(9)$2" -> "left(9)"	[label=join];
	"df(9)$2" -> "SK_ID_CURR(9)"	[label=join];
	"df(9)$2" -> "prev(9)$0"	[label=join];
	"print[409/4]" -> "     DF shape:(9)"	[label=print];
	"print[409/4]" -> "df(9)$2"	[label=print];
	"gc(9)$1" -> "gc(9)$0"	[label=collect];
	"print[413/4]" -> "-(9)"	[label=print];
	"print[413/4]" -> "20(9)"	[label=print];
	"print[414/4]" -> "time(9)"	[label=print];
	"print[414/4]" -> ")(9)"	[label=print];
	"print[414/4]" -> "4: POS_CASH_balance ((9)"	[label=print];
	"print[415/4]" -> "-(9)"	[label=print];
	"print[415/4]" -> "20(9)"	[label=print];
	"pos(9)$0" -> "file_path(9)"	[label=pos_cash];
	"df(9)$3" -> "left(9)"	[label=join];
	"df(9)$3" -> "SK_ID_CURR(9)"	[label=join];
	"df(9)$3" -> "df(9)$2"	[label=join];
	"df(9)$3" -> "pos(9)$0"	[label=join];
	"print[418/4]" -> "     DF shape:(9)"	[label=print];
	"print[418/4]" -> "df(9)$3"	[label=print];
	"gc(9)$2" -> "gc(9)$1"	[label=collect];
	"print[422/4]" -> "-(9)"	[label=print];
	"print[422/4]" -> "20(9)"	[label=print];
	"print[423/4]" -> "time(9)"	[label=print];
	"print[423/4]" -> ")(9)"	[label=print];
	"print[423/4]" -> "5: installments_payments ((9)"	[label=print];
	"print[424/4]" -> "-(9)"	[label=print];
	"print[424/4]" -> "20(9)"	[label=print];
	"ins(9)$0" -> "file_path(9)"	[label=installments_payments];
	"df(9)$4" -> "left(9)"	[label=join];
	"df(9)$4" -> "SK_ID_CURR(9)"	[label=join];
	"df(9)$4" -> "df(9)$3"	[label=join];
	"df(9)$4" -> "ins(9)$0"	[label=join];
	"print[427/4]" -> "     DF shape:(9)"	[label=print];
	"print[427/4]" -> "df(9)$4"	[label=print];
	"gc(9)$3" -> "gc(9)$2"	[label=collect];
	"print[431/4]" -> "-(9)"	[label=print];
	"print[431/4]" -> "20(9)"	[label=print];
	"print[432/4]" -> "time(9)"	[label=print];
	"print[432/4]" -> ")(9)"	[label=print];
	"print[432/4]" -> "6: credit_card_balance ((9)"	[label=print];
	"print[433/4]" -> "-(9)"	[label=print];
	"print[433/4]" -> "20(9)"	[label=print];
	"cc(9)$0" -> "file_path(9)"	[label=credit_card_balance];
	"df(9)$5" -> "left(9)"	[label=join];
	"df(9)$5" -> "SK_ID_CURR(9)"	[label=join];
	"df(9)$5" -> "df(9)$4"	[label=join];
	"df(9)$5" -> "cc(9)$0"	[label=join];
	"print[436/4]" -> "     DF shape:(9)"	[label=print];
	"print[436/4]" -> "df(9)$5"	[label=print];
	"gc(9)$4" -> "gc(9)$3"	[label=collect];
	"print[440/4]" -> "-(9)"	[label=print];
	"print[440/4]" -> "20(9)"	[label=print];
	"print[441/4]" -> "time(9)"	[label=print];
	"print[441/4]" -> ")(9)"	[label=print];
	"print[441/4]" -> "7: final dataset ((9)"	[label=print];
	"print[442/4]" -> "-(9)"	[label=print];
	"print[442/4]" -> "20(9)"	[label=print];
	"feature(10)" -> "corr_feature_with_target[0]"	[label=_argToVar];
	"target(10)" -> "corr_feature_with_target[1]"	[label=_argToVar];
	"c0(10)$0" -> "feature(10)"	[label=dropna];
	"c0(10)$0" -> "target(10)"	[label=dropna];
	"c0(10)$0" -> "0(10)"	[label=dropna];
	"c1(10)$0" -> "feature(10)"	[label=dropna];
	"c1(10)$0" -> "target(10)"	[label=dropna];
	"c1(10)$0" -> "1(10)"	[label=dropna];
	"diff(10)$0" -> "c0(10)$0"	[label=abs];
	"diff(10)$0" -> "0(10)"	[label=abs];
	"diff(10)$0" -> "c1(10)$0"	[label=abs];
	"diff(10)$1" -> "c0(10)$0"	[label=abs];
	"diff(10)$1" -> "0(10)"	[label=abs];
	"diff(10)$1" -> "c1(10)$0"	[label=abs];
	"p(10)$0" -> "c0(10)$0"	[label=assignedFrom];
	"p(10)$0" -> "c1(10)$0"	[label=assignedFrom];
	"p(10)$0" -> "1(10)"	[label=assignedFrom];
	"p(10)$0" -> "len(10)"	[label=assignedFrom];
	"p(10)$0" -> "20(10)"	[label=assignedFrom];
	"p(10)$0" -> "ranksums(10)"	[label=assignedFrom];
	"p(10)$0" -> "2(10)"	[label=assignedFrom];
	"data(11)" -> "clean_data[0]"	[label=_argToVar];
	"warnings(11)$0" -> "warnings(11)"	[label=simplefilter];
	"nun(11)$0" -> "data(11)"	[label=nunique];
	"empty(11)$0" -> "nun(11)$0"	[label=list];
	"empty(11)$0" -> "1(11)"	[label=list];
	"data(11)$0" -> "data(11)"	[label=drop];
	"data(11)$0" -> "empty(11)$0"	[label=drop];
	"print[468/4]" -> "1(11)"	[label=print];
	"print[468/4]" -> "data(11)$0"	[label=print];
	"print[468/4]" -> "After removing empty features there are {0:d} features(11)"	[label=print];
	"corr(11)$0" -> "pd(11)"	[label=DataFrame];
	"corr(11)$0" -> "[<_ast.Constant object at 0x7fd4902a88e0>, <_ast.Constant object at 0x7fd4902a8910>](11)"	[label=DataFrame];
	"ind(11)$0" -> "data(11)$0"	[label=assignedFrom];
	"ind(11)$0" -> "TARGET(11)"	[label=assignedFrom];
	"c(11)" -> "data(11)$0"	[label=iteratorOf];
	"c(11)" -> "TARGET(11)"	[label=iteratorOf];
	"c(11)" -> "data(11)$1"	[label=iteratorOf];
	"data(11)$1" -> "data(11)$0"	[label=drop];
	"data(11)$1" -> "to_del(11)$1"	[label=drop];
	"corr(11)$1" -> "data(11)$0"	[label=corr_feature_with_target];
	"corr(11)$1" -> "corr(11)$0"	[label=corr_feature_with_target];
	"corr(11)$1" -> "ind(11)$0"	[label=corr_feature_with_target];
	"corr(11)$1" -> "TARGET(11)"	[label=corr_feature_with_target];
	"corr(11)$1" -> "c(11)"	[label=corr_feature_with_target];
	"corr(11)$2" -> "corr(11)$1"	[label=assignedFrom];
	"corr(11)$3" -> "data(11)$0"	[label=abs];
	"corr(11)$3" -> "corr(11)$2"	[label=abs];
	"corr(11)$3" -> "diff(11)"	[label=abs];
	"corr(11)$3" -> "0(11)"	[label=abs];
	"to_del_1(11)$0" -> "corr(11)$3"	[label=assignedFrom];
	"to_del_1(11)$0" -> "diff(11)"	[label=assignedFrom];
	"to_del_1(11)$0" -> "0(11)"	[label=assignedFrom];
	"to_del_1(11)$0" -> "p(11)"	[label=assignedFrom];
	"to_del_1(11)$0" -> "0.05(11)"	[label=assignedFrom];
	"to_del_2(11)$0" -> "corr(11)$3"	[label=assignedFrom];
	"to_del_2(11)$0" -> "to_del_1(11)$0"	[label=assignedFrom];
	"to_del_2(11)$0" -> "p(11)"	[label=assignedFrom];
	"to_del_2(11)$0" -> "0.05(11)"	[label=assignedFrom];
	"to_del_2(11)$0" -> "diff_norm(11)"	[label=assignedFrom];
	"to_del_2(11)$0" -> "0.5(11)"	[label=assignedFrom];
	"to_del(11)$0" -> "to_del_1(11)$0"	[label=Add];
	"to_del(11)$0" -> "to_del_2(11)$0"	[label=Add];
	"to_del(11)$0" -> "list(11)"	[label=Add];
	"to_del(11)$1" -> "to_del(11)$0"	[label=remove];
	"to_del(11)$1" -> "SK_ID_CURR(11)"	[label=remove];
	"print[487/4]" -> "1(11)"	[label=print];
	"print[487/4]" -> "data(11)$1"	[label=print];
	"print[487/4]" -> "After removing features with the same distribution on 0 and 1 classes there are {0:d} features(11)"	[label=print];
	"corr_test(11)$0" -> "pd(11)"	[label=DataFrame];
	"corr_test(11)$0" -> "[<_ast.Constant object at 0x7fd49028d940>, <_ast.Constant object at 0x7fd49028d970>](11)"	[label=DataFrame];
	"target(11)$0" -> "TARGET(11)"	[label=astype];
	"target(11)$0" -> "data(11)$1"	[label=astype];
	"target(11)$0" -> "int(11)"	[label=astype];
	"corr_test(11)$1" -> "c(11)"	[label=corr_feature_with_target];
	"corr_test(11)$1" -> "data(11)$1"	[label=corr_feature_with_target];
	"corr_test(11)$1" -> "corr_test(11)$0"	[label=corr_feature_with_target];
	"corr_test(11)$1" -> "target(11)$0"	[label=corr_feature_with_target];
	"corr_test(11)$2" -> "corr_test(11)$1"	[label=assignedFrom];
	"corr_test(11)$3" -> "data(11)$1"	[label=abs];
	"corr_test(11)$3" -> "diff(11)"	[label=abs];
	"corr_test(11)$3" -> "0(11)"	[label=abs];
	"corr_test(11)$3" -> "corr_test(11)$2"	[label=abs];
	"bad_features(11)$0" -> "1(11)"	[label=assignedFrom];
	"bad_features(11)$0" -> "p(11)"	[label=assignedFrom];
	"bad_features(11)$0" -> "0.05(11)"	[label=assignedFrom];
	"bad_features(11)$0" -> "diff_norm(11)"	[label=assignedFrom];
	"bad_features(11)$0" -> "corr_test(11)$3"	[label=assignedFrom];
	"bad_features(11)$1" -> "corr(11)$3"	[label=assignedFrom];
	"bad_features(11)$1" -> "0(11)"	[label=assignedFrom];
	"bad_features(11)$1" -> "diff_norm(11)"	[label=assignedFrom];
	"bad_features(11)$1" -> "bad_features(11)$1"	[label=assignedFrom];
	"data(11)$2" -> "data(11)$1"	[label=drop];
	"data(11)$2" -> "bad_features(11)$1"	[label=drop];
	"print[503/4]" -> "1(11)"	[label=print];
	"print[503/4]" -> "data(11)$2"	[label=print];
	"print[503/4]" -> "After removing features with not the same distribution on train and test datasets there are {0:d} features(11)"	[label=print];
	"gc(11)$0" -> "gc(11)"	[label=collect];
	"clf(11)$0" -> "0(11)"	[label=LGBMClassifier];
	"train_index(11)$0" -> "TARGET(11)"	[label=assignedFrom];
	"train_index(11)$0" -> "data(11)$2"	[label=assignedFrom];
	"train_columns(11)$0" -> "1(11)"	[label=assignedFrom];
	"train_columns(11)$0" -> "TARGET(11)"	[label=assignedFrom];
	"train_columns(11)$0" -> "data(11)$2"	[label=assignedFrom];
	"score(11)$0" -> "1(11)"	[label=assignedFrom];
	"new_columns(11)$0" -> "[](11)"	[label=assignedFrom];
	"train_columns(11)$1" -> "train_columns(11)$0"	[label=drop];
	"train_columns(11)$1" -> "new_columns(11)$0"	[label=drop];
	"clf(11)$1" -> "TARGET(11)"	[label=fit];
	"clf(11)$1" -> "data(11)$2"	[label=fit];
	"clf(11)$1" -> "clf(11)$0"	[label=fit];
	"clf(11)$1" -> "train_index(11)$0"	[label=fit];
	"clf(11)$1" -> "train_columns(11)$1"	[label=fit];
	"f_imp(11)$0" -> "pd(11)"	[label=Series];
	"f_imp(11)$0" -> "train_columns(11)$1"	[label=Series];
	"f_imp(11)$0" -> "clf(11)$1"	[label=Series];
	"score(11)$1" -> "1(11)"	[label=roc_auc_score];
	"score(11)$1" -> "TARGET(11)"	[label=roc_auc_score];
	"score(11)$1" -> "data(11)$2"	[label=roc_auc_score];
	"score(11)$1" -> "train_index(11)$0"	[label=roc_auc_score];
	"score(11)$1" -> "train_columns(11)$1"	[label=roc_auc_score];
	"score(11)$1" -> "clf(11)$1"	[label=roc_auc_score];
	"new_columns(11)$1" -> "0(11)"	[label=assignedFrom];
	"new_columns(11)$1" -> "f_imp(11)$0"	[label=assignedFrom];
	"data(11)$3" -> "data(11)$2"	[label=drop];
	"data(11)$3" -> "train_columns(11)$1"	[label=drop];
	"print[524/4]" -> "1(11)"	[label=print];
	"print[524/4]" -> "data(11)$3"	[label=print];
	"print[524/4]" -> "After removing features not interesting for classifier there are {0:d} features(11)"	[label=print];
	"df(12)" -> "cv_scores[0]"	[label=_argToVar];
	"num_folds(12)" -> "cv_scores[1]"	[label=_argToVar];
	"params(12)" -> "cv_scores[2]"	[label=_argToVar];
	"stratified(12)" -> "cv_scores[3]"	[label=_argToVar];
	"verbose(12)" -> "cv_scores[4]"	[label=_argToVar];
	"save_train_prediction(12)" -> "cv_scores[5]"	[label=_argToVar];
	"train_prediction_file_name(12)" -> "cv_scores[6]"	[label=_argToVar];
	"save_test_prediction(12)" -> "cv_scores[7]"	[label=_argToVar];
	"test_prediction_file_name(12)" -> "cv_scores[8]"	[label=_argToVar];
	"warnings(12)$0" -> "warnings(12)"	[label=simplefilter];
	"warnings(12)$0" -> "ignore(12)"	[label=simplefilter];
	"clf(12)$0" -> "params(12)"	[label=LGBMClassifier];
	"train_df(12)$0" -> "df(12)"	[label=assignedFrom];
	"train_df(12)$0" -> "TARGET(12)"	[label=assignedFrom];
	"test_df(12)$0" -> "df(12)"	[label=assignedFrom];
	"test_df(12)$0" -> "TARGET(12)"	[label=assignedFrom];
	"print[546/4]" -> "train_df(12)$0"	[label=print];
	"print[546/4]" -> "test_df(12)$0"	[label=print];
	"print[546/4]" -> "Starting LightGBM. Train shape: {}, test shape: {}(12)"	[label=print];
	"folds(12)$0" -> "num_folds(12)"	[label=StratifiedKFold];
	"folds(12)$0" -> "True(12)"	[label=StratifiedKFold];
	"folds(12)$0" -> "1001(12)"	[label=StratifiedKFold];
	"folds(12)$1" -> "num_folds(12)"	[label=KFold];
	"folds(12)$1" -> "True(12)"	[label=KFold];
	"folds(12)$1" -> "1001(12)"	[label=KFold];
	"train_pred(12)$0" -> "train_df(12)$0"	[label=zeros];
	"train_pred(12)$0" -> "np(12)"	[label=zeros];
	"train_pred(12)$0" -> "0(12)"	[label=zeros];
	"train_pred_proba(12)$0" -> "train_df(12)$0"	[label=zeros];
	"train_pred_proba(12)$0" -> "np(12)"	[label=zeros];
	"train_pred_proba(12)$0" -> "0(12)"	[label=zeros];
	"test_pred(12)$0" -> "train_df(12)$0"	[label=zeros];
	"test_pred(12)$0" -> "np(12)"	[label=zeros];
	"test_pred(12)$0" -> "0(12)"	[label=zeros];
	"test_pred_proba(12)$0" -> "train_df(12)$0"	[label=zeros];
	"test_pred_proba(12)$0" -> "np(12)"	[label=zeros];
	"test_pred_proba(12)$0" -> "0(12)"	[label=zeros];
	"prediction(12)$0" -> "test_df(12)$0"	[label=zeros];
	"prediction(12)$0" -> "np(12)"	[label=zeros];
	"prediction(12)$0" -> "0(12)"	[label=zeros];
	"feats(12)$0" -> "train_df(12)$0"	[label=assignedFrom];
	"feats(12)$0" -> "f(12)"	[label=assignedFrom];
	"feats(12)$0" -> "[<_ast.Constant object at 0x7fd4c05cde50>, <_ast.Constant object at 0x7fd4c05cde80>, <_ast.Constant object at 0x7fd4c05cdeb0>, <_\
ast.Constant object at 0x7fd4c05cdee0>, <_ast.Constant object at 0x7fd4c05cdf10>](12)"	[label=assignedFrom];
	"df_feature_importance(12)$0" -> "feats(12)$0"	[label=DataFrame];
	"df_feature_importance(12)$0" -> "pd(12)"	[label=DataFrame];
	"n_fold(12)" -> "train_df(12)$0"	[label=iteratorOf];
	"n_fold(12)" -> "TARGET(12)"	[label=iteratorOf];
	"n_fold(12)" -> "folds(12)$1"	[label=iteratorOf];
	"n_fold(12)" -> "feats(12)$0"	[label=iteratorOf];
	"n_fold(12)" -> "enumerate(12)"	[label=iteratorOf];
	"train_idx(12)" -> "train_df(12)$0"	[label=iteratorOf];
	"train_idx(12)" -> "TARGET(12)"	[label=iteratorOf];
	"train_idx(12)" -> "folds(12)$1"	[label=iteratorOf];
	"train_idx(12)" -> "feats(12)$0"	[label=iteratorOf];
	"train_idx(12)" -> "enumerate(12)"	[label=iteratorOf];
	"valid_idx(12)" -> "train_df(12)$0"	[label=iteratorOf];
	"valid_idx(12)" -> "TARGET(12)"	[label=iteratorOf];
	"valid_idx(12)" -> "folds(12)$1"	[label=iteratorOf];
	"valid_idx(12)" -> "feats(12)$0"	[label=iteratorOf];
	"valid_idx(12)" -> "enumerate(12)"	[label=iteratorOf];
	"print[568/8]" -> "n_fold(12)"	[label=print];
	"print[568/8]" -> "Fold(12)"	[label=print];
	"print[568/8]" -> "started at(12)"	[label=print];
	"print[568/8]" -> "time(12)"	[label=print];
	"train_x(12)$0" -> "train_df(12)$0"	[label=assignedFrom];
	"train_x(12)$0" -> "TARGET(12)"	[label=assignedFrom];
	"train_x(12)$0" -> "feats(12)$0"	[label=assignedFrom];
	"train_x(12)$0" -> "train_idx(12)"	[label=assignedFrom];
	"train_y(12)$0" -> "train_df(12)$0"	[label=assignedFrom];
	"train_y(12)$0" -> "TARGET(12)"	[label=assignedFrom];
	"train_y(12)$0" -> "feats(12)$0"	[label=assignedFrom];
	"train_y(12)$0" -> "train_idx(12)"	[label=assignedFrom];
	"valid_x(12)$0" -> "train_df(12)$0"	[label=assignedFrom];
	"valid_x(12)$0" -> "TARGET(12)"	[label=assignedFrom];
	"valid_x(12)$0" -> "feats(12)$0"	[label=assignedFrom];
	"valid_x(12)$0" -> "valid_idx(12)"	[label=assignedFrom];
	"valid_y(12)$0" -> "train_df(12)$0"	[label=assignedFrom];
	"valid_y(12)$0" -> "TARGET(12)"	[label=assignedFrom];
	"valid_y(12)$0" -> "feats(12)$0"	[label=assignedFrom];
	"valid_y(12)$0" -> "valid_idx(12)"	[label=assignedFrom];
	"clf(12)$1" -> "clf(12)$0"	[label=fit];
	"clf(12)$1" -> "train_x(12)$0"	[label=fit];
	"clf(12)$1" -> "train_y(12)$0"	[label=fit];
	"train_pred(12)$1" -> "train_pred(12)$0"	[label=predict];
	"train_pred(12)$1" -> "train_x(12)$0"	[label=predict];
	"train_pred(12)$1" -> "clf(12)$1"	[label=predict];
	"train_pred_proba(12)$1" -> "train_pred_proba(12)$0"	[label=assignedFrom];
	"train_pred_proba(12)$1" -> "train_x(12)$0"	[label=assignedFrom];
	"train_pred_proba(12)$1" -> "clf(12)$1"	[label=assignedFrom];
	"train_pred_proba(12)$1" -> "1(12)"	[label=assignedFrom];
	"test_pred(12)$1" -> "test_pred(12)$0"	[label=predict];
	"test_pred(12)$1" -> "valid_x(12)$0"	[label=predict];
	"test_pred(12)$1" -> "clf(12)$1"	[label=predict];
	"test_pred_proba(12)$1" -> "test_pred_proba(12)$0"	[label=assignedFrom];
	"test_pred_proba(12)$1" -> "valid_x(12)$0"	[label=assignedFrom];
	"test_pred_proba(12)$1" -> "clf(12)$1"	[label=assignedFrom];
	"test_pred_proba(12)$1" -> "1(12)"	[label=assignedFrom];
	"prediction(12)$1" -> "test_df(12)$0"	[label=Add];
	"prediction(12)$1" -> "folds(12)$1"	[label=Add];
	"prediction(12)$1" -> "prediction(12)$0"	[label=Add];
	"prediction(12)$1" -> "feats(12)$0"	[label=Add];
	"prediction(12)$1" -> "clf(12)$1"	[label=Add];
	"prediction(12)$1" -> "1(12)"	[label=Add];
	"df_feature_importance(12)$1" -> "feats(12)$0"	[label=Series];
	"df_feature_importance(12)$1" -> "df_feature_importance(12)$0"	[label=Series];
	"df_feature_importance(12)$1" -> "pd(12)"	[label=Series];
	"df_feature_importance(12)$1" -> "clf(12)$1"	[label=Series];
	"print[586/8]" -> "n_fold(12)"	[label=print];
	"print[586/8]" -> "valid_idx(12)"	[label=print];
	"print[586/8]" -> "valid_y(12)$0"	[label=print];
	"print[586/8]" -> "test_pred_proba(12)$1"	[label=print];
	"print[586/8]" -> "Fold \%2d AUC : \%.6f(12)"	[label=print];
	"print[586/8]" -> "roc_auc_score(12)"	[label=print];
	"gc(12)$0" -> "gc(12)"	[label=collect];
	"roc_auc_train(12)$0" -> "train_df(12)$0"	[label=roc_auc_score];
	"roc_auc_train(12)$0" -> "TARGET(12)"	[label=roc_auc_score];
	"roc_auc_train(12)$0" -> "train_pred_proba(12)$1"	[label=roc_auc_score];
	"precision_train(12)$0" -> "train_df(12)$0"	[label=precision_score];
	"precision_train(12)$0" -> "TARGET(12)"	[label=precision_score];
	"precision_train(12)$0" -> "train_pred(12)$1"	[label=precision_score];
	"precision_train(12)$0" -> "None(12)"	[label=precision_score];
	"recall_train(12)$0" -> "train_df(12)$0"	[label=recall_score];
	"recall_train(12)$0" -> "TARGET(12)"	[label=recall_score];
	"recall_train(12)$0" -> "train_pred(12)$1"	[label=recall_score];
	"recall_train(12)$0" -> "None(12)"	[label=recall_score];
	"roc_auc_test(12)$0" -> "train_df(12)$0"	[label=roc_auc_score];
	"roc_auc_test(12)$0" -> "TARGET(12)"	[label=roc_auc_score];
	"roc_auc_test(12)$0" -> "test_pred_proba(12)$1"	[label=roc_auc_score];
	"precision_test(12)$0" -> "train_df(12)$0"	[label=precision_score];
	"precision_test(12)$0" -> "TARGET(12)"	[label=precision_score];
	"precision_test(12)$0" -> "test_pred(12)$1"	[label=precision_score];
	"precision_test(12)$0" -> "None(12)"	[label=precision_score];
	"recall_test(12)$0" -> "train_df(12)$0"	[label=recall_score];
	"recall_test(12)$0" -> "TARGET(12)"	[label=recall_score];
	"recall_test(12)$0" -> "test_pred(12)$1"	[label=recall_score];
	"recall_test(12)$0" -> "None(12)"	[label=recall_score];
	"print[598/4]" -> "roc_auc_test(12)$0"	[label=print];
	"print[598/4]" -> "Full AUC score \%.6f(12)"	[label=print];
	"df_feature_importance(12)$2" -> "0(12)"	[label=fillna];
	"df_feature_importance(12)$2" -> "df_feature_importance(12)$1"	[label=fillna];
	"df_feature_importance(12)$3" -> "1(12)"	[label=mean];
	"df_feature_importance(12)$3" -> "df_feature_importance(12)$2"	[label=mean];
	"df_prediction(12)$0" -> "train_df(12)$0"	[label=assignedFrom];
	"df_prediction(12)$0" -> "[<_ast.Constant object at 0x7fd4c05b6070>, <_ast.Constant object at 0x7fd4c05b6460>](12)"	[label=assignedFrom];
	"df_prediction(12)$1" -> "test_pred_proba(12)$1"	[label=assignedFrom];
	"df_prediction(12)$1" -> "df_prediction(12)$0"	[label=assignedFrom];
	"df_prediction(12)$2" -> "train_prediction_file_name(12)"	[label=to_csv];
	"df_prediction(12)$2" -> "df_prediction(12)$1"	[label=to_csv];
	"gc(12)$1" -> "gc(12)$0"	[label=collect];
	"df_prediction(12)$3" -> "test_df(12)$0"	[label=assignedFrom];
	"df_prediction(12)$3" -> "[<_ast.Constant object at 0x7fd4c05b6b20>](12)"	[label=assignedFrom];
	"df_prediction(12)$4" -> "prediction(12)$1"	[label=assignedFrom];
	"df_prediction(12)$4" -> "df_prediction(12)$3"	[label=assignedFrom];
	"df_prediction(12)$5" -> "test_prediction_file_name(12)"	[label=to_csv];
	"df_prediction(12)$5" -> "df_prediction(12)$4"	[label=to_csv];
	"gc(12)$2" -> "gc(12)$1"	[label=collect];
	"feature_importance_df_(13)" -> "display_folds_importances[0]"	[label=_argToVar];
	"n_folds(13)" -> "display_folds_importances[1]"	[label=_argToVar];
	"n_columns(13)$0" -> "3(13)"	[label=assignedFrom];
	"n_rows(13)$0" -> "n_folds(13)"	[label=FloorDiv];
	"n_rows(13)$0" -> "n_columns(13)$0"	[label=FloorDiv];
	"n_rows(13)$0" -> "1(13)"	[label=FloorDiv];
	"_(13)$0" -> "n_columns(13)$0"	[label=subplots];
	"_(13)$0" -> "n_rows(13)$0"	[label=subplots];
	"_(13)$0" -> "plt(13)"	[label=subplots];
	"_(13)$0" -> "8(13)"	[label=subplots];
	"axes(13)$0" -> "n_columns(13)$0"	[label=subplots];
	"axes(13)$0" -> "n_rows(13)$0"	[label=subplots];
	"axes(13)$0" -> "plt(13)"	[label=subplots];
	"axes(13)$0" -> "8(13)"	[label=subplots];
	"i(13)" -> "n_folds(13)"	[label=iteratorOf];
	"i(13)" -> "range(13)"	[label=iteratorOf];
	"sns(13)$0" -> "sns(13)"	[label=barplot];
	"sns(13)$1" -> "sns(13)$0"	[label=barplot];
	"plt(13)$0" -> "plt(13)"	[label=title];
	"plt(13)$0" -> "LightGBM Features (avg over folds)(13)"	[label=title];
	"plt(13)$1" -> "plt(13)$0"	[label=tight_layout];
	"plt(13)$2" -> "plt(13)$1"	[label=show];
	"[<_ast.Constant object at 0x7fd5009c9280>, <_ast.Constant object at 0x7fd5009c92b0>, <_ast.Constant object at 0x7fd5009c92e0>, <_\
ast.Constant object at 0x7fd5009c9310>, <_ast.Constant object at 0x7fd5009c9340>, <_ast.Constant object at 0x7fd5009c9370>, <_ast.Constant \
object at 0x7fd5009c93a0>, <_ast.Constant object at 0x7fd5009c93d0>, <_ast.Constant object at 0x7fd5009c9400>, <_ast.Constant object \
at 0x7fd5009c9430>, <_ast.Constant object at 0x7fd5009c9460>](0)" -> "797-lgbm-and-bayesian-optimization.ipynb"	[label=appearsIn];
	"scores_index(0)$0" -> "[<_ast.Constant object at 0x7fd5009c9280>, <_ast.Constant object at 0x7fd5009c92b0>, <_ast.Constant object at 0x7fd5009c92e0>, <_\
ast.Constant object at 0x7fd5009c9310>, <_ast.Constant object at 0x7fd5009c9340>, <_ast.Constant object at 0x7fd5009c9370>, <_ast.Constant \
object at 0x7fd5009c93a0>, <_ast.Constant object at 0x7fd5009c93d0>, <_ast.Constant object at 0x7fd5009c9400>, <_ast.Constant object \
at 0x7fd5009c9430>, <_ast.Constant object at 0x7fd5009c9460>](0)"	[label=assignedFrom];
	"scores(0)$0" -> "pd(0)"	[label=DataFrame];
	"scores(0)$0" -> "scores_index(0)$0"	[label=DataFrame];
	"nthread(0)" -> "797-lgbm-and-bayesian-optimization.ipynb"	[label=appearsIn];
	"lgbm_params(0)$0" -> "nthread(0)"	[label=assignedFrom];
	"lgbm_params(0)$0" -> "n_estimators(0)"	[label=assignedFrom];
	"lgbm_params(0)$0" -> "learning_rate(0)"	[label=assignedFrom];
	"lgbm_params(0)$0" -> "num_leaves(0)"	[label=assignedFrom];
	"lgbm_params(0)$0" -> "colsample_bytree(0)"	[label=assignedFrom];
	"lgbm_params(0)$0" -> "subsample(0)"	[label=assignedFrom];
	"lgbm_params(0)$0" -> "max_depth(0)"	[label=assignedFrom];
	"lgbm_params(0)$0" -> "reg_alpha(0)"	[label=assignedFrom];
	"lgbm_params(0)$0" -> "reg_lambda(0)"	[label=assignedFrom];
	"lgbm_params(0)$0" -> "min_split_gain(0)"	[label=assignedFrom];
	"lgbm_params(0)$0" -> "min_child_weight(0)"	[label=assignedFrom];
	"lgbm_params(0)$0" -> "silent(0)"	[label=assignedFrom];
	"lgbm_params(0)$0" -> "verbose(0)"	[label=assignedFrom];
	"lgbm_params(0)$0" -> "4(0)"	[label=assignedFrom];
	"lgbm_params(0)$0" -> "10000(0)"	[label=assignedFrom];
	"lgbm_params(0)$0" -> "0.02(0)"	[label=assignedFrom];
	"lgbm_params(0)$0" -> "34(0)"	[label=assignedFrom];
	"lgbm_params(0)$0" -> "0.9497036(0)"	[label=assignedFrom];
	"lgbm_params(0)$0" -> "0.8715623(0)"	[label=assignedFrom];
	"lgbm_params(0)$0" -> "8(0)"	[label=assignedFrom];
	"lgbm_params(0)$0" -> "0.041545473(0)"	[label=assignedFrom];
	"lgbm_params(0)$0" -> "0.0735294(0)"	[label=assignedFrom];
	"lgbm_params(0)$0" -> "0.0222415(0)"	[label=assignedFrom];
	"lgbm_params(0)$0" -> "39.3259775(0)"	[label=assignedFrom];
	"lgbm_params(0)$0" -> "1(0)"	[label=assignedFrom];
	"n_estimators(0)" -> "797-lgbm-and-bayesian-optimization.ipynb"	[label=appearsIn];
	"learning_rate(0)" -> "797-lgbm-and-bayesian-optimization.ipynb"	[label=appearsIn];
	"num_leaves(0)" -> "797-lgbm-and-bayesian-optimization.ipynb"	[label=appearsIn];
	"colsample_bytree(0)" -> "797-lgbm-and-bayesian-optimization.ipynb"	[label=appearsIn];
	"subsample(0)" -> "797-lgbm-and-bayesian-optimization.ipynb"	[label=appearsIn];
	"max_depth(0)" -> "797-lgbm-and-bayesian-optimization.ipynb"	[label=appearsIn];
	"reg_alpha(0)" -> "797-lgbm-and-bayesian-optimization.ipynb"	[label=appearsIn];
	"reg_lambda(0)" -> "797-lgbm-and-bayesian-optimization.ipynb"	[label=appearsIn];
	"min_split_gain(0)" -> "797-lgbm-and-bayesian-optimization.ipynb"	[label=appearsIn];
	"min_child_weight(0)" -> "797-lgbm-and-bayesian-optimization.ipynb"	[label=appearsIn];
	"silent(0)" -> "797-lgbm-and-bayesian-optimization.ipynb"	[label=appearsIn];
	"verbose(0)" -> "797-lgbm-and-bayesian-optimization.ipynb"	[label=appearsIn];
	"4(0)" -> "797-lgbm-and-bayesian-optimization.ipynb"	[label=appearsIn];
	"10000(0)" -> "797-lgbm-and-bayesian-optimization.ipynb"	[label=appearsIn];
	"0.02(0)" -> "797-lgbm-and-bayesian-optimization.ipynb"	[label=appearsIn];
	"34(0)" -> "797-lgbm-and-bayesian-optimization.ipynb"	[label=appearsIn];
	"0.9497036(0)" -> "797-lgbm-and-bayesian-optimization.ipynb"	[label=appearsIn];
	"0.8715623(0)" -> "797-lgbm-and-bayesian-optimization.ipynb"	[label=appearsIn];
	"8(0)" -> "797-lgbm-and-bayesian-optimization.ipynb"	[label=appearsIn];
	"0.041545473(0)" -> "797-lgbm-and-bayesian-optimization.ipynb"	[label=appearsIn];
	"0.0735294(0)" -> "797-lgbm-and-bayesian-optimization.ipynb"	[label=appearsIn];
	"0.0222415(0)" -> "797-lgbm-and-bayesian-optimization.ipynb"	[label=appearsIn];
	"39.3259775(0)" -> "797-lgbm-and-bayesian-optimization.ipynb"	[label=appearsIn];
	"1(0)" -> "797-lgbm-and-bayesian-optimization.ipynb"	[label=appearsIn];
	"warnings(14)$0" -> "warnings(14)"	[label=simplefilter];
	"warnings(14)$0" -> "ignore(14)"	[label=simplefilter];
	"params(14)$0" -> "params(14)"	[label=int];
	"params(14)$0" -> "num_leaves(14)"	[label=int];
	"params(14)$1" -> "params(14)$0"	[label=int];
	"params(14)$1" -> "max_depth(14)"	[label=int];
	"clf(14)$0" -> "params(14)$1"	[label=LGBMClassifier];
	"clf(14)$0" -> "10000(14)"	[label=LGBMClassifier];
	"clf(14)$0" -> "4(14)"	[label=LGBMClassifier];
	"train_df(14)$0" -> "df(14)"	[label=assignedFrom];
	"train_df(14)$0" -> "TARGET(14)"	[label=assignedFrom];
	"test_df(14)$0" -> "df(14)"	[label=assignedFrom];
	"test_df(14)$0" -> "TARGET(14)"	[label=assignedFrom];
	"folds(14)$0" -> "2(14)"	[label=KFold];
	"folds(14)$0" -> "True(14)"	[label=KFold];
	"folds(14)$0" -> "1001(14)"	[label=KFold];
	"test_pred_proba(14)$0" -> "train_df(14)$0"	[label=zeros];
	"test_pred_proba(14)$0" -> "np(14)"	[label=zeros];
	"test_pred_proba(14)$0" -> "0(14)"	[label=zeros];
	"feats(14)$0" -> "train_df(14)$0"	[label=assignedFrom];
	"feats(14)$0" -> "f(14)"	[label=assignedFrom];
	"feats(14)$0" -> "[<_ast.Constant object at 0x7fd5009ce130>, <_ast.Constant object at 0x7fd5009ce160>, <_ast.Constant object at 0x7fd5009ce1c0>, <_\
ast.Constant object at 0x7fd5009ce190>, <_ast.Constant object at 0x7fd5009ce1f0>](14)"	[label=assignedFrom];
	"n_fold(14)" -> "train_df(14)$0"	[label=iteratorOf];
	"n_fold(14)" -> "TARGET(14)"	[label=iteratorOf];
	"n_fold(14)" -> "folds(14)$0"	[label=iteratorOf];
	"n_fold(14)" -> "feats(14)$0"	[label=iteratorOf];
	"n_fold(14)" -> "enumerate(14)"	[label=iteratorOf];
	"train_idx(14)" -> "train_df(14)$0"	[label=iteratorOf];
	"train_idx(14)" -> "TARGET(14)"	[label=iteratorOf];
	"train_idx(14)" -> "folds(14)$0"	[label=iteratorOf];
	"train_idx(14)" -> "feats(14)$0"	[label=iteratorOf];
	"train_idx(14)" -> "enumerate(14)"	[label=iteratorOf];
	"valid_idx(14)" -> "train_df(14)$0"	[label=iteratorOf];
	"valid_idx(14)" -> "TARGET(14)"	[label=iteratorOf];
	"valid_idx(14)" -> "folds(14)$0"	[label=iteratorOf];
	"valid_idx(14)" -> "feats(14)$0"	[label=iteratorOf];
	"valid_idx(14)" -> "enumerate(14)"	[label=iteratorOf];
	"train_x(14)$0" -> "train_df(14)$0"	[label=assignedFrom];
	"train_x(14)$0" -> "TARGET(14)"	[label=assignedFrom];
	"train_x(14)$0" -> "feats(14)$0"	[label=assignedFrom];
	"train_x(14)$0" -> "train_idx(14)"	[label=assignedFrom];
	"train_y(14)$0" -> "train_df(14)$0"	[label=assignedFrom];
	"train_y(14)$0" -> "TARGET(14)"	[label=assignedFrom];
	"train_y(14)$0" -> "feats(14)$0"	[label=assignedFrom];
	"train_y(14)$0" -> "train_idx(14)"	[label=assignedFrom];
	"valid_x(14)$0" -> "train_df(14)$0"	[label=assignedFrom];
	"valid_x(14)$0" -> "TARGET(14)"	[label=assignedFrom];
	"valid_x(14)$0" -> "feats(14)$0"	[label=assignedFrom];
	"valid_x(14)$0" -> "valid_idx(14)"	[label=assignedFrom];
	"valid_y(14)$0" -> "train_df(14)$0"	[label=assignedFrom];
	"valid_y(14)$0" -> "TARGET(14)"	[label=assignedFrom];
	"valid_y(14)$0" -> "feats(14)$0"	[label=assignedFrom];
	"valid_y(14)$0" -> "valid_idx(14)"	[label=assignedFrom];
	"clf(14)$1" -> "clf(14)$0"	[label=fit];
	"clf(14)$1" -> "train_x(14)$0"	[label=fit];
	"clf(14)$1" -> "train_y(14)$0"	[label=fit];
	"test_pred_proba(14)$1" -> "test_pred_proba(14)$0"	[label=assignedFrom];
	"test_pred_proba(14)$1" -> "valid_x(14)$0"	[label=assignedFrom];
	"test_pred_proba(14)$1" -> "clf(14)$1"	[label=assignedFrom];
	"test_pred_proba(14)$1" -> "1(14)"	[label=assignedFrom];
	"gc(14)$0" -> "gc(14)"	[label=collect];
	"params(0)$0" -> "learning_rate(0)"	[label=assignedFrom];
	"params(0)$0" -> "num_leaves(0)"	[label=assignedFrom];
	"params(0)$0" -> "colsample_bytree(0)"	[label=assignedFrom];
	"params(0)$0" -> "subsample(0)"	[label=assignedFrom];
	"params(0)$0" -> "max_depth(0)"	[label=assignedFrom];
	"params(0)$0" -> "reg_alpha(0)"	[label=assignedFrom];
	"params(0)$0" -> "reg_lambda(0)"	[label=assignedFrom];
	"params(0)$0" -> "min_split_gain(0)"	[label=assignedFrom];
	"params(0)$0" -> "min_child_weight(0)"	[label=assignedFrom];
	"params(0)$0" -> "0.02(0)"	[label=assignedFrom];
	"params(0)$0" -> "1(0)"	[label=assignedFrom];
	"params(0)$0" -> "0.8(0)"	[label=assignedFrom];
	"params(0)$0" -> "0.01(0)"	[label=assignedFrom];
	"params(0)$0" -> "33(0)"	[label=assignedFrom];
	"params(0)$0" -> "35(0)"	[label=assignedFrom];
	"params(0)$0" -> "7(0)"	[label=assignedFrom];
	"params(0)$0" -> "9(0)"	[label=assignedFrom];
	"params(0)$0" -> "0.03(0)"	[label=assignedFrom];
	"params(0)$0" -> "0.05(0)"	[label=assignedFrom];
	"params(0)$0" -> "0.06(0)"	[label=assignedFrom];
	"params(0)$0" -> "0.08(0)"	[label=assignedFrom];
	"params(0)$0" -> "38(0)"	[label=assignedFrom];
	"params(0)$0" -> "40(0)"	[label=assignedFrom];
	"0.8(0)" -> "797-lgbm-and-bayesian-optimization.ipynb"	[label=appearsIn];
	"0.01(0)" -> "797-lgbm-and-bayesian-optimization.ipynb"	[label=appearsIn];
	"33(0)" -> "797-lgbm-and-bayesian-optimization.ipynb"	[label=appearsIn];
	"35(0)" -> "797-lgbm-and-bayesian-optimization.ipynb"	[label=appearsIn];
	"7(0)" -> "797-lgbm-and-bayesian-optimization.ipynb"	[label=appearsIn];
	"9(0)" -> "797-lgbm-and-bayesian-optimization.ipynb"	[label=appearsIn];
	"0.03(0)" -> "797-lgbm-and-bayesian-optimization.ipynb"	[label=appearsIn];
	"0.05(0)" -> "797-lgbm-and-bayesian-optimization.ipynb"	[label=appearsIn];
	"0.06(0)" -> "797-lgbm-and-bayesian-optimization.ipynb"	[label=appearsIn];
	"0.08(0)" -> "797-lgbm-and-bayesian-optimization.ipynb"	[label=appearsIn];
	"38(0)" -> "797-lgbm-and-bayesian-optimization.ipynb"	[label=appearsIn];
	"40(0)" -> "797-lgbm-and-bayesian-optimization.ipynb"	[label=appearsIn];
}
