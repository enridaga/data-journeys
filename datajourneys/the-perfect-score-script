digraph "" {
	__future__ -> "the-perfect-score-script.ipynb"	[label=importedBy];
	print_function -> __future__	[label=importedBy];
	"print_function(0)" -> "the-perfect-score-script.ipynb"	[label=appearsIn];
	"print_function(0)" -> print_function	[label=assignedFrom];
	numpy -> "the-perfect-score-script.ipynb"	[label=importedBy];
	"np(0)" -> "the-perfect-score-script.ipynb"	[label=appearsIn];
	"np(0)" -> numpy	[label=assignedFrom];
	math -> "the-perfect-score-script.ipynb"	[label=importedBy];
	log -> math	[label=importedBy];
	"log(0)" -> "the-perfect-score-script.ipynb"	[label=appearsIn];
	"log(0)" -> log	[label=assignedFrom];
	"lines(1)$0" -> "f(1)"	[label=assignedFrom];
	"lines(1)$0" -> "1(1)"	[label=assignedFrom];
	"p(2)" -> "prob_format[0]"	[label=_argToVar];
	"p(3)" -> "truncate[0]"	[label=_argToVar];
	"patient_ids(4)" -> "write_submit[0]"	[label=_argToVar];
	"probs(4)" -> "write_submit[1]"	[label=_argToVar];
	"file_name(4)" -> "write_submit[2]"	[label=_argToVar];
	"f(4)$0" -> "f(4)"	[label=write];
	"f(4)$0" -> "id,cancer
(4)"	[label=write];
	"i(4)" -> "patient_ids(4)"	[label=iteratorOf];
	"i(4)" -> "probs(4)"	[label=iteratorOf];
	"i(4)" -> "zip(4)"	[label=iteratorOf];
	"p(4)" -> "patient_ids(4)"	[label=iteratorOf];
	"p(4)" -> "probs(4)"	[label=iteratorOf];
	"p(4)" -> "zip(4)"	[label=iteratorOf];
	"f(4)$1" -> "f(4)$0"	[label=write];
	"f(4)$1" -> "i(4)"	[label=write];
	"f(4)$1" -> "p(4)"	[label=write];
	"f(4)$1" -> "\%s,\%s
(4)"	[label=write];
	"f(4)$1" -> "prob_format(4)"	[label=write];
	"print[50/4]" -> "file_name(4)"	[label=print];
	"print[50/4]" -> "wrote \%s(4)"	[label=print];
	"lines(5)$0" -> "open(5)"	[label=readlines];
	"lines(5)$0" -> "scores.txt(5)"	[label=readlines];
	"n(6)" -> "build_template[0]"	[label=_argToVar];
	"chunk_size(6)" -> "build_template[1]"	[label=_argToVar];
	"epsilon(6)$0" -> "1.05e-05(6)"	[label=assignedFrom];
	"n(7)" -> "build_probs[0]"	[label=_argToVar];
	"chunk(7)" -> "build_probs[1]"	[label=_argToVar];
	"template(7)" -> "build_probs[2]"	[label=_argToVar];
	"probs(7)$0" -> "n(7)"	[label=zeros];
	"probs(7)$0" -> "np(7)"	[label=zeros];
	"probs(7)$1" -> "probs(7)$0"	[label=assignedFrom];
	"probs(7)$1" -> "0.5(7)"	[label=assignedFrom];
	"probs(7)$2" -> "template(7)"	[label=assignedFrom];
	"probs(7)$2" -> "probs(7)$1"	[label=assignedFrom];
	"x(8)" -> "int_to_bin[0]"	[label=_argToVar];
	"size(8)" -> "int_to_bin[1]"	[label=_argToVar];
	"s(8)$0" -> "x(8)"	[label=ljust];
	"s(8)$0" -> "size(8)"	[label=ljust];
	"s(8)$0" -> "bin(8)"	[label=ljust];
	"s(8)$0" -> "2(8)"	[label=ljust];
	"s(8)$0" -> "1(8)"	[label=ljust];
	"s(8)$0" -> "0(8)"	[label=ljust];
	"labels(9)" -> "update_labels[0]"	[label=_argToVar];
	"chunk(9)" -> "update_labels[1]"	[label=_argToVar];
	"template(9)" -> "update_labels[2]"	[label=_argToVar];
	"score(9)" -> "update_labels[3]"	[label=_argToVar];
	"chunk_size(9)$0" -> "chunk(9)"	[label=len];
	"n(9)$0" -> "labels(9)"	[label=len];
	"match_count(9)$0" -> "0(9)"	[label=assignedFrom];
	"i(9)" -> "chunk_size(9)$0"	[label=iteratorOf];
	"i(9)" -> "range(9)"	[label=iteratorOf];
	"i(9)" -> "2(9)"	[label=iteratorOf];
	"b(9)$0" -> "chunk_size(9)$0"	[label=int_to_bin];
	"b(9)$0" -> "i(9)"	[label=int_to_bin];
	"score_i(9)$0" -> "template(9)"	[label=Div];
	"score_i(9)$0" -> "chunk_size(9)$0"	[label=Div];
	"score_i(9)$0" -> "n(9)$0"	[label=Div];
	"score_i(9)$0" -> "b(9)$0"	[label=Div];
	"score_i(9)$0" -> "np(9)"	[label=Div];
	"score_i(9)$0" -> "1(9)"	[label=Div];
	"score_i(9)$0" -> "log(9)"	[label=Div];
	"score_i(9)$0" -> "0.5(9)"	[label=Div];
	"match_count(9)$1" -> "match_count(9)$0"	[label=Add];
	"match_count(9)$1" -> "1(9)"	[label=Add];
	"new_labels(9)$0" -> "b(9)$0"	[label=assignedFrom];
	"print[130/4]" -> "new_labels(9)$0"	[label=print];
	"print[130/4]" -> "new labels: \%s(9)"	[label=print];
	"labels(9)$0" -> "labels(9)"	[label=assignedFrom];
	"labels(9)$0" -> "new_labels(9)$0"	[label=assignedFrom];
	"n(10)$0" -> "198(10)"	[label=assignedFrom];
	"np(10)$0" -> "np(10)"	[label=seed];
	"np(10)$0" -> "2017(10)"	[label=seed];
	"idx(10)$0" -> "n(10)$0"	[label=arange];
	"idx(10)$0" -> "np(10)$0"	[label=arange];
	"np(10)$1" -> "np(10)$0"	[label=shuffle];
	"np(10)$1" -> "idx(10)$0"	[label=shuffle];
	"chunk_size(10)$0" -> "15(10)"	[label=assignedFrom];
	"template(10)$0" -> "n(10)$0"	[label=build_template];
	"template(10)$0" -> "chunk_size(10)$0"	[label=build_template];
	"template(10)$1" -> "np(10)$1"	[label=array];
	"template(10)$1" -> "template(10)$1"	[label=array];
	"template(10)$1" -> "truncate(10)"	[label=array];
	"template(10)$1" -> "x(10)"	[label=array];
	"labels(10)$0" -> "n(10)$0"	[label=zeros];
	"labels(10)$0" -> "np(10)$1"	[label=zeros];
	"labels(10)$1" -> "labels(10)$0"	[label=assignedFrom];
	"labels(10)$1" -> "1(10)"	[label=assignedFrom];
	"chunks(10)$0" -> "idx(10)$0"	[label=assignedFrom];
	"chunks(10)$0" -> "chunk_size(10)$0"	[label=assignedFrom];
	"chunks(10)$0" -> "i(10)"	[label=assignedFrom];
	"chunks(10)$0" -> "range(10)"	[label=assignedFrom];
	"chunks(10)$0" -> "0(10)"	[label=assignedFrom];
	"chunks(10)$0" -> "len(10)"	[label=assignedFrom];
	"i(10)" -> "chunks(10)$0"	[label=iteratorOf];
	"i(10)" -> "enumerate(10)"	[label=iteratorOf];
	"chunk(10)" -> "chunks(10)$0"	[label=iteratorOf];
	"chunk(10)" -> "enumerate(10)"	[label=iteratorOf];
	"t(10)$0" -> "template(10)$1"	[label=assignedFrom];
	"t(10)$0" -> "len(10)"	[label=assignedFrom];
	"t(10)$0" -> "chunk(10)"	[label=assignedFrom];
	"probs(10)$0" -> "n(10)$0"	[label=build_probs];
	"probs(10)$0" -> "chunk(10)"	[label=build_probs];
	"probs(10)$0" -> "t(10)$0"	[label=build_probs];
	"write_submit[178/8]" -> "i(10)"	[label=write_submit];
	"write_submit[178/8]" -> "probs(10)$0"	[label=write_submit];
	"write_submit[178/8]" -> "patient_ids(10)"	[label=write_submit];
	"write_submit[178/8]" -> "submissions/submission_\%02d.csv(10)"	[label=write_submit];
	"update_labels[182/12]" -> "labels(10)$1"	[label=update_labels];
	"update_labels[182/12]" -> "i(10)"	[label=update_labels];
	"update_labels[182/12]" -> "chunk(10)"	[label=update_labels];
	"update_labels[182/12]" -> "t(10)$0"	[label=update_labels];
	"update_labels[182/12]" -> "scores(10)"	[label=update_labels];
	"write_submit[186/16]" -> "labels(10)$1"	[label=write_submit];
	"write_submit[186/16]" -> "patient_ids(10)"	[label=write_submit];
	"write_submit[186/16]" -> "submissions/submission_fin.csv(10)"	[label=write_submit];
}
