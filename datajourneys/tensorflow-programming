strict digraph "" {
	"IPython.display" -> "tensorflow-programming.ipynb"	[label=importedBy];
	YouTubeVideo -> "IPython.display"	[label=importedBy];
	"YouTubeVideo(0)" -> "tensorflow-programming.ipynb"	[label=appearsIn];
	"YouTubeVideo(0)" -> YouTubeVideo	[label=assignedFrom];
	"sDG5tPtsbSA(0)" -> "tensorflow-programming.ipynb"	[label=appearsIn];
	"YouTubeVideo[3/0]" -> "sDG5tPtsbSA(0)"	[label=YouTubeVideo];
	"YouTubeVideo[3/0]" -> "800(0)"	[label=YouTubeVideo];
	"YouTubeVideo[3/0]" -> "450(0)"	[label=YouTubeVideo];
	"800(0)" -> "tensorflow-programming.ipynb"	[label=appearsIn];
	"450(0)" -> "tensorflow-programming.ipynb"	[label=appearsIn];
	"os.path" -> "tensorflow-programming.ipynb"	[label=importedBy];
	join -> "os.path"	[label=importedBy];
	"join(0)" -> "tensorflow-programming.ipynb"	[label=appearsIn];
	"join(0)" -> join	[label=assignedFrom];
	"../input/dog-breed-identification/train/(0)" -> "tensorflow-programming.ipynb"	[label=appearsIn];
	"image_dir(0)$0" -> "../input/dog-breed-identification/train/(0)"	[label=assignedFrom];
	"img_paths(0)$0" -> "join(0)"	[label=assignedFrom];
	"img_paths(0)$0" -> "image_dir(0)$0"	[label=assignedFrom];
	"img_paths(0)$0" -> "filename(0)"	[label=assignedFrom];
	"img_paths(0)$0" -> "[<_ast.Constant object at 0x7fd50080dc70>, <_ast.Constant object at 0x7fd50080df70>, <_ast.Constant object at 0x7fd50080d0d0>, <_\
ast.Constant object at 0x7fd50080d940>](0)"	[label=assignedFrom];
	"filename(0)" -> "tensorflow-programming.ipynb"	[label=appearsIn];
	"[<_ast.Constant object at 0x7fd50080dc70>, <_ast.Constant object at 0x7fd50080df70>, <_ast.Constant object at 0x7fd50080d0d0>, <_\
ast.Constant object at 0x7fd50080d940>](0)" -> "tensorflow-programming.ipynb"	[label=appearsIn];
	numpy -> "tensorflow-programming.ipynb"	[label=importedBy];
	"np(0)" -> "tensorflow-programming.ipynb"	[label=appearsIn];
	"np(0)" -> numpy	[label=assignedFrom];
	"tensorflow.python.keras.applications.resnet50" -> "tensorflow-programming.ipynb"	[label=importedBy];
	preprocess_input -> "tensorflow.python.keras.applications.resnet50"	[label=importedBy];
	"preprocess_input(0)" -> "tensorflow-programming.ipynb"	[label=appearsIn];
	"preprocess_input(0)" -> preprocess_input	[label=assignedFrom];
	"tensorflow.python.keras.preprocessing.image" -> "tensorflow-programming.ipynb"	[label=importedBy];
	load_img -> "tensorflow.python.keras.preprocessing.image"	[label=importedBy];
	"load_img(0)" -> "tensorflow-programming.ipynb"	[label=appearsIn];
	"load_img(0)" -> load_img	[label=assignedFrom];
	img_to_array -> "tensorflow.python.keras.preprocessing.image"	[label=importedBy];
	"img_to_array(0)" -> "tensorflow-programming.ipynb"	[label=appearsIn];
	"img_to_array(0)" -> img_to_array	[label=assignedFrom];
	"224(0)" -> "tensorflow-programming.ipynb"	[label=appearsIn];
	"image_size(0)$0" -> "224(0)"	[label=assignedFrom];
	"img_paths(1)" -> "read_and_prep_images[0]"	[label=_argToVar];
	"img_height(1)" -> "read_and_prep_images[1]"	[label=_argToVar];
	"img_width(1)" -> "read_and_prep_images[2]"	[label=_argToVar];
	"imgs(1)$0" -> "img_paths(1)"	[label=assignedFrom];
	"imgs(1)$0" -> "img_height(1)"	[label=assignedFrom];
	"imgs(1)$0" -> "img_width(1)"	[label=assignedFrom];
	"imgs(1)$0" -> "load_img(1)"	[label=assignedFrom];
	"imgs(1)$0" -> "img_path(1)"	[label=assignedFrom];
	"img_array(1)$0" -> "imgs(1)$0"	[label=array];
	"img_array(1)$0" -> "np(1)"	[label=array];
	"img_array(1)$0" -> "img_to_array(1)"	[label=array];
	"img_array(1)$0" -> "img(1)"	[label=array];
	"output(1)$0" -> "img_array(1)$0"	[label=preprocess_input];
	"tensorflow.python.keras.applications" -> "tensorflow-programming.ipynb"	[label=importedBy];
	ResNet50 -> "tensorflow.python.keras.applications"	[label=importedBy];
	"ResNet50(0)" -> "tensorflow-programming.ipynb"	[label=appearsIn];
	"ResNet50(0)" -> ResNet50	[label=assignedFrom];
	"../input/resnet50/resnet50_weights_tf_dim_ordering_tf_kernels.h5(0)" -> "tensorflow-programming.ipynb"	[label=appearsIn];
	"my_model(0)$0" -> "../input/resnet50/resnet50_weights_tf_dim_ordering_tf_kernels.h5(0)"	[label=ResNet50];
	"test_data(0)$0" -> "img_paths(0)$0"	[label=read_and_prep_images];
	"preds(0)$0" -> "my_model(0)$0"	[label=predict];
	"preds(0)$0" -> "test_data(0)$0"	[label=predict];
	"learntools.deep_learning.decode_predictions" -> "tensorflow-programming.ipynb"	[label=importedBy];
	decode_predictions -> "learntools.deep_learning.decode_predictions"	[label=importedBy];
	"decode_predictions(0)" -> "tensorflow-programming.ipynb"	[label=appearsIn];
	"decode_predictions(0)" -> decode_predictions	[label=assignedFrom];
	Image -> "IPython.display"	[label=importedBy];
	"Image(0)" -> "tensorflow-programming.ipynb"	[label=appearsIn];
	"Image(0)" -> Image	[label=assignedFrom];
	display -> "IPython.display"	[label=importedBy];
	"display(0)" -> "tensorflow-programming.ipynb"	[label=appearsIn];
	"display(0)" -> display	[label=assignedFrom];
	"most_likely_labels(0)$0" -> "preds(0)$0"	[label=decode_predictions];
	"most_likely_labels(0)$0" -> "3(0)"	[label=decode_predictions];
	"most_likely_labels(0)$0" -> "../input/resnet50/imagenet_class_index.json(0)"	[label=decode_predictions];
	"3(0)" -> "tensorflow-programming.ipynb"	[label=appearsIn];
	"../input/resnet50/imagenet_class_index.json(0)" -> "tensorflow-programming.ipynb"	[label=appearsIn];
	"enumerate(0)" -> "tensorflow-programming.ipynb"	[label=appearsIn];
	"i(0)" -> "tensorflow-programming.ipynb"	[label=appearsIn];
	"i(0)" -> "img_paths(0)$0"	[label=iteratorOf];
	"i(0)" -> "enumerate(0)"	[label=iteratorOf];
	"img_path(0)" -> "tensorflow-programming.ipynb"	[label=appearsIn];
	"img_path(0)" -> "img_paths(0)$0"	[label=iteratorOf];
	"img_path(0)" -> "enumerate(0)"	[label=iteratorOf];
	"display[34/4]" -> "Image(0)"	[label=display];
	"display[34/4]" -> "img_path(0)"	[label=display];
	"print[35/4]" -> "most_likely_labels(0)$0"	[label=print];
	"print[35/4]" -> "i(0)"	[label=print];
}
