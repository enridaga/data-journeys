digraph "" {
	pandas -> "use-classifier-with-tf2-0-gradient-tape.ipynb"	[label=importedBy];
	"pd(0)" -> pandas	[label=assignedFrom];
	"pd(0)" -> "use-classifier-with-tf2-0-gradient-tape.ipynb"	[label=appearsIn];
	numpy -> "use-classifier-with-tf2-0-gradient-tape.ipynb"	[label=importedBy];
	"np(0)" -> "use-classifier-with-tf2-0-gradient-tape.ipynb"	[label=appearsIn];
	"np(0)" -> numpy	[label=assignedFrom];
	"sklearn.model_selection" -> "use-classifier-with-tf2-0-gradient-tape.ipynb"	[label=importedBy];
	GroupKFold -> "sklearn.model_selection"	[label=importedBy];
	"GroupKFold(0)" -> "use-classifier-with-tf2-0-gradient-tape.ipynb"	[label=appearsIn];
	"GroupKFold(0)" -> GroupKFold	[label=assignedFrom];
	"matplotlib.pyplot" -> "use-classifier-with-tf2-0-gradient-tape.ipynb"	[label=importedBy];
	"plt(0)" -> "use-classifier-with-tf2-0-gradient-tape.ipynb"	[label=appearsIn];
	"plt(0)" -> "matplotlib.pyplot"	[label=assignedFrom];
	"tqdm.notebook" -> "use-classifier-with-tf2-0-gradient-tape.ipynb"	[label=importedBy];
	tqdm -> "tqdm.notebook"	[label=importedBy];
	"tqdm(0)" -> "use-classifier-with-tf2-0-gradient-tape.ipynb"	[label=appearsIn];
	"tqdm(0)" -> tqdm	[label=assignedFrom];
	re -> "use-classifier-with-tf2-0-gradient-tape.ipynb"	[label=importedBy];
	"re(0)" -> "use-classifier-with-tf2-0-gradient-tape.ipynb"	[label=appearsIn];
	"re(0)" -> re	[label=assignedFrom];
	tensorflow_hub -> "use-classifier-with-tf2-0-gradient-tape.ipynb"	[label=importedBy];
	"hub(0)" -> "use-classifier-with-tf2-0-gradient-tape.ipynb"	[label=appearsIn];
	"hub(0)" -> tensorflow_hub	[label=assignedFrom];
	tensorflow -> "use-classifier-with-tf2-0-gradient-tape.ipynb"	[label=importedBy];
	"tf(0)" -> "use-classifier-with-tf2-0-gradient-tape.ipynb"	[label=appearsIn];
	"tf(0)" -> tensorflow	[label=assignedFrom];
	gc -> "use-classifier-with-tf2-0-gradient-tape.ipynb"	[label=importedBy];
	"gc(0)" -> "use-classifier-with-tf2-0-gradient-tape.ipynb"	[label=appearsIn];
	"gc(0)" -> gc	[label=assignedFrom];
	os -> "use-classifier-with-tf2-0-gradient-tape.ipynb"	[label=importedBy];
	"os(0)" -> "use-classifier-with-tf2-0-gradient-tape.ipynb"	[label=appearsIn];
	"os(0)" -> os	[label=assignedFrom];
	"scipy.stats" -> "use-classifier-with-tf2-0-gradient-tape.ipynb"	[label=importedBy];
	spearmanr -> "scipy.stats"	[label=importedBy];
	"spearmanr(0)" -> "use-classifier-with-tf2-0-gradient-tape.ipynb"	[label=appearsIn];
	"spearmanr(0)" -> spearmanr	[label=assignedFrom];
	math -> "use-classifier-with-tf2-0-gradient-tape.ipynb"	[label=importedBy];
	floor -> math	[label=importedBy];
	"floor(0)" -> "use-classifier-with-tf2-0-gradient-tape.ipynb"	[label=appearsIn];
	"floor(0)" -> floor	[label=assignedFrom];
	ceil -> math	[label=importedBy];
	"ceil(0)" -> "use-classifier-with-tf2-0-gradient-tape.ipynb"	[label=appearsIn];
	"ceil(0)" -> ceil	[label=assignedFrom];
	"np(0)$0" -> "np(0)"	[label=set_printoptions];
	"../input/google-quest-challenge/(0)" -> "use-classifier-with-tf2-0-gradient-tape.ipynb"	[label=appearsIn];
	"PATH(0)$0" -> "../input/google-quest-challenge/(0)"	[label=assignedFrom];
	"df_train(0)$0" -> "pd(0)"	[label=read_csv];
	"df_train(0)$0" -> "PATH(0)$0"	[label=read_csv];
	"df_train(0)$0" -> "train.csv(0)"	[label=read_csv];
	"train.csv(0)" -> "use-classifier-with-tf2-0-gradient-tape.ipynb"	[label=appearsIn];
	"df_test(0)$0" -> "pd(0)"	[label=read_csv];
	"df_test(0)$0" -> "PATH(0)$0"	[label=read_csv];
	"df_test(0)$0" -> "test.csv(0)"	[label=read_csv];
	"test.csv(0)" -> "use-classifier-with-tf2-0-gradient-tape.ipynb"	[label=appearsIn];
	"df_sub(0)$0" -> "pd(0)"	[label=read_csv];
	"df_sub(0)$0" -> "PATH(0)$0"	[label=read_csv];
	"df_sub(0)$0" -> "sample_submission.csv(0)"	[label=read_csv];
	"sample_submission.csv(0)" -> "use-classifier-with-tf2-0-gradient-tape.ipynb"	[label=appearsIn];
	"train shape =(0)" -> "use-classifier-with-tf2-0-gradient-tape.ipynb"	[label=appearsIn];
	"print[21/0]" -> "df_train(0)$0"	[label=print];
	"print[21/0]" -> "train shape =(0)"	[label=print];
	"test shape =(0)" -> "use-classifier-with-tf2-0-gradient-tape.ipynb"	[label=appearsIn];
	"print[22/0]" -> "df_test(0)$0"	[label=print];
	"print[22/0]" -> "test shape =(0)"	[label=print];
	"output_categories(0)$0" -> "df_train(0)$0"	[label=list];
	"output_categories(0)$0" -> "11(0)"	[label=list];
	"11(0)" -> "use-classifier-with-tf2-0-gradient-tape.ipynb"	[label=appearsIn];
	"input_categories(0)$0" -> "df_train(0)$0"	[label=list];
	"input_categories(0)$0" -> "[<_ast.Constant object at 0x7fd50080d160>, <_ast.Constant object at 0x7fd50080de50>, <_ast.Constant object at 0x7fd50080dfa0>, <_\
ast.Constant object at 0x7fd50080d4c0>, <_ast.Constant object at 0x7fd50080db20>](0)"	[label=list];
	"[<_ast.Constant object at 0x7fd50080d160>, <_ast.Constant object at 0x7fd50080de50>, <_ast.Constant object at 0x7fd50080dfa0>, <_\
ast.Constant object at 0x7fd50080d4c0>, <_ast.Constant object at 0x7fd50080db20>](0)" -> "use-classifier-with-tf2-0-gradient-tape.ipynb"	[label=appearsIn];
	"
output categories:
	(0)" -> "use-classifier-with-tf2-0-gradient-tape.ipynb"	[label=appearsIn];
	"print[26/0]" -> "output_categories(0)$0"	[label=print];
	"print[26/0]" -> "
output categories:
	(0)"	[label=print];
	"
input categories:
	(0)" -> "use-classifier-with-tf2-0-gradient-tape.ipynb"	[label=appearsIn];
	"print[27/0]" -> "input_categories(0)$0"	[label=print];
	"print[27/0]" -> "
input categories:
	(0)"	[label=print];
	"df(1)" -> "convert_to_use_vectors[0]"	[label=_argToVar];
	"embed(1)" -> "convert_to_use_vectors[1]"	[label=_argToVar];
	"t(1)$0" -> "df(1)"	[label=empty];
	"t(1)$0" -> "np(1)"	[label=empty];
	"t(1)$0" -> "len(1)"	[label=empty];
	"t(1)$0" -> "512(1)"	[label=empty];
	"q(1)$0" -> "df(1)"	[label=empty];
	"q(1)$0" -> "np(1)"	[label=empty];
	"q(1)$0" -> "len(1)"	[label=empty];
	"q(1)$0" -> "512(1)"	[label=empty];
	"a(1)$0" -> "df(1)"	[label=empty];
	"a(1)$0" -> "np(1)"	[label=empty];
	"a(1)$0" -> "len(1)"	[label=empty];
	"a(1)$0" -> "512(1)"	[label=empty];
	"i(1)" -> "df(1)"	[label=iteratorOf];
	"i(1)" -> "tqdm(1)"	[label=iteratorOf];
	"instance(1)" -> "df(1)"	[label=iteratorOf];
	"instance(1)" -> "tqdm(1)"	[label=iteratorOf];
	"t(1)$1" -> "embed(1)"	[label=flatten];
	"t(1)$1" -> "t(1)$0"	[label=flatten];
	"t(1)$1" -> "[<_ast.Call object at 0x7fd4902ab730>](1)"	[label=flatten];
	"t(1)$1" -> "outputs(1)"	[label=flatten];
	"q(1)$1" -> "embed(1)"	[label=flatten];
	"q(1)$1" -> "q(1)$0"	[label=flatten];
	"q(1)$1" -> "outputs(1)"	[label=flatten];
	"q(1)$1" -> "[<_ast.Call object at 0x7fd4c04ff130>](1)"	[label=flatten];
	"a(1)$1" -> "embed(1)"	[label=flatten];
	"a(1)$1" -> "a(1)$0"	[label=flatten];
	"a(1)$1" -> "outputs(1)"	[label=flatten];
	"a(1)$1" -> "[<_ast.Call object at 0x7fd4c04ffbb0>](1)"	[label=flatten];
	"embed(0)$0" -> "hub(0)"	[label=load];
	"embed(0)$0" -> "../input/universalsentenceencoderlarge4/(0)"	[label=load];
	"../input/universalsentenceencoderlarge4/(0)" -> "use-classifier-with-tf2-0-gradient-tape.ipynb"	[label=appearsIn];
	"train_t(0)$0" -> "df_train(0)$0"	[label=convert_to_use_vectors];
	"train_t(0)$0" -> "embed(0)$0"	[label=convert_to_use_vectors];
	"train_q(0)$0" -> "df_train(0)$0"	[label=convert_to_use_vectors];
	"train_q(0)$0" -> "embed(0)$0"	[label=convert_to_use_vectors];
	"train_a(0)$0" -> "df_train(0)$0"	[label=convert_to_use_vectors];
	"train_a(0)$0" -> "embed(0)$0"	[label=convert_to_use_vectors];
	"test_t(0)$0" -> "df_test(0)$0"	[label=convert_to_use_vectors];
	"test_t(0)$0" -> "embed(0)$0"	[label=convert_to_use_vectors];
	"test_q(0)$0" -> "df_test(0)$0"	[label=convert_to_use_vectors];
	"test_q(0)$0" -> "embed(0)$0"	[label=convert_to_use_vectors];
	"test_a(0)$0" -> "df_test(0)$0"	[label=convert_to_use_vectors];
	"test_a(0)$0" -> "embed(0)$0"	[label=convert_to_use_vectors];
	"train(2)" -> "onehot_features[0]"	[label=_argToVar];
	"test(2)" -> "onehot_features[1]"	[label=_argToVar];
	"column(2)" -> "onehot_features[2]"	[label=_argToVar];
	"pandas.api.types" -> "use-classifier-with-tf2-0-gradient-tape.ipynb"	[label=importedBy];
	CategoricalDtype -> "pandas.api.types"	[label=importedBy];
	"CategoricalDtype(2)" -> CategoricalDtype	[label=assignedFrom];
	"categories(2)$0" -> "train(2)"	[label=unique];
	"categories(2)$0" -> "column(2)"	[label=unique];
	"train(2)$0" -> "train(2)"	[label=astype];
	"train(2)$0" -> "column(2)"	[label=astype];
	"train(2)$0" -> "CategoricalDtype(2)"	[label=astype];
	"train(2)$0" -> "categories(2)$0"	[label=astype];
	"test(2)$0" -> "test(2)"	[label=astype];
	"test(2)$0" -> "column(2)"	[label=astype];
	"test(2)$0" -> "CategoricalDtype(2)"	[label=astype];
	"test(2)$0" -> "categories(2)$0"	[label=astype];
	"train(2)$1" -> "column(2)"	[label=get_dummies];
	"train(2)$1" -> "train(2)$1"	[label=get_dummies];
	"train(2)$1" -> "pd(2)"	[label=get_dummies];
	"test(2)$1" -> "column(2)"	[label=get_dummies];
	"test(2)$1" -> "pd(2)"	[label=get_dummies];
	"test(2)$1" -> "test(2)$1"	[label=get_dummies];
	"train_category(0)$0" -> "df_train(0)$0"	[label=onehot_features];
	"train_category(0)$0" -> "df_test(0)$0"	[label=onehot_features];
	"train_category(0)$0" -> "category(0)"	[label=onehot_features];
	"category(0)" -> "use-classifier-with-tf2-0-gradient-tape.ipynb"	[label=appearsIn];
	"test_category(0)$0" -> "df_train(0)$0"	[label=onehot_features];
	"test_category(0)$0" -> "df_test(0)$0"	[label=onehot_features];
	"test_category(0)$0" -> "category(0)"	[label=onehot_features];
	"train_category(0)$1" -> "np(0)$0"	[label=asarray];
	"train_category(0)$1" -> "train_category(0)$1"	[label=asarray];
	"test_category(0)$1" -> "np(0)$0"	[label=asarray];
	"test_category(0)$1" -> "test_category(0)$1"	[label=asarray];
	"train category one hot shape = {}(0)" -> "use-classifier-with-tf2-0-gradient-tape.ipynb"	[label=appearsIn];
	"print[57/0]" -> "train_category(0)$1"	[label=print];
	"print[57/0]" -> "train category one hot shape = {}(0)"	[label=print];
	"test category one hot shape = {}(0)" -> "use-classifier-with-tf2-0-gradient-tape.ipynb"	[label=appearsIn];
	"print[58/0]" -> "test_category(0)$1"	[label=print];
	"print[58/0]" -> "test category one hot shape = {}(0)"	[label=print];
	"train_host(0)$0" -> "df_train(0)$0"	[label=onehot_features];
	"train_host(0)$0" -> "df_test(0)$0"	[label=onehot_features];
	"train_host(0)$0" -> "host(0)"	[label=onehot_features];
	"host(0)" -> "use-classifier-with-tf2-0-gradient-tape.ipynb"	[label=appearsIn];
	"test_host(0)$0" -> "df_train(0)$0"	[label=onehot_features];
	"test_host(0)$0" -> "df_test(0)$0"	[label=onehot_features];
	"test_host(0)$0" -> "host(0)"	[label=onehot_features];
	"train_host(0)$1" -> "np(0)$0"	[label=asarray];
	"train_host(0)$1" -> "train_host(0)$1"	[label=asarray];
	"test_host(0)$1" -> "np(0)$0"	[label=asarray];
	"test_host(0)$1" -> "test_host(0)$1"	[label=asarray];
	"train host one hot shape = {}(0)" -> "use-classifier-with-tf2-0-gradient-tape.ipynb"	[label=appearsIn];
	"print[64/0]" -> "train_host(0)$1"	[label=print];
	"print[64/0]" -> "train host one hot shape = {}(0)"	[label=print];
	"test host one hot shape = {}(0)" -> "use-classifier-with-tf2-0-gradient-tape.ipynb"	[label=appearsIn];
	"print[65/0]" -> "test_host(0)$1"	[label=print];
	"print[65/0]" -> "test host one hot shape = {}(0)"	[label=print];
	"trues(3)" -> "compute_spearmanr[0]"	[label=_argToVar];
	"preds(3)" -> "compute_spearmanr[1]"	[label=_argToVar];
	"rhos(3)$0" -> "[](3)"	[label=assignedFrom];
	"tcol(3)" -> "trues(3)"	[label=iteratorOf];
	"tcol(3)" -> "preds(3)"	[label=iteratorOf];
	"tcol(3)" -> "zip(3)"	[label=iteratorOf];
	"tcol(3)" -> "np(3)"	[label=iteratorOf];
	"pcol(3)" -> "trues(3)"	[label=iteratorOf];
	"pcol(3)" -> "preds(3)"	[label=iteratorOf];
	"pcol(3)" -> "zip(3)"	[label=iteratorOf];
	"pcol(3)" -> "np(3)"	[label=iteratorOf];
	"rho(3)$0" -> "tcol(3)"	[label=spearmanr];
	"rho(3)$0" -> "np(3)"	[label=spearmanr];
	"rho(3)$0" -> "pcol(3)"	[label=spearmanr];
	"rho(3)$0" -> "0(3)"	[label=spearmanr];
	"rho(3)$0" -> "1e-07(3)"	[label=spearmanr];
	"rhos(3)$1" -> "rhos(3)$0"	[label=append];
	"rhos(3)$1" -> "rho(3)$0"	[label=append];
	"init(4)" -> "initialize_weights[0]"	[label=_argToVar];
	"shape(4)" -> "initialize_weights[1]"	[label=_argToVar];
	"W(4)$0" -> "init(4)"	[label=Variable];
	"W(4)$0" -> "shape(4)"	[label=Variable];
	"W(4)$0" -> "tf(4)"	[label=Variable];
	"b(4)$0" -> "tf(4)"	[label=Variable];
	"b(4)$0" -> "0.0(4)"	[label=Variable];
	"x(5)" -> "dense_hidden[0]"	[label=_argToVar];
	"w(5)" -> "dense_hidden[1]"	[label=_argToVar];
	"b(5)" -> "dense_hidden[2]"	[label=_argToVar];
	"dropout_rate(5)" -> "dense_hidden[3]"	[label=_argToVar];
	"training(5)" -> "dense_hidden[4]"	[label=_argToVar];
	"x(5)$0" -> "w(5)"	[label=Add];
	"x(5)$0" -> "b(5)"	[label=Add];
	"x(5)$0" -> "x(5)$0"	[label=Add];
	"x(5)$0" -> "tf(5)"	[label=Add];
	"x(5)$1" -> "tf(5)"	[label=relu];
	"x(5)$1" -> "x(5)$1"	[label=relu];
	"x(6)" -> "dense_output[0]"	[label=_argToVar];
	"w(6)" -> "dense_output[1]"	[label=_argToVar];
	"b(6)" -> "dense_output[2]"	[label=_argToVar];
	"x(6)$0" -> "w(6)"	[label=Add];
	"x(6)$0" -> "b(6)"	[label=Add];
	"x(6)$0" -> "x(6)$0"	[label=Add];
	"x(6)$0" -> "tf(6)"	[label=Add];
	"x(6)$1" -> "tf(6)"	[label=sigmoid];
	"x(6)$1" -> "x(6)$1"	[label=sigmoid];
	"self(8)" -> "__init__[0]"	[label=_argToVar];
	"inputs_units(8)" -> "__init__[1]"	[label=_argToVar];
	"dense_units(8)" -> "__init__[2]"	[label=_argToVar];
	"dropout_rates(8)" -> "__init__[3]"	[label=_argToVar];
	"aux_units(8)" -> "__init__[4]"	[label=_argToVar];
	"name(8)" -> "__init__[5]"	[label=_argToVar];
	"super(8)$0" -> "name(8)"	[label=__init__];
	"super(8)$0" -> "super(8)"	[label=__init__];
	"glorot(8)$0" -> "tf(8)"	[label=glorot_uniform];
	"self(8)$0" -> "self(8)"	[label=assignedFrom];
	"self(8)$0" -> "dropout_rates(8)"	[label=assignedFrom];
	"self(8)$1" -> "dense_units(8)"	[label=initialize_weights];
	"self(8)$1" -> "glorot(8)$0"	[label=initialize_weights];
	"self(8)$1" -> "self(8)$0"	[label=initialize_weights];
	"self(8)$1" -> "input_units(8)"	[label=initialize_weights];
	"self(8)$1" -> "0(8)"	[label=initialize_weights];
	"self(8)$2" -> "dense_units(8)"	[label=initialize_weights];
	"self(8)$2" -> "glorot(8)$0"	[label=initialize_weights];
	"self(8)$2" -> "self(8)$1"	[label=initialize_weights];
	"self(8)$2" -> "0(8)"	[label=initialize_weights];
	"self(8)$2" -> "1(8)"	[label=initialize_weights];
	"self(8)$3" -> "dense_units(8)"	[label=initialize_weights];
	"self(8)$3" -> "glorot(8)$0"	[label=initialize_weights];
	"self(8)$3" -> "0(8)"	[label=initialize_weights];
	"self(8)$3" -> "self(8)$2"	[label=initialize_weights];
	"self(8)$3" -> "2(8)"	[label=initialize_weights];
	"self(8)$4" -> "dense_units(8)"	[label=initialize_weights];
	"self(8)$4" -> "glorot(8)$0"	[label=initialize_weights];
	"self(8)$4" -> "0(8)"	[label=initialize_weights];
	"self(8)$4" -> "self(8)$3"	[label=initialize_weights];
	"self(8)$4" -> "3(8)"	[label=initialize_weights];
	"self(8)$5" -> "dense_units(8)"	[label=initialize_weights];
	"self(8)$5" -> "aux_units(8)"	[label=initialize_weights];
	"self(8)$5" -> "glorot(8)$0"	[label=initialize_weights];
	"self(8)$5" -> "1(8)"	[label=initialize_weights];
	"self(8)$5" -> "2(8)"	[label=initialize_weights];
	"self(8)$5" -> "self(8)$4"	[label=initialize_weights];
	"self(8)$5" -> "3(8)"	[label=initialize_weights];
	"self(8)$5" -> "4(8)"	[label=initialize_weights];
	"self(8)$6" -> "inputs_units(8)"	[label=initialize_weights];
	"self(8)$6" -> "aux_units(8)"	[label=initialize_weights];
	"self(8)$6" -> "glorot(8)$0"	[label=initialize_weights];
	"self(8)$6" -> "1(8)"	[label=initialize_weights];
	"self(8)$6" -> "self(8)$5"	[label=initialize_weights];
	"self(8)$7" -> "inputs_units(8)"	[label=initialize_weights];
	"self(8)$7" -> "aux_units(8)"	[label=initialize_weights];
	"self(8)$7" -> "glorot(8)$0"	[label=initialize_weights];
	"self(8)$7" -> "2(8)"	[label=initialize_weights];
	"self(8)$7" -> "self(8)$6"	[label=initialize_weights];
	"self(9)" -> "call[0]"	[label=_argToVar];
	"inputs(9)" -> "call[1]"	[label=_argToVar];
	"training(9)" -> "call[2]"	[label=_argToVar];
	"x0(9)$0" -> "self(9)"	[label=dense_hidden];
	"x0(9)$0" -> "inputs(9)"	[label=dense_hidden];
	"x0(9)$0" -> "training(9)"	[label=dense_hidden];
	"x0(9)$0" -> "0(9)"	[label=dense_hidden];
	"x1(9)$0" -> "self(9)"	[label=dense_hidden];
	"x1(9)$0" -> "inputs(9)"	[label=dense_hidden];
	"x1(9)$0" -> "training(9)"	[label=dense_hidden];
	"x1(9)$0" -> "0(9)"	[label=dense_hidden];
	"x1(9)$0" -> "1(9)"	[label=dense_hidden];
	"x2(9)$0" -> "self(9)"	[label=dense_hidden];
	"x2(9)$0" -> "inputs(9)"	[label=dense_hidden];
	"x2(9)$0" -> "training(9)"	[label=dense_hidden];
	"x2(9)$0" -> "0(9)"	[label=dense_hidden];
	"x2(9)$0" -> "2(9)"	[label=dense_hidden];
	"x0(9)$1" -> "self(9)"	[label=dense_hidden];
	"x0(9)$1" -> "training(9)"	[label=dense_hidden];
	"x0(9)$1" -> "x0(9)$0"	[label=dense_hidden];
	"x0(9)$1" -> "1(9)"	[label=dense_hidden];
	"x1(9)$1" -> "self(9)"	[label=dense_hidden];
	"x1(9)$1" -> "training(9)"	[label=dense_hidden];
	"x1(9)$1" -> "x1(9)$0"	[label=dense_hidden];
	"x1(9)$1" -> "2(9)"	[label=dense_hidden];
	"x2(9)$1" -> "self(9)"	[label=dense_hidden];
	"x2(9)$1" -> "training(9)"	[label=dense_hidden];
	"x2(9)$1" -> "x2(9)$0"	[label=dense_hidden];
	"x2(9)$1" -> "3(9)"	[label=dense_hidden];
	"x3(9)$0" -> "self(9)"	[label=dense_hidden];
	"x3(9)$0" -> "inputs(9)"	[label=dense_hidden];
	"x3(9)$0" -> "training(9)"	[label=dense_hidden];
	"x3(9)$0" -> "1(9)"	[label=dense_hidden];
	"x3(9)$0" -> "3(9)"	[label=dense_hidden];
	"x4(9)$0" -> "self(9)"	[label=dense_hidden];
	"x4(9)$0" -> "inputs(9)"	[label=dense_hidden];
	"x4(9)$0" -> "training(9)"	[label=dense_hidden];
	"x4(9)$0" -> "1(9)"	[label=dense_hidden];
	"x4(9)$0" -> "4(9)"	[label=dense_hidden];
	"x(9)$0" -> "1(9)"	[label=concat];
	"x(9)$0" -> "tf(9)"	[label=concat];
	"x(9)$0" -> "[<_ast.Name object at 0x7fd4c04ad280>, <_ast.Name object at 0x7fd4c04ad2b0>, <_ast.Name object at 0x7fd4c04ad2e0>, <_ast.Name object \
at 0x7fd4c04ad310>, <_ast.Name object at 0x7fd4c04ad340>](9)"	[label=concat];
	"inputs(10)" -> "create_dataset[0]"	[label=_argToVar];
	"outputs(10)" -> "create_dataset[1]"	[label=_argToVar];
	"batch_size(10)" -> "create_dataset[2]"	[label=_argToVar];
	"dataset_inputs(10)$0" -> "inputs(10)"	[label=from_tensor_slices];
	"dataset_inputs(10)$0" -> "tf(10)"	[label=from_tensor_slices];
	"dataset_outputs(10)$0" -> "outputs(10)"	[label=from_tensor_slices];
	"dataset_outputs(10)$0" -> "tf(10)"	[label=from_tensor_slices];
	"model(12)" -> "train_step[0]"	[label=_argToVar];
	"loss_function(12)" -> "train_step[1]"	[label=_argToVar];
	"optimizer(12)" -> "train_step[2]"	[label=_argToVar];
	"metric(12)" -> "train_step[3]"	[label=_argToVar];
	"x(12)" -> "train_step[4]"	[label=_argToVar];
	"y(12)" -> "train_step[5]"	[label=_argToVar];
	"pred(12)$0" -> "x(12)"	[label=model];
	"pred(12)$0" -> "True(12)"	[label=model];
	"loss(12)$0" -> "y(12)"	[label=loss_function];
	"loss(12)$0" -> "pred(12)$0"	[label=loss_function];
	"grad(12)$0" -> "model(12)"	[label=gradient];
	"grad(12)$0" -> "loss(12)$0"	[label=gradient];
	"grad(12)$0" -> "tape(12)"	[label=gradient];
	"optimizer(12)$0" -> "model(12)"	[label=apply_gradients];
	"optimizer(12)$0" -> "optimizer(12)"	[label=apply_gradients];
	"optimizer(12)$0" -> "grad(12)$0"	[label=apply_gradients];
	"optimizer(12)$0" -> "zip(12)"	[label=apply_gradients];
	"metric[165/8]" -> "y(12)"	[label=metric];
	"metric[165/8]" -> "pred(12)$0"	[label=metric];
	"model(13)" -> "train_and_predict[0]"	[label=_argToVar];
	"loss_function(13)" -> "train_and_predict[1]"	[label=_argToVar];
	"optimizer(13)" -> "train_and_predict[2]"	[label=_argToVar];
	"metric(13)" -> "train_and_predict[3]"	[label=_argToVar];
	"train_dataset(13)" -> "train_and_predict[4]"	[label=_argToVar];
	"valid_dataset(13)" -> "train_and_predict[5]"	[label=_argToVar];
	"test_dataset(13)" -> "train_and_predict[6]"	[label=_argToVar];
	"num_epochs(13)" -> "train_and_predict[7]"	[label=_argToVar];
	"valid_snapshot_preds(13)$0" -> "[](13)"	[label=assignedFrom];
	"test_snapshot_preds(13)$0" -> "[](13)"	[label=assignedFrom];
	"train_scores(13)$0" -> "[<_ast.Constant object at 0x7fd500810190>](13)"	[label=assignedFrom];
	"train_scores(13)$0" -> "[<_ast.Constant object at 0x7fd5008101f0>](13)"	[label=assignedFrom];
	"valid_scores(13)$0" -> "[<_ast.Constant object at 0x7fd500810190>](13)"	[label=assignedFrom];
	"valid_scores(13)$0" -> "[<_ast.Constant object at 0x7fd5008101f0>](13)"	[label=assignedFrom];
	"epoch(13)" -> "num_epochs(13)"	[label=iteratorOf];
	"epoch(13)" -> "range(13)"	[label=iteratorOf];
	"print[178/8]" -> "epoch(13)"	[label=print];
	"print[178/8]" -> "
epoch \%03d(13)"	[label=print];
	"print[178/8]" -> "1(13)"	[label=print];
	"epoch_loss(13)$0" -> "0.0(13)"	[label=assignedFrom];
	"train_preds(13)$0" -> "np(13)"	[label=assignedFrom];
	"train_preds(13)$0" -> "0(13)"	[label=assignedFrom];
	"train_preds(13)$0" -> "30(13)"	[label=assignedFrom];
	"train_trues(13)$0" -> "np(13)"	[label=assignedFrom];
	"train_trues(13)$0" -> "0(13)"	[label=assignedFrom];
	"train_trues(13)$0" -> "30(13)"	[label=assignedFrom];
	"batch(13)" -> "train_dataset(13)"	[label=iteratorOf];
	"batch(13)" -> "enumerate(13)"	[label=iteratorOf];
	"x_train(13)" -> "train_dataset(13)"	[label=iteratorOf];
	"x_train(13)" -> "enumerate(13)"	[label=iteratorOf];
	"y_train(13)" -> "train_dataset(13)"	[label=iteratorOf];
	"y_train(13)" -> "enumerate(13)"	[label=iteratorOf];
	"loss(13)$0" -> "model(13)"	[label=train_step];
	"loss(13)$0" -> "loss_function(13)"	[label=train_step];
	"loss(13)$0" -> "optimizer(13)"	[label=train_step];
	"loss(13)$0" -> "metric(13)"	[label=train_step];
	"loss(13)$0" -> "x_train(13)"	[label=train_step];
	"loss(13)$0" -> "y_train(13)"	[label=train_step];
	"pred(13)$0" -> "model(13)"	[label=train_step];
	"pred(13)$0" -> "loss_function(13)"	[label=train_step];
	"pred(13)$0" -> "optimizer(13)"	[label=train_step];
	"pred(13)$0" -> "metric(13)"	[label=train_step];
	"pred(13)$0" -> "x_train(13)"	[label=train_step];
	"pred(13)$0" -> "y_train(13)"	[label=train_step];
	"epoch_loss(13)$1" -> "epoch_loss(13)$0"	[label=Add];
	"epoch_loss(13)$1" -> "loss(13)$0"	[label=Add];
	"train_trues(13)$1" -> "np(13)"	[label=append];
	"train_trues(13)$1" -> "0(13)"	[label=append];
	"train_trues(13)$1" -> "y_train(13)"	[label=append];
	"train_trues(13)$1" -> "train_trues(13)$1"	[label=append];
	"train_preds(13)$1" -> "np(13)"	[label=append];
	"train_preds(13)$1" -> "0(13)"	[label=append];
	"train_preds(13)$1" -> "pred(13)$0"	[label=append];
	"train_preds(13)$1" -> "train_preds(13)$1"	[label=append];
	"print[189/12]" -> "metric(13)"	[label=print];
	"print[189/12]" -> "train_scores(13)$0"	[label=print];
	"print[189/12]" -> "valid_scores(13)$0"	[label=print];
	"print[189/12]" -> "1(13)"	[label=print];
	"print[189/12]" -> "batch(13)"	[label=print];
	"print[189/12]" -> "epoch_loss(13)$1"	[label=print];
	"print[189/12]" -> "batch {:03d} : train loss {:.3f} : train cosine {:.3f} : train spearman {:.3f} : valid spearman {:.3f}(13)"	[label=print];
	"print[189/12]" -> "
(13)"	[label=print];
	"train_scores(13)$1" -> "train_scores(13)$0"	[label=append];
	"train_scores(13)$1" -> "train_trues(13)$1"	[label=append];
	"train_scores(13)$1" -> "train_preds(13)$1"	[label=append];
	"train_scores(13)$1" -> "compute_spearmanr(13)"	[label=append];
	"dropout_preds(13)$0" -> "[](13)"	[label=assignedFrom];
	"_(13)" -> "range(13)"	[label=iteratorOf];
	"_(13)" -> "30(13)"	[label=iteratorOf];
	"valid_preds(13)$0" -> "np(13)"	[label=assignedFrom];
	"valid_preds(13)$0" -> "0(13)"	[label=assignedFrom];
	"valid_preds(13)$0" -> "30(13)"	[label=assignedFrom];
	"valid_trues(13)$0" -> "np(13)"	[label=assignedFrom];
	"valid_trues(13)$0" -> "0(13)"	[label=assignedFrom];
	"valid_trues(13)$0" -> "30(13)"	[label=assignedFrom];
	"x_val(13)" -> "valid_dataset(13)"	[label=iteratorOf];
	"y_val(13)" -> "valid_dataset(13)"	[label=iteratorOf];
	"valid_preds(13)$1" -> "model(13)"	[label=append];
	"valid_preds(13)$1" -> "np(13)"	[label=append];
	"valid_preds(13)$1" -> "0(13)"	[label=append];
	"valid_preds(13)$1" -> "x_val(13)"	[label=append];
	"valid_preds(13)$1" -> "valid_preds(13)$1"	[label=append];
	"valid_preds(13)$1" -> "True(13)"	[label=append];
	"valid_trues(13)$1" -> "np(13)"	[label=append];
	"valid_trues(13)$1" -> "0(13)"	[label=append];
	"valid_trues(13)$1" -> "y_val(13)"	[label=append];
	"valid_trues(13)$1" -> "valid_trues(13)$1"	[label=append];
	"dropout_preds(13)$1" -> "dropout_preds(13)$0"	[label=append];
	"dropout_preds(13)$1" -> "valid_preds(13)$1"	[label=append];
	"valid_snapshot_preds(13)$1" -> "valid_snapshot_preds(13)$0"	[label=append];
	"valid_snapshot_preds(13)$1" -> "np(13)"	[label=append];
	"valid_snapshot_preds(13)$1" -> "0(13)"	[label=append];
	"valid_snapshot_preds(13)$1" -> "dropout_preds(13)$1"	[label=append];
	"valid_scores(13)$1" -> "valid_scores(13)$0"	[label=append];
	"valid_scores(13)$1" -> "np(13)"	[label=append];
	"valid_scores(13)$1" -> "0(13)"	[label=append];
	"valid_scores(13)$1" -> "compute_spearmanr(13)"	[label=append];
	"valid_scores(13)$1" -> "valid_trues(13)$1"	[label=append];
	"valid_scores(13)$1" -> "valid_snapshot_preds(13)$1"	[label=append];
	"print[206/8]" -> "metric(13)"	[label=print];
	"print[206/8]" -> "1(13)"	[label=print];
	"print[206/8]" -> "batch(13)"	[label=print];
	"print[206/8]" -> "epoch_loss(13)$1"	[label=print];
	"print[206/8]" -> "batch {:03d} : train loss {:.3f} : train cosine {:.3f} : train spearman {:.3f} : valid spearman {:.3f}(13)"	[label=print];
	"print[206/8]" -> "
(13)"	[label=print];
	"print[206/8]" -> "train_scores(13)$1"	[label=print];
	"print[206/8]" -> "valid_scores(13)$1"	[label=print];
	"metric(13)$0" -> "metric(13)"	[label=reset_states];
	"dropout_preds(13)$2" -> "[](13)"	[label=assignedFrom];
	"test_preds(13)$0" -> "np(13)"	[label=empty];
	"test_preds(13)$0" -> "0(13)"	[label=empty];
	"test_preds(13)$0" -> "30(13)"	[label=empty];
	"x_test(13)" -> "test_dataset(13)"	[label=iteratorOf];
	"test_preds(13)$1" -> "model(13)"	[label=append];
	"test_preds(13)$1" -> "np(13)"	[label=append];
	"test_preds(13)$1" -> "0(13)"	[label=append];
	"test_preds(13)$1" -> "True(13)"	[label=append];
	"test_preds(13)$1" -> "x_test(13)"	[label=append];
	"test_preds(13)$1" -> "test_preds(13)$1"	[label=append];
	"dropout_preds(13)$3" -> "dropout_preds(13)$2"	[label=append];
	"dropout_preds(13)$3" -> "test_preds(13)$1"	[label=append];
	"test_snapshot_preds(13)$1" -> "test_snapshot_preds(13)$0"	[label=append];
	"test_snapshot_preds(13)$1" -> "np(13)"	[label=append];
	"test_snapshot_preds(13)$1" -> "0(13)"	[label=append];
	"test_snapshot_preds(13)$1" -> "dropout_preds(13)$3"	[label=append];
	"[<_ast.Constant object at 0x7fd500822220>, <_ast.Constant object at 0x7fd500822250>, <_ast.Constant object at 0x7fd500822280>](0)" -> "use-classifier-with-tf2-0-gradient-tape.ipynb"	[label=appearsIn];
	"input_units(0)$0" -> "[<_ast.Constant object at 0x7fd500822220>, <_ast.Constant object at 0x7fd500822250>, <_ast.Constant object at 0x7fd500822280>](0)"	[label=assignedFrom];
	"[<_ast.Constant object at 0x7fd500822370>, <_ast.Constant object at 0x7fd5008223a0>, <_ast.Constant object at 0x7fd5008223d0>, <_\
ast.Constant object at 0x7fd500822400>, <_ast.Constant object at 0x7fd500822430>](0)" -> "use-classifier-with-tf2-0-gradient-tape.ipynb"	[label=appearsIn];
	"dense_units(0)$0" -> "[<_ast.Constant object at 0x7fd500822370>, <_ast.Constant object at 0x7fd5008223a0>, <_ast.Constant object at 0x7fd5008223d0>, <_\
ast.Constant object at 0x7fd500822400>, <_ast.Constant object at 0x7fd500822430>](0)"	[label=assignedFrom];
	"256(0)" -> "use-classifier-with-tf2-0-gradient-tape.ipynb"	[label=appearsIn];
	"aux_units(0)$0" -> "256(0)"	[label=assignedFrom];
	"[<_ast.Constant object at 0x7fd500822580>, <_ast.Constant object at 0x7fd5008225b0>, <_ast.Constant object at 0x7fd5008225e0>, <_\
ast.Constant object at 0x7fd500822610>](0)" -> "use-classifier-with-tf2-0-gradient-tape.ipynb"	[label=appearsIn];
	"dropout_rates(0)$0" -> "[<_ast.Constant object at 0x7fd500822580>, <_ast.Constant object at 0x7fd5008225b0>, <_ast.Constant object at 0x7fd5008225e0>, <_\
ast.Constant object at 0x7fd500822610>](0)"	[label=assignedFrom];
	"5(0)" -> "use-classifier-with-tf2-0-gradient-tape.ipynb"	[label=appearsIn];
	"num_folds(0)$0" -> "5(0)"	[label=assignedFrom];
	"12(0)" -> "use-classifier-with-tf2-0-gradient-tape.ipynb"	[label=appearsIn];
	"num_epochs(0)$0" -> "12(0)"	[label=assignedFrom];
	"0.0005(0)" -> "use-classifier-with-tf2-0-gradient-tape.ipynb"	[label=appearsIn];
	"learning_rate(0)$0" -> "0.0005(0)"	[label=assignedFrom];
	"64(0)" -> "use-classifier-with-tf2-0-gradient-tape.ipynb"	[label=appearsIn];
	"batch_size(0)$0" -> "64(0)"	[label=assignedFrom];
	"None(0)" -> "use-classifier-with-tf2-0-gradient-tape.ipynb"	[label=appearsIn];
	"model(0)$0" -> "None(0)"	[label=assignedFrom];
	"optimizer(0)$0" -> "tf(0)"	[label=Adam];
	"optimizer(0)$0" -> "learning_rate(0)$0"	[label=Adam];
	"loss_function(0)$0" -> "tf(0)"	[label=BinaryCrossentropy];
	"metric(0)$0" -> "tf(0)"	[label=CosineSimilarity];
	"gkf(0)$0" -> "GroupKFold(0)"	[label=split];
	"gkf(0)$0" -> "df_train(0)$0"	[label=split];
	"gkf(0)$0" -> "num_folds(0)$0"	[label=split];
	"[](0)" -> "use-classifier-with-tf2-0-gradient-tape.ipynb"	[label=appearsIn];
	"valid_fold_predictions(0)$0" -> "[](0)"	[label=assignedFrom];
	"test_fold_predictions(0)$0" -> "[](0)"	[label=assignedFrom];
	"train_fold_scores(0)$0" -> "[](0)"	[label=assignedFrom];
	"valid_fold_scores(0)$0" -> "[](0)"	[label=assignedFrom];
	"enumerate(0)" -> "use-classifier-with-tf2-0-gradient-tape.ipynb"	[label=appearsIn];
	"fold(0)" -> "use-classifier-with-tf2-0-gradient-tape.ipynb"	[label=appearsIn];
	"fold(0)" -> "gkf(0)$0"	[label=iteratorOf];
	"fold(0)" -> "enumerate(0)"	[label=iteratorOf];
	"train_idx(0)" -> "use-classifier-with-tf2-0-gradient-tape.ipynb"	[label=appearsIn];
	"train_idx(0)" -> "gkf(0)$0"	[label=iteratorOf];
	"train_idx(0)" -> "enumerate(0)"	[label=iteratorOf];
	"valid_idx(0)" -> "use-classifier-with-tf2-0-gradient-tape.ipynb"	[label=appearsIn];
	"valid_idx(0)" -> "gkf(0)$0"	[label=iteratorOf];
	"valid_idx(0)" -> "enumerate(0)"	[label=iteratorOf];
	"

fold {:01d}(0)" -> "use-classifier-with-tf2-0-gradient-tape.ipynb"	[label=appearsIn];
	"print[246/4]" -> "fold(0)"	[label=print];
	"print[246/4]" -> "

fold {:01d}(0)"	[label=print];
	"print[246/4]" -> "1(0)"	[label=print];
	"1(0)" -> "use-classifier-with-tf2-0-gradient-tape.ipynb"	[label=appearsIn];
	"model(0)$1" -> "input_units(0)$0"	[label=NeuralNet];
	"model(0)$1" -> "dense_units(0)$0"	[label=NeuralNet];
	"model(0)$1" -> "aux_units(0)$0"	[label=NeuralNet];
	"model(0)$1" -> "dropout_rates(0)$0"	[label=NeuralNet];
	"train_dataset(0)$0" -> "np(0)$0"	[label=create_dataset];
	"train_dataset(0)$0" -> "df_train(0)$0"	[label=create_dataset];
	"train_dataset(0)$0" -> "output_categories(0)$0"	[label=create_dataset];
	"train_dataset(0)$0" -> "train_t(0)$0"	[label=create_dataset];
	"train_dataset(0)$0" -> "train_q(0)$0"	[label=create_dataset];
	"train_dataset(0)$0" -> "train_a(0)$0"	[label=create_dataset];
	"train_dataset(0)$0" -> "train_category(0)$1"	[label=create_dataset];
	"train_dataset(0)$0" -> "train_host(0)$1"	[label=create_dataset];
	"train_dataset(0)$0" -> "batch_size(0)$0"	[label=create_dataset];
	"train_dataset(0)$0" -> "train_idx(0)"	[label=create_dataset];
	"valid_dataset(0)$0" -> "np(0)$0"	[label=create_dataset];
	"valid_dataset(0)$0" -> "df_train(0)$0"	[label=create_dataset];
	"valid_dataset(0)$0" -> "output_categories(0)$0"	[label=create_dataset];
	"valid_dataset(0)$0" -> "train_t(0)$0"	[label=create_dataset];
	"valid_dataset(0)$0" -> "train_q(0)$0"	[label=create_dataset];
	"valid_dataset(0)$0" -> "train_a(0)$0"	[label=create_dataset];
	"valid_dataset(0)$0" -> "train_category(0)$1"	[label=create_dataset];
	"valid_dataset(0)$0" -> "train_host(0)$1"	[label=create_dataset];
	"valid_dataset(0)$0" -> "batch_size(0)$0"	[label=create_dataset];
	"valid_dataset(0)$0" -> "valid_idx(0)"	[label=create_dataset];
	"test_dataset(0)$0" -> "test_t(0)$0"	[label=create_dataset];
	"test_dataset(0)$0" -> "test_q(0)$0"	[label=create_dataset];
	"test_dataset(0)$0" -> "test_a(0)$0"	[label=create_dataset];
	"test_dataset(0)$0" -> "test_category(0)$1"	[label=create_dataset];
	"test_dataset(0)$0" -> "test_host(0)$1"	[label=create_dataset];
	"test_dataset(0)$0" -> "batch_size(0)$0"	[label=create_dataset];
	"test_dataset(0)$0" -> "None(0)"	[label=create_dataset];
	"valid_preds(0)$0" -> "num_epochs(0)$0"	[label=train_and_predict];
	"valid_preds(0)$0" -> "optimizer(0)$0"	[label=train_and_predict];
	"valid_preds(0)$0" -> "loss_function(0)$0"	[label=train_and_predict];
	"valid_preds(0)$0" -> "metric(0)$0"	[label=train_and_predict];
	"valid_preds(0)$0" -> "model(0)$1"	[label=train_and_predict];
	"valid_preds(0)$0" -> "train_dataset(0)$0"	[label=train_and_predict];
	"valid_preds(0)$0" -> "valid_dataset(0)$0"	[label=train_and_predict];
	"valid_preds(0)$0" -> "test_dataset(0)$0"	[label=train_and_predict];
	"test_preds(0)$0" -> "num_epochs(0)$0"	[label=train_and_predict];
	"test_preds(0)$0" -> "optimizer(0)$0"	[label=train_and_predict];
	"test_preds(0)$0" -> "loss_function(0)$0"	[label=train_and_predict];
	"test_preds(0)$0" -> "metric(0)$0"	[label=train_and_predict];
	"test_preds(0)$0" -> "model(0)$1"	[label=train_and_predict];
	"test_preds(0)$0" -> "train_dataset(0)$0"	[label=train_and_predict];
	"test_preds(0)$0" -> "valid_dataset(0)$0"	[label=train_and_predict];
	"test_preds(0)$0" -> "test_dataset(0)$0"	[label=train_and_predict];
	"train_scores(0)$0" -> "num_epochs(0)$0"	[label=train_and_predict];
	"train_scores(0)$0" -> "optimizer(0)$0"	[label=train_and_predict];
	"train_scores(0)$0" -> "loss_function(0)$0"	[label=train_and_predict];
	"train_scores(0)$0" -> "metric(0)$0"	[label=train_and_predict];
	"train_scores(0)$0" -> "model(0)$1"	[label=train_and_predict];
	"train_scores(0)$0" -> "train_dataset(0)$0"	[label=train_and_predict];
	"train_scores(0)$0" -> "valid_dataset(0)$0"	[label=train_and_predict];
	"train_scores(0)$0" -> "test_dataset(0)$0"	[label=train_and_predict];
	"valid_scores(0)$0" -> "num_epochs(0)$0"	[label=train_and_predict];
	"valid_scores(0)$0" -> "optimizer(0)$0"	[label=train_and_predict];
	"valid_scores(0)$0" -> "loss_function(0)$0"	[label=train_and_predict];
	"valid_scores(0)$0" -> "metric(0)$0"	[label=train_and_predict];
	"valid_scores(0)$0" -> "model(0)$1"	[label=train_and_predict];
	"valid_scores(0)$0" -> "train_dataset(0)$0"	[label=train_and_predict];
	"valid_scores(0)$0" -> "valid_dataset(0)$0"	[label=train_and_predict];
	"valid_scores(0)$0" -> "test_dataset(0)$0"	[label=train_and_predict];
	"valid_fold_predictions(0)$1" -> "valid_fold_predictions(0)$0"	[label=append];
	"valid_fold_predictions(0)$1" -> "valid_preds(0)$0"	[label=append];
	"test_fold_predictions(0)$1" -> "test_fold_predictions(0)$0"	[label=append];
	"test_fold_predictions(0)$1" -> "test_preds(0)$0"	[label=append];
	"train_fold_scores(0)$1" -> "train_fold_scores(0)$0"	[label=append];
	"train_fold_scores(0)$1" -> "train_scores(0)$0"	[label=append];
	"valid_fold_scores(0)$1" -> "valid_fold_scores(0)$0"	[label=append];
	"valid_fold_scores(0)$1" -> "valid_scores(0)$0"	[label=append];
	"fig(0)$0" -> "plt(0)"	[label=subplots];
	"fig(0)$0" -> "5(0)"	[label=subplots];
	"fig(0)$0" -> "num_folds(0)$0"	[label=subplots];
	"fig(0)$0" -> "1(0)"	[label=subplots];
	"axes(0)$0" -> "plt(0)"	[label=subplots];
	"axes(0)$0" -> "5(0)"	[label=subplots];
	"axes(0)$0" -> "num_folds(0)$0"	[label=subplots];
	"axes(0)$0" -> "1(0)"	[label=subplots];
	"i(0)" -> "use-classifier-with-tf2-0-gradient-tape.ipynb"	[label=appearsIn];
	"i(0)" -> "enumerate(0)"	[label=iteratorOf];
	"i(0)" -> "1(0)"	[label=iteratorOf];
	"i(0)" -> "axes(0)$0"	[label=iteratorOf];
	"ax(0)" -> "use-classifier-with-tf2-0-gradient-tape.ipynb"	[label=appearsIn];
	"ax(0)" -> "enumerate(0)"	[label=iteratorOf];
	"ax(0)" -> "1(0)"	[label=iteratorOf];
	"ax(0)" -> "axes(0)$0"	[label=iteratorOf];
	"ax(0)$0" -> "np(0)$0"	[label=plot];
	"ax(0)$0" -> "1(0)"	[label=plot];
	"ax(0)$0" -> "train_fold_scores(0)$1"	[label=plot];
	"ax(0)$0" -> "i(0)"	[label=plot];
	"ax(0)$0" -> "ax(0)"	[label=plot];
	"ax(0)$0" -> "0.0(0)"	[label=plot];
	"ax(0)$0" -> "len(0)"	[label=plot];
	"0.0(0)" -> "use-classifier-with-tf2-0-gradient-tape.ipynb"	[label=appearsIn];
	"len(0)" -> "use-classifier-with-tf2-0-gradient-tape.ipynb"	[label=appearsIn];
	"ax(0)$1" -> "np(0)$0"	[label=plot];
	"ax(0)$1" -> "1(0)"	[label=plot];
	"ax(0)$1" -> "valid_fold_scores(0)$1"	[label=plot];
	"ax(0)$1" -> "i(0)"	[label=plot];
	"ax(0)$1" -> "ax(0)$0"	[label=plot];
	"ax(0)$1" -> "0.0(0)"	[label=plot];
	"ax(0)$1" -> "len(0)"	[label=plot];
	"ax(0)$2" -> "1(0)"	[label=set_title];
	"ax(0)$2" -> "i(0)"	[label=set_title];
	"ax(0)$2" -> "ax(0)$1"	[label=set_title];
	"ax(0)$2" -> "Fold {}(0)"	[label=set_title];
	"Fold {}(0)" -> "use-classifier-with-tf2-0-gradient-tape.ipynb"	[label=appearsIn];
	"ax(0)$3" -> "ax(0)$2"	[label=set_ylabel];
	"ax(0)$3" -> "spearman rho(0)"	[label=set_ylabel];
	"spearman rho(0)" -> "use-classifier-with-tf2-0-gradient-tape.ipynb"	[label=appearsIn];
	"ax(0)$4" -> "ax(0)$3"	[label=set_xlabel];
	"ax(0)$4" -> "epochs(0)"	[label=set_xlabel];
	"epochs(0)" -> "use-classifier-with-tf2-0-gradient-tape.ipynb"	[label=appearsIn];
	"ax(0)$5" -> "ax(0)$4"	[label=legend];
	"test_fold_predictions(14)" -> "compute_final_predictions[0]"	[label=_argToVar];
	"snapshot_averages(14)$0" -> "test_fold_predictions(14)"	[label=assignedFrom];
	"snapshot_averages(14)$0" -> "np(14)"	[label=assignedFrom];
	"snapshot_averages(14)$0" -> "i(14)"	[label=assignedFrom];
	"snapshot_averages(14)$0" -> "0(14)"	[label=assignedFrom];
	"snapshot_averages(14)$0" -> "range(14)"	[label=assignedFrom];
	"snapshot_averages(14)$0" -> "len(14)"	[label=assignedFrom];
	"df_sub(0)$1" -> "df_sub(0)$0"	[label=compute_final_predictions];
	"df_sub(0)$1" -> "test_fold_predictions(0)$1"	[label=compute_final_predictions];
	"df_sub(0)$2" -> "df_sub(0)$1"	[label=head];
	"df_sub(0)$3" -> "df_sub(0)$2"	[label=to_csv];
	"df_sub(0)$3" -> "submission.csv(0)"	[label=to_csv];
	"submission.csv(0)" -> "use-classifier-with-tf2-0-gradient-tape.ipynb"	[label=appearsIn];
}
