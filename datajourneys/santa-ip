digraph "" {
	numpy -> "santa-ip.ipynb"	[label=importedBy];
	"np(0)" -> numpy	[label=assignedFrom];
	"np(0)" -> "santa-ip.ipynb"	[label=appearsIn];
	pandas -> "santa-ip.ipynb"	[label=importedBy];
	"pd(0)" -> "santa-ip.ipynb"	[label=appearsIn];
	"pd(0)" -> pandas	[label=assignedFrom];
	numba -> "santa-ip.ipynb"	[label=importedBy];
	njit -> numba	[label=importedBy];
	"njit(0)" -> "santa-ip.ipynb"	[label=appearsIn];
	"njit(0)" -> njit	[label=assignedFrom];
	itertools -> "santa-ip.ipynb"	[label=importedBy];
	product -> itertools	[label=importedBy];
	"product(0)" -> "santa-ip.ipynb"	[label=appearsIn];
	"product(0)" -> product	[label=assignedFrom];
	"ortools.linear_solver" -> "santa-ip.ipynb"	[label=importedBy];
	pywraplp -> "ortools.linear_solver"	[label=importedBy];
	"pywraplp(0)" -> "santa-ip.ipynb"	[label=appearsIn];
	"pywraplp(0)" -> pywraplp	[label=assignedFrom];
	"n(1)" -> "get_penalty[0]"	[label=_argToVar];
	"choice(1)" -> "get_penalty[1]"	[label=_argToVar];
	"penalty(1)$0" -> "None(1)"	[label=assignedFrom];
	"penalty(1)$1" -> "0(1)"	[label=assignedFrom];
	"penalty(1)$2" -> "50(1)"	[label=assignedFrom];
	"penalty(1)$3" -> "n(1)"	[label=Add];
	"penalty(1)$3" -> "50(1)"	[label=Add];
	"penalty(1)$3" -> "9(1)"	[label=Add];
	"penalty(1)$4" -> "n(1)"	[label=Add];
	"penalty(1)$4" -> "9(1)"	[label=Add];
	"penalty(1)$4" -> "100(1)"	[label=Add];
	"penalty(1)$5" -> "n(1)"	[label=Add];
	"penalty(1)$5" -> "9(1)"	[label=Add];
	"penalty(1)$5" -> "200(1)"	[label=Add];
	"penalty(1)$6" -> "n(1)"	[label=Add];
	"penalty(1)$6" -> "200(1)"	[label=Add];
	"penalty(1)$6" -> "18(1)"	[label=Add];
	"penalty(1)$7" -> "n(1)"	[label=Add];
	"penalty(1)$7" -> "18(1)"	[label=Add];
	"penalty(1)$7" -> "300(1)"	[label=Add];
	"penalty(1)$8" -> "n(1)"	[label=Add];
	"penalty(1)$8" -> "300(1)"	[label=Add];
	"penalty(1)$8" -> "36(1)"	[label=Add];
	"penalty(1)$9" -> "n(1)"	[label=Add];
	"penalty(1)$9" -> "36(1)"	[label=Add];
	"penalty(1)$9" -> "400(1)"	[label=Add];
	"penalty(1)$10" -> "n(1)"	[label=Add];
	"penalty(1)$10" -> "36(1)"	[label=Add];
	"penalty(1)$10" -> "500(1)"	[label=Add];
	"penalty(1)$10" -> "199(1)"	[label=Add];
	"penalty(1)$11" -> "n(1)"	[label=Add];
	"penalty(1)$11" -> "36(1)"	[label=Add];
	"penalty(1)$11" -> "500(1)"	[label=Add];
	"penalty(1)$11" -> "398(1)"	[label=Add];
	"data(2)" -> "GetPreferenceCostMatrix[0]"	[label=_argToVar];
	"cost_matrix(2)$0" -> "np(2)"	[label=zeros];
	"cost_matrix(2)$0" -> "N_FAMILIES(2)"	[label=zeros];
	"cost_matrix(2)$0" -> "N_DAYS(2)"	[label=zeros];
	"i(2)" -> "N_FAMILIES(2)"	[label=iteratorOf];
	"i(2)" -> "range(2)"	[label=iteratorOf];
	"desired(2)$0" -> "data(2)"	[label=assignedFrom];
	"desired(2)$0" -> "i(2)"	[label=assignedFrom];
	"desired(2)$0" -> "1(2)"	[label=assignedFrom];
	"cost_matrix(2)$1" -> "cost_matrix(2)$0"	[label=get_penalty];
	"cost_matrix(2)$1" -> "i(2)"	[label=get_penalty];
	"cost_matrix(2)$1" -> "FAMILY_SIZE(2)"	[label=get_penalty];
	"cost_matrix(2)$1" -> "10(2)"	[label=get_penalty];
	"j(2)" -> "desired(2)$0"	[label=iteratorOf];
	"j(2)" -> "enumerate(2)"	[label=iteratorOf];
	"day(2)" -> "desired(2)$0"	[label=iteratorOf];
	"day(2)" -> "enumerate(2)"	[label=iteratorOf];
	"cost_matrix(2)$2" -> "i(2)"	[label=get_penalty];
	"cost_matrix(2)$2" -> "cost_matrix(2)$1"	[label=get_penalty];
	"cost_matrix(2)$2" -> "FAMILY_SIZE(2)"	[label=get_penalty];
	"cost_matrix(2)$2" -> "j(2)"	[label=get_penalty];
	"ac(3)$0" -> "np(3)"	[label=zeros];
	"ac(3)$0" -> "1000(3)"	[label=zeros];
	"n(3)" -> "ac(3)$0"	[label=iteratorOf];
	"n(3)" -> "range(3)"	[label=iteratorOf];
	"n(3)" -> "0(3)"	[label=iteratorOf];
	"n_p1(3)" -> "ac(3)$0"	[label=iteratorOf];
	"n_p1(3)" -> "range(3)"	[label=iteratorOf];
	"n_p1(3)" -> "1(3)"	[label=iteratorOf];
	"diff(3)$0" -> "n(3)"	[label=abs];
	"diff(3)$0" -> "n_p1(3)"	[label=abs];
	"ac(3)$1" -> "ac(3)$0"	[label=max];
	"ac(3)$1" -> "n(3)"	[label=max];
	"ac(3)$1" -> "0(3)"	[label=max];
	"ac(3)$1" -> "diff(3)$0"	[label=max];
	"ac(3)$1" -> "125(3)"	[label=max];
	"ac(3)$1" -> "400(3)"	[label=max];
	"ac(3)$1" -> "0.5(3)"	[label=max];
	"ac(3)$1" -> "50.0(3)"	[label=max];
	"prediction(4)" -> "pcost[0]"	[label=_argToVar];
	"daily_occupancy(4)$0" -> "np(4)"	[label=zeros];
	"daily_occupancy(4)$0" -> "N_DAYS(4)"	[label=zeros];
	"daily_occupancy(4)$0" -> "1(4)"	[label=zeros];
	"penalty(4)$0" -> "0(4)"	[label=assignedFrom];
	"i(4)" -> "prediction(4)"	[label=iteratorOf];
	"i(4)" -> "enumerate(4)"	[label=iteratorOf];
	"p(4)" -> "prediction(4)"	[label=iteratorOf];
	"p(4)" -> "enumerate(4)"	[label=iteratorOf];
	"n(4)$0" -> "i(4)"	[label=assignedFrom];
	"n(4)$0" -> "FAMILY_SIZE(4)"	[label=assignedFrom];
	"penalty(4)$1" -> "penalty(4)$0"	[label=Add];
	"penalty(4)$1" -> "i(4)"	[label=Add];
	"penalty(4)$1" -> "p(4)"	[label=Add];
	"penalty(4)$1" -> "PCOSTM(4)"	[label=Add];
	"daily_occupancy(4)$1" -> "daily_occupancy(4)$0"	[label=Add];
	"daily_occupancy(4)$1" -> "n(4)$0"	[label=Add];
	"daily_occupancy(5)" -> "acost[0]"	[label=_argToVar];
	"accounting_cost(5)$0" -> "0(5)"	[label=assignedFrom];
	"n_out_of_range(5)$0" -> "0(5)"	[label=assignedFrom];
	"daily_occupancy(5)$0" -> "daily_occupancy(5)"	[label=assignedFrom];
	"daily_occupancy(5)$0" -> "2(5)"	[label=assignedFrom];
	"day(5)" -> "range(5)"	[label=iteratorOf];
	"day(5)" -> "N_DAYS(5)"	[label=iteratorOf];
	"n_p1(5)$0" -> "daily_occupancy(5)$0"	[label=assignedFrom];
	"n_p1(5)$0" -> "day(5)"	[label=assignedFrom];
	"n_p1(5)$0" -> "1(5)"	[label=assignedFrom];
	"n(5)$0" -> "daily_occupancy(5)$0"	[label=assignedFrom];
	"n(5)$0" -> "day(5)"	[label=assignedFrom];
	"n_out_of_range(5)$1" -> "n_out_of_range(5)$0"	[label=Add];
	"n_out_of_range(5)$1" -> "n(5)$0"	[label=Add];
	"n_out_of_range(5)$1" -> "MAX_OCCUPANCY(5)"	[label=Add];
	"n_out_of_range(5)$1" -> "MIN_OCCUPANCY(5)"	[label=Add];
	"accounting_cost(5)$1" -> "accounting_cost(5)$0"	[label=Add];
	"accounting_cost(5)$1" -> "n_p1(5)$0"	[label=Add];
	"accounting_cost(5)$1" -> "n(5)$0"	[label=Add];
	"accounting_cost(5)$1" -> "ACOSTM(5)"	[label=Add];
	"prediction(6)" -> "cost_function[0]"	[label=_argToVar];
	"penalty(6)$0" -> "prediction(6)"	[label=pcost];
	"daily_occupancy(6)$0" -> "prediction(6)"	[label=pcost];
	"accounting_cost(6)$0" -> "daily_occupancy(6)$0"	[label=acost];
	"n_out_of_range(6)$0" -> "daily_occupancy(6)$0"	[label=acost];
	"pred(7)" -> "findBetterDay4Family[0]"	[label=_argToVar];
	"fobs(7)$0" -> "np(7)"	[label=argsort];
	"fobs(7)$0" -> "FAMILY_SIZE(7)"	[label=argsort];
	"score(7)$0" -> "pred(7)"	[label=cost_function];
	"original_score(7)$0" -> "np(7)"	[label=assignedFrom];
	"original_score(7)$1" -> "score(7)$0"	[label=assignedFrom];
	"family_id(7)" -> "fobs(7)$0"	[label=iteratorOf];
	"pick(7)" -> "range(7)"	[label=iteratorOf];
	"pick(7)" -> "10(7)"	[label=iteratorOf];
	"day(7)$0" -> "family_id(7)"	[label=assignedFrom];
	"day(7)$0" -> "pick(7)"	[label=assignedFrom];
	"day(7)$0" -> "DESIRED(7)"	[label=assignedFrom];
	"oldvalue(7)$0" -> "pred(7)"	[label=assignedFrom];
	"oldvalue(7)$0" -> "family_id(7)"	[label=assignedFrom];
	"pred(7)$0" -> "pred(7)"	[label=assignedFrom];
	"pred(7)$0" -> "day(7)$0"	[label=assignedFrom];
	"new_score(7)$0" -> "pred(7)$0"	[label=cost_function];
	"score(7)$1" -> "new_score(7)$0"	[label=assignedFrom];
	"pred(7)$1" -> "oldvalue(7)$0"	[label=assignedFrom];
	"pred(7)$1" -> "pred(7)$0"	[label=assignedFrom];
	"print[104/8]" -> "score(7)$1"	[label=print];
	"print[104/8]" -> "
(7)"	[label=print];
	"print[105/4]" -> "score(7)$1"	[label=print];
	"top_k(8)" -> "stochastic_product_search[0]"	[label=_argToVar];
	"fam_size(8)" -> "stochastic_product_search[1]"	[label=_argToVar];
	"original(8)" -> "stochastic_product_search[2]"	[label=_argToVar];
	"verbose(8)" -> "stochastic_product_search[3]"	[label=_argToVar];
	"verbose2(8)" -> "stochastic_product_search[4]"	[label=_argToVar];
	"n_iter(8)" -> "stochastic_product_search[5]"	[label=_argToVar];
	"random_state(8)" -> "stochastic_product_search[6]"	[label=_argToVar];
	"best(8)$0" -> "original(8)"	[label=copy];
	"best_score(8)$0" -> "best(8)$0"	[label=cost_function];
	"np(8)$0" -> "random_state(8)"	[label=seed];
	"np(8)$0" -> "np(8)"	[label=seed];
	"i(8)" -> "n_iter(8)"	[label=iteratorOf];
	"i(8)" -> "range(8)"	[label=iteratorOf];
	"fam_indices(8)$0" -> "fam_size(8)"	[label=choice];
	"fam_indices(8)$0" -> "np(8)$0"	[label=choice];
	"fam_indices(8)$0" -> "range(8)"	[label=choice];
	"fam_indices(8)$0" -> "DESIRED(8)"	[label=choice];
	"fam_indices(8)$0" -> "0(8)"	[label=choice];
	"changes(8)$0" -> "top_k(8)"	[label=array];
	"changes(8)$0" -> "np(8)$0"	[label=array];
	"changes(8)$0" -> "fam_indices(8)$0"	[label=array];
	"changes(8)$0" -> "DESIRED(8)"	[label=array];
	"changes(8)$0" -> "list(8)"	[label=array];
	"changes(8)$0" -> "product(8)"	[label=array];
	"change(8)" -> "changes(8)$0"	[label=iteratorOf];
	"new(8)$0" -> "best(8)$0"	[label=copy];
	"new(8)$1" -> "change(8)"	[label=assignedFrom];
	"new(8)$1" -> "new(8)$0"	[label=assignedFrom];
	"new_score(8)$0" -> "new(8)$1"	[label=cost_function];
	"best_score(8)$1" -> "new_score(8)$0"	[label=assignedFrom];
	"best(8)$1" -> "new(8)$1"	[label=assignedFrom];
	"print[139/12]" -> "i(8)"	[label=print];
	"print[139/12]" -> "best_score(8)$1"	[label=print];
	"print[139/12]" -> "Iteration #(8)"	[label=print];
	"print[139/12]" -> ": Best score is (8)"	[label=print];
	"print[139/12]" -> ".2f(8)"	[label=print];
	"print[139/12]" -> "      (8)"	[label=print];
	"print[139/12]" -> "
(8)"	[label=print];
	"print[142/12]" -> "i(8)"	[label=print];
	"print[142/12]" -> "best_score(8)$1"	[label=print];
	"print[142/12]" -> "Iteration #(8)"	[label=print];
	"print[142/12]" -> ": Best score is (8)"	[label=print];
	"print[142/12]" -> ".2f(8)"	[label=print];
	"print[142/12]" -> "      (8)"	[label=print];
	"print[144/4]" -> "best_score(8)$1"	[label=print];
	"print[144/4]" -> ".2f(8)"	[label=print];
	"print[144/4]" -> "Final best score is (8)"	[label=print];
	"seed(9)" -> "seed_finding[0]"	[label=_argToVar];
	"prediction_input(9)" -> "seed_finding[1]"	[label=_argToVar];
	"prediction(9)$0" -> "prediction_input(9)"	[label=copy];
	"np(9)$0" -> "seed(9)"	[label=seed];
	"np(9)$0" -> "np(9)"	[label=seed];
	"best_score(9)$0" -> "prediction(9)$0"	[label=cost_function];
	"original_score(9)$0" -> "best_score(9)$0"	[label=assignedFrom];
	"best_pred(9)$0" -> "prediction(9)$0"	[label=copy];
	"print[152/4]" -> "seed(9)"	[label=print];
	"print[152/4]" -> "original_score(9)$0"	[label=print];
	"print[152/4]" -> "SEED: {}   ORIGINAL SCORE: {}(9)"	[label=print];
	"t(9)" -> "range(9)"	[label=iteratorOf];
	"t(9)" -> "100(9)"	[label=iteratorOf];
	"i(9)" -> "range(9)"	[label=iteratorOf];
	"i(9)" -> "5000(9)"	[label=iteratorOf];
	"j(9)" -> "range(9)"	[label=iteratorOf];
	"j(9)" -> "10(9)"	[label=iteratorOf];
	"di(9)$0" -> "prediction(9)$0"	[label=assignedFrom];
	"di(9)$0" -> "i(9)"	[label=assignedFrom];
	"prediction(9)$1" -> "prediction(9)$0"	[label=assignedFrom];
	"prediction(9)$1" -> "i(9)"	[label=assignedFrom];
	"prediction(9)$1" -> "j(9)"	[label=assignedFrom];
	"prediction(9)$1" -> "DESIRED(9)"	[label=assignedFrom];
	"cur_score(9)$0" -> "prediction(9)$1"	[label=cost_function];
	"KT(9)$0" -> "1(9)"	[label=assignedFrom];
	"KT(9)$1" -> "1.5(9)"	[label=assignedFrom];
	"KT(9)$2" -> "4.5(9)"	[label=assignedFrom];
	"KT(9)$3" -> "3(9)"	[label=assignedFrom];
	"KT(9)$4" -> "2.75(9)"	[label=assignedFrom];
	"KT(9)$5" -> "2.5(9)"	[label=assignedFrom];
	"KT(9)$6" -> "2(9)"	[label=assignedFrom];
	"KT(9)$7" -> "1.5(9)"	[label=assignedFrom];
	"KT(9)$8" -> "1(9)"	[label=assignedFrom];
	"prob(9)$0" -> "np(9)$0"	[label=exp];
	"prob(9)$0" -> "best_score(9)$0"	[label=exp];
	"prob(9)$0" -> "cur_score(9)$0"	[label=exp];
	"prob(9)$0" -> "KT(9)$8"	[label=exp];
	"best_score(9)$1" -> "cur_score(9)$0"	[label=assignedFrom];
	"prediction(9)$2" -> "di(9)$0"	[label=assignedFrom];
	"prediction(9)$2" -> "prediction(9)$1"	[label=assignedFrom];
	"print[185/12]" -> "seed(9)"	[label=print];
	"print[185/12]" -> "best_score(9)$1"	[label=print];
	"print[185/12]" -> "NEW BEST SCORE on seed {}: {}(9)"	[label=print];
	"original_score(9)$1" -> "best_score(9)$1"	[label=assignedFrom];
	"best_pred(9)$1" -> "prediction(9)$2"	[label=copy];
	"S(10)$0" -> "pywraplp(10)"	[label=Solver];
	"S(10)$0" -> "SolveAssignmentProblem(10)"	[label=Solver];
	"candidates(10)$0" -> "[](10)"	[label=assignedFrom];
	"candidates(10)$0" -> "_(10)"	[label=assignedFrom];
	"candidates(10)$0" -> "range(10)"	[label=assignedFrom];
	"candidates(10)$0" -> "N_DAYS(10)"	[label=assignedFrom];
	"i(10)" -> "range(10)"	[label=iteratorOf];
	"i(10)" -> "N_FAMILIES(10)"	[label=iteratorOf];
	"j(10)" -> "range(10)"	[label=iteratorOf];
	"j(10)" -> "N_DAYS(10)"	[label=iteratorOf];
	"j(10)" -> "i(10)"	[label=iteratorOf];
	"j(10)" -> "DESIRED(10)"	[label=iteratorOf];
	"j(10)" -> "1(10)"	[label=iteratorOf];
	"candidates(10)$1" -> "candidates(10)$0"	[label=append];
	"candidates(10)$1" -> "i(10)"	[label=append];
	"x(10)$0" -> "S(10)$0"	[label=BoolVar];
	"x(10)$0" -> "i(10)"	[label=BoolVar];
	"x(10)$0" -> "j(10)"	[label=BoolVar];
	"x(10)$0" -> "x(10)"	[label=BoolVar];
	"x(10)$0" -> "x[\%i,\%i](10)"	[label=BoolVar];
	"daily_occupancy(10)$0" -> "S(10)$0"	[label=assignedFrom];
	"daily_occupancy(10)$0" -> "range(10)"	[label=assignedFrom];
	"daily_occupancy(10)$0" -> "N_DAYS(10)"	[label=assignedFrom];
	"daily_occupancy(10)$0" -> "i(10)"	[label=assignedFrom];
	"daily_occupancy(10)$0" -> "j(10)"	[label=assignedFrom];
	"daily_occupancy(10)$0" -> "candidates(10)$1"	[label=assignedFrom];
	"daily_occupancy(10)$0" -> "x(10)$0"	[label=assignedFrom];
	"daily_occupancy(10)$0" -> "FAMILY_SIZE(10)"	[label=assignedFrom];
	"family_presence(10)$0" -> "S(10)$0"	[label=assignedFrom];
	"family_presence(10)$0" -> "range(10)"	[label=assignedFrom];
	"family_presence(10)$0" -> "i(10)"	[label=assignedFrom];
	"family_presence(10)$0" -> "N_FAMILIES(10)"	[label=assignedFrom];
	"family_presence(10)$0" -> "j(10)"	[label=assignedFrom];
	"family_presence(10)$0" -> "DESIRED(10)"	[label=assignedFrom];
	"family_presence(10)$0" -> "x(10)$0"	[label=assignedFrom];
	"preference_cost(10)$0" -> "S(10)$0"	[label=Sum];
	"preference_cost(10)$0" -> "range(10)"	[label=Sum];
	"preference_cost(10)$0" -> "i(10)"	[label=Sum];
	"preference_cost(10)$0" -> "N_FAMILIES(10)"	[label=Sum];
	"preference_cost(10)$0" -> "j(10)"	[label=Sum];
	"preference_cost(10)$0" -> "DESIRED(10)"	[label=Sum];
	"preference_cost(10)$0" -> "x(10)$0"	[label=Sum];
	"preference_cost(10)$0" -> "PCOSTM(10)"	[label=Sum];
	"S(10)$1" -> "S(10)$0"	[label=Minimize];
	"S(10)$1" -> "preference_cost(10)$0"	[label=Minimize];
	"S(10)$2" -> "j(10)"	[label=Add];
	"S(10)$2" -> "1(10)"	[label=Add];
	"S(10)$2" -> "daily_occupancy(10)$0"	[label=Add];
	"S(10)$2" -> "S(10)$1"	[label=Add];
	"S(10)$2" -> "23(10)"	[label=Add];
	"S(10)$3" -> "j(10)"	[label=Add];
	"S(10)$3" -> "1(10)"	[label=Add];
	"S(10)$3" -> "daily_occupancy(10)$0"	[label=Add];
	"S(10)$3" -> "S(10)$2"	[label=Add];
	"S(10)$3" -> "23(10)"	[label=Add];
	"S(10)$4" -> "i(10)"	[label=Add];
	"S(10)$4" -> "1(10)"	[label=Add];
	"S(10)$4" -> "family_presence(10)$0"	[label=Add];
	"S(10)$4" -> "S(10)$3"	[label=Add];
	"S(10)$5" -> "j(10)"	[label=Add];
	"S(10)$5" -> "daily_occupancy(10)$0"	[label=Add];
	"S(10)$5" -> "S(10)$4"	[label=Add];
	"S(10)$5" -> "MIN_OCCUPANCY(10)"	[label=Add];
	"S(10)$6" -> "j(10)"	[label=Add];
	"S(10)$6" -> "daily_occupancy(10)$0"	[label=Add];
	"S(10)$6" -> "S(10)$5"	[label=Add];
	"S(10)$6" -> "MAX_OCCUPANCY(10)"	[label=Add];
	"res(10)$0" -> "S(10)$6"	[label=Solve];
	"resdict(10)$0" -> "1(10)"	[label=assignedFrom];
	"resdict(10)$0" -> "0(10)"	[label=assignedFrom];
	"resdict(10)$0" -> "2(10)"	[label=assignedFrom];
	"resdict(10)$0" -> "3(10)"	[label=assignedFrom];
	"resdict(10)$0" -> "4(10)"	[label=assignedFrom];
	"resdict(10)$0" -> "5(10)"	[label=assignedFrom];
	"resdict(10)$0" -> "6(10)"	[label=assignedFrom];
	"resdict(10)$0" -> "OPTIMAL(10)"	[label=assignedFrom];
	"resdict(10)$0" -> "FEASIBLE(10)"	[label=assignedFrom];
	"resdict(10)$0" -> "INFEASIBLE(10)"	[label=assignedFrom];
	"resdict(10)$0" -> "UNBOUNDED(10)"	[label=assignedFrom];
	"resdict(10)$0" -> "ABNORMAL(10)"	[label=assignedFrom];
	"resdict(10)$0" -> "MODEL_INVALID(10)"	[label=assignedFrom];
	"resdict(10)$0" -> "NOT_SOLVED(10)"	[label=assignedFrom];
	"print[241/4]" -> "res(10)$0"	[label=print];
	"print[241/4]" -> "resdict(10)$0"	[label=print];
	"print[241/4]" -> "LP solver result:(10)"	[label=print];
	"l(10)$0" -> "range(10)"	[label=assignedFrom];
	"l(10)$0" -> "i(10)"	[label=assignedFrom];
	"l(10)$0" -> "N_FAMILIES(10)"	[label=assignedFrom];
	"l(10)$0" -> "j(10)"	[label=assignedFrom];
	"l(10)$0" -> "DESIRED(10)"	[label=assignedFrom];
	"l(10)$0" -> "x(10)$0"	[label=assignedFrom];
	"l(10)$0" -> "0(10)"	[label=assignedFrom];
	"df(10)$0" -> "l(10)$0"	[label=DataFrame];
	"df(10)$0" -> "pd(10)"	[label=DataFrame];
	"df(10)$0" -> "[<_ast.Constant object at 0x7fd50082dbe0>, <_ast.Constant object at 0x7fd50082dc10>, <_ast.Constant object at 0x7fd50082dc40>](10)"	[label=DataFrame];
	"families(11)" -> "solveSantaIP[0]"	[label=_argToVar];
	"min_occupancy(11)" -> "solveSantaIP[1]"	[label=_argToVar];
	"max_occupancy(11)" -> "solveSantaIP[2]"	[label=_argToVar];
	"S(11)$0" -> "pywraplp(11)"	[label=Solver];
	"S(11)$0" -> "SolveAssignmentProblem(11)"	[label=Solver];
	"n_families(11)$0" -> "families(11)"	[label=len];
	"candidates(11)$0" -> "[](11)"	[label=assignedFrom];
	"candidates(11)$0" -> "_(11)"	[label=assignedFrom];
	"candidates(11)$0" -> "range(11)"	[label=assignedFrom];
	"candidates(11)$0" -> "N_DAYS(11)"	[label=assignedFrom];
	"i(11)" -> "families(11)"	[label=iteratorOf];
	"i(11)" -> "n_families(11)$0"	[label=iteratorOf];
	"i(11)" -> "range(11)"	[label=iteratorOf];
	"j(11)" -> "range(11)"	[label=iteratorOf];
	"j(11)" -> "N_DAYS(11)"	[label=iteratorOf];
	"j(11)" -> "i(11)"	[label=iteratorOf];
	"j(11)" -> "DESIRED(11)"	[label=iteratorOf];
	"candidates(11)$1" -> "candidates(11)$0"	[label=append];
	"candidates(11)$1" -> "i(11)"	[label=append];
	"x(11)$0" -> "S(11)$0"	[label=BoolVar];
	"x(11)$0" -> "i(11)"	[label=BoolVar];
	"x(11)$0" -> "j(11)"	[label=BoolVar];
	"x(11)$0" -> "x(11)"	[label=BoolVar];
	"x(11)$0" -> "x[\%i,\%i](11)"	[label=BoolVar];
	"daily_occupancy(11)$0" -> "S(11)$0"	[label=assignedFrom];
	"daily_occupancy(11)$0" -> "range(11)"	[label=assignedFrom];
	"daily_occupancy(11)$0" -> "N_DAYS(11)"	[label=assignedFrom];
	"daily_occupancy(11)$0" -> "i(11)"	[label=assignedFrom];
	"daily_occupancy(11)$0" -> "j(11)"	[label=assignedFrom];
	"daily_occupancy(11)$0" -> "candidates(11)$1"	[label=assignedFrom];
	"daily_occupancy(11)$0" -> "x(11)$0"	[label=assignedFrom];
	"daily_occupancy(11)$0" -> "FAMILY_SIZE(11)"	[label=assignedFrom];
	"family_presence(11)$0" -> "families(11)"	[label=assignedFrom];
	"family_presence(11)$0" -> "S(11)$0"	[label=assignedFrom];
	"family_presence(11)$0" -> "i(11)"	[label=assignedFrom];
	"family_presence(11)$0" -> "j(11)"	[label=assignedFrom];
	"family_presence(11)$0" -> "DESIRED(11)"	[label=assignedFrom];
	"family_presence(11)$0" -> "x(11)$0"	[label=assignedFrom];
	"preference_cost(11)$0" -> "families(11)"	[label=Sum];
	"preference_cost(11)$0" -> "S(11)$0"	[label=Sum];
	"preference_cost(11)$0" -> "i(11)"	[label=Sum];
	"preference_cost(11)$0" -> "j(11)"	[label=Sum];
	"preference_cost(11)$0" -> "DESIRED(11)"	[label=Sum];
	"preference_cost(11)$0" -> "x(11)$0"	[label=Sum];
	"preference_cost(11)$0" -> "PCOSTM(11)"	[label=Sum];
	"S(11)$1" -> "S(11)$0"	[label=Minimize];
	"S(11)$1" -> "preference_cost(11)$0"	[label=Minimize];
	"S(11)$2" -> "i(11)"	[label=Add];
	"S(11)$2" -> "family_presence(11)$0"	[label=Add];
	"S(11)$2" -> "S(11)$1"	[label=Add];
	"S(11)$2" -> "1(11)"	[label=Add];
	"S(11)$3" -> "min_occupancy(11)"	[label=Add];
	"S(11)$3" -> "j(11)"	[label=Add];
	"S(11)$3" -> "daily_occupancy(11)$0"	[label=Add];
	"S(11)$3" -> "S(11)$2"	[label=Add];
	"S(11)$4" -> "max_occupancy(11)"	[label=Add];
	"S(11)$4" -> "j(11)"	[label=Add];
	"S(11)$4" -> "daily_occupancy(11)$0"	[label=Add];
	"S(11)$4" -> "S(11)$3"	[label=Add];
	"res(11)$0" -> "S(11)$4"	[label=Solve];
	"resdict(11)$0" -> "1(11)"	[label=assignedFrom];
	"resdict(11)$0" -> "0(11)"	[label=assignedFrom];
	"resdict(11)$0" -> "2(11)"	[label=assignedFrom];
	"resdict(11)$0" -> "3(11)"	[label=assignedFrom];
	"resdict(11)$0" -> "4(11)"	[label=assignedFrom];
	"resdict(11)$0" -> "5(11)"	[label=assignedFrom];
	"resdict(11)$0" -> "6(11)"	[label=assignedFrom];
	"resdict(11)$0" -> "OPTIMAL(11)"	[label=assignedFrom];
	"resdict(11)$0" -> "FEASIBLE(11)"	[label=assignedFrom];
	"resdict(11)$0" -> "INFEASIBLE(11)"	[label=assignedFrom];
	"resdict(11)$0" -> "UNBOUNDED(11)"	[label=assignedFrom];
	"resdict(11)$0" -> "ABNORMAL(11)"	[label=assignedFrom];
	"resdict(11)$0" -> "MODEL_INVALID(11)"	[label=assignedFrom];
	"resdict(11)$0" -> "NOT_SOLVED(11)"	[label=assignedFrom];
	"print[298/4]" -> "res(11)$0"	[label=print];
	"print[298/4]" -> "resdict(11)$0"	[label=print];
	"print[298/4]" -> "MIP solver result:(11)"	[label=print];
	"l(11)$0" -> "families(11)"	[label=assignedFrom];
	"l(11)$0" -> "i(11)"	[label=assignedFrom];
	"l(11)$0" -> "j(11)"	[label=assignedFrom];
	"l(11)$0" -> "DESIRED(11)"	[label=assignedFrom];
	"l(11)$0" -> "x(11)$0"	[label=assignedFrom];
	"l(11)$0" -> "0(11)"	[label=assignedFrom];
	"df(11)$0" -> "l(11)$0"	[label=DataFrame];
	"df(11)$0" -> "pd(11)"	[label=DataFrame];
	"df(11)$0" -> "[<_ast.Constant object at 0x7fd50082a790>, <_ast.Constant object at 0x7fd50082a7c0>](11)"	[label=DataFrame];
	"THRS(12)$0" -> "0.999(12)"	[label=assignedFrom];
	"assigned_df(12)$0" -> "THRS(12)$0"	[label=copy];
	"assigned_df(12)$0" -> "df(12)"	[label=copy];
	"unassigned_df(12)$0" -> "THRS(12)$0"	[label=assignedFrom];
	"unassigned_df(12)$0" -> "df(12)"	[label=assignedFrom];
	"unassigned_df(12)$0" -> "1(12)"	[label=assignedFrom];
	"unassigned(12)$0" -> "unassigned_df(12)$0"	[label=unique];
	"print[316/4]" -> "unassigned(12)$0"	[label=print];
	"print[316/4]" -> "{} unassigned families(12)"	[label=print];
	"print[316/4]" -> "len(12)"	[label=print];
	"assigned_df(12)$1" -> "assigned_df(12)$0"	[label=assignedFrom];
	"assigned_df(12)$1" -> "assigned_df(12)$1"	[label=assignedFrom];
	"assigned_df(12)$1" -> "FAMILY_SIZE(12)"	[label=assignedFrom];
	"occupancy(12)$0" -> "assigned_df(12)$1"	[label=assignedFrom];
	"occupancy(12)$0" -> "day(12)"	[label=assignedFrom];
	"min_occupancy(12)$0" -> "occupancy(12)$0"	[label=array];
	"min_occupancy(12)$0" -> "np(12)"	[label=array];
	"min_occupancy(12)$0" -> "max(12)"	[label=array];
	"min_occupancy(12)$0" -> "0(12)"	[label=array];
	"min_occupancy(12)$0" -> "MIN_OCCUPANCY(12)"	[label=array];
	"min_occupancy(12)$0" -> "o(12)"	[label=array];
	"max_occupancy(12)$0" -> "occupancy(12)$0"	[label=array];
	"max_occupancy(12)$0" -> "np(12)"	[label=array];
	"max_occupancy(12)$0" -> "o(12)"	[label=array];
	"max_occupancy(12)$0" -> "MAX_OCCUPANCY(12)"	[label=array];
	"rdf(12)$0" -> "unassigned(12)$0"	[label=solveSantaIP];
	"rdf(12)$0" -> "min_occupancy(12)$0"	[label=solveSantaIP];
	"rdf(12)$0" -> "max_occupancy(12)$0"	[label=solveSantaIP];
	"df(12)$0" -> "assigned_df(12)$1"	[label=sort_values];
	"df(12)$0" -> "rdf(12)$0"	[label=sort_values];
	"df(12)$0" -> "pd(12)"	[label=sort_values];
	"df(12)$0" -> "[<_ast.Constant object at 0x7fd500821040>, <_ast.Constant object at 0x7fd500821070>](12)"	[label=sort_values];
	"df(12)$0" -> "family_id(12)"	[label=sort_values];
	"100(0)" -> "santa-ip.ipynb"	[label=appearsIn];
	"N_DAYS(0)$0" -> "100(0)"	[label=assignedFrom];
	"5000(0)" -> "santa-ip.ipynb"	[label=appearsIn];
	"N_FAMILIES(0)$0" -> "5000(0)"	[label=assignedFrom];
	"300(0)" -> "santa-ip.ipynb"	[label=appearsIn];
	"MAX_OCCUPANCY(0)$0" -> "300(0)"	[label=assignedFrom];
	"125(0)" -> "santa-ip.ipynb"	[label=appearsIn];
	"MIN_OCCUPANCY(0)$0" -> "125(0)"	[label=assignedFrom];
	"data(0)$0" -> "pd(0)"	[label=read_csv];
	"data(0)$0" -> "/kaggle/input/santa-workshop-tour-2019/family_data.csv(0)"	[label=read_csv];
	"data(0)$0" -> "family_id(0)"	[label=read_csv];
	"/kaggle/input/santa-workshop-tour-2019/family_data.csv(0)" -> "santa-ip.ipynb"	[label=appearsIn];
	"family_id(0)" -> "santa-ip.ipynb"	[label=appearsIn];
	"FAMILY_SIZE(0)$0" -> "data(0)$0"	[label=assignedFrom];
	"DESIRED(0)$0" -> "data(0)$0"	[label=Sub];
	"DESIRED(0)$0" -> "1(0)"	[label=Sub];
	"1(0)" -> "santa-ip.ipynb"	[label=appearsIn];
	"PCOSTM(0)$0" -> "data(0)$0"	[label=GetPreferenceCostMatrix];
	"prediction(0)" -> "santa-ip.ipynb"	[label=appearsIn];
	"pc(0)$0" -> "prediction(0)"	[label=pcost];
	"occ(0)$0" -> "prediction(0)"	[label=pcost];
	"ac(0)$0" -> "occ(0)$0"	[label=acost];
	"_(0)$0" -> "occ(0)$0"	[label=acost];
	"{}, {:.2f}, ({}, {})(0)" -> "santa-ip.ipynb"	[label=appearsIn];
	"print[343/0]" -> "pc(0)$0"	[label=print];
	"print[343/0]" -> "occ(0)$0"	[label=print];
	"print[343/0]" -> "ac(0)$0"	[label=print];
	"print[343/0]" -> "{}, {:.2f}, ({}, {})(0)"	[label=print];
	"new(0)$0" -> "prediction(0)"	[label=copy];
	"findBetterDay4Family[345/0]" -> "new(0)$0"	[label=findBetterDay4Family];
	"2(0)" -> "santa-ip.ipynb"	[label=appearsIn];
	"final(0)$0" -> "new(0)$0"	[label=stochastic_product_search];
	"final(0)$0" -> "2(0)"	[label=stochastic_product_search];
	"final(0)$0" -> "8(0)"	[label=stochastic_product_search];
	"final(0)$0" -> "500000(0)"	[label=stochastic_product_search];
	"final(0)$0" -> "1000(0)"	[label=stochastic_product_search];
	"final(0)$0" -> "50000(0)"	[label=stochastic_product_search];
	"final(0)$0" -> "2019(0)"	[label=stochastic_product_search];
	"8(0)" -> "santa-ip.ipynb"	[label=appearsIn];
	"500000(0)" -> "santa-ip.ipynb"	[label=appearsIn];
	"1000(0)" -> "santa-ip.ipynb"	[label=appearsIn];
	"50000(0)" -> "santa-ip.ipynb"	[label=appearsIn];
	"2019(0)" -> "santa-ip.ipynb"	[label=appearsIn];
	"final(0)$1" -> "2019(0)"	[label=seed_finding];
	"final(0)$1" -> "final(0)$1"	[label=seed_finding];
	"sub(0)$0" -> "pd(0)"	[label=DataFrame];
	"sub(0)$0" -> "N_FAMILIES(0)$0"	[label=DataFrame];
	"sub(0)$0" -> "range(0)"	[label=DataFrame];
	"sub(0)$0" -> "[<_ast.Constant object at 0x7fd500833bb0>](0)"	[label=DataFrame];
	"range(0)" -> "santa-ip.ipynb"	[label=appearsIn];
	"[<_ast.Constant object at 0x7fd500833bb0>](0)" -> "santa-ip.ipynb"	[label=appearsIn];
	"sub(0)$1" -> "1(0)"	[label=Add];
	"sub(0)$1" -> "final(0)$1"	[label=Add];
	"sub(0)$1" -> "sub(0)$0"	[label=Add];
	"sub(0)$2" -> "sub(0)$1"	[label=to_csv];
	"sub(0)$2" -> "submission.csv(0)"	[label=to_csv];
	"submission.csv(0)" -> "santa-ip.ipynb"	[label=appearsIn];
}
