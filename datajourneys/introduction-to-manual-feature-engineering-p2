digraph "" {
	pandas -> "introduction-to-manual-feature-engineering-p2.ipynb"	[label=importedBy];
	"pd(0)" -> pandas	[label=assignedFrom];
	"pd(0)" -> "introduction-to-manual-feature-engineering-p2.ipynb"	[label=appearsIn];
	numpy -> "introduction-to-manual-feature-engineering-p2.ipynb"	[label=importedBy];
	"np(0)" -> "introduction-to-manual-feature-engineering-p2.ipynb"	[label=appearsIn];
	"np(0)" -> numpy	[label=assignedFrom];
	"matplotlib.pyplot" -> "introduction-to-manual-feature-engineering-p2.ipynb"	[label=importedBy];
	"plt(0)" -> "introduction-to-manual-feature-engineering-p2.ipynb"	[label=appearsIn];
	"plt(0)" -> "matplotlib.pyplot"	[label=assignedFrom];
	seaborn -> "introduction-to-manual-feature-engineering-p2.ipynb"	[label=importedBy];
	"sns(0)" -> "introduction-to-manual-feature-engineering-p2.ipynb"	[label=appearsIn];
	"sns(0)" -> seaborn	[label=assignedFrom];
	warnings -> "introduction-to-manual-feature-engineering-p2.ipynb"	[label=importedBy];
	"warnings(0)" -> "introduction-to-manual-feature-engineering-p2.ipynb"	[label=appearsIn];
	"warnings(0)" -> warnings	[label=assignedFrom];
	"warnings(0)$0" -> "warnings(0)"	[label=filterwarnings];
	"warnings(0)$0" -> "ignore(0)"	[label=filterwarnings];
	"ignore(0)" -> "introduction-to-manual-feature-engineering-p2.ipynb"	[label=appearsIn];
	"plt(0)$0" -> "plt(0)"	[label=use];
	"plt(0)$0" -> "fivethirtyeight(0)"	[label=use];
	"fivethirtyeight(0)" -> "introduction-to-manual-feature-engineering-p2.ipynb"	[label=appearsIn];
	gc -> "introduction-to-manual-feature-engineering-p2.ipynb"	[label=importedBy];
	"gc(0)" -> "introduction-to-manual-feature-engineering-p2.ipynb"	[label=appearsIn];
	"gc(0)" -> gc	[label=assignedFrom];
	"df(1)" -> "agg_numeric[0]"	[label=_argToVar];
	"parent_var(1)" -> "agg_numeric[1]"	[label=_argToVar];
	"df_name(1)" -> "agg_numeric[2]"	[label=_argToVar];
	"col(1)" -> "df(1)"	[label=iteratorOf];
	"df(1)$0" -> "df(1)"	[label=drop];
	"df(1)$0" -> "col(1)"	[label=drop];
	"parent_ids(1)$0" -> "parent_var(1)"	[label=copy];
	"parent_ids(1)$0" -> "df(1)$0"	[label=copy];
	"numeric_df(1)$0" -> "df(1)$0"	[label=copy];
	"numeric_df(1)$0" -> "number(1)"	[label=copy];
	"numeric_df(1)$1" -> "parent_ids(1)$0"	[label=assignedFrom];
	"numeric_df(1)$1" -> "numeric_df(1)$0"	[label=assignedFrom];
	"agg(1)$0" -> "parent_var(1)"	[label=agg];
	"agg(1)$0" -> "numeric_df(1)$1"	[label=agg];
	"agg(1)$0" -> "[<_ast.Constant object at 0x7fd4902abdc0>, <_ast.Constant object at 0x7fd4902abaf0>, <_ast.Constant object at 0x7fd4902ab6a0>, <_\
ast.Constant object at 0x7fd4902ab730>, <_ast.Constant object at 0x7fd4902abc70>](1)"	[label=agg];
	"columns(1)$0" -> "[](1)"	[label=assignedFrom];
	"var(1)" -> "agg(1)$0"	[label=iteratorOf];
	"var(1)" -> "0(1)"	[label=iteratorOf];
	"stat(1)" -> "agg(1)$0"	[label=iteratorOf];
	"stat(1)" -> "1(1)"	[label=iteratorOf];
	"columns(1)$1" -> "df_name(1)"	[label=append];
	"columns(1)$1" -> "columns(1)$0"	[label=append];
	"columns(1)$1" -> "var(1)"	[label=append];
	"columns(1)$1" -> "stat(1)"	[label=append];
	"columns(1)$1" -> "\%s_\%s_\%s(1)"	[label=append];
	"agg(1)$1" -> "agg(1)$0"	[label=assignedFrom];
	"agg(1)$1" -> "columns(1)$1"	[label=assignedFrom];
	"_(1)$0" -> "1(1)"	[label=unique];
	"_(1)$0" -> "agg(1)$1"	[label=unique];
	"_(1)$0" -> "np(1)"	[label=unique];
	"_(1)$0" -> "True(1)"	[label=unique];
	"idx(1)$0" -> "1(1)"	[label=unique];
	"idx(1)$0" -> "agg(1)$1"	[label=unique];
	"idx(1)$0" -> "np(1)"	[label=unique];
	"idx(1)$0" -> "True(1)"	[label=unique];
	"agg(1)$2" -> "agg(1)$1"	[label=assignedFrom];
	"agg(1)$2" -> "idx(1)$0"	[label=assignedFrom];
	"df(2)" -> "agg_categorical[0]"	[label=_argToVar];
	"parent_var(2)" -> "agg_categorical[1]"	[label=_argToVar];
	"df_name(2)" -> "agg_categorical[2]"	[label=_argToVar];
	"categorical(2)$0" -> "df(2)"	[label=get_dummies];
	"categorical(2)$0" -> "pd(2)"	[label=get_dummies];
	"categorical(2)$0" -> "category(2)"	[label=get_dummies];
	"categorical(2)$1" -> "df(2)"	[label=assignedFrom];
	"categorical(2)$1" -> "parent_var(2)"	[label=assignedFrom];
	"categorical(2)$1" -> "categorical(2)$0"	[label=assignedFrom];
	"categorical(2)$2" -> "parent_var(2)"	[label=agg];
	"categorical(2)$2" -> "categorical(2)$1"	[label=agg];
	"categorical(2)$2" -> "[<_ast.Constant object at 0x7fd500999c10>, <_ast.Constant object at 0x7fd500999760>, <_ast.Constant object at 0x7fd5009992e0>](2)"	[label=agg];
	"column_names(2)$0" -> "[](2)"	[label=assignedFrom];
	"var(2)" -> "categorical(2)$2"	[label=iteratorOf];
	"var(2)" -> "0(2)"	[label=iteratorOf];
	"stat(2)" -> "[<_ast.Constant object at 0x7fd5007f0a30>, <_ast.Constant object at 0x7fd5007f05b0>, <_ast.Constant object at 0x7fd5007f0bb0>](2)"	[label=iteratorOf];
	"column_names(2)$1" -> "df_name(2)"	[label=append];
	"column_names(2)$1" -> "column_names(2)$0"	[label=append];
	"column_names(2)$1" -> "var(2)"	[label=append];
	"column_names(2)$1" -> "stat(2)"	[label=append];
	"column_names(2)$1" -> "\%s_\%s_\%s(2)"	[label=append];
	"categorical(2)$3" -> "categorical(2)$2"	[label=assignedFrom];
	"categorical(2)$3" -> "column_names(2)$1"	[label=assignedFrom];
	"_(2)$0" -> "categorical(2)$3"	[label=unique];
	"_(2)$0" -> "np(2)"	[label=unique];
	"_(2)$0" -> "1(2)"	[label=unique];
	"_(2)$0" -> "True(2)"	[label=unique];
	"idx(2)$0" -> "categorical(2)$3"	[label=unique];
	"idx(2)$0" -> "np(2)"	[label=unique];
	"idx(2)$0" -> "1(2)"	[label=unique];
	"idx(2)$0" -> "True(2)"	[label=unique];
	"categorical(2)$4" -> "categorical(2)$3"	[label=assignedFrom];
	"categorical(2)$4" -> "idx(2)$0"	[label=assignedFrom];
	"var_name(3)" -> "kde_target[0]"	[label=_argToVar];
	"df(3)" -> "kde_target[1]"	[label=_argToVar];
	"corr(3)$0" -> "var_name(3)"	[label=corr];
	"corr(3)$0" -> "df(3)"	[label=corr];
	"corr(3)$0" -> "TARGET(3)"	[label=corr];
	"avg_repaid(3)$0" -> "var_name(3)"	[label=median];
	"avg_repaid(3)$0" -> "df(3)"	[label=median];
	"avg_repaid(3)$0" -> "TARGET(3)"	[label=median];
	"avg_repaid(3)$0" -> "0(3)"	[label=median];
	"avg_not_repaid(3)$0" -> "var_name(3)"	[label=median];
	"avg_not_repaid(3)$0" -> "df(3)"	[label=median];
	"avg_not_repaid(3)$0" -> "TARGET(3)"	[label=median];
	"avg_not_repaid(3)$0" -> "1(3)"	[label=median];
	"plt(3)$0" -> "plt(3)"	[label=figure];
	"sns(3)$0" -> "var_name(3)"	[label=kdeplot];
	"sns(3)$0" -> "df(3)"	[label=kdeplot];
	"sns(3)$0" -> "TARGET(3)"	[label=kdeplot];
	"sns(3)$0" -> "0(3)"	[label=kdeplot];
	"sns(3)$0" -> "sns(3)"	[label=kdeplot];
	"sns(3)$1" -> "var_name(3)"	[label=kdeplot];
	"sns(3)$1" -> "df(3)"	[label=kdeplot];
	"sns(3)$1" -> "TARGET(3)"	[label=kdeplot];
	"sns(3)$1" -> "1(3)"	[label=kdeplot];
	"sns(3)$1" -> "sns(3)$0"	[label=kdeplot];
	"plt(3)$1" -> "var_name(3)"	[label=xlabel];
	"plt(3)$1" -> "plt(3)$0"	[label=xlabel];
	"plt(3)$2" -> "plt(3)$1"	[label=ylabel];
	"plt(3)$2" -> "Density(3)"	[label=ylabel];
	"plt(3)$3" -> "var_name(3)"	[label=title];
	"plt(3)$3" -> "plt(3)$2"	[label=title];
	"plt(3)$3" -> "\%s Distribution(3)"	[label=title];
	"plt(3)$4" -> "plt(3)$3"	[label=legend];
	"print[146/4]" -> "var_name(3)"	[label=print];
	"print[146/4]" -> "corr(3)$0"	[label=print];
	"print[146/4]" -> "The correlation between \%s and the TARGET is \%0.4f(3)"	[label=print];
	"print[148/4]" -> "avg_not_repaid(3)$0"	[label=print];
	"print[148/4]" -> "Median value for loan that was not repaid = \%0.4f(3)"	[label=print];
	"print[149/4]" -> "avg_repaid(3)$0"	[label=print];
	"print[149/4]" -> "Median value for loan that was repaid =     \%0.4f(3)"	[label=print];
	sys -> "introduction-to-manual-feature-engineering-p2.ipynb"	[label=importedBy];
	"sys(0)" -> "introduction-to-manual-feature-engineering-p2.ipynb"	[label=appearsIn];
	"sys(0)" -> sys	[label=assignedFrom];
	"df(4)" -> "return_size[0]"	[label=_argToVar];
	"df(5)" -> "convert_types[0]"	[label=_argToVar];
	"print_info(5)" -> "convert_types[1]"	[label=_argToVar];
	"original_memory(5)$0" -> "df(5)"	[label=sum];
	"c(5)" -> "df(5)"	[label=iteratorOf];
	"df(5)$0" -> "df(5)"	[label=astype];
	"df(5)$0" -> "c(5)"	[label=astype];
	"df(5)$0" -> "0(5)"	[label=astype];
	"df(5)$0" -> "np(5)"	[label=astype];
	"df(5)$1" -> "c(5)"	[label=astype];
	"df(5)$1" -> "df(5)$0"	[label=astype];
	"df(5)$1" -> "category(5)"	[label=astype];
	"df(5)$2" -> "c(5)"	[label=astype];
	"df(5)$2" -> "df(5)$1"	[label=astype];
	"df(5)$2" -> "bool(5)"	[label=astype];
	"df(5)$3" -> "c(5)"	[label=astype];
	"df(5)$3" -> "np(5)"	[label=astype];
	"df(5)$3" -> "df(5)$2"	[label=astype];
	"df(5)$4" -> "c(5)"	[label=astype];
	"df(5)$4" -> "np(5)"	[label=astype];
	"df(5)$4" -> "df(5)$3"	[label=astype];
	"new_memory(5)$0" -> "df(5)$4"	[label=sum];
	"print[187/8]" -> "original_memory(5)$0"	[label=print];
	"print[187/8]" -> "Original Memory Usage: (5)"	[label=print];
	"print[187/8]" -> "round(5)"	[label=print];
	"print[187/8]" -> "1000000000.0(5)"	[label=print];
	"print[187/8]" -> "2(5)"	[label=print];
	"print[187/8]" -> " gb.(5)"	[label=print];
	"print[188/8]" -> "new_memory(5)$0"	[label=print];
	"print[188/8]" -> "round(5)"	[label=print];
	"print[188/8]" -> "1000000000.0(5)"	[label=print];
	"print[188/8]" -> "2(5)"	[label=print];
	"print[188/8]" -> " gb.(5)"	[label=print];
	"print[188/8]" -> "New Memory Usage: (5)"	[label=print];
	"previous(0)$0" -> "pd(0)"	[label=read_csv];
	"previous(0)$0" -> "../input/previous_application.csv(0)"	[label=read_csv];
	"../input/previous_application.csv(0)" -> "introduction-to-manual-feature-engineering-p2.ipynb"	[label=appearsIn];
	"previous(0)$1" -> "previous(0)$0"	[label=convert_types];
	"previous(0)$1" -> "True(0)"	[label=convert_types];
	"True(0)" -> "introduction-to-manual-feature-engineering-p2.ipynb"	[label=appearsIn];
	"previous(0)$2" -> "previous(0)$1"	[label=head];
	"previous_agg(0)$0" -> "previous(0)$2"	[label=agg_numeric];
	"previous_agg(0)$0" -> "SK_ID_CURR(0)"	[label=agg_numeric];
	"SK_ID_CURR(0)" -> "introduction-to-manual-feature-engineering-p2.ipynb"	[label=appearsIn];
	"Previous aggregation shape: (0)" -> "introduction-to-manual-feature-engineering-p2.ipynb"	[label=appearsIn];
	"print[196/0]" -> "previous_agg(0)$0"	[label=print];
	"print[196/0]" -> "Previous aggregation shape: (0)"	[label=print];
	"previous_agg(0)$1" -> "previous_agg(0)$0"	[label=head];
	"previous_counts(0)$0" -> "previous(0)$2"	[label=agg_categorical];
	"previous_counts(0)$0" -> "SK_ID_CURR(0)"	[label=agg_categorical];
	"Previous counts shape: (0)" -> "introduction-to-manual-feature-engineering-p2.ipynb"	[label=appearsIn];
	"print[200/0]" -> "previous_counts(0)$0"	[label=print];
	"print[200/0]" -> "Previous counts shape: (0)"	[label=print];
	"previous_counts(0)$1" -> "previous_counts(0)$0"	[label=head];
	"train(0)$0" -> "pd(0)"	[label=read_csv];
	"train(0)$0" -> "../input/application_train.csv(0)"	[label=read_csv];
	"../input/application_train.csv(0)" -> "introduction-to-manual-feature-engineering-p2.ipynb"	[label=appearsIn];
	"train(0)$1" -> "train(0)$0"	[label=convert_types];
	"test(0)$0" -> "pd(0)"	[label=read_csv];
	"test(0)$0" -> "../input/application_test.csv(0)"	[label=read_csv];
	"../input/application_test.csv(0)" -> "introduction-to-manual-feature-engineering-p2.ipynb"	[label=appearsIn];
	"test(0)$1" -> "test(0)$0"	[label=convert_types];
	"train(0)$2" -> "SK_ID_CURR(0)"	[label=merge];
	"train(0)$2" -> "previous_counts(0)$1"	[label=merge];
	"train(0)$2" -> "train(0)$1"	[label=merge];
	"train(0)$2" -> "left(0)"	[label=merge];
	"left(0)" -> "introduction-to-manual-feature-engineering-p2.ipynb"	[label=appearsIn];
	"train(0)$3" -> "SK_ID_CURR(0)"	[label=merge];
	"train(0)$3" -> "previous_agg(0)$1"	[label=merge];
	"train(0)$3" -> "train(0)$2"	[label=merge];
	"train(0)$3" -> "left(0)"	[label=merge];
	"test(0)$2" -> "SK_ID_CURR(0)"	[label=merge];
	"test(0)$2" -> "previous_counts(0)$1"	[label=merge];
	"test(0)$2" -> "test(0)$1"	[label=merge];
	"test(0)$2" -> "left(0)"	[label=merge];
	"test(0)$3" -> "SK_ID_CURR(0)"	[label=merge];
	"test(0)$3" -> "previous_agg(0)$1"	[label=merge];
	"test(0)$3" -> "left(0)"	[label=merge];
	"test(0)$3" -> "test(0)$2"	[label=merge];
	"gc(0)$0" -> "gc(0)"	[label=enable];
	"gc(0)$1" -> "gc(0)$0"	[label=collect];
	"df(6)" -> "missing_values_table[0]"	[label=_argToVar];
	"print_info(6)" -> "missing_values_table[1]"	[label=_argToVar];
	"mis_val(6)$0" -> "df(6)"	[label=sum];
	"mis_val_percent(6)$0" -> "df(6)"	[label=Div];
	"mis_val_percent(6)$0" -> "100(6)"	[label=Div];
	"mis_val_percent(6)$0" -> "len(6)"	[label=Div];
	"mis_val_table(6)$0" -> "pd(6)"	[label=concat];
	"mis_val_table(6)$0" -> "[<_ast.Name object at 0x7fd4d09735b0>, <_ast.Name object at 0x7fd4d0973580>](6)"	[label=concat];
	"mis_val_table(6)$0" -> "1(6)"	[label=concat];
	"mis_val_table_ren_columns(6)$0" -> "mis_val_table(6)$0"	[label=rename];
	"mis_val_table_ren_columns(6)$0" -> "1(6)"	[label=rename];
	"mis_val_table_ren_columns(6)$0" -> "0(6)"	[label=rename];
	"mis_val_table_ren_columns(6)$0" -> "Missing Values(6)"	[label=rename];
	"mis_val_table_ren_columns(6)$0" -> "\% of Total Values(6)"	[label=rename];
	"mis_val_table_ren_columns(6)$1" -> "1(6)"	[label=round];
	"mis_val_table_ren_columns(6)$1" -> "mis_val_table_ren_columns(6)$0"	[label=round];
	"mis_val_table_ren_columns(6)$1" -> "0(6)"	[label=round];
	"mis_val_table_ren_columns(6)$1" -> "\% of Total Values(6)"	[label=round];
	"mis_val_table_ren_columns(6)$1" -> "mis_val_table_ren_columns(6)$1"	[label=round];
	"mis_val_table_ren_columns(6)$1" -> "False(6)"	[label=round];
	"print[240/12]" -> "df(6)"	[label=print];
	"print[240/12]" -> "1(6)"	[label=print];
	"print[240/12]" -> "0(6)"	[label=print];
	"print[240/12]" -> "mis_val_table_ren_columns(6)$1"	[label=print];
	"print[240/12]" -> "Your selected dataframe has (6)"	[label=print];
	"print[240/12]" -> "str(6)"	[label=print];
	"print[240/12]" -> " columns.
There are (6)"	[label=print];
	"print[240/12]" -> " columns that have missing values.(6)"	[label=print];
	"train(7)" -> "remove_missing_columns[0]"	[label=_argToVar];
	"test(7)" -> "remove_missing_columns[1]"	[label=_argToVar];
	"threshold(7)" -> "remove_missing_columns[2]"	[label=_argToVar];
	"train_miss(7)$0" -> "train(7)"	[label=DataFrame];
	"train_miss(7)$0" -> "pd(7)"	[label=DataFrame];
	"train_miss(7)$1" -> "train(7)"	[label=Div];
	"train_miss(7)$1" -> "train_miss(7)$0"	[label=Div];
	"train_miss(7)$1" -> "train_miss(7)$1"	[label=Div];
	"train_miss(7)$1" -> "100(7)"	[label=Div];
	"train_miss(7)$1" -> "0(7)"	[label=Div];
	"train_miss(7)$1" -> "len(7)"	[label=Div];
	"test_miss(7)$0" -> "test(7)"	[label=DataFrame];
	"test_miss(7)$0" -> "pd(7)"	[label=DataFrame];
	"test_miss(7)$1" -> "test(7)"	[label=Div];
	"test_miss(7)$1" -> "100(7)"	[label=Div];
	"test_miss(7)$1" -> "0(7)"	[label=Div];
	"test_miss(7)$1" -> "len(7)"	[label=Div];
	"test_miss(7)$1" -> "test_miss(7)$0"	[label=Div];
	"test_miss(7)$1" -> "test_miss(7)$1"	[label=Div];
	"missing_train_columns(7)$0" -> "threshold(7)"	[label=list];
	"missing_train_columns(7)$0" -> "train_miss(7)$1"	[label=list];
	"missing_train_columns(7)$0" -> "percent(7)"	[label=list];
	"missing_test_columns(7)$0" -> "threshold(7)"	[label=list];
	"missing_test_columns(7)$0" -> "test_miss(7)$1"	[label=list];
	"missing_test_columns(7)$0" -> "percent(7)"	[label=list];
	"missing_columns(7)$0" -> "missing_train_columns(7)$0"	[label=list];
	"missing_columns(7)$0" -> "missing_test_columns(7)$0"	[label=list];
	"missing_columns(7)$0" -> "set(7)"	[label=list];
	"print[262/4]" -> "threshold(7)"	[label=print];
	"print[262/4]" -> "len(7)"	[label=print];
	"print[262/4]" -> "missing_columns(7)$0"	[label=print];
	"print[262/4]" -> "There are \%d columns with greater than \%d\%\% missing values.(7)"	[label=print];
	"train(7)$0" -> "train(7)"	[label=drop];
	"train(7)$0" -> "missing_columns(7)$0"	[label=drop];
	"test(7)$0" -> "test(7)"	[label=drop];
	"test(7)$0" -> "missing_columns(7)$0"	[label=drop];
	"train(0)$4" -> "train(0)$3"	[label=remove_missing_columns];
	"train(0)$4" -> "test(0)$4"	[label=remove_missing_columns];
	"test(0)$4" -> "train(0)$3"	[label=remove_missing_columns];
	"test(0)$4" -> "test(0)$4"	[label=remove_missing_columns];
	"df(8)" -> "aggregate_client[0]"	[label=_argToVar];
	"group_vars(8)" -> "aggregate_client[1]"	[label=_argToVar];
	"df_names(8)" -> "aggregate_client[2]"	[label=_argToVar];
	"df_agg(8)$0" -> "df(8)"	[label=agg_numeric];
	"df_agg(8)$0" -> "group_vars(8)"	[label=agg_numeric];
	"df_agg(8)$0" -> "df_names(8)"	[label=agg_numeric];
	"df_agg(8)$0" -> "0(8)"	[label=agg_numeric];
	"df_counts(8)$0" -> "df(8)"	[label=agg_categorical];
	"df_counts(8)$0" -> "group_vars(8)"	[label=agg_categorical];
	"df_counts(8)$0" -> "df_names(8)"	[label=agg_categorical];
	"df_counts(8)$0" -> "0(8)"	[label=agg_categorical];
	"df_by_loan(8)$0" -> "group_vars(8)"	[label=merge];
	"df_by_loan(8)$0" -> "df_agg(8)$0"	[label=merge];
	"df_by_loan(8)$0" -> "0(8)"	[label=merge];
	"df_by_loan(8)$0" -> "df_counts(8)$0"	[label=merge];
	"df_by_loan(8)$0" -> "outer(8)"	[label=merge];
	"gc(8)$0" -> "gc(8)"	[label=enable];
	"gc(8)$1" -> "gc(8)$0"	[label=collect];
	"df_by_loan(8)$1" -> "df(8)"	[label=merge];
	"df_by_loan(8)$1" -> "group_vars(8)"	[label=merge];
	"df_by_loan(8)$1" -> "0(8)"	[label=merge];
	"df_by_loan(8)$1" -> "df_by_loan(8)$0"	[label=merge];
	"df_by_loan(8)$1" -> "[<_ast.Subscript object at 0x7fd5008171f0>, <_ast.Subscript object at 0x7fd5008172e0>](8)"	[label=merge];
	"df_by_loan(8)$1" -> "left(8)"	[label=merge];
	"df_by_loan(8)$2" -> "df_by_loan(8)$1"	[label=drop];
	"df_by_loan(8)$2" -> "[<_ast.Subscript object at 0x7fd500817790>](8)"	[label=drop];
	"df_by_client(8)$0" -> "group_vars(8)"	[label=agg_numeric];
	"df_by_client(8)$0" -> "df_names(8)"	[label=agg_numeric];
	"df_by_client(8)$0" -> "df_by_loan(8)$2"	[label=agg_numeric];
	"df_by_client(8)$0" -> "1(8)"	[label=agg_numeric];
	"df_by_loan(8)$3" -> "df(8)"	[label=merge];
	"df_by_loan(8)$3" -> "group_vars(8)"	[label=merge];
	"df_by_loan(8)$3" -> "df_agg(8)$0"	[label=merge];
	"df_by_loan(8)$3" -> "0(8)"	[label=merge];
	"df_by_loan(8)$3" -> "left(8)"	[label=merge];
	"df_by_loan(8)$3" -> "[<_ast.Subscript object at 0x7fd500817df0>, <_ast.Subscript object at 0x7fd500817ee0>](8)"	[label=merge];
	"gc(8)$2" -> "gc(8)$1"	[label=enable];
	"gc(8)$3" -> "gc(8)$2"	[label=collect];
	"df_by_loan(8)$4" -> "df_by_loan(8)$3"	[label=drop];
	"df_by_loan(8)$4" -> "[<_ast.Subscript object at 0x7fd5008305e0>](8)"	[label=drop];
	"df_by_client(8)$1" -> "group_vars(8)"	[label=agg_numeric];
	"df_by_client(8)$1" -> "df_names(8)"	[label=agg_numeric];
	"df_by_client(8)$1" -> "1(8)"	[label=agg_numeric];
	"df_by_client(8)$1" -> "df_by_loan(8)$4"	[label=agg_numeric];
	"gc(8)$4" -> "gc(8)$3"	[label=enable];
	"gc(8)$5" -> "gc(8)$4"	[label=collect];
	"cash(0)$0" -> "pd(0)"	[label=read_csv];
	"cash(0)$0" -> "../input/POS_CASH_balance.csv(0)"	[label=read_csv];
	"../input/POS_CASH_balance.csv(0)" -> "introduction-to-manual-feature-engineering-p2.ipynb"	[label=appearsIn];
	"cash(0)$1" -> "True(0)"	[label=convert_types];
	"cash(0)$1" -> "cash(0)$0"	[label=convert_types];
	"cash(0)$2" -> "cash(0)$1"	[label=head];
	"cash_by_client(0)$0" -> "cash(0)$2"	[label=aggregate_client];
	"cash_by_client(0)$0" -> "[<_ast.Constant object at 0x7fd50082c340>, <_ast.Constant object at 0x7fd50082c370>](0)"	[label=aggregate_client];
	"cash_by_client(0)$0" -> "[<_ast.Constant object at 0x7fd50082c430>, <_ast.Constant object at 0x7fd50082c460>](0)"	[label=aggregate_client];
	"[<_ast.Constant object at 0x7fd50082c340>, <_ast.Constant object at 0x7fd50082c370>](0)" -> "introduction-to-manual-feature-engineering-p2.ipynb"	[label=appearsIn];
	"[<_ast.Constant object at 0x7fd50082c430>, <_ast.Constant object at 0x7fd50082c460>](0)" -> "introduction-to-manual-feature-engineering-p2.ipynb"	[label=appearsIn];
	"cash_by_client(0)$1" -> "cash_by_client(0)$0"	[label=head];
	"Cash by Client Shape: (0)" -> "introduction-to-manual-feature-engineering-p2.ipynb"	[label=appearsIn];
	"print[338/0]" -> "cash_by_client(0)$1"	[label=print];
	"print[338/0]" -> "Cash by Client Shape: (0)"	[label=print];
	"train(0)$5" -> "SK_ID_CURR(0)"	[label=merge];
	"train(0)$5" -> "left(0)"	[label=merge];
	"train(0)$5" -> "train(0)$4"	[label=merge];
	"train(0)$5" -> "cash_by_client(0)$1"	[label=merge];
	"test(0)$5" -> "SK_ID_CURR(0)"	[label=merge];
	"test(0)$5" -> "left(0)"	[label=merge];
	"test(0)$5" -> "test(0)$4"	[label=merge];
	"test(0)$5" -> "cash_by_client(0)$1"	[label=merge];
	"gc(0)$2" -> "gc(0)$1"	[label=enable];
	"gc(0)$3" -> "gc(0)$2"	[label=collect];
	"train(0)$6" -> "train(0)$5"	[label=remove_missing_columns];
	"train(0)$6" -> "test(0)$6"	[label=remove_missing_columns];
	"test(0)$6" -> "train(0)$5"	[label=remove_missing_columns];
	"test(0)$6" -> "test(0)$6"	[label=remove_missing_columns];
	"credit(0)$0" -> "pd(0)"	[label=read_csv];
	"credit(0)$0" -> "../input/credit_card_balance.csv(0)"	[label=read_csv];
	"../input/credit_card_balance.csv(0)" -> "introduction-to-manual-feature-engineering-p2.ipynb"	[label=appearsIn];
	"credit(0)$1" -> "True(0)"	[label=convert_types];
	"credit(0)$1" -> "credit(0)$0"	[label=convert_types];
	"credit(0)$2" -> "credit(0)$1"	[label=head];
	"credit_by_client(0)$0" -> "credit(0)$2"	[label=aggregate_client];
	"credit_by_client(0)$0" -> "[<_ast.Constant object at 0x7fd50081f460>, <_ast.Constant object at 0x7fd50081f490>](0)"	[label=aggregate_client];
	"credit_by_client(0)$0" -> "[<_ast.Constant object at 0x7fd50081f580>, <_ast.Constant object at 0x7fd50081f5b0>](0)"	[label=aggregate_client];
	"[<_ast.Constant object at 0x7fd50081f460>, <_ast.Constant object at 0x7fd50081f490>](0)" -> "introduction-to-manual-feature-engineering-p2.ipynb"	[label=appearsIn];
	"[<_ast.Constant object at 0x7fd50081f580>, <_ast.Constant object at 0x7fd50081f5b0>](0)" -> "introduction-to-manual-feature-engineering-p2.ipynb"	[label=appearsIn];
	"credit_by_client(0)$1" -> "credit_by_client(0)$0"	[label=head];
	"Credit by client shape: (0)" -> "introduction-to-manual-feature-engineering-p2.ipynb"	[label=appearsIn];
	"print[351/0]" -> "credit_by_client(0)$1"	[label=print];
	"print[351/0]" -> "Credit by client shape: (0)"	[label=print];
	"train(0)$7" -> "SK_ID_CURR(0)"	[label=merge];
	"train(0)$7" -> "left(0)"	[label=merge];
	"train(0)$7" -> "train(0)$6"	[label=merge];
	"train(0)$7" -> "credit_by_client(0)$1"	[label=merge];
	"test(0)$7" -> "SK_ID_CURR(0)"	[label=merge];
	"test(0)$7" -> "left(0)"	[label=merge];
	"test(0)$7" -> "test(0)$6"	[label=merge];
	"test(0)$7" -> "credit_by_client(0)$1"	[label=merge];
	"gc(0)$4" -> "gc(0)$3"	[label=enable];
	"gc(0)$5" -> "gc(0)$4"	[label=collect];
	"train(0)$8" -> "train(0)$7"	[label=remove_missing_columns];
	"train(0)$8" -> "test(0)$8"	[label=remove_missing_columns];
	"test(0)$8" -> "train(0)$7"	[label=remove_missing_columns];
	"test(0)$8" -> "test(0)$8"	[label=remove_missing_columns];
	"installments(0)$0" -> "pd(0)"	[label=read_csv];
	"installments(0)$0" -> "../input/installments_payments.csv(0)"	[label=read_csv];
	"../input/installments_payments.csv(0)" -> "introduction-to-manual-feature-engineering-p2.ipynb"	[label=appearsIn];
	"installments(0)$1" -> "True(0)"	[label=convert_types];
	"installments(0)$1" -> "installments(0)$0"	[label=convert_types];
	"installments(0)$2" -> "installments(0)$1"	[label=head];
	"installments_by_client(0)$0" -> "installments(0)$2"	[label=aggregate_client];
	"installments_by_client(0)$0" -> "[<_ast.Constant object at 0x7fd500836580>, <_ast.Constant object at 0x7fd5008362b0>](0)"	[label=aggregate_client];
	"installments_by_client(0)$0" -> "[<_ast.Constant object at 0x7fd5008364f0>, <_ast.Constant object at 0x7fd500836520>](0)"	[label=aggregate_client];
	"[<_ast.Constant object at 0x7fd500836580>, <_ast.Constant object at 0x7fd5008362b0>](0)" -> "introduction-to-manual-feature-engineering-p2.ipynb"	[label=appearsIn];
	"[<_ast.Constant object at 0x7fd5008364f0>, <_ast.Constant object at 0x7fd500836520>](0)" -> "introduction-to-manual-feature-engineering-p2.ipynb"	[label=appearsIn];
	"installments_by_client(0)$1" -> "installments_by_client(0)$0"	[label=head];
	"Installments by client shape: (0)" -> "introduction-to-manual-feature-engineering-p2.ipynb"	[label=appearsIn];
	"print[365/0]" -> "installments_by_client(0)$1"	[label=print];
	"print[365/0]" -> "Installments by client shape: (0)"	[label=print];
	"train(0)$9" -> "SK_ID_CURR(0)"	[label=merge];
	"train(0)$9" -> "left(0)"	[label=merge];
	"train(0)$9" -> "train(0)$8"	[label=merge];
	"train(0)$9" -> "installments_by_client(0)$1"	[label=merge];
	"test(0)$9" -> "SK_ID_CURR(0)"	[label=merge];
	"test(0)$9" -> "left(0)"	[label=merge];
	"test(0)$9" -> "test(0)$8"	[label=merge];
	"test(0)$9" -> "installments_by_client(0)$1"	[label=merge];
	"gc(0)$6" -> "gc(0)$5"	[label=enable];
	"gc(0)$7" -> "gc(0)$6"	[label=collect];
	"train(0)$10" -> "train(0)$9"	[label=remove_missing_columns];
	"train(0)$10" -> "test(0)$10"	[label=remove_missing_columns];
	"test(0)$10" -> "train(0)$9"	[label=remove_missing_columns];
	"test(0)$10" -> "test(0)$10"	[label=remove_missing_columns];
	"Final Training Shape: (0)" -> "introduction-to-manual-feature-engineering-p2.ipynb"	[label=appearsIn];
	"print[374/0]" -> "train(0)$10"	[label=print];
	"print[374/0]" -> "Final Training Shape: (0)"	[label=print];
	"Final Testing Shape: (0)" -> "introduction-to-manual-feature-engineering-p2.ipynb"	[label=appearsIn];
	"print[375/0]" -> "test(0)$10"	[label=print];
	"print[375/0]" -> "Final Testing Shape: (0)"	[label=print];
	"Final training size: (0)" -> "introduction-to-manual-feature-engineering-p2.ipynb"	[label=appearsIn];
	"print[376/0]" -> "train(0)$10"	[label=print];
	"print[376/0]" -> "Final training size: (0)"	[label=print];
	"print[376/0]" -> "return_size(0)"	[label=print];
	"return_size(0)" -> "introduction-to-manual-feature-engineering-p2.ipynb"	[label=appearsIn];
	"Final testing size: (0)" -> "introduction-to-manual-feature-engineering-p2.ipynb"	[label=appearsIn];
	"print[377/0]" -> "test(0)$10"	[label=print];
	"print[377/0]" -> "return_size(0)"	[label=print];
	"print[377/0]" -> "Final testing size: (0)"	[label=print];
	"train(0)$11" -> "train(0)$10"	[label=reset_index];
	"test(0)$11" -> "test(0)$10"	[label=reset_index];
	"features(9)" -> "model[0]"	[label=_argToVar];
	"test_features(9)" -> "model[1]"	[label=_argToVar];
	"encoding(9)" -> "model[2]"	[label=_argToVar];
	"n_folds(9)" -> "model[3]"	[label=_argToVar];
	"train_ids(9)$0" -> "features(9)"	[label=assignedFrom];
	"train_ids(9)$0" -> "SK_ID_CURR(9)"	[label=assignedFrom];
	"test_ids(9)$0" -> "test_features(9)"	[label=assignedFrom];
	"test_ids(9)$0" -> "SK_ID_CURR(9)"	[label=assignedFrom];
	"labels(9)$0" -> "features(9)"	[label=assignedFrom];
	"labels(9)$0" -> "TARGET(9)"	[label=assignedFrom];
	"features(9)$0" -> "features(9)"	[label=drop];
	"features(9)$0" -> "[<_ast.Constant object at 0x7fd5008284f0>, <_ast.Constant object at 0x7fd500828520>](9)"	[label=drop];
	"test_features(9)$0" -> "test_features(9)"	[label=drop];
	"test_features(9)$0" -> "[<_ast.Constant object at 0x7fd5008286d0>](9)"	[label=drop];
	"features(9)$1" -> "features(9)$1"	[label=get_dummies];
	"features(9)$1" -> "pd(9)"	[label=get_dummies];
	"test_features(9)$1" -> "pd(9)"	[label=get_dummies];
	"test_features(9)$1" -> "test_features(9)$1"	[label=get_dummies];
	"features(9)$2" -> "features(9)$1"	[label=align];
	"features(9)$2" -> "test_features(9)$2"	[label=align];
	"features(9)$2" -> "inner(9)"	[label=align];
	"features(9)$2" -> "1(9)"	[label=align];
	"test_features(9)$2" -> "features(9)$1"	[label=align];
	"test_features(9)$2" -> "test_features(9)$2"	[label=align];
	"test_features(9)$2" -> "inner(9)"	[label=align];
	"test_features(9)$2" -> "1(9)"	[label=align];
	"cat_indices(9)$0" -> "auto(9)"	[label=assignedFrom];
	"cat_indices(9)$1" -> "[](9)"	[label=assignedFrom];
	"i(9)" -> "features(9)$2"	[label=iteratorOf];
	"i(9)" -> "enumerate(9)"	[label=iteratorOf];
	"col(9)" -> "features(9)$2"	[label=iteratorOf];
	"col(9)" -> "enumerate(9)"	[label=iteratorOf];
	"features(9)$3" -> "features(9)$2"	[label=fit_transform];
	"features(9)$3" -> "1(9)"	[label=fit_transform];
	"features(9)$3" -> "col(9)"	[label=fit_transform];
	"features(9)$3" -> "features(9)$3"	[label=fit_transform];
	"features(9)$3" -> "label_encoder(9)"	[label=fit_transform];
	"features(9)$3" -> "np(9)"	[label=fit_transform];
	"features(9)$3" -> "str(9)"	[label=fit_transform];
	"test_features(9)$3" -> "test_features(9)$2"	[label=transform];
	"test_features(9)$3" -> "1(9)"	[label=transform];
	"test_features(9)$3" -> "col(9)"	[label=transform];
	"test_features(9)$3" -> "label_encoder(9)"	[label=transform];
	"test_features(9)$3" -> "np(9)"	[label=transform];
	"test_features(9)$3" -> "str(9)"	[label=transform];
	"test_features(9)$3" -> "test_features(9)$3"	[label=transform];
	"cat_indices(9)$2" -> "cat_indices(9)$1"	[label=append];
	"cat_indices(9)$2" -> "i(9)"	[label=append];
	"print[459/4]" -> "features(9)$3"	[label=print];
	"print[459/4]" -> "Training Data Shape: (9)"	[label=print];
	"print[460/4]" -> "test_features(9)$3"	[label=print];
	"print[460/4]" -> "Testing Data Shape: (9)"	[label=print];
	"feature_names(9)$0" -> "features(9)$3"	[label=list];
	"features(9)$4" -> "np(9)"	[label=array];
	"features(9)$4" -> "features(9)$4"	[label=array];
	"test_features(9)$4" -> "np(9)"	[label=array];
	"test_features(9)$4" -> "test_features(9)$4"	[label=array];
	"k_fold(9)$0" -> "n_folds(9)"	[label=KFold];
	"k_fold(9)$0" -> "False(9)"	[label=KFold];
	"k_fold(9)$0" -> "50(9)"	[label=KFold];
	"feature_importance_values(9)$0" -> "np(9)"	[label=zeros];
	"feature_importance_values(9)$0" -> "feature_names(9)$0"	[label=zeros];
	"feature_importance_values(9)$0" -> "len(9)"	[label=zeros];
	"test_predictions(9)$0" -> "np(9)"	[label=zeros];
	"test_predictions(9)$0" -> "test_features(9)$4"	[label=zeros];
	"test_predictions(9)$0" -> "0(9)"	[label=zeros];
	"out_of_fold(9)$0" -> "np(9)"	[label=zeros];
	"out_of_fold(9)$0" -> "features(9)$4"	[label=zeros];
	"out_of_fold(9)$0" -> "0(9)"	[label=zeros];
	"valid_scores(9)$0" -> "[](9)"	[label=assignedFrom];
	"train_scores(9)$0" -> "[](9)"	[label=assignedFrom];
	"train_indices(9)" -> "features(9)$4"	[label=iteratorOf];
	"train_indices(9)" -> "k_fold(9)$0"	[label=iteratorOf];
	"valid_indices(9)" -> "features(9)$4"	[label=iteratorOf];
	"valid_indices(9)" -> "k_fold(9)$0"	[label=iteratorOf];
	"train_features(9)$0" -> "labels(9)$0"	[label=assignedFrom];
	"train_features(9)$0" -> "features(9)$4"	[label=assignedFrom];
	"train_features(9)$0" -> "train_indices(9)"	[label=assignedFrom];
	"train_labels(9)$0" -> "labels(9)$0"	[label=assignedFrom];
	"train_labels(9)$0" -> "features(9)$4"	[label=assignedFrom];
	"train_labels(9)$0" -> "train_indices(9)"	[label=assignedFrom];
	"valid_features(9)$0" -> "labels(9)$0"	[label=assignedFrom];
	"valid_features(9)$0" -> "features(9)$4"	[label=assignedFrom];
	"valid_features(9)$0" -> "valid_indices(9)"	[label=assignedFrom];
	"valid_labels(9)$0" -> "labels(9)$0"	[label=assignedFrom];
	"valid_labels(9)$0" -> "features(9)$4"	[label=assignedFrom];
	"valid_labels(9)$0" -> "valid_indices(9)"	[label=assignedFrom];
	"model(9)$0" -> "1(9)"	[label=LGBMClassifier];
	"model(9)$0" -> "50(9)"	[label=LGBMClassifier];
	"model(9)$0" -> "lgb(9)"	[label=LGBMClassifier];
	"model(9)$0" -> "10000(9)"	[label=LGBMClassifier];
	"model(9)$0" -> "binary(9)"	[label=LGBMClassifier];
	"model(9)$0" -> "balanced(9)"	[label=LGBMClassifier];
	"model(9)$0" -> "0.05(9)"	[label=LGBMClassifier];
	"model(9)$0" -> "0.1(9)"	[label=LGBMClassifier];
	"model(9)$0" -> "0.8(9)"	[label=LGBMClassifier];
	"model(9)$1" -> "train_features(9)$0"	[label=fit];
	"model(9)$1" -> "train_labels(9)$0"	[label=fit];
	"model(9)$1" -> "model(9)$0"	[label=fit];
	"best_iteration(9)$0" -> "model(9)$1"	[label=assignedFrom];
	"feature_importance_values(9)$1" -> "k_fold(9)$0"	[label=Add];
	"feature_importance_values(9)$1" -> "feature_importance_values(9)$0"	[label=Add];
	"feature_importance_values(9)$1" -> "model(9)$1"	[label=Add];
	"test_predictions(9)$1" -> "1(9)"	[label=Add];
	"test_predictions(9)$1" -> "test_features(9)$4"	[label=Add];
	"test_predictions(9)$1" -> "k_fold(9)$0"	[label=Add];
	"test_predictions(9)$1" -> "test_predictions(9)$0"	[label=Add];
	"test_predictions(9)$1" -> "model(9)$1"	[label=Add];
	"test_predictions(9)$1" -> "best_iteration(9)$0"	[label=Add];
	"out_of_fold(9)$1" -> "1(9)"	[label=assignedFrom];
	"out_of_fold(9)$1" -> "out_of_fold(9)$0"	[label=assignedFrom];
	"out_of_fold(9)$1" -> "valid_features(9)$0"	[label=assignedFrom];
	"out_of_fold(9)$1" -> "model(9)$1"	[label=assignedFrom];
	"out_of_fold(9)$1" -> "best_iteration(9)$0"	[label=assignedFrom];
	"valid_score(9)$0" -> "model(9)$1"	[label=assignedFrom];
	"valid_score(9)$0" -> "valid(9)"	[label=assignedFrom];
	"valid_score(9)$0" -> "auc(9)"	[label=assignedFrom];
	"train_score(9)$0" -> "model(9)$1"	[label=assignedFrom];
	"train_score(9)$0" -> "auc(9)"	[label=assignedFrom];
	"train_score(9)$0" -> "train(9)"	[label=assignedFrom];
	"valid_scores(9)$1" -> "valid_scores(9)$0"	[label=append];
	"valid_scores(9)$1" -> "valid_score(9)$0"	[label=append];
	"train_scores(9)$1" -> "train_scores(9)$0"	[label=append];
	"train_scores(9)$1" -> "train_score(9)$0"	[label=append];
	"gc(9)$0" -> "gc(9)"	[label=enable];
	"gc(9)$1" -> "gc(9)$0"	[label=collect];
	"submission(9)$0" -> "SK_ID_CURR(9)"	[label=DataFrame];
	"submission(9)$0" -> "test_ids(9)$0"	[label=DataFrame];
	"submission(9)$0" -> "TARGET(9)"	[label=DataFrame];
	"submission(9)$0" -> "pd(9)"	[label=DataFrame];
	"submission(9)$0" -> "test_predictions(9)$1"	[label=DataFrame];
	"feature_importances(9)$0" -> "pd(9)"	[label=DataFrame];
	"feature_importances(9)$0" -> "feature_names(9)$0"	[label=DataFrame];
	"feature_importances(9)$0" -> "feature_importance_values(9)$1"	[label=DataFrame];
	"feature_importances(9)$0" -> "feature(9)"	[label=DataFrame];
	"feature_importances(9)$0" -> "importance(9)"	[label=DataFrame];
	"valid_auc(9)$0" -> "labels(9)$0"	[label=roc_auc_score];
	"valid_auc(9)$0" -> "out_of_fold(9)$1"	[label=roc_auc_score];
	"valid_scores(9)$2" -> "valid_scores(9)$1"	[label=append];
	"valid_scores(9)$2" -> "valid_auc(9)$0"	[label=append];
	"train_scores(9)$2" -> "np(9)"	[label=append];
	"train_scores(9)$2" -> "train_scores(9)$1"	[label=append];
	"train_scores(9)$2" -> "train_scores(9)$2"	[label=append];
	"fold_names(9)$0" -> "n_folds(9)"	[label=list];
	"fold_names(9)$0" -> "range(9)"	[label=list];
	"fold_names(9)$1" -> "fold_names(9)$0"	[label=append];
	"fold_names(9)$1" -> "overall(9)"	[label=append];
	"metrics(9)$0" -> "pd(9)"	[label=DataFrame];
	"metrics(9)$0" -> "valid(9)"	[label=DataFrame];
	"metrics(9)$0" -> "train(9)"	[label=DataFrame];
	"metrics(9)$0" -> "valid_scores(9)$2"	[label=DataFrame];
	"metrics(9)$0" -> "train_scores(9)$2"	[label=DataFrame];
	"metrics(9)$0" -> "fold_names(9)$1"	[label=DataFrame];
	"metrics(9)$0" -> "fold(9)"	[label=DataFrame];
	"submission(0)$0" -> "train(0)$11"	[label=model];
	"submission(0)$0" -> "test(0)$11"	[label=model];
	"fi(0)$0" -> "train(0)$11"	[label=model];
	"fi(0)$0" -> "test(0)$11"	[label=model];
	"metrics(0)$0" -> "train(0)$11"	[label=model];
	"metrics(0)$0" -> "test(0)$11"	[label=model];
	"submission(0)$1" -> "submission(0)$0"	[label=to_csv];
	"submission(0)$1" -> "submission_manualp2.csv(0)"	[label=to_csv];
	"submission_manualp2.csv(0)" -> "introduction-to-manual-feature-engineering-p2.ipynb"	[label=appearsIn];
}
