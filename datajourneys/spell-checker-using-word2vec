strict digraph "" {
	numpy -> "spell-checker-using-word2vec.ipynb"	[label=importedBy];
	"np(0)" -> numpy	[label=assignedFrom];
	"np(0)" -> "spell-checker-using-word2vec.ipynb"	[label=appearsIn];
	pandas -> "spell-checker-using-word2vec.ipynb"	[label=importedBy];
	"pd(0)" -> "spell-checker-using-word2vec.ipynb"	[label=appearsIn];
	"pd(0)" -> pandas	[label=assignedFrom];
	subprocess -> "spell-checker-using-word2vec.ipynb"	[label=importedBy];
	check_output -> subprocess	[label=importedBy];
	"check_output(0)" -> "spell-checker-using-word2vec.ipynb"	[label=appearsIn];
	"check_output(0)" -> check_output	[label=assignedFrom];
	"print[24/0]" -> "check_output(0)"	[label=print];
	"print[24/0]" -> "[<_ast.Constant object at 0x7fd4c048e610>, <_ast.Constant object at 0x7fd4c048eb50>](0)"	[label=print];
	"print[24/0]" -> "utf8(0)"	[label=print];
	"[<_ast.Constant object at 0x7fd4c048e610>, <_ast.Constant object at 0x7fd4c048eb50>](0)" -> "spell-checker-using-word2vec.ipynb"	[label=appearsIn];
	"utf8(0)" -> "spell-checker-using-word2vec.ipynb"	[label=appearsIn];
	gensim -> "spell-checker-using-word2vec.ipynb"	[label=importedBy];
	"gensim(0)" -> "spell-checker-using-word2vec.ipynb"	[label=appearsIn];
	"gensim(0)" -> gensim	[label=assignedFrom];
	"model(0)$0" -> "gensim(0)"	[label=load_word2vec_format];
	"model(0)$0" -> "../data/GoogleNews-vectors-negative300.bin.gz(0)"	[label=load_word2vec_format];
	"model(0)$0" -> "True(0)"	[label=load_word2vec_format];
	"../data/GoogleNews-vectors-negative300.bin.gz(0)" -> "spell-checker-using-word2vec.ipynb"	[label=appearsIn];
	"True(0)" -> "spell-checker-using-word2vec.ipynb"	[label=appearsIn];
	"words(0)$0" -> "model(0)$0"	[label=assignedFrom];
	"enumerate(0)" -> "spell-checker-using-word2vec.ipynb"	[label=appearsIn];
	"i(0)" -> "spell-checker-using-word2vec.ipynb"	[label=appearsIn];
	"i(0)" -> "words(0)$0"	[label=iteratorOf];
	"i(0)" -> "enumerate(0)"	[label=iteratorOf];
	"word(0)" -> "spell-checker-using-word2vec.ipynb"	[label=appearsIn];
	"word(0)" -> "words(0)$0"	[label=iteratorOf];
	"word(0)" -> "enumerate(0)"	[label=iteratorOf];
	"w_rank(0)" -> "spell-checker-using-word2vec.ipynb"	[label=appearsIn];
	"w_rank(0)$0" -> "i(0)"	[label=assignedFrom];
	"w_rank(0)$0" -> "w_rank(0)"	[label=assignedFrom];
	"WORDS(0)$0" -> "w_rank(0)$0"	[label=assignedFrom];
	re -> "spell-checker-using-word2vec.ipynb"	[label=importedBy];
	"re(0)" -> "spell-checker-using-word2vec.ipynb"	[label=appearsIn];
	"re(0)" -> re	[label=assignedFrom];
	collections -> "spell-checker-using-word2vec.ipynb"	[label=importedBy];
	Counter -> collections	[label=importedBy];
	"Counter(0)" -> "spell-checker-using-word2vec.ipynb"	[label=appearsIn];
	"Counter(0)" -> Counter	[label=assignedFrom];
	"text(1)" -> "words[0]"	[label=_argToVar];
	"word(2)" -> "P[0]"	[label=_argToVar];
	"word(3)" -> "correction[0]"	[label=_argToVar];
	"word(4)" -> "candidates[0]"	[label=_argToVar];
	"words(5)" -> "known[0]"	[label=_argToVar];
	"word(6)" -> "edits1[0]"	[label=_argToVar];
	"letters(6)$0" -> "abcdefghijklmnopqrstuvwxyz(6)"	[label=assignedFrom];
	"splits(6)$0" -> "word(6)"	[label=assignedFrom];
	"splits(6)$0" -> "i(6)"	[label=assignedFrom];
	"splits(6)$0" -> "range(6)"	[label=assignedFrom];
	"splits(6)$0" -> "len(6)"	[label=assignedFrom];
	"splits(6)$0" -> "1(6)"	[label=assignedFrom];
	"deletes(6)$0" -> "splits(6)$0"	[label=assignedFrom];
	"deletes(6)$0" -> "1(6)"	[label=assignedFrom];
	"deletes(6)$0" -> "L(6)"	[label=assignedFrom];
	"deletes(6)$0" -> "R(6)"	[label=assignedFrom];
	"transposes(6)$0" -> "splits(6)$0"	[label=assignedFrom];
	"transposes(6)$0" -> "len(6)"	[label=assignedFrom];
	"transposes(6)$0" -> "1(6)"	[label=assignedFrom];
	"transposes(6)$0" -> "L(6)"	[label=assignedFrom];
	"transposes(6)$0" -> "R(6)"	[label=assignedFrom];
	"transposes(6)$0" -> "0(6)"	[label=assignedFrom];
	"transposes(6)$0" -> "2(6)"	[label=assignedFrom];
	"replaces(6)$0" -> "letters(6)$0"	[label=assignedFrom];
	"replaces(6)$0" -> "splits(6)$0"	[label=assignedFrom];
	"replaces(6)$0" -> "1(6)"	[label=assignedFrom];
	"replaces(6)$0" -> "L(6)"	[label=assignedFrom];
	"replaces(6)$0" -> "R(6)"	[label=assignedFrom];
	"replaces(6)$0" -> "c(6)"	[label=assignedFrom];
	"inserts(6)$0" -> "letters(6)$0"	[label=assignedFrom];
	"inserts(6)$0" -> "splits(6)$0"	[label=assignedFrom];
	"inserts(6)$0" -> "L(6)"	[label=assignedFrom];
	"inserts(6)$0" -> "R(6)"	[label=assignedFrom];
	"inserts(6)$0" -> "c(6)"	[label=assignedFrom];
	"word(7)" -> "edits2[0]"	[label=_argToVar];
}
