digraph "" {
	pandas -> "approaching-almost-any-nlp-problem-on-kaggle.ipynb"	[label=importedBy];
	"pd(0)" -> pandas	[label=assignedFrom];
	"pd(0)" -> "approaching-almost-any-nlp-problem-on-kaggle.ipynb"	[label=appearsIn];
	numpy -> "approaching-almost-any-nlp-problem-on-kaggle.ipynb"	[label=importedBy];
	"np(0)" -> "approaching-almost-any-nlp-problem-on-kaggle.ipynb"	[label=appearsIn];
	"np(0)" -> numpy	[label=assignedFrom];
	xgboost -> "approaching-almost-any-nlp-problem-on-kaggle.ipynb"	[label=importedBy];
	"xgb(0)" -> "approaching-almost-any-nlp-problem-on-kaggle.ipynb"	[label=appearsIn];
	"xgb(0)" -> xgboost	[label=assignedFrom];
	tqdm -> "approaching-almost-any-nlp-problem-on-kaggle.ipynb"	[label=importedBy];
	tqdm -> tqdm	[label=importedBy];
	"tqdm(0)" -> "approaching-almost-any-nlp-problem-on-kaggle.ipynb"	[label=appearsIn];
	"tqdm(0)" -> tqdm	[label=assignedFrom];
	"sklearn.svm" -> "approaching-almost-any-nlp-problem-on-kaggle.ipynb"	[label=importedBy];
	SVC -> "sklearn.svm"	[label=importedBy];
	"SVC(0)" -> "approaching-almost-any-nlp-problem-on-kaggle.ipynb"	[label=appearsIn];
	"SVC(0)" -> SVC	[label=assignedFrom];
	"keras.models" -> "approaching-almost-any-nlp-problem-on-kaggle.ipynb"	[label=importedBy];
	Sequential -> "keras.models"	[label=importedBy];
	"Sequential(0)" -> "approaching-almost-any-nlp-problem-on-kaggle.ipynb"	[label=appearsIn];
	"Sequential(0)" -> Sequential	[label=assignedFrom];
	"keras.layers.recurrent" -> "approaching-almost-any-nlp-problem-on-kaggle.ipynb"	[label=importedBy];
	LSTM -> "keras.layers.recurrent"	[label=importedBy];
	"LSTM(0)" -> "approaching-almost-any-nlp-problem-on-kaggle.ipynb"	[label=appearsIn];
	"LSTM(0)" -> LSTM	[label=assignedFrom];
	GRU -> "keras.layers.recurrent"	[label=importedBy];
	"GRU(0)" -> "approaching-almost-any-nlp-problem-on-kaggle.ipynb"	[label=appearsIn];
	"GRU(0)" -> GRU	[label=assignedFrom];
	"keras.layers.core" -> "approaching-almost-any-nlp-problem-on-kaggle.ipynb"	[label=importedBy];
	Dense -> "keras.layers.core"	[label=importedBy];
	"Dense(0)" -> "approaching-almost-any-nlp-problem-on-kaggle.ipynb"	[label=appearsIn];
	"Dense(0)" -> Dense	[label=assignedFrom];
	Activation -> "keras.layers.core"	[label=importedBy];
	"Activation(0)" -> "approaching-almost-any-nlp-problem-on-kaggle.ipynb"	[label=appearsIn];
	"Activation(0)" -> Activation	[label=assignedFrom];
	Dropout -> "keras.layers.core"	[label=importedBy];
	"Dropout(0)" -> "approaching-almost-any-nlp-problem-on-kaggle.ipynb"	[label=appearsIn];
	"Dropout(0)" -> Dropout	[label=assignedFrom];
	"keras.layers.embeddings" -> "approaching-almost-any-nlp-problem-on-kaggle.ipynb"	[label=importedBy];
	Embedding -> "keras.layers.embeddings"	[label=importedBy];
	"Embedding(0)" -> "approaching-almost-any-nlp-problem-on-kaggle.ipynb"	[label=appearsIn];
	"Embedding(0)" -> Embedding	[label=assignedFrom];
	"keras.layers.normalization" -> "approaching-almost-any-nlp-problem-on-kaggle.ipynb"	[label=importedBy];
	BatchNormalization -> "keras.layers.normalization"	[label=importedBy];
	"BatchNormalization(0)" -> "approaching-almost-any-nlp-problem-on-kaggle.ipynb"	[label=appearsIn];
	"BatchNormalization(0)" -> BatchNormalization	[label=assignedFrom];
	"keras.utils" -> "approaching-almost-any-nlp-problem-on-kaggle.ipynb"	[label=importedBy];
	np_utils -> "keras.utils"	[label=importedBy];
	"np_utils(0)" -> "approaching-almost-any-nlp-problem-on-kaggle.ipynb"	[label=appearsIn];
	"np_utils(0)" -> np_utils	[label=assignedFrom];
	sklearn -> "approaching-almost-any-nlp-problem-on-kaggle.ipynb"	[label=importedBy];
	preprocessing -> sklearn	[label=importedBy];
	"preprocessing(0)" -> "approaching-almost-any-nlp-problem-on-kaggle.ipynb"	[label=appearsIn];
	"preprocessing(0)" -> preprocessing	[label=assignedFrom];
	decomposition -> sklearn	[label=importedBy];
	"decomposition(0)" -> "approaching-almost-any-nlp-problem-on-kaggle.ipynb"	[label=appearsIn];
	"decomposition(0)" -> decomposition	[label=assignedFrom];
	model_selection -> sklearn	[label=importedBy];
	"model_selection(0)" -> "approaching-almost-any-nlp-problem-on-kaggle.ipynb"	[label=appearsIn];
	"model_selection(0)" -> model_selection	[label=assignedFrom];
	metrics -> sklearn	[label=importedBy];
	"metrics(0)" -> "approaching-almost-any-nlp-problem-on-kaggle.ipynb"	[label=appearsIn];
	"metrics(0)" -> metrics	[label=assignedFrom];
	pipeline -> sklearn	[label=importedBy];
	"pipeline(0)" -> "approaching-almost-any-nlp-problem-on-kaggle.ipynb"	[label=appearsIn];
	"pipeline(0)" -> pipeline	[label=assignedFrom];
	"sklearn.model_selection" -> "approaching-almost-any-nlp-problem-on-kaggle.ipynb"	[label=importedBy];
	GridSearchCV -> "sklearn.model_selection"	[label=importedBy];
	"GridSearchCV(0)" -> "approaching-almost-any-nlp-problem-on-kaggle.ipynb"	[label=appearsIn];
	"GridSearchCV(0)" -> GridSearchCV	[label=assignedFrom];
	"sklearn.feature_extraction.text" -> "approaching-almost-any-nlp-problem-on-kaggle.ipynb"	[label=importedBy];
	TfidfVectorizer -> "sklearn.feature_extraction.text"	[label=importedBy];
	"TfidfVectorizer(0)" -> "approaching-almost-any-nlp-problem-on-kaggle.ipynb"	[label=appearsIn];
	"TfidfVectorizer(0)" -> TfidfVectorizer	[label=assignedFrom];
	CountVectorizer -> "sklearn.feature_extraction.text"	[label=importedBy];
	"CountVectorizer(0)" -> "approaching-almost-any-nlp-problem-on-kaggle.ipynb"	[label=appearsIn];
	"CountVectorizer(0)" -> CountVectorizer	[label=assignedFrom];
	"sklearn.decomposition" -> "approaching-almost-any-nlp-problem-on-kaggle.ipynb"	[label=importedBy];
	TruncatedSVD -> "sklearn.decomposition"	[label=importedBy];
	"TruncatedSVD(0)" -> "approaching-almost-any-nlp-problem-on-kaggle.ipynb"	[label=appearsIn];
	"TruncatedSVD(0)" -> TruncatedSVD	[label=assignedFrom];
	"sklearn.linear_model" -> "approaching-almost-any-nlp-problem-on-kaggle.ipynb"	[label=importedBy];
	LogisticRegression -> "sklearn.linear_model"	[label=importedBy];
	"LogisticRegression(0)" -> "approaching-almost-any-nlp-problem-on-kaggle.ipynb"	[label=appearsIn];
	"LogisticRegression(0)" -> LogisticRegression	[label=assignedFrom];
	train_test_split -> "sklearn.model_selection"	[label=importedBy];
	"train_test_split(0)" -> "approaching-almost-any-nlp-problem-on-kaggle.ipynb"	[label=appearsIn];
	"train_test_split(0)" -> train_test_split	[label=assignedFrom];
	"sklearn.naive_bayes" -> "approaching-almost-any-nlp-problem-on-kaggle.ipynb"	[label=importedBy];
	MultinomialNB -> "sklearn.naive_bayes"	[label=importedBy];
	"MultinomialNB(0)" -> "approaching-almost-any-nlp-problem-on-kaggle.ipynb"	[label=appearsIn];
	"MultinomialNB(0)" -> MultinomialNB	[label=assignedFrom];
	"keras.layers" -> "approaching-almost-any-nlp-problem-on-kaggle.ipynb"	[label=importedBy];
	GlobalMaxPooling1D -> "keras.layers"	[label=importedBy];
	"GlobalMaxPooling1D(0)" -> "approaching-almost-any-nlp-problem-on-kaggle.ipynb"	[label=appearsIn];
	"GlobalMaxPooling1D(0)" -> GlobalMaxPooling1D	[label=assignedFrom];
	Conv1D -> "keras.layers"	[label=importedBy];
	"Conv1D(0)" -> "approaching-almost-any-nlp-problem-on-kaggle.ipynb"	[label=appearsIn];
	"Conv1D(0)" -> Conv1D	[label=assignedFrom];
	MaxPooling1D -> "keras.layers"	[label=importedBy];
	"MaxPooling1D(0)" -> "approaching-almost-any-nlp-problem-on-kaggle.ipynb"	[label=appearsIn];
	"MaxPooling1D(0)" -> MaxPooling1D	[label=assignedFrom];
	Flatten -> "keras.layers"	[label=importedBy];
	"Flatten(0)" -> "approaching-almost-any-nlp-problem-on-kaggle.ipynb"	[label=appearsIn];
	"Flatten(0)" -> Flatten	[label=assignedFrom];
	Bidirectional -> "keras.layers"	[label=importedBy];
	"Bidirectional(0)" -> "approaching-almost-any-nlp-problem-on-kaggle.ipynb"	[label=appearsIn];
	"Bidirectional(0)" -> Bidirectional	[label=assignedFrom];
	SpatialDropout1D -> "keras.layers"	[label=importedBy];
	"SpatialDropout1D(0)" -> "approaching-almost-any-nlp-problem-on-kaggle.ipynb"	[label=appearsIn];
	"SpatialDropout1D(0)" -> SpatialDropout1D	[label=assignedFrom];
	"keras.preprocessing" -> "approaching-almost-any-nlp-problem-on-kaggle.ipynb"	[label=importedBy];
	sequence -> "keras.preprocessing"	[label=importedBy];
	"sequence(0)" -> "approaching-almost-any-nlp-problem-on-kaggle.ipynb"	[label=appearsIn];
	"sequence(0)" -> sequence	[label=assignedFrom];
	text -> "keras.preprocessing"	[label=importedBy];
	"text(0)" -> "approaching-almost-any-nlp-problem-on-kaggle.ipynb"	[label=appearsIn];
	"text(0)" -> text	[label=assignedFrom];
	"keras.callbacks" -> "approaching-almost-any-nlp-problem-on-kaggle.ipynb"	[label=importedBy];
	EarlyStopping -> "keras.callbacks"	[label=importedBy];
	"EarlyStopping(0)" -> "approaching-almost-any-nlp-problem-on-kaggle.ipynb"	[label=appearsIn];
	"EarlyStopping(0)" -> EarlyStopping	[label=assignedFrom];
	nltk -> "approaching-almost-any-nlp-problem-on-kaggle.ipynb"	[label=importedBy];
	word_tokenize -> nltk	[label=importedBy];
	"word_tokenize(0)" -> "approaching-almost-any-nlp-problem-on-kaggle.ipynb"	[label=appearsIn];
	"word_tokenize(0)" -> word_tokenize	[label=assignedFrom];
	"nltk.corpus" -> "approaching-almost-any-nlp-problem-on-kaggle.ipynb"	[label=importedBy];
	stopwords -> "nltk.corpus"	[label=importedBy];
	"stopwords(0)" -> "approaching-almost-any-nlp-problem-on-kaggle.ipynb"	[label=appearsIn];
	"stopwords(0)" -> stopwords	[label=assignedFrom];
	"stop_words(0)$0" -> "stopwords(0)"	[label=words];
	"stop_words(0)$0" -> "english(0)"	[label=words];
	"english(0)" -> "approaching-almost-any-nlp-problem-on-kaggle.ipynb"	[label=appearsIn];
	"train(0)$0" -> "pd(0)"	[label=read_csv];
	"train(0)$0" -> "../input/train.csv(0)"	[label=read_csv];
	"../input/train.csv(0)" -> "approaching-almost-any-nlp-problem-on-kaggle.ipynb"	[label=appearsIn];
	"test(0)$0" -> "pd(0)"	[label=read_csv];
	"test(0)$0" -> "../input/test.csv(0)"	[label=read_csv];
	"../input/test.csv(0)" -> "approaching-almost-any-nlp-problem-on-kaggle.ipynb"	[label=appearsIn];
	"sample(0)$0" -> "pd(0)"	[label=read_csv];
	"sample(0)$0" -> "../input/sample_submission.csv(0)"	[label=read_csv];
	"../input/sample_submission.csv(0)" -> "approaching-almost-any-nlp-problem-on-kaggle.ipynb"	[label=appearsIn];
	"train(0)$1" -> "train(0)$0"	[label=head];
	"test(0)$1" -> "test(0)$0"	[label=head];
	"sample(0)$1" -> "sample(0)$0"	[label=head];
	"actual(1)" -> "multiclass_logloss[0]"	[label=_argToVar];
	"predicted(1)" -> "multiclass_logloss[1]"	[label=_argToVar];
	"eps(1)" -> "multiclass_logloss[2]"	[label=_argToVar];
	"actual2(1)$0" -> "actual(1)"	[label=zeros];
	"actual2(1)$0" -> "predicted(1)"	[label=zeros];
	"actual2(1)$0" -> "np(1)"	[label=zeros];
	"actual2(1)$0" -> "0(1)"	[label=zeros];
	"actual2(1)$0" -> "1(1)"	[label=zeros];
	"i(1)" -> "actual(1)"	[label=iteratorOf];
	"i(1)" -> "enumerate(1)"	[label=iteratorOf];
	"val(1)" -> "actual(1)"	[label=iteratorOf];
	"val(1)" -> "enumerate(1)"	[label=iteratorOf];
	"actual2(1)$1" -> "actual2(1)$0"	[label=assignedFrom];
	"actual2(1)$1" -> "1(1)"	[label=assignedFrom];
	"actual(1)$0" -> "actual2(1)$1"	[label=assignedFrom];
	"clip(1)$0" -> "predicted(1)"	[label=clip];
	"clip(1)$0" -> "eps(1)"	[label=clip];
	"clip(1)$0" -> "np(1)"	[label=clip];
	"clip(1)$0" -> "1(1)"	[label=clip];
	"rows(1)$0" -> "0(1)"	[label=assignedFrom];
	"rows(1)$0" -> "actual(1)$0"	[label=assignedFrom];
	"vsota(1)$0" -> "np(1)"	[label=sum];
	"vsota(1)$0" -> "actual(1)$0"	[label=sum];
	"vsota(1)$0" -> "clip(1)$0"	[label=sum];
	"lbl_enc(0)$0" -> "preprocessing(0)"	[label=LabelEncoder];
	"y(0)$0" -> "train(0)$1"	[label=fit_transform];
	"y(0)$0" -> "lbl_enc(0)$0"	[label=fit_transform];
	"xtrain(0)$0" -> "train(0)$1"	[label=train_test_split];
	"xtrain(0)$0" -> "y(0)$0"	[label=train_test_split];
	"xtrain(0)$0" -> "42(0)"	[label=train_test_split];
	"xtrain(0)$0" -> "0.1(0)"	[label=train_test_split];
	"xtrain(0)$0" -> "True(0)"	[label=train_test_split];
	"42(0)" -> "approaching-almost-any-nlp-problem-on-kaggle.ipynb"	[label=appearsIn];
	"0.1(0)" -> "approaching-almost-any-nlp-problem-on-kaggle.ipynb"	[label=appearsIn];
	"True(0)" -> "approaching-almost-any-nlp-problem-on-kaggle.ipynb"	[label=appearsIn];
	"xvalid(0)$0" -> "train(0)$1"	[label=train_test_split];
	"xvalid(0)$0" -> "y(0)$0"	[label=train_test_split];
	"xvalid(0)$0" -> "42(0)"	[label=train_test_split];
	"xvalid(0)$0" -> "0.1(0)"	[label=train_test_split];
	"xvalid(0)$0" -> "True(0)"	[label=train_test_split];
	"ytrain(0)$0" -> "train(0)$1"	[label=train_test_split];
	"ytrain(0)$0" -> "y(0)$0"	[label=train_test_split];
	"ytrain(0)$0" -> "42(0)"	[label=train_test_split];
	"ytrain(0)$0" -> "0.1(0)"	[label=train_test_split];
	"ytrain(0)$0" -> "True(0)"	[label=train_test_split];
	"yvalid(0)$0" -> "train(0)$1"	[label=train_test_split];
	"yvalid(0)$0" -> "y(0)$0"	[label=train_test_split];
	"yvalid(0)$0" -> "42(0)"	[label=train_test_split];
	"yvalid(0)$0" -> "0.1(0)"	[label=train_test_split];
	"yvalid(0)$0" -> "True(0)"	[label=train_test_split];
	"print[54/0]" -> "xtrain(0)$0"	[label=print];
	"print[55/0]" -> "xvalid(0)$0"	[label=print];
	"3(0)" -> "approaching-almost-any-nlp-problem-on-kaggle.ipynb"	[label=appearsIn];
	"tfv(0)$0" -> "english(0)"	[label=TfidfVectorizer];
	"tfv(0)$0" -> "3(0)"	[label=TfidfVectorizer];
	"tfv(0)$0" -> "None(0)"	[label=TfidfVectorizer];
	"tfv(0)$0" -> "unicode(0)"	[label=TfidfVectorizer];
	"tfv(0)$0" -> "word(0)"	[label=TfidfVectorizer];
	"tfv(0)$0" -> "\w{1,}(0)"	[label=TfidfVectorizer];
	"tfv(0)$0" -> "1(0)"	[label=TfidfVectorizer];
	"None(0)" -> "approaching-almost-any-nlp-problem-on-kaggle.ipynb"	[label=appearsIn];
	"unicode(0)" -> "approaching-almost-any-nlp-problem-on-kaggle.ipynb"	[label=appearsIn];
	"word(0)" -> "approaching-almost-any-nlp-problem-on-kaggle.ipynb"	[label=appearsIn];
	"\w{1,}(0)" -> "approaching-almost-any-nlp-problem-on-kaggle.ipynb"	[label=appearsIn];
	"1(0)" -> "approaching-almost-any-nlp-problem-on-kaggle.ipynb"	[label=appearsIn];
	"tfv(0)$1" -> "xtrain(0)$0"	[label=fit];
	"tfv(0)$1" -> "xvalid(0)$0"	[label=fit];
	"tfv(0)$1" -> "tfv(0)$0"	[label=fit];
	"tfv(0)$1" -> "list(0)"	[label=fit];
	"list(0)" -> "approaching-almost-any-nlp-problem-on-kaggle.ipynb"	[label=appearsIn];
	"xtrain_tfv(0)$0" -> "xtrain(0)$0"	[label=transform];
	"xtrain_tfv(0)$0" -> "tfv(0)$1"	[label=transform];
	"xvalid_tfv(0)$0" -> "xvalid(0)$0"	[label=transform];
	"xvalid_tfv(0)$0" -> "tfv(0)$1"	[label=transform];
	"1.0(0)" -> "approaching-almost-any-nlp-problem-on-kaggle.ipynb"	[label=appearsIn];
	"clf(0)$0" -> "1.0(0)"	[label=LogisticRegression];
	"clf(0)$1" -> "ytrain(0)$0"	[label=fit];
	"clf(0)$1" -> "xtrain_tfv(0)$0"	[label=fit];
	"clf(0)$1" -> "clf(0)$0"	[label=fit];
	"predictions(0)$0" -> "xvalid_tfv(0)$0"	[label=predict_proba];
	"predictions(0)$0" -> "clf(0)$1"	[label=predict_proba];
	"logloss: \%0.3f (0)" -> "approaching-almost-any-nlp-problem-on-kaggle.ipynb"	[label=appearsIn];
	"print[71/0]" -> "yvalid(0)$0"	[label=print];
	"print[71/0]" -> "predictions(0)$0"	[label=print];
	"print[71/0]" -> "logloss: \%0.3f (0)"	[label=print];
	"print[71/0]" -> "multiclass_logloss(0)"	[label=print];
	"multiclass_logloss(0)" -> "approaching-almost-any-nlp-problem-on-kaggle.ipynb"	[label=appearsIn];
	"ctv(0)$0" -> "english(0)"	[label=CountVectorizer];
	"ctv(0)$0" -> "3(0)"	[label=CountVectorizer];
	"ctv(0)$0" -> "word(0)"	[label=CountVectorizer];
	"ctv(0)$0" -> "\w{1,}(0)"	[label=CountVectorizer];
	"ctv(0)$0" -> "1(0)"	[label=CountVectorizer];
	"ctv(0)$1" -> "xtrain(0)$0"	[label=fit];
	"ctv(0)$1" -> "xvalid(0)$0"	[label=fit];
	"ctv(0)$1" -> "list(0)"	[label=fit];
	"ctv(0)$1" -> "ctv(0)$0"	[label=fit];
	"xtrain_ctv(0)$0" -> "xtrain(0)$0"	[label=transform];
	"xtrain_ctv(0)$0" -> "ctv(0)$1"	[label=transform];
	"xvalid_ctv(0)$0" -> "xvalid(0)$0"	[label=transform];
	"xvalid_ctv(0)$0" -> "ctv(0)$1"	[label=transform];
	"clf(0)$2" -> "1.0(0)"	[label=LogisticRegression];
	"clf(0)$3" -> "ytrain(0)$0"	[label=fit];
	"clf(0)$3" -> "xtrain_ctv(0)$0"	[label=fit];
	"clf(0)$3" -> "clf(0)$2"	[label=fit];
	"predictions(0)$1" -> "xvalid_ctv(0)$0"	[label=predict_proba];
	"predictions(0)$1" -> "clf(0)$3"	[label=predict_proba];
	"print[84/0]" -> "yvalid(0)$0"	[label=print];
	"print[84/0]" -> "logloss: \%0.3f (0)"	[label=print];
	"print[84/0]" -> "multiclass_logloss(0)"	[label=print];
	"print[84/0]" -> "predictions(0)$1"	[label=print];
	"clf(0)$4" -> "ytrain(0)$0"	[label=fit];
	"clf(0)$4" -> "xtrain_tfv(0)$0"	[label=fit];
	"clf(0)$4" -> "clf(0)$3"	[label=fit];
	"predictions(0)$2" -> "xvalid_tfv(0)$0"	[label=predict_proba];
	"predictions(0)$2" -> "clf(0)$4"	[label=predict_proba];
	"print[90/0]" -> "yvalid(0)$0"	[label=print];
	"print[90/0]" -> "logloss: \%0.3f (0)"	[label=print];
	"print[90/0]" -> "multiclass_logloss(0)"	[label=print];
	"print[90/0]" -> "predictions(0)$2"	[label=print];
	"clf(0)$5" -> "ytrain(0)$0"	[label=fit];
	"clf(0)$5" -> "xtrain_ctv(0)$0"	[label=fit];
	"clf(0)$5" -> "clf(0)$4"	[label=fit];
	"predictions(0)$3" -> "xvalid_ctv(0)$0"	[label=predict_proba];
	"predictions(0)$3" -> "clf(0)$5"	[label=predict_proba];
	"print[96/0]" -> "yvalid(0)$0"	[label=print];
	"print[96/0]" -> "logloss: \%0.3f (0)"	[label=print];
	"print[96/0]" -> "multiclass_logloss(0)"	[label=print];
	"print[96/0]" -> "predictions(0)$3"	[label=print];
	"svd(0)$0" -> "decomposition(0)"	[label=TruncatedSVD];
	"svd(0)$0" -> "120(0)"	[label=TruncatedSVD];
	"120(0)" -> "approaching-almost-any-nlp-problem-on-kaggle.ipynb"	[label=appearsIn];
	"svd(0)$1" -> "xtrain_tfv(0)$0"	[label=fit];
	"svd(0)$1" -> "svd(0)$0"	[label=fit];
	"xtrain_svd(0)$0" -> "xtrain_tfv(0)$0"	[label=transform];
	"xtrain_svd(0)$0" -> "svd(0)$1"	[label=transform];
	"xvalid_svd(0)$0" -> "xvalid_tfv(0)$0"	[label=transform];
	"xvalid_svd(0)$0" -> "svd(0)$1"	[label=transform];
	"scl(0)$0" -> "preprocessing(0)"	[label=StandardScaler];
	"scl(0)$1" -> "xtrain_svd(0)$0"	[label=fit];
	"scl(0)$1" -> "scl(0)$0"	[label=fit];
	"xtrain_svd_scl(0)$0" -> "xtrain_svd(0)$0"	[label=transform];
	"xtrain_svd_scl(0)$0" -> "scl(0)$1"	[label=transform];
	"xvalid_svd_scl(0)$0" -> "xvalid_svd(0)$0"	[label=transform];
	"xvalid_svd_scl(0)$0" -> "scl(0)$1"	[label=transform];
	"clf(0)$6" -> "True(0)"	[label=SVC];
	"clf(0)$6" -> "1.0(0)"	[label=SVC];
	"clf(0)$7" -> "ytrain(0)$0"	[label=fit];
	"clf(0)$7" -> "xtrain_svd_scl(0)$0"	[label=fit];
	"clf(0)$7" -> "clf(0)$6"	[label=fit];
	"predictions(0)$4" -> "xvalid_svd_scl(0)$0"	[label=predict_proba];
	"predictions(0)$4" -> "clf(0)$7"	[label=predict_proba];
	"print[113/0]" -> "yvalid(0)$0"	[label=print];
	"print[113/0]" -> "logloss: \%0.3f (0)"	[label=print];
	"print[113/0]" -> "multiclass_logloss(0)"	[label=print];
	"print[113/0]" -> "predictions(0)$4"	[label=print];
	"clf(0)$8" -> "xgb(0)"	[label=XGBClassifier];
	"clf(0)$8" -> "0.1(0)"	[label=XGBClassifier];
	"clf(0)$8" -> "7(0)"	[label=XGBClassifier];
	"clf(0)$8" -> "200(0)"	[label=XGBClassifier];
	"clf(0)$8" -> "0.8(0)"	[label=XGBClassifier];
	"clf(0)$8" -> "10(0)"	[label=XGBClassifier];
	"7(0)" -> "approaching-almost-any-nlp-problem-on-kaggle.ipynb"	[label=appearsIn];
	"200(0)" -> "approaching-almost-any-nlp-problem-on-kaggle.ipynb"	[label=appearsIn];
	"0.8(0)" -> "approaching-almost-any-nlp-problem-on-kaggle.ipynb"	[label=appearsIn];
	"10(0)" -> "approaching-almost-any-nlp-problem-on-kaggle.ipynb"	[label=appearsIn];
	"clf(0)$9" -> "ytrain(0)$0"	[label=fit];
	"clf(0)$9" -> "xtrain_tfv(0)$0"	[label=fit];
	"clf(0)$9" -> "clf(0)$8"	[label=fit];
	"predictions(0)$5" -> "xvalid_tfv(0)$0"	[label=predict_proba];
	"predictions(0)$5" -> "clf(0)$9"	[label=predict_proba];
	"print[120/0]" -> "yvalid(0)$0"	[label=print];
	"print[120/0]" -> "logloss: \%0.3f (0)"	[label=print];
	"print[120/0]" -> "multiclass_logloss(0)"	[label=print];
	"print[120/0]" -> "predictions(0)$5"	[label=print];
	"clf(0)$10" -> "xgb(0)"	[label=XGBClassifier];
	"clf(0)$10" -> "0.1(0)"	[label=XGBClassifier];
	"clf(0)$10" -> "7(0)"	[label=XGBClassifier];
	"clf(0)$10" -> "200(0)"	[label=XGBClassifier];
	"clf(0)$10" -> "0.8(0)"	[label=XGBClassifier];
	"clf(0)$10" -> "10(0)"	[label=XGBClassifier];
	"clf(0)$11" -> "ytrain(0)$0"	[label=fit];
	"clf(0)$11" -> "xtrain_ctv(0)$0"	[label=fit];
	"clf(0)$11" -> "clf(0)$10"	[label=fit];
	"predictions(0)$6" -> "xvalid_ctv(0)$0"	[label=predict_proba];
	"predictions(0)$6" -> "clf(0)$11"	[label=predict_proba];
	"print[127/0]" -> "yvalid(0)$0"	[label=print];
	"print[127/0]" -> "logloss: \%0.3f (0)"	[label=print];
	"print[127/0]" -> "multiclass_logloss(0)"	[label=print];
	"print[127/0]" -> "predictions(0)$6"	[label=print];
	"clf(0)$12" -> "xgb(0)"	[label=XGBClassifier];
	"clf(0)$12" -> "0.1(0)"	[label=XGBClassifier];
	"clf(0)$12" -> "7(0)"	[label=XGBClassifier];
	"clf(0)$12" -> "200(0)"	[label=XGBClassifier];
	"clf(0)$12" -> "0.8(0)"	[label=XGBClassifier];
	"clf(0)$12" -> "10(0)"	[label=XGBClassifier];
	"clf(0)$13" -> "ytrain(0)$0"	[label=fit];
	"clf(0)$13" -> "xtrain_svd(0)$0"	[label=fit];
	"clf(0)$13" -> "clf(0)$12"	[label=fit];
	"predictions(0)$7" -> "xvalid_svd(0)$0"	[label=predict_proba];
	"predictions(0)$7" -> "clf(0)$13"	[label=predict_proba];
	"print[134/0]" -> "yvalid(0)$0"	[label=print];
	"print[134/0]" -> "logloss: \%0.3f (0)"	[label=print];
	"print[134/0]" -> "multiclass_logloss(0)"	[label=print];
	"print[134/0]" -> "predictions(0)$7"	[label=print];
	"clf(0)$14" -> "xgb(0)"	[label=XGBClassifier];
	"clf(0)$14" -> "10(0)"	[label=XGBClassifier];
	"clf(0)$15" -> "ytrain(0)$0"	[label=fit];
	"clf(0)$15" -> "xtrain_svd(0)$0"	[label=fit];
	"clf(0)$15" -> "clf(0)$14"	[label=fit];
	"predictions(0)$8" -> "xvalid_svd(0)$0"	[label=predict_proba];
	"predictions(0)$8" -> "clf(0)$15"	[label=predict_proba];
	"print[140/0]" -> "yvalid(0)$0"	[label=print];
	"print[140/0]" -> "logloss: \%0.3f (0)"	[label=print];
	"print[140/0]" -> "multiclass_logloss(0)"	[label=print];
	"print[140/0]" -> "predictions(0)$8"	[label=print];
	"mll_scorer(0)$0" -> "metrics(0)"	[label=make_scorer];
	"mll_scorer(0)$0" -> "True(0)"	[label=make_scorer];
	"mll_scorer(0)$0" -> "multiclass_logloss(0)"	[label=make_scorer];
	"mll_scorer(0)$0" -> "False(0)"	[label=make_scorer];
	"False(0)" -> "approaching-almost-any-nlp-problem-on-kaggle.ipynb"	[label=appearsIn];
	"scl(0)$2" -> "preprocessing(0)"	[label=StandardScaler];
	"clf(0)$16" -> "pipeline(0)"	[label=Pipeline];
	"clf(0)$16" -> "[<_ast.Tuple object at 0x7fd4c04af130>, <_ast.Tuple object at 0x7fd4c04af1c0>, <_ast.Tuple object at 0x7fd4c04af250>](0)"	[label=Pipeline];
	"[<_ast.Tuple object at 0x7fd4c04af130>, <_ast.Tuple object at 0x7fd4c04af1c0>, <_ast.Tuple object at 0x7fd4c04af250>](0)" -> "approaching-almost-any-nlp-problem-on-kaggle.ipynb"	[label=appearsIn];
	"svd__n_components(0)" -> "approaching-almost-any-nlp-problem-on-kaggle.ipynb"	[label=appearsIn];
	"param_grid(0)$0" -> "svd__n_components(0)"	[label=assignedFrom];
	"param_grid(0)$0" -> "lr__C(0)"	[label=assignedFrom];
	"param_grid(0)$0" -> "lr__penalty(0)"	[label=assignedFrom];
	"param_grid(0)$0" -> "[<_ast.Constant object at 0x7fd4c04af430>, <_ast.Constant object at 0x7fd4c04af460>](0)"	[label=assignedFrom];
	"param_grid(0)$0" -> "[<_ast.Constant object at 0x7fd4c04af4c0>, <_ast.Constant object at 0x7fd4c04af4f0>, <_ast.Constant object at 0x7fd4c04af520>](0)"	[label=assignedFrom];
	"param_grid(0)$0" -> "[<_ast.Constant object at 0x7fd4c04af580>, <_ast.Constant object at 0x7fd4c04af5b0>](0)"	[label=assignedFrom];
	"lr__C(0)" -> "approaching-almost-any-nlp-problem-on-kaggle.ipynb"	[label=appearsIn];
	"lr__penalty(0)" -> "approaching-almost-any-nlp-problem-on-kaggle.ipynb"	[label=appearsIn];
	"[<_ast.Constant object at 0x7fd4c04af430>, <_ast.Constant object at 0x7fd4c04af460>](0)" -> "approaching-almost-any-nlp-problem-on-kaggle.ipynb"	[label=appearsIn];
	"[<_ast.Constant object at 0x7fd4c04af4c0>, <_ast.Constant object at 0x7fd4c04af4f0>, <_ast.Constant object at 0x7fd4c04af520>](0)" -> "approaching-almost-any-nlp-problem-on-kaggle.ipynb"	[label=appearsIn];
	"[<_ast.Constant object at 0x7fd4c04af580>, <_ast.Constant object at 0x7fd4c04af5b0>](0)" -> "approaching-almost-any-nlp-problem-on-kaggle.ipynb"	[label=appearsIn];
	"model(0)$0" -> "True(0)"	[label=GridSearchCV];
	"model(0)$0" -> "1(0)"	[label=GridSearchCV];
	"model(0)$0" -> "10(0)"	[label=GridSearchCV];
	"model(0)$0" -> "mll_scorer(0)$0"	[label=GridSearchCV];
	"model(0)$0" -> "clf(0)$16"	[label=GridSearchCV];
	"model(0)$0" -> "param_grid(0)$0"	[label=GridSearchCV];
	"model(0)$0" -> "2(0)"	[label=GridSearchCV];
	"2(0)" -> "approaching-almost-any-nlp-problem-on-kaggle.ipynb"	[label=appearsIn];
	"model(0)$1" -> "ytrain(0)$0"	[label=fit];
	"model(0)$1" -> "xtrain_tfv(0)$0"	[label=fit];
	"model(0)$1" -> "model(0)$0"	[label=fit];
	"Best score: \%0.3f(0)" -> "approaching-almost-any-nlp-problem-on-kaggle.ipynb"	[label=appearsIn];
	"print[164/0]" -> "model(0)$1"	[label=print];
	"print[164/0]" -> "Best score: \%0.3f(0)"	[label=print];
	"Best parameters set:(0)" -> "approaching-almost-any-nlp-problem-on-kaggle.ipynb"	[label=appearsIn];
	"print[165/0]" -> "Best parameters set:(0)"	[label=print];
	"best_parameters(0)$0" -> "model(0)$1"	[label=get_params];
	"sorted(0)" -> "approaching-almost-any-nlp-problem-on-kaggle.ipynb"	[label=appearsIn];
	"param_name(0)" -> "approaching-almost-any-nlp-problem-on-kaggle.ipynb"	[label=appearsIn];
	"param_name(0)" -> "param_grid(0)$0"	[label=iteratorOf];
	"param_name(0)" -> "sorted(0)"	[label=iteratorOf];
	"param_name(0)" -> "param_grid(0)$1"	[label=iteratorOf];
	"param_grid(0)$1" -> "nb__alpha(0)"	[label=assignedFrom];
	"param_grid(0)$1" -> "[<_ast.Constant object at 0x7fd4902be7c0>, <_ast.Constant object at 0x7fd4902be7f0>, <_ast.Constant object at 0x7fd4902be820>, <_\
ast.Constant object at 0x7fd4902be850>, <_ast.Constant object at 0x7fd4902be880>, <_ast.Constant object at 0x7fd4902be8b0>](0)"	[label=assignedFrom];
	"	\%s: \%r(0)" -> "approaching-almost-any-nlp-problem-on-kaggle.ipynb"	[label=appearsIn];
	"print[168/4]" -> "best_parameters(0)$0"	[label=print];
	"print[168/4]" -> "param_name(0)"	[label=print];
	"print[168/4]" -> "	\%s: \%r(0)"	[label=print];
	"clf(0)$17" -> "pipeline(0)"	[label=Pipeline];
	"clf(0)$17" -> "[<_ast.Tuple object at 0x7fd4902be610>](0)"	[label=Pipeline];
	"[<_ast.Tuple object at 0x7fd4902be610>](0)" -> "approaching-almost-any-nlp-problem-on-kaggle.ipynb"	[label=appearsIn];
	"nb__alpha(0)" -> "approaching-almost-any-nlp-problem-on-kaggle.ipynb"	[label=appearsIn];
	"[<_ast.Constant object at 0x7fd4902be7c0>, <_ast.Constant object at 0x7fd4902be7f0>, <_ast.Constant object at 0x7fd4902be820>, <_\
ast.Constant object at 0x7fd4902be850>, <_ast.Constant object at 0x7fd4902be880>, <_ast.Constant object at 0x7fd4902be8b0>](0)" -> "approaching-almost-any-nlp-problem-on-kaggle.ipynb"	[label=appearsIn];
	"model(0)$2" -> "True(0)"	[label=GridSearchCV];
	"model(0)$2" -> "1(0)"	[label=GridSearchCV];
	"model(0)$2" -> "10(0)"	[label=GridSearchCV];
	"model(0)$2" -> "mll_scorer(0)$0"	[label=GridSearchCV];
	"model(0)$2" -> "2(0)"	[label=GridSearchCV];
	"model(0)$2" -> "param_grid(0)$1"	[label=GridSearchCV];
	"model(0)$2" -> "clf(0)$17"	[label=GridSearchCV];
	"model(0)$3" -> "ytrain(0)$0"	[label=fit];
	"model(0)$3" -> "xtrain_tfv(0)$0"	[label=fit];
	"model(0)$3" -> "model(0)$2"	[label=fit];
	"print[183/0]" -> "Best score: \%0.3f(0)"	[label=print];
	"print[183/0]" -> "model(0)$3"	[label=print];
	"print[184/0]" -> "Best parameters set:(0)"	[label=print];
	"best_parameters(0)$1" -> "model(0)$3"	[label=get_params];
	"print[187/4]" -> "param_name(0)"	[label=print];
	"print[187/4]" -> "	\%s: \%r(0)"	[label=print];
	"print[187/4]" -> "best_parameters(0)$1"	[label=print];
	"glove.840B.300d.txt(0)" -> "approaching-almost-any-nlp-problem-on-kaggle.ipynb"	[label=appearsIn];
	"f(0)$0" -> "glove.840B.300d.txt(0)"	[label=open];
	"line(0)" -> "approaching-almost-any-nlp-problem-on-kaggle.ipynb"	[label=appearsIn];
	"line(0)" -> "tqdm(0)"	[label=iteratorOf];
	"line(0)" -> "f(0)$0"	[label=iteratorOf];
	"values(0)$0" -> "line(0)"	[label=split];
	"word(0)$0" -> "tqdm(0)"	[label=iteratorOf];
	"word(0)$0" -> "values(0)$0"	[label=assignedFrom];
	"word(0)$0" -> "0(0)"	[label=assignedFrom];
	"word(0)$0" -> "word_index(0)$0"	[label=iteratorOf];
	"0(0)" -> "approaching-almost-any-nlp-problem-on-kaggle.ipynb"	[label=appearsIn];
	"word_index(0)$0" -> "token(0)$1"	[label=assignedFrom];
	"coefs(0)$0" -> "np(0)"	[label=asarray];
	"coefs(0)$0" -> "1(0)"	[label=asarray];
	"coefs(0)$0" -> "values(0)$0"	[label=asarray];
	"coefs(0)$0" -> "float32(0)"	[label=asarray];
	"float32(0)" -> "approaching-almost-any-nlp-problem-on-kaggle.ipynb"	[label=appearsIn];
	"embeddings_index(0)" -> "approaching-almost-any-nlp-problem-on-kaggle.ipynb"	[label=appearsIn];
	"embeddings_index(0)$0" -> "coefs(0)$0"	[label=assignedFrom];
	"embeddings_index(0)$0" -> "embeddings_index(0)"	[label=assignedFrom];
	"f(0)$1" -> "f(0)$0"	[label=close];
	"Found \%s word vectors.(0)" -> "approaching-almost-any-nlp-problem-on-kaggle.ipynb"	[label=appearsIn];
	"print[199/0]" -> "embeddings_index(0)$0"	[label=print];
	"print[199/0]" -> "Found \%s word vectors.(0)"	[label=print];
	"print[199/0]" -> "len(0)"	[label=print];
	"len(0)" -> "approaching-almost-any-nlp-problem-on-kaggle.ipynb"	[label=appearsIn];
	"s(2)" -> "sent2vec[0]"	[label=_argToVar];
	"words(2)$0" -> "s(2)"	[label=decode];
	"words(2)$0" -> "str(2)"	[label=decode];
	"words(2)$0" -> "utf-8(2)"	[label=decode];
	"words(2)$1" -> "words(2)$0"	[label=word_tokenize];
	"words(2)$2" -> "words(2)$2"	[label=assignedFrom];
	"words(2)$2" -> "w(2)"	[label=assignedFrom];
	"words(2)$2" -> "stop_words(2)"	[label=assignedFrom];
	"w(2)" -> "words(2)$3"	[label=iteratorOf];
	"words(2)$3" -> "w(2)"	[label=assignedFrom];
	"words(2)$3" -> "words(2)$3"	[label=assignedFrom];
	"M(2)$0" -> "[](2)"	[label=assignedFrom];
	"M(2)$1" -> "w(2)"	[label=append];
	"M(2)$1" -> "M(2)$0"	[label=append];
	"M(2)$1" -> "embeddings_index(2)"	[label=append];
	"M(2)$2" -> "M(2)$2"	[label=array];
	"M(2)$2" -> "np(2)"	[label=array];
	"v(2)$0" -> "M(2)$2"	[label=sum];
	"v(2)$0" -> "0(2)"	[label=sum];
	"sent2vec(0)" -> "approaching-almost-any-nlp-problem-on-kaggle.ipynb"	[label=appearsIn];
	"xtrain_glove(0)$0" -> "tqdm(0)"	[label=assignedFrom];
	"xtrain_glove(0)$0" -> "xtrain(0)$0"	[label=assignedFrom];
	"xtrain_glove(0)$0" -> "sent2vec(0)"	[label=assignedFrom];
	"xtrain_glove(0)$0" -> "x(0)"	[label=assignedFrom];
	"x(0)" -> "approaching-almost-any-nlp-problem-on-kaggle.ipynb"	[label=appearsIn];
	"xvalid_glove(0)$0" -> "tqdm(0)"	[label=assignedFrom];
	"xvalid_glove(0)$0" -> "xvalid(0)$0"	[label=assignedFrom];
	"xvalid_glove(0)$0" -> "sent2vec(0)"	[label=assignedFrom];
	"xvalid_glove(0)$0" -> "x(0)"	[label=assignedFrom];
	"xtrain_glove(0)$1" -> "np(0)"	[label=array];
	"xtrain_glove(0)$1" -> "xtrain_glove(0)$1"	[label=array];
	"xvalid_glove(0)$1" -> "np(0)"	[label=array];
	"xvalid_glove(0)$1" -> "xvalid_glove(0)$1"	[label=array];
	"clf(0)$18" -> "xgb(0)"	[label=XGBClassifier];
	"clf(0)$18" -> "10(0)"	[label=XGBClassifier];
	"clf(0)$18" -> "False(0)"	[label=XGBClassifier];
	"clf(0)$19" -> "ytrain(0)$0"	[label=fit];
	"clf(0)$19" -> "xtrain_glove(0)$1"	[label=fit];
	"clf(0)$19" -> "clf(0)$18"	[label=fit];
	"predictions(0)$9" -> "xvalid_glove(0)$1"	[label=predict_proba];
	"predictions(0)$9" -> "clf(0)$19"	[label=predict_proba];
	"print[227/0]" -> "yvalid(0)$0"	[label=print];
	"print[227/0]" -> "logloss: \%0.3f (0)"	[label=print];
	"print[227/0]" -> "multiclass_logloss(0)"	[label=print];
	"print[227/0]" -> "predictions(0)$9"	[label=print];
	"clf(0)$20" -> "xgb(0)"	[label=XGBClassifier];
	"clf(0)$20" -> "0.1(0)"	[label=XGBClassifier];
	"clf(0)$20" -> "7(0)"	[label=XGBClassifier];
	"clf(0)$20" -> "200(0)"	[label=XGBClassifier];
	"clf(0)$20" -> "0.8(0)"	[label=XGBClassifier];
	"clf(0)$20" -> "10(0)"	[label=XGBClassifier];
	"clf(0)$20" -> "False(0)"	[label=XGBClassifier];
	"clf(0)$21" -> "ytrain(0)$0"	[label=fit];
	"clf(0)$21" -> "xtrain_glove(0)$1"	[label=fit];
	"clf(0)$21" -> "clf(0)$20"	[label=fit];
	"predictions(0)$10" -> "xvalid_glove(0)$1"	[label=predict_proba];
	"predictions(0)$10" -> "clf(0)$21"	[label=predict_proba];
	"print[234/0]" -> "yvalid(0)$0"	[label=print];
	"print[234/0]" -> "logloss: \%0.3f (0)"	[label=print];
	"print[234/0]" -> "multiclass_logloss(0)"	[label=print];
	"print[234/0]" -> "predictions(0)$10"	[label=print];
	"scl(0)$3" -> "preprocessing(0)"	[label=StandardScaler];
	"xtrain_glove_scl(0)$0" -> "xtrain_glove(0)$1"	[label=fit_transform];
	"xtrain_glove_scl(0)$0" -> "scl(0)$3"	[label=fit_transform];
	"xvalid_glove_scl(0)$0" -> "xvalid_glove(0)$1"	[label=transform];
	"xvalid_glove_scl(0)$0" -> "scl(0)$3"	[label=transform];
	"ytrain_enc(0)$0" -> "np_utils(0)"	[label=to_categorical];
	"ytrain_enc(0)$0" -> "ytrain(0)$0"	[label=to_categorical];
	"yvalid_enc(0)$0" -> "np_utils(0)"	[label=to_categorical];
	"yvalid_enc(0)$0" -> "yvalid(0)$0"	[label=to_categorical];
	"model(0)$4" -> "Dense(0)"	[label=add];
	"model(0)$4" -> "model(0)$3"	[label=add];
	"model(0)$4" -> "300(0)"	[label=add];
	"model(0)$4" -> "relu(0)"	[label=add];
	"300(0)" -> "approaching-almost-any-nlp-problem-on-kaggle.ipynb"	[label=appearsIn];
	"relu(0)" -> "approaching-almost-any-nlp-problem-on-kaggle.ipynb"	[label=appearsIn];
	"model(0)$5" -> "Dropout(0)"	[label=add];
	"model(0)$5" -> "model(0)$4"	[label=add];
	"model(0)$5" -> "0.2(0)"	[label=add];
	"0.2(0)" -> "approaching-almost-any-nlp-problem-on-kaggle.ipynb"	[label=appearsIn];
	"model(0)$6" -> "BatchNormalization(0)"	[label=add];
	"model(0)$6" -> "model(0)$5"	[label=add];
	"model(0)$7" -> "Dense(0)"	[label=add];
	"model(0)$7" -> "300(0)"	[label=add];
	"model(0)$7" -> "relu(0)"	[label=add];
	"model(0)$7" -> "model(0)$6"	[label=add];
	"model(0)$8" -> "Dropout(0)"	[label=add];
	"model(0)$8" -> "model(0)$7"	[label=add];
	"model(0)$8" -> "0.3(0)"	[label=add];
	"0.3(0)" -> "approaching-almost-any-nlp-problem-on-kaggle.ipynb"	[label=appearsIn];
	"model(0)$9" -> "BatchNormalization(0)"	[label=add];
	"model(0)$9" -> "model(0)$8"	[label=add];
	"model(0)$10" -> "Dense(0)"	[label=add];
	"model(0)$10" -> "3(0)"	[label=add];
	"model(0)$10" -> "model(0)$9"	[label=add];
	"model(0)$11" -> "Activation(0)"	[label=add];
	"model(0)$11" -> "model(0)$10"	[label=add];
	"model(0)$11" -> "softmax(0)"	[label=add];
	"softmax(0)" -> "approaching-almost-any-nlp-problem-on-kaggle.ipynb"	[label=appearsIn];
	"model(0)$12" -> "model(0)$11"	[label=compile];
	"model(0)$13" -> "xtrain_glove_scl(0)$0"	[label=fit];
	"model(0)$13" -> "model(0)$12"	[label=fit];
	"token(0)$0" -> "text(0)"	[label=Tokenizer];
	"token(0)$0" -> "None(0)"	[label=Tokenizer];
	"70(0)" -> "approaching-almost-any-nlp-problem-on-kaggle.ipynb"	[label=appearsIn];
	"max_len(0)$0" -> "70(0)"	[label=assignedFrom];
	"token(0)$1" -> "xtrain(0)$0"	[label=fit_on_texts];
	"token(0)$1" -> "xvalid(0)$0"	[label=fit_on_texts];
	"token(0)$1" -> "list(0)"	[label=fit_on_texts];
	"token(0)$1" -> "token(0)$0"	[label=fit_on_texts];
	"xtrain_seq(0)$0" -> "xtrain(0)$0"	[label=texts_to_sequences];
	"xtrain_seq(0)$0" -> "token(0)$1"	[label=texts_to_sequences];
	"xvalid_seq(0)$0" -> "xvalid(0)$0"	[label=texts_to_sequences];
	"xvalid_seq(0)$0" -> "token(0)$1"	[label=texts_to_sequences];
	"xtrain_pad(0)$0" -> "sequence(0)"	[label=pad_sequences];
	"xtrain_pad(0)$0" -> "max_len(0)$0"	[label=pad_sequences];
	"xtrain_pad(0)$0" -> "xtrain_seq(0)$0"	[label=pad_sequences];
	"xvalid_pad(0)$0" -> "sequence(0)"	[label=pad_sequences];
	"xvalid_pad(0)$0" -> "max_len(0)$0"	[label=pad_sequences];
	"xvalid_pad(0)$0" -> "xvalid_seq(0)$0"	[label=pad_sequences];
	"embedding_matrix(0)$0" -> "np(0)"	[label=zeros];
	"embedding_matrix(0)$0" -> "1(0)"	[label=zeros];
	"embedding_matrix(0)$0" -> "word_index(0)$0"	[label=zeros];
	"embedding_matrix(0)$0" -> "len(0)"	[label=zeros];
	"embedding_matrix(0)$0" -> "300(0)"	[label=zeros];
	"i(0)" -> "approaching-almost-any-nlp-problem-on-kaggle.ipynb"	[label=appearsIn];
	"i(0)" -> "tqdm(0)"	[label=iteratorOf];
	"i(0)" -> "word_index(0)$0"	[label=iteratorOf];
	"embedding_vector(0)$0" -> "word(0)$0"	[label=get];
	"embedding_vector(0)$0" -> "embeddings_index(0)$0"	[label=get];
	"embedding_matrix(0)$1" -> "embedding_matrix(0)$0"	[label=assignedFrom];
	"embedding_matrix(0)$1" -> "embedding_vector(0)$0"	[label=assignedFrom];
	"model(0)$14" -> "Embedding(0)"	[label=add];
	"model(0)$14" -> "1(0)"	[label=add];
	"model(0)$14" -> "False(0)"	[label=add];
	"model(0)$14" -> "word_index(0)$0"	[label=add];
	"model(0)$14" -> "len(0)"	[label=add];
	"model(0)$14" -> "300(0)"	[label=add];
	"model(0)$14" -> "model(0)$13"	[label=add];
	"model(0)$14" -> "max_len(0)$0"	[label=add];
	"model(0)$14" -> "[<_ast.Name object at 0x7fd500818b80>](0)"	[label=add];
	"[<_ast.Name object at 0x7fd500818b80>](0)" -> "approaching-almost-any-nlp-problem-on-kaggle.ipynb"	[label=appearsIn];
	"model(0)$15" -> "SpatialDropout1D(0)"	[label=add];
	"model(0)$15" -> "0.3(0)"	[label=add];
	"model(0)$15" -> "model(0)$14"	[label=add];
	"model(0)$16" -> "LSTM(0)"	[label=add];
	"model(0)$16" -> "0.3(0)"	[label=add];
	"model(0)$16" -> "model(0)$15"	[label=add];
	"model(0)$16" -> "100(0)"	[label=add];
	"100(0)" -> "approaching-almost-any-nlp-problem-on-kaggle.ipynb"	[label=appearsIn];
	"model(0)$17" -> "Dense(0)"	[label=add];
	"model(0)$17" -> "relu(0)"	[label=add];
	"model(0)$17" -> "model(0)$16"	[label=add];
	"model(0)$17" -> "1024(0)"	[label=add];
	"1024(0)" -> "approaching-almost-any-nlp-problem-on-kaggle.ipynb"	[label=appearsIn];
	"model(0)$18" -> "Dropout(0)"	[label=add];
	"model(0)$18" -> "0.8(0)"	[label=add];
	"model(0)$18" -> "model(0)$17"	[label=add];
	"model(0)$19" -> "Dense(0)"	[label=add];
	"model(0)$19" -> "relu(0)"	[label=add];
	"model(0)$19" -> "1024(0)"	[label=add];
	"model(0)$19" -> "model(0)$18"	[label=add];
	"model(0)$20" -> "Dropout(0)"	[label=add];
	"model(0)$20" -> "0.8(0)"	[label=add];
	"model(0)$20" -> "model(0)$19"	[label=add];
	"model(0)$21" -> "Dense(0)"	[label=add];
	"model(0)$21" -> "3(0)"	[label=add];
	"model(0)$21" -> "model(0)$20"	[label=add];
	"model(0)$22" -> "Activation(0)"	[label=add];
	"model(0)$22" -> "softmax(0)"	[label=add];
	"model(0)$22" -> "model(0)$21"	[label=add];
	"model(0)$23" -> "model(0)$22"	[label=compile];
	"model(0)$24" -> "xtrain_pad(0)$0"	[label=fit];
	"model(0)$24" -> "model(0)$23"	[label=fit];
	"model(0)$25" -> "Embedding(0)"	[label=add];
	"model(0)$25" -> "1(0)"	[label=add];
	"model(0)$25" -> "False(0)"	[label=add];
	"model(0)$25" -> "word_index(0)$0"	[label=add];
	"model(0)$25" -> "len(0)"	[label=add];
	"model(0)$25" -> "300(0)"	[label=add];
	"model(0)$25" -> "max_len(0)$0"	[label=add];
	"model(0)$25" -> "model(0)$24"	[label=add];
	"model(0)$25" -> "[<_ast.Name object at 0x7fd5008325b0>](0)"	[label=add];
	"[<_ast.Name object at 0x7fd5008325b0>](0)" -> "approaching-almost-any-nlp-problem-on-kaggle.ipynb"	[label=appearsIn];
	"model(0)$26" -> "SpatialDropout1D(0)"	[label=add];
	"model(0)$26" -> "0.3(0)"	[label=add];
	"model(0)$26" -> "model(0)$25"	[label=add];
	"model(0)$27" -> "LSTM(0)"	[label=add];
	"model(0)$27" -> "300(0)"	[label=add];
	"model(0)$27" -> "0.3(0)"	[label=add];
	"model(0)$27" -> "model(0)$26"	[label=add];
	"model(0)$28" -> "Dense(0)"	[label=add];
	"model(0)$28" -> "relu(0)"	[label=add];
	"model(0)$28" -> "1024(0)"	[label=add];
	"model(0)$28" -> "model(0)$27"	[label=add];
	"model(0)$29" -> "Dropout(0)"	[label=add];
	"model(0)$29" -> "0.8(0)"	[label=add];
	"model(0)$29" -> "model(0)$28"	[label=add];
	"model(0)$30" -> "Dense(0)"	[label=add];
	"model(0)$30" -> "relu(0)"	[label=add];
	"model(0)$30" -> "1024(0)"	[label=add];
	"model(0)$30" -> "model(0)$29"	[label=add];
	"model(0)$31" -> "Dropout(0)"	[label=add];
	"model(0)$31" -> "0.8(0)"	[label=add];
	"model(0)$31" -> "model(0)$30"	[label=add];
	"model(0)$32" -> "Dense(0)"	[label=add];
	"model(0)$32" -> "3(0)"	[label=add];
	"model(0)$32" -> "model(0)$31"	[label=add];
	"model(0)$33" -> "Activation(0)"	[label=add];
	"model(0)$33" -> "softmax(0)"	[label=add];
	"model(0)$33" -> "model(0)$32"	[label=add];
	"model(0)$34" -> "model(0)$33"	[label=compile];
	"val_loss(0)" -> "approaching-almost-any-nlp-problem-on-kaggle.ipynb"	[label=appearsIn];
	"earlystop(0)$0" -> "3(0)"	[label=EarlyStopping];
	"earlystop(0)$0" -> "0(0)"	[label=EarlyStopping];
	"earlystop(0)$0" -> "val_loss(0)"	[label=EarlyStopping];
	"earlystop(0)$0" -> "auto(0)"	[label=EarlyStopping];
	"auto(0)" -> "approaching-almost-any-nlp-problem-on-kaggle.ipynb"	[label=appearsIn];
	"model(0)$35" -> "xtrain_pad(0)$0"	[label=fit];
	"model(0)$35" -> "model(0)$34"	[label=fit];
	"model(0)$36" -> "Embedding(0)"	[label=add];
	"model(0)$36" -> "1(0)"	[label=add];
	"model(0)$36" -> "False(0)"	[label=add];
	"model(0)$36" -> "word_index(0)$0"	[label=add];
	"model(0)$36" -> "len(0)"	[label=add];
	"model(0)$36" -> "300(0)"	[label=add];
	"model(0)$36" -> "max_len(0)$0"	[label=add];
	"model(0)$36" -> "model(0)$35"	[label=add];
	"model(0)$36" -> "[<_ast.Name object at 0x7fd50081a4c0>](0)"	[label=add];
	"[<_ast.Name object at 0x7fd50081a4c0>](0)" -> "approaching-almost-any-nlp-problem-on-kaggle.ipynb"	[label=appearsIn];
	"model(0)$37" -> "SpatialDropout1D(0)"	[label=add];
	"model(0)$37" -> "0.3(0)"	[label=add];
	"model(0)$37" -> "model(0)$36"	[label=add];
	"model(0)$38" -> "LSTM(0)"	[label=add];
	"model(0)$38" -> "Bidirectional(0)"	[label=add];
	"model(0)$38" -> "300(0)"	[label=add];
	"model(0)$38" -> "0.3(0)"	[label=add];
	"model(0)$38" -> "model(0)$37"	[label=add];
	"model(0)$39" -> "Dense(0)"	[label=add];
	"model(0)$39" -> "relu(0)"	[label=add];
	"model(0)$39" -> "1024(0)"	[label=add];
	"model(0)$39" -> "model(0)$38"	[label=add];
	"model(0)$40" -> "Dropout(0)"	[label=add];
	"model(0)$40" -> "0.8(0)"	[label=add];
	"model(0)$40" -> "model(0)$39"	[label=add];
	"model(0)$41" -> "Dense(0)"	[label=add];
	"model(0)$41" -> "relu(0)"	[label=add];
	"model(0)$41" -> "1024(0)"	[label=add];
	"model(0)$41" -> "model(0)$40"	[label=add];
	"model(0)$42" -> "Dropout(0)"	[label=add];
	"model(0)$42" -> "0.8(0)"	[label=add];
	"model(0)$42" -> "model(0)$41"	[label=add];
	"model(0)$43" -> "Dense(0)"	[label=add];
	"model(0)$43" -> "3(0)"	[label=add];
	"model(0)$43" -> "model(0)$42"	[label=add];
	"model(0)$44" -> "Activation(0)"	[label=add];
	"model(0)$44" -> "softmax(0)"	[label=add];
	"model(0)$44" -> "model(0)$43"	[label=add];
	"model(0)$45" -> "model(0)$44"	[label=compile];
	"earlystop(0)$1" -> "3(0)"	[label=EarlyStopping];
	"earlystop(0)$1" -> "0(0)"	[label=EarlyStopping];
	"earlystop(0)$1" -> "val_loss(0)"	[label=EarlyStopping];
	"earlystop(0)$1" -> "auto(0)"	[label=EarlyStopping];
	"model(0)$46" -> "xtrain_pad(0)$0"	[label=fit];
	"model(0)$46" -> "model(0)$45"	[label=fit];
	"model(0)$47" -> "Embedding(0)"	[label=add];
	"model(0)$47" -> "1(0)"	[label=add];
	"model(0)$47" -> "False(0)"	[label=add];
	"model(0)$47" -> "word_index(0)$0"	[label=add];
	"model(0)$47" -> "len(0)"	[label=add];
	"model(0)$47" -> "300(0)"	[label=add];
	"model(0)$47" -> "max_len(0)$0"	[label=add];
	"model(0)$47" -> "model(0)$46"	[label=add];
	"model(0)$47" -> "[<_ast.Name object at 0x7fd5008133d0>](0)"	[label=add];
	"[<_ast.Name object at 0x7fd5008133d0>](0)" -> "approaching-almost-any-nlp-problem-on-kaggle.ipynb"	[label=appearsIn];
	"model(0)$48" -> "SpatialDropout1D(0)"	[label=add];
	"model(0)$48" -> "0.3(0)"	[label=add];
	"model(0)$48" -> "model(0)$47"	[label=add];
	"model(0)$49" -> "GRU(0)"	[label=add];
	"model(0)$49" -> "True(0)"	[label=add];
	"model(0)$49" -> "300(0)"	[label=add];
	"model(0)$49" -> "0.3(0)"	[label=add];
	"model(0)$49" -> "model(0)$48"	[label=add];
	"model(0)$50" -> "GRU(0)"	[label=add];
	"model(0)$50" -> "300(0)"	[label=add];
	"model(0)$50" -> "0.3(0)"	[label=add];
	"model(0)$50" -> "model(0)$49"	[label=add];
	"model(0)$51" -> "Dense(0)"	[label=add];
	"model(0)$51" -> "relu(0)"	[label=add];
	"model(0)$51" -> "1024(0)"	[label=add];
	"model(0)$51" -> "model(0)$50"	[label=add];
	"model(0)$52" -> "Dropout(0)"	[label=add];
	"model(0)$52" -> "0.8(0)"	[label=add];
	"model(0)$52" -> "model(0)$51"	[label=add];
	"model(0)$53" -> "Dense(0)"	[label=add];
	"model(0)$53" -> "relu(0)"	[label=add];
	"model(0)$53" -> "1024(0)"	[label=add];
	"model(0)$53" -> "model(0)$52"	[label=add];
	"model(0)$54" -> "Dropout(0)"	[label=add];
	"model(0)$54" -> "0.8(0)"	[label=add];
	"model(0)$54" -> "model(0)$53"	[label=add];
	"model(0)$55" -> "Dense(0)"	[label=add];
	"model(0)$55" -> "3(0)"	[label=add];
	"model(0)$55" -> "model(0)$54"	[label=add];
	"model(0)$56" -> "Activation(0)"	[label=add];
	"model(0)$56" -> "softmax(0)"	[label=add];
	"model(0)$56" -> "model(0)$55"	[label=add];
	"model(0)$57" -> "model(0)$56"	[label=compile];
	"earlystop(0)$2" -> "3(0)"	[label=EarlyStopping];
	"earlystop(0)$2" -> "0(0)"	[label=EarlyStopping];
	"earlystop(0)$2" -> "val_loss(0)"	[label=EarlyStopping];
	"earlystop(0)$2" -> "auto(0)"	[label=EarlyStopping];
	"model(0)$58" -> "xtrain_pad(0)$0"	[label=fit];
	"model(0)$58" -> "model(0)$57"	[label=fit];
	"sklearn.metrics" -> "approaching-almost-any-nlp-problem-on-kaggle.ipynb"	[label=importedBy];
	roc_auc_score -> "sklearn.metrics"	[label=importedBy];
	"roc_auc_score(0)" -> "approaching-almost-any-nlp-problem-on-kaggle.ipynb"	[label=appearsIn];
	"roc_auc_score(0)" -> roc_auc_score	[label=assignedFrom];
	"sklearn.preprocessing" -> "approaching-almost-any-nlp-problem-on-kaggle.ipynb"	[label=importedBy];
	LabelEncoder -> "sklearn.preprocessing"	[label=importedBy];
	"LabelEncoder(0)" -> "approaching-almost-any-nlp-problem-on-kaggle.ipynb"	[label=appearsIn];
	"LabelEncoder(0)" -> LabelEncoder	[label=assignedFrom];
	StratifiedKFold -> "sklearn.model_selection"	[label=importedBy];
	"StratifiedKFold(0)" -> "approaching-almost-any-nlp-problem-on-kaggle.ipynb"	[label=appearsIn];
	"StratifiedKFold(0)" -> StratifiedKFold	[label=assignedFrom];
	KFold -> "sklearn.model_selection"	[label=importedBy];
	"KFold(0)" -> "approaching-almost-any-nlp-problem-on-kaggle.ipynb"	[label=appearsIn];
	"KFold(0)" -> KFold	[label=assignedFrom];
	os -> "approaching-almost-any-nlp-problem-on-kaggle.ipynb"	[label=importedBy];
	"os(0)" -> "approaching-almost-any-nlp-problem-on-kaggle.ipynb"	[label=appearsIn];
	"os(0)" -> os	[label=assignedFrom];
	sys -> "approaching-almost-any-nlp-problem-on-kaggle.ipynb"	[label=importedBy];
	"sys(0)" -> "approaching-almost-any-nlp-problem-on-kaggle.ipynb"	[label=appearsIn];
	"sys(0)" -> sys	[label=assignedFrom];
	logging -> "approaching-almost-any-nlp-problem-on-kaggle.ipynb"	[label=importedBy];
	"logging(0)" -> "approaching-almost-any-nlp-problem-on-kaggle.ipynb"	[label=appearsIn];
	"logging(0)" -> logging	[label=assignedFrom];
	"logging(0)$0" -> "logging(0)"	[label=basicConfig];
	"logger(0)$0" -> "logging(0)$0"	[label=getLogger];
	"logger(0)$0" -> "__name__(0)"	[label=getLogger];
	"__name__(0)" -> "approaching-almost-any-nlp-problem-on-kaggle.ipynb"	[label=appearsIn];
	"self(4)" -> "__init__[0]"	[label=_argToVar];
	"model_dict(4)" -> "__init__[1]"	[label=_argToVar];
	"num_folds(4)" -> "__init__[2]"	[label=_argToVar];
	"task_type(4)" -> "__init__[3]"	[label=_argToVar];
	"optimize(4)" -> "__init__[4]"	[label=_argToVar];
	"lower_is_better(4)" -> "__init__[5]"	[label=_argToVar];
	"save_path(4)" -> "__init__[6]"	[label=_argToVar];
	"self(4)$0" -> "self(4)"	[label=assignedFrom];
	"self(4)$0" -> "model_dict(4)"	[label=assignedFrom];
	"self(4)$1" -> "self(4)$0"	[label=len];
	"self(4)$2" -> "num_folds(4)"	[label=assignedFrom];
	"self(4)$2" -> "self(4)$1"	[label=assignedFrom];
	"self(4)$3" -> "task_type(4)"	[label=assignedFrom];
	"self(4)$3" -> "self(4)$2"	[label=assignedFrom];
	"self(4)$4" -> "optimize(4)"	[label=assignedFrom];
	"self(4)$4" -> "self(4)$3"	[label=assignedFrom];
	"self(4)$5" -> "lower_is_better(4)"	[label=assignedFrom];
	"self(4)$5" -> "self(4)$4"	[label=assignedFrom];
	"self(4)$6" -> "save_path(4)"	[label=assignedFrom];
	"self(4)$6" -> "self(4)$5"	[label=assignedFrom];
	"self(4)$7" -> "self(4)$6"	[label=assignedFrom];
	"self(4)$7" -> "None(4)"	[label=assignedFrom];
	"self(4)$8" -> "self(4)$7"	[label=assignedFrom];
	"self(4)$8" -> "None(4)"	[label=assignedFrom];
	"self(4)$9" -> "None(4)"	[label=assignedFrom];
	"self(4)$9" -> "self(4)$8"	[label=assignedFrom];
	"self(4)$10" -> "None(4)"	[label=assignedFrom];
	"self(4)$10" -> "self(4)$9"	[label=assignedFrom];
	"self(4)$11" -> "None(4)"	[label=assignedFrom];
	"self(4)$11" -> "self(4)$10"	[label=assignedFrom];
	"self(4)$12" -> "None(4)"	[label=assignedFrom];
	"self(4)$12" -> "self(4)$11"	[label=assignedFrom];
	"self(4)$13" -> "None(4)"	[label=assignedFrom];
	"self(4)$13" -> "self(4)$12"	[label=assignedFrom];
	"self(4)$14" -> "None(4)"	[label=assignedFrom];
	"self(4)$14" -> "self(4)$13"	[label=assignedFrom];
	"self(5)" -> "fit[0]"	[label=_argToVar];
	"training_data(5)" -> "fit[1]"	[label=_argToVar];
	"y(5)" -> "fit[2]"	[label=_argToVar];
	"lentrain(5)" -> "fit[3]"	[label=_argToVar];
	"self(5)$0" -> "self(5)"	[label=assignedFrom];
	"self(5)$0" -> "training_data(5)"	[label=assignedFrom];
	"self(5)$1" -> "y(5)"	[label=assignedFrom];
	"self(5)$1" -> "self(5)$0"	[label=assignedFrom];
	"self(5)$2" -> "self(5)$1"	[label=len];
	"self(5)$2" -> "self(5)$2"	[label=len];
	"self(5)$2" -> "np(5)"	[label=len];
	"logger(5)$0" -> "self(5)$2"	[label=info];
	"logger(5)$0" -> "logger(5)"	[label=info];
	"logger(5)$0" -> "Found \%d classes(5)"	[label=info];
	"self(5)$3" -> "self(5)$2"	[label=fit_transform];
	"self(5)$3" -> "self(5)$3"	[label=fit_transform];
	"kf(5)$0" -> "self(5)$3"	[label=StratifiedKFold];
	"train_prediction_shape(5)$0" -> "lentrain(5)"	[label=assignedFrom];
	"train_prediction_shape(5)$0" -> "self(5)$3"	[label=assignedFrom];
	"self(5)$4" -> "self(5)$3"	[label=assignedFrom];
	"self(5)$4" -> "1(5)"	[label=assignedFrom];
	"self(5)$5" -> "self(5)$4"	[label=assignedFrom];
	"kf(5)$1" -> "self(5)$5"	[label=KFold];
	"train_prediction_shape(5)$1" -> "lentrain(5)"	[label=assignedFrom];
	"train_prediction_shape(5)$1" -> "1(5)"	[label=assignedFrom];
	"level(5)" -> "self(5)$5"	[label=iteratorOf];
	"level(5)" -> "range(5)"	[label=iteratorOf];
	"level(5)" -> "self(5)$6"	[label=iteratorOf];
	"self(5)$6" -> "np(5)"	[label=zeros];
	"self(5)$6" -> "1(5)"	[label=zeros];
	"self(5)$6" -> "self(5)$5"	[label=zeros];
	"self(5)$6" -> "train_prediction_shape(5)$1"	[label=zeros];
	"self(5)$6" -> "level(5)"	[label=zeros];
	"self(5)$6" -> "self(5)$6"	[label=zeros];
	"self(5)$6" -> "0(5)"	[label=zeros];
	"self(5)$6" -> "len(5)"	[label=zeros];
	"temp_train(5)$0" -> "self(5)$6"	[label=assignedFrom];
	"temp_train(5)$1" -> "1(5)"	[label=assignedFrom];
	"temp_train(5)$1" -> "level(5)"	[label=assignedFrom];
	"temp_train(5)$1" -> "self(5)$6"	[label=assignedFrom];
	"model_num(5)" -> "level(5)"	[label=iteratorOf];
	"model_num(5)" -> "self(5)$6"	[label=iteratorOf];
	"model_num(5)" -> "enumerate(5)"	[label=iteratorOf];
	"model(5)" -> "level(5)"	[label=iteratorOf];
	"model(5)" -> "self(5)$6"	[label=iteratorOf];
	"model(5)" -> "enumerate(5)"	[label=iteratorOf];
	"validation_scores(5)$0" -> "[](5)"	[label=assignedFrom];
	"foldnum(5)$0" -> "1(5)"	[label=assignedFrom];
	"train_index(5)" -> "kf(5)$1"	[label=iteratorOf];
	"train_index(5)" -> "self(5)$6"	[label=iteratorOf];
	"train_index(5)" -> "0(5)"	[label=iteratorOf];
	"valid_index(5)" -> "kf(5)$1"	[label=iteratorOf];
	"valid_index(5)" -> "self(5)$6"	[label=iteratorOf];
	"valid_index(5)" -> "0(5)"	[label=iteratorOf];
	"logger(5)$1" -> "logger(5)$0"	[label=info];
	"logger(5)$1" -> "level(5)"	[label=info];
	"logger(5)$1" -> "model_num(5)"	[label=info];
	"logger(5)$1" -> "foldnum(5)$0"	[label=info];
	"logger(5)$1" -> "Training Level \%d Fold # \%d. Model # \%d(5)"	[label=info];
	"l_training_data(5)$0" -> "temp_train(5)$1"	[label=assignedFrom];
	"l_training_data(5)$0" -> "train_index(5)"	[label=assignedFrom];
	"l_validation_data(5)$0" -> "temp_train(5)$1"	[label=assignedFrom];
	"l_validation_data(5)$0" -> "valid_index(5)"	[label=assignedFrom];
	"model(5)$0" -> "self(5)$6"	[label=fit];
	"model(5)$0" -> "model(5)"	[label=fit];
	"model(5)$0" -> "train_index(5)"	[label=fit];
	"model(5)$0" -> "l_training_data(5)$0"	[label=fit];
	"l0_training_data(5)$0" -> "0(5)"	[label=assignedFrom];
	"l0_training_data(5)$0" -> "temp_train(5)$1"	[label=assignedFrom];
	"l0_training_data(5)$0" -> "model_num(5)"	[label=assignedFrom];
	"l_training_data(5)$1" -> "train_index(5)"	[label=assignedFrom];
	"l_training_data(5)$1" -> "l0_training_data(5)$0"	[label=assignedFrom];
	"l_training_data(5)$1" -> "x(5)"	[label=assignedFrom];
	"l_validation_data(5)$1" -> "valid_index(5)"	[label=assignedFrom];
	"l_validation_data(5)$1" -> "l0_training_data(5)$0"	[label=assignedFrom];
	"l_validation_data(5)$1" -> "x(5)"	[label=assignedFrom];
	"l_training_data(5)$2" -> "train_index(5)"	[label=assignedFrom];
	"l_training_data(5)$2" -> "l0_training_data(5)$0"	[label=assignedFrom];
	"l_validation_data(5)$2" -> "valid_index(5)"	[label=assignedFrom];
	"l_validation_data(5)$2" -> "l0_training_data(5)$0"	[label=assignedFrom];
	"model(5)$1" -> "self(5)$6"	[label=fit];
	"model(5)$1" -> "train_index(5)"	[label=fit];
	"model(5)$1" -> "model(5)$0"	[label=fit];
	"model(5)$1" -> "l_training_data(5)$2"	[label=fit];
	"logger(5)$2" -> "level(5)"	[label=info];
	"logger(5)$2" -> "model_num(5)"	[label=info];
	"logger(5)$2" -> "foldnum(5)$0"	[label=info];
	"logger(5)$2" -> "logger(5)$1"	[label=info];
	"logger(5)$2" -> "Predicting Level \%d. Fold # \%d. Model # \%d(5)"	[label=info];
	"temp_train_predictions(5)$0" -> "l_validation_data(5)$2"	[label=predict_proba];
	"temp_train_predictions(5)$0" -> "model(5)$1"	[label=predict_proba];
	"self(5)$7" -> "self(5)$6"	[label=assignedFrom];
	"self(5)$7" -> "temp_train_predictions(5)$0"	[label=assignedFrom];
	"temp_train_predictions(5)$1" -> "l_validation_data(5)$2"	[label=predict];
	"temp_train_predictions(5)$1" -> "model(5)$1"	[label=predict];
	"self(5)$8" -> "self(5)$7"	[label=assignedFrom];
	"self(5)$8" -> "temp_train_predictions(5)$1"	[label=assignedFrom];
	"validation_score(5)$0" -> "valid_index(5)"	[label=optimize];
	"validation_score(5)$0" -> "temp_train_predictions(5)$1"	[label=optimize];
	"validation_score(5)$0" -> "self(5)$8"	[label=optimize];
	"validation_scores(5)$1" -> "validation_scores(5)$0"	[label=append];
	"validation_scores(5)$1" -> "validation_score(5)$0"	[label=append];
	"logger(5)$3" -> "level(5)"	[label=info];
	"logger(5)$3" -> "model_num(5)"	[label=info];
	"logger(5)$3" -> "foldnum(5)$0"	[label=info];
	"logger(5)$3" -> "logger(5)$2"	[label=info];
	"logger(5)$3" -> "validation_score(5)$0"	[label=info];
	"logger(5)$3" -> "Level \%d. Fold # \%d. Model # \%d. Validation Score = \%f(5)"	[label=info];
	"foldnum(5)$1" -> "1(5)"	[label=Add];
	"foldnum(5)$1" -> "foldnum(5)$0"	[label=Add];
	"avg_score(5)$0" -> "np(5)"	[label=mean];
	"avg_score(5)$0" -> "validation_scores(5)$1"	[label=mean];
	"std_score(5)$0" -> "np(5)"	[label=std];
	"std_score(5)$0" -> "validation_scores(5)$1"	[label=std];
	"logger(5)$4" -> "level(5)"	[label=info];
	"logger(5)$4" -> "model_num(5)"	[label=info];
	"logger(5)$4" -> "logger(5)$3"	[label=info];
	"logger(5)$4" -> "avg_score(5)$0"	[label=info];
	"logger(5)$4" -> "std_score(5)$0"	[label=info];
	"logger(5)$4" -> "Level \%d. Model # \%d. Mean Score = \%f. Std Dev = \%f(5)"	[label=info];
	"logger(5)$5" -> "level(5)"	[label=info];
	"logger(5)$5" -> "logger(5)$4"	[label=info];
	"logger(5)$5" -> "Saving predictions for level # \%d(5)"	[label=info];
	"train_predictions_df(5)$0" -> "level(5)"	[label=DataFrame];
	"train_predictions_df(5)$0" -> "self(5)$8"	[label=DataFrame];
	"train_predictions_df(5)$0" -> "pd(5)"	[label=DataFrame];
	"train_predictions_df(5)$1" -> "level(5)"	[label=to_csv];
	"train_predictions_df(5)$1" -> "self(5)$8"	[label=to_csv];
	"train_predictions_df(5)$1" -> "train_predictions_df(5)$0"	[label=to_csv];
	"train_predictions_df(5)$1" -> "os(5)"	[label=to_csv];
	"train_predictions_df(5)$1" -> "train_predictions_level_(5)"	[label=to_csv];
	"train_predictions_df(5)$1" -> "str(5)"	[label=to_csv];
	"train_predictions_df(5)$1" -> ".csv(5)"	[label=to_csv];
	"self(6)" -> "predict[0]"	[label=_argToVar];
	"test_data(6)" -> "predict[1]"	[label=_argToVar];
	"lentest(6)" -> "predict[2]"	[label=_argToVar];
	"self(6)$0" -> "self(6)"	[label=assignedFrom];
	"self(6)$0" -> "test_data(6)"	[label=assignedFrom];
	"test_prediction_shape(6)$0" -> "lentest(6)"	[label=assignedFrom];
	"test_prediction_shape(6)$0" -> "self(6)$0"	[label=assignedFrom];
	"test_prediction_shape(6)$1" -> "lentest(6)"	[label=assignedFrom];
	"test_prediction_shape(6)$1" -> "1(6)"	[label=assignedFrom];
	"level(6)" -> "self(6)$0"	[label=iteratorOf];
	"level(6)" -> "range(6)"	[label=iteratorOf];
	"level(6)" -> "self(6)$2"	[label=iteratorOf];
	"self(6)$2" -> "test_data(6)"	[label=assignedFrom];
	"self(6)$2" -> "self(6)$1"	[label=assignedFrom];
	"self(6)$1" -> "self(6)$0"	[label=zeros];
	"self(6)$1" -> "test_prediction_shape(6)$1"	[label=zeros];
	"self(6)$1" -> "1(6)"	[label=zeros];
	"self(6)$1" -> "level(6)"	[label=zeros];
	"self(6)$1" -> "self(6)$1"	[label=zeros];
	"self(6)$1" -> "np(6)"	[label=zeros];
	"self(6)$1" -> "0(6)"	[label=zeros];
	"self(6)$1" -> "len(6)"	[label=zeros];
	"temp_train(6)$0" -> "self(6)$2"	[label=assignedFrom];
	"temp_test(6)$0" -> "self(6)$2"	[label=assignedFrom];
	"temp_train(6)$1" -> "1(6)"	[label=assignedFrom];
	"temp_train(6)$1" -> "level(6)"	[label=assignedFrom];
	"temp_train(6)$1" -> "self(6)$2"	[label=assignedFrom];
	"temp_test(6)$1" -> "1(6)"	[label=assignedFrom];
	"temp_test(6)$1" -> "level(6)"	[label=assignedFrom];
	"temp_test(6)$1" -> "self(6)$2"	[label=assignedFrom];
	"model_num(6)" -> "level(6)"	[label=iteratorOf];
	"model_num(6)" -> "self(6)$2"	[label=iteratorOf];
	"model_num(6)" -> "enumerate(6)"	[label=iteratorOf];
	"model(6)" -> "level(6)"	[label=iteratorOf];
	"model(6)" -> "self(6)$2"	[label=iteratorOf];
	"model(6)" -> "enumerate(6)"	[label=iteratorOf];
	"logger(6)$0" -> "level(6)"	[label=info];
	"logger(6)$0" -> "model_num(6)"	[label=info];
	"logger(6)$0" -> "logger(6)"	[label=info];
	"logger(6)$0" -> "Training Fulldata Level \%d. Model # \%d(6)"	[label=info];
	"model(6)$0" -> "self(6)$2"	[label=fit];
	"model(6)$0" -> "0(6)"	[label=fit];
	"model(6)$0" -> "temp_train(6)$1"	[label=fit];
	"model(6)$0" -> "model_num(6)"	[label=fit];
	"model(6)$0" -> "model(6)"	[label=fit];
	"model(6)$1" -> "self(6)$2"	[label=fit];
	"model(6)$1" -> "temp_train(6)$1"	[label=fit];
	"model(6)$1" -> "model(6)$0"	[label=fit];
	"logger(6)$1" -> "level(6)"	[label=info];
	"logger(6)$1" -> "model_num(6)"	[label=info];
	"logger(6)$1" -> "logger(6)$0"	[label=info];
	"logger(6)$1" -> "Predicting Test Level \%d. Model # \%d(6)"	[label=info];
	"temp_test_predictions(6)$0" -> "0(6)"	[label=predict_proba];
	"temp_test_predictions(6)$0" -> "temp_test(6)$1"	[label=predict_proba];
	"temp_test_predictions(6)$0" -> "model_num(6)"	[label=predict_proba];
	"temp_test_predictions(6)$0" -> "model(6)$1"	[label=predict_proba];
	"temp_test_predictions(6)$1" -> "temp_test(6)$1"	[label=predict_proba];
	"temp_test_predictions(6)$1" -> "model(6)$1"	[label=predict_proba];
	"self(6)$3" -> "self(6)$2"	[label=assignedFrom];
	"self(6)$3" -> "temp_test_predictions(6)$1"	[label=assignedFrom];
	"temp_test_predictions(6)$2" -> "0(6)"	[label=predict];
	"temp_test_predictions(6)$2" -> "temp_test(6)$1"	[label=predict];
	"temp_test_predictions(6)$2" -> "model_num(6)"	[label=predict];
	"temp_test_predictions(6)$2" -> "model(6)$1"	[label=predict];
	"temp_test_predictions(6)$3" -> "temp_test(6)$1"	[label=predict];
	"temp_test_predictions(6)$3" -> "model(6)$1"	[label=predict];
	"self(6)$4" -> "self(6)$3"	[label=assignedFrom];
	"self(6)$4" -> "temp_test_predictions(6)$3"	[label=assignedFrom];
	"test_predictions_df(6)$0" -> "level(6)"	[label=DataFrame];
	"test_predictions_df(6)$0" -> "self(6)$4"	[label=DataFrame];
	"test_predictions_df(6)$0" -> "pd(6)"	[label=DataFrame];
	"test_predictions_df(6)$1" -> "level(6)"	[label=to_csv];
	"test_predictions_df(6)$1" -> "self(6)$4"	[label=to_csv];
	"test_predictions_df(6)$1" -> "test_predictions_df(6)$0"	[label=to_csv];
	"test_predictions_df(6)$1" -> "os(6)"	[label=to_csv];
	"test_predictions_df(6)$1" -> "test_predictions_level_(6)"	[label=to_csv];
	"test_predictions_df(6)$1" -> "str(6)"	[label=to_csv];
	"test_predictions_df(6)$1" -> ".csv(6)"	[label=to_csv];
	"train_data_dict(0)$0" -> "1(0)"	[label=assignedFrom];
	"train_data_dict(0)$0" -> "0(0)"	[label=assignedFrom];
	"train_data_dict(0)$0" -> "[<_ast.Name object at 0x7fd490127ee0>, <_ast.Name object at 0x7fd490127f10>, <_ast.Name object at 0x7fd490127f40>, <_ast.Name object \
at 0x7fd490127f70>](0)"	[label=assignedFrom];
	"train_data_dict(0)$0" -> "[<_ast.Name object at 0x7fd490127fd0>](0)"	[label=assignedFrom];
	"[<_ast.Name object at 0x7fd490127ee0>, <_ast.Name object at 0x7fd490127f10>, <_ast.Name object at 0x7fd490127f40>, <_ast.Name object \
at 0x7fd490127f70>](0)" -> "approaching-almost-any-nlp-problem-on-kaggle.ipynb"	[label=appearsIn];
	"[<_ast.Name object at 0x7fd490127fd0>](0)" -> "approaching-almost-any-nlp-problem-on-kaggle.ipynb"	[label=appearsIn];
	"test_data_dict(0)$0" -> "1(0)"	[label=assignedFrom];
	"test_data_dict(0)$0" -> "0(0)"	[label=assignedFrom];
	"test_data_dict(0)$0" -> "[<_ast.Name object at 0x7fd4902a2160>, <_ast.Name object at 0x7fd4902a2190>, <_ast.Name object at 0x7fd4902a21c0>, <_ast.Name object \
at 0x7fd4902a21f0>](0)"	[label=assignedFrom];
	"test_data_dict(0)$0" -> "[<_ast.Name object at 0x7fd4902a2250>](0)"	[label=assignedFrom];
	"[<_ast.Name object at 0x7fd4902a2160>, <_ast.Name object at 0x7fd4902a2190>, <_ast.Name object at 0x7fd4902a21c0>, <_ast.Name object \
at 0x7fd4902a21f0>](0)" -> "approaching-almost-any-nlp-problem-on-kaggle.ipynb"	[label=appearsIn];
	"[<_ast.Name object at 0x7fd4902a2250>](0)" -> "approaching-almost-any-nlp-problem-on-kaggle.ipynb"	[label=appearsIn];
	"model_dict(0)$0" -> "1(0)"	[label=assignedFrom];
	"model_dict(0)$0" -> "0(0)"	[label=assignedFrom];
	"model_dict(0)$0" -> "[<_ast.Call object at 0x7fd4902a23a0>, <_ast.Call object at 0x7fd4902a2400>, <_ast.Call object at 0x7fd4902a2460>, <_ast.Call object \
at 0x7fd4902a2550>](0)"	[label=assignedFrom];
	"model_dict(0)$0" -> "[<_ast.Call object at 0x7fd4902a25e0>](0)"	[label=assignedFrom];
	"[<_ast.Call object at 0x7fd4902a23a0>, <_ast.Call object at 0x7fd4902a2400>, <_ast.Call object at 0x7fd4902a2460>, <_ast.Call object \
at 0x7fd4902a2550>](0)" -> "approaching-almost-any-nlp-problem-on-kaggle.ipynb"	[label=appearsIn];
	"[<_ast.Call object at 0x7fd4902a25e0>](0)" -> "approaching-almost-any-nlp-problem-on-kaggle.ipynb"	[label=appearsIn];
	"ens(0)$0" -> "True(0)"	[label=Ensembler];
	"ens(0)$0" -> "3(0)"	[label=Ensembler];
	"ens(0)$0" -> "multiclass_logloss(0)"	[label=Ensembler];
	"ens(0)$0" -> "model_dict(0)$0"	[label=Ensembler];
	"ens(0)$0" -> "classification(0)"	[label=Ensembler];
	"ens(0)$0" -> "(0)"	[label=Ensembler];
	"classification(0)" -> "approaching-almost-any-nlp-problem-on-kaggle.ipynb"	[label=appearsIn];
	"(0)" -> "approaching-almost-any-nlp-problem-on-kaggle.ipynb"	[label=appearsIn];
	"ens(0)$1" -> "ytrain(0)$0"	[label=fit];
	"ens(0)$1" -> "train_data_dict(0)$0"	[label=fit];
	"ens(0)$1" -> "ens(0)$0"	[label=fit];
	"preds(0)$0" -> "0(0)"	[label=predict];
	"preds(0)$0" -> "xvalid_glove(0)$1"	[label=predict];
	"preds(0)$0" -> "test_data_dict(0)$0"	[label=predict];
	"preds(0)$0" -> "ens(0)$1"	[label=predict];
	"multiclass_logloss[568/0]" -> "yvalid(0)$0"	[label=multiclass_logloss];
	"multiclass_logloss[568/0]" -> "1(0)"	[label=multiclass_logloss];
	"multiclass_logloss[568/0]" -> "preds(0)$0"	[label=multiclass_logloss];
}
