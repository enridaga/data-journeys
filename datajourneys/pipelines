strict digraph "" {
	pandas -> "pipelines.ipynb"	[label=importedBy];
	"pd(0)" -> pandas	[label=assignedFrom];
	"pd(0)" -> "pipelines.ipynb"	[label=appearsIn];
	"sklearn.model_selection" -> "pipelines.ipynb"	[label=importedBy];
	train_test_split -> "sklearn.model_selection"	[label=importedBy];
	"train_test_split(0)" -> "pipelines.ipynb"	[label=appearsIn];
	"train_test_split(0)" -> train_test_split	[label=assignedFrom];
	"data(0)$0" -> "pd(0)"	[label=read_csv];
	"data(0)$0" -> "../input/melbourne-housing-snapshot/melb_data.csv(0)"	[label=read_csv];
	"../input/melbourne-housing-snapshot/melb_data.csv(0)" -> "pipelines.ipynb"	[label=appearsIn];
	"y(0)$0" -> "data(0)$0"	[label=assignedFrom];
	"X(0)$0" -> "data(0)$0"	[label=drop];
	"X(0)$0" -> "[<_ast.Constant object at 0x7fd5007f0700>](0)"	[label=drop];
	"X(0)$0" -> "1(0)"	[label=drop];
	"[<_ast.Constant object at 0x7fd5007f0700>](0)" -> "pipelines.ipynb"	[label=appearsIn];
	"1(0)" -> "pipelines.ipynb"	[label=appearsIn];
	"X_train_full(0)$0" -> "y(0)$0"	[label=train_test_split];
	"X_train_full(0)$0" -> "X(0)$0"	[label=train_test_split];
	"X_train_full(0)$0" -> "0.8(0)"	[label=train_test_split];
	"X_train_full(0)$0" -> "0.2(0)"	[label=train_test_split];
	"X_train_full(0)$0" -> "0(0)"	[label=train_test_split];
	"0.8(0)" -> "pipelines.ipynb"	[label=appearsIn];
	"0.2(0)" -> "pipelines.ipynb"	[label=appearsIn];
	"0(0)" -> "pipelines.ipynb"	[label=appearsIn];
	"X_valid_full(0)$0" -> "y(0)$0"	[label=train_test_split];
	"X_valid_full(0)$0" -> "X(0)$0"	[label=train_test_split];
	"X_valid_full(0)$0" -> "0.8(0)"	[label=train_test_split];
	"X_valid_full(0)$0" -> "0.2(0)"	[label=train_test_split];
	"X_valid_full(0)$0" -> "0(0)"	[label=train_test_split];
	"y_train(0)$0" -> "y(0)$0"	[label=train_test_split];
	"y_train(0)$0" -> "X(0)$0"	[label=train_test_split];
	"y_train(0)$0" -> "0.8(0)"	[label=train_test_split];
	"y_train(0)$0" -> "0.2(0)"	[label=train_test_split];
	"y_train(0)$0" -> "0(0)"	[label=train_test_split];
	"y_valid(0)$0" -> "y(0)$0"	[label=train_test_split];
	"y_valid(0)$0" -> "X(0)$0"	[label=train_test_split];
	"y_valid(0)$0" -> "0.8(0)"	[label=train_test_split];
	"y_valid(0)$0" -> "0.2(0)"	[label=train_test_split];
	"y_valid(0)$0" -> "0(0)"	[label=train_test_split];
	"cname(0)" -> "pipelines.ipynb"	[label=appearsIn];
	"categorical_cols(0)$0" -> "X_train_full(0)$0"	[label=assignedFrom];
	"categorical_cols(0)$0" -> "cname(0)"	[label=assignedFrom];
	"categorical_cols(0)$0" -> "10(0)"	[label=assignedFrom];
	"categorical_cols(0)$0" -> "object(0)"	[label=assignedFrom];
	"10(0)" -> "pipelines.ipynb"	[label=appearsIn];
	"object(0)" -> "pipelines.ipynb"	[label=appearsIn];
	"numerical_cols(0)$0" -> "X_train_full(0)$0"	[label=assignedFrom];
	"numerical_cols(0)$0" -> "cname(0)"	[label=assignedFrom];
	"numerical_cols(0)$0" -> "[<_ast.Constant object at 0x7fd5007f0f10>, <_ast.Constant object at 0x7fd4c04cca30>](0)"	[label=assignedFrom];
	"[<_ast.Constant object at 0x7fd5007f0f10>, <_ast.Constant object at 0x7fd4c04cca30>](0)" -> "pipelines.ipynb"	[label=appearsIn];
	"my_cols(0)$0" -> "categorical_cols(0)$0"	[label=Add];
	"my_cols(0)$0" -> "numerical_cols(0)$0"	[label=Add];
	"X_train(0)$0" -> "X_train_full(0)$0"	[label=copy];
	"X_train(0)$0" -> "my_cols(0)$0"	[label=copy];
	"X_valid(0)$0" -> "X_valid_full(0)$0"	[label=copy];
	"X_valid(0)$0" -> "my_cols(0)$0"	[label=copy];
	"X_train(0)$1" -> "X_train(0)$0"	[label=head];
	"sklearn.compose" -> "pipelines.ipynb"	[label=importedBy];
	ColumnTransformer -> "sklearn.compose"	[label=importedBy];
	"ColumnTransformer(0)" -> "pipelines.ipynb"	[label=appearsIn];
	"ColumnTransformer(0)" -> ColumnTransformer	[label=assignedFrom];
	"sklearn.pipeline" -> "pipelines.ipynb"	[label=importedBy];
	Pipeline -> "sklearn.pipeline"	[label=importedBy];
	"Pipeline(0)" -> "pipelines.ipynb"	[label=appearsIn];
	"Pipeline(0)" -> Pipeline	[label=assignedFrom];
	"sklearn.impute" -> "pipelines.ipynb"	[label=importedBy];
	SimpleImputer -> "sklearn.impute"	[label=importedBy];
	"SimpleImputer(0)" -> "pipelines.ipynb"	[label=appearsIn];
	"SimpleImputer(0)" -> SimpleImputer	[label=assignedFrom];
	"sklearn.preprocessing" -> "pipelines.ipynb"	[label=importedBy];
	OneHotEncoder -> "sklearn.preprocessing"	[label=importedBy];
	"OneHotEncoder(0)" -> "pipelines.ipynb"	[label=appearsIn];
	"OneHotEncoder(0)" -> OneHotEncoder	[label=assignedFrom];
	"constant(0)" -> "pipelines.ipynb"	[label=appearsIn];
	"numerical_transformer(0)$0" -> "constant(0)"	[label=SimpleImputer];
	"[<_ast.Tuple object at 0x7fd4c04cc820>, <_ast.Tuple object at 0x7fd4c04cc5e0>](0)" -> "pipelines.ipynb"	[label=appearsIn];
	"categorical_transformer(0)$0" -> "[<_ast.Tuple object at 0x7fd4c04cc820>, <_ast.Tuple object at 0x7fd4c04cc5e0>](0)"	[label=Pipeline];
	"[<_ast.Tuple object at 0x7fd4c04ccfa0>, <_ast.Tuple object at 0x7fd4c04ccb20>](0)" -> "pipelines.ipynb"	[label=appearsIn];
	"preprocessor(0)$0" -> "[<_ast.Tuple object at 0x7fd4c04ccfa0>, <_ast.Tuple object at 0x7fd4c04ccb20>](0)"	[label=ColumnTransformer];
	"sklearn.ensemble" -> "pipelines.ipynb"	[label=importedBy];
	RandomForestRegressor -> "sklearn.ensemble"	[label=importedBy];
	"RandomForestRegressor(0)" -> "pipelines.ipynb"	[label=appearsIn];
	"RandomForestRegressor(0)" -> RandomForestRegressor	[label=assignedFrom];
	"100(0)" -> "pipelines.ipynb"	[label=appearsIn];
	"model(0)$0" -> "0(0)"	[label=RandomForestRegressor];
	"model(0)$0" -> "100(0)"	[label=RandomForestRegressor];
	"sklearn.metrics" -> "pipelines.ipynb"	[label=importedBy];
	mean_absolute_error -> "sklearn.metrics"	[label=importedBy];
	"mean_absolute_error(0)" -> "pipelines.ipynb"	[label=appearsIn];
	"mean_absolute_error(0)" -> mean_absolute_error	[label=assignedFrom];
	"[<_ast.Tuple object at 0x7fd50085ba30>, <_ast.Tuple object at 0x7fd50085b2b0>](0)" -> "pipelines.ipynb"	[label=appearsIn];
	"my_pipeline(0)$0" -> "[<_ast.Tuple object at 0x7fd50085ba30>, <_ast.Tuple object at 0x7fd50085b2b0>](0)"	[label=Pipeline];
	"my_pipeline(0)$1" -> "y_train(0)$0"	[label=fit];
	"my_pipeline(0)$1" -> "X_train(0)$1"	[label=fit];
	"my_pipeline(0)$1" -> "my_pipeline(0)$0"	[label=fit];
	"preds(0)$0" -> "X_valid(0)$0"	[label=predict];
	"preds(0)$0" -> "my_pipeline(0)$1"	[label=predict];
	"score(0)$0" -> "y_valid(0)$0"	[label=mean_absolute_error];
	"score(0)$0" -> "preds(0)$0"	[label=mean_absolute_error];
	"MAE:(0)" -> "pipelines.ipynb"	[label=appearsIn];
	"print[130/0]" -> "score(0)$0"	[label=print];
	"print[130/0]" -> "MAE:(0)"	[label=print];
}
