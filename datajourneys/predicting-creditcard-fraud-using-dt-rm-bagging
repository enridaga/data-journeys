strict digraph "" {
	os -> "predicting-creditcard-fraud-using-dt-rm-bagging.ipynb"	[label=importedBy];
	"os(0)" -> os	[label=assignedFrom];
	"os(0)" -> "predicting-creditcard-fraud-using-dt-rm-bagging.ipynb"	[label=appearsIn];
	"dirname(0)" -> "predicting-creditcard-fraud-using-dt-rm-bagging.ipynb"	[label=appearsIn];
	"dirname(0)" -> "os(0)"	[label=iteratorOf];
	"dirname(0)" -> "/kaggle/input(0)"	[label=iteratorOf];
	"/kaggle/input(0)" -> "predicting-creditcard-fraud-using-dt-rm-bagging.ipynb"	[label=appearsIn];
	"_(0)" -> "predicting-creditcard-fraud-using-dt-rm-bagging.ipynb"	[label=appearsIn];
	"_(0)" -> "os(0)"	[label=iteratorOf];
	"_(0)" -> "/kaggle/input(0)"	[label=iteratorOf];
	"filenames(0)" -> "predicting-creditcard-fraud-using-dt-rm-bagging.ipynb"	[label=appearsIn];
	"filenames(0)" -> "os(0)"	[label=iteratorOf];
	"filenames(0)" -> "/kaggle/input(0)"	[label=iteratorOf];
	"filename(0)" -> "predicting-creditcard-fraud-using-dt-rm-bagging.ipynb"	[label=appearsIn];
	"filename(0)" -> "filenames(0)"	[label=iteratorOf];
	"print[5/8]" -> "os(0)"	[label=print];
	"print[5/8]" -> "dirname(0)"	[label=print];
	"print[5/8]" -> "filename(0)"	[label=print];
	pandas -> "predicting-creditcard-fraud-using-dt-rm-bagging.ipynb"	[label=importedBy];
	"pd(0)" -> "predicting-creditcard-fraud-using-dt-rm-bagging.ipynb"	[label=appearsIn];
	"pd(0)" -> pandas	[label=assignedFrom];
	numpy -> "predicting-creditcard-fraud-using-dt-rm-bagging.ipynb"	[label=importedBy];
	"np(0)" -> "predicting-creditcard-fraud-using-dt-rm-bagging.ipynb"	[label=appearsIn];
	"np(0)" -> numpy	[label=assignedFrom];
	seaborn -> "predicting-creditcard-fraud-using-dt-rm-bagging.ipynb"	[label=importedBy];
	"sns(0)" -> "predicting-creditcard-fraud-using-dt-rm-bagging.ipynb"	[label=appearsIn];
	"sns(0)" -> seaborn	[label=assignedFrom];
	"sklearn.preprocessing" -> "predicting-creditcard-fraud-using-dt-rm-bagging.ipynb"	[label=importedBy];
	StandardScaler -> "sklearn.preprocessing"	[label=importedBy];
	"StandardScaler(0)" -> "predicting-creditcard-fraud-using-dt-rm-bagging.ipynb"	[label=appearsIn];
	"StandardScaler(0)" -> StandardScaler	[label=assignedFrom];
	"matplotlib.pyplot" -> "predicting-creditcard-fraud-using-dt-rm-bagging.ipynb"	[label=importedBy];
	"plt(0)" -> "predicting-creditcard-fraud-using-dt-rm-bagging.ipynb"	[label=appearsIn];
	"plt(0)" -> "matplotlib.pyplot"	[label=assignedFrom];
	"sklearn.tree" -> "predicting-creditcard-fraud-using-dt-rm-bagging.ipynb"	[label=importedBy];
	DecisionTreeClassifier -> "sklearn.tree"	[label=importedBy];
	"DecisionTreeClassifier(0)" -> "predicting-creditcard-fraud-using-dt-rm-bagging.ipynb"	[label=appearsIn];
	"DecisionTreeClassifier(0)" -> DecisionTreeClassifier	[label=assignedFrom];
	"sklearn.ensemble" -> "predicting-creditcard-fraud-using-dt-rm-bagging.ipynb"	[label=importedBy];
	RandomForestClassifier -> "sklearn.ensemble"	[label=importedBy];
	"RandomForestClassifier(0)" -> "predicting-creditcard-fraud-using-dt-rm-bagging.ipynb"	[label=appearsIn];
	"RandomForestClassifier(0)" -> RandomForestClassifier	[label=assignedFrom];
	BaggingClassifier -> "sklearn.ensemble"	[label=importedBy];
	"BaggingClassifier(0)" -> "predicting-creditcard-fraud-using-dt-rm-bagging.ipynb"	[label=appearsIn];
	"BaggingClassifier(0)" -> BaggingClassifier	[label=assignedFrom];
	"sklearn.metrics" -> "predicting-creditcard-fraud-using-dt-rm-bagging.ipynb"	[label=importedBy];
	confusion_matrix -> "sklearn.metrics"	[label=importedBy];
	"confusion_matrix(0)" -> "predicting-creditcard-fraud-using-dt-rm-bagging.ipynb"	[label=appearsIn];
	"confusion_matrix(0)" -> confusion_matrix	[label=assignedFrom];
	accuracy_score -> "sklearn.metrics"	[label=importedBy];
	"accuracy_score(0)" -> "predicting-creditcard-fraud-using-dt-rm-bagging.ipynb"	[label=appearsIn];
	"accuracy_score(0)" -> accuracy_score	[label=assignedFrom];
	"base_dataset(0)$0" -> "pd(0)"	[label=read_csv];
	"base_dataset(0)$0" -> "/kaggle/input/creditcardfraud/creditcard.csv(0)"	[label=read_csv];
	"/kaggle/input/creditcardfraud/creditcard.csv(0)" -> "predicting-creditcard-fraud-using-dt-rm-bagging.ipynb"	[label=appearsIn];
	"df(0)$0" -> "base_dataset(0)$0"	[label=assignedFrom];
	"base_dataset(0)$1" -> "base_dataset(0)$0"	[label=head];
	"sns(0)$0" -> "sns(0)"	[label=countplot];
	"sns(0)$0" -> "base_dataset(0)$1"	[label=countplot];
	"sns(0)$0" -> "Class(0)"	[label=countplot];
	"Class(0)" -> "predicting-creditcard-fraud-using-dt-rm-bagging.ipynb"	[label=appearsIn];
	"start_mem(0)$0" -> "base_dataset(0)$1"	[label=Div];
	"start_mem(0)$0" -> "1024(0)"	[label=Div];
	"start_mem(0)$0" -> "2(0)"	[label=Div];
	"1024(0)" -> "predicting-creditcard-fraud-using-dt-rm-bagging.ipynb"	[label=appearsIn];
	"2(0)" -> "predicting-creditcard-fraud-using-dt-rm-bagging.ipynb"	[label=appearsIn];
	"Memory usage of dataframe is {:.2f} MB(0)" -> "predicting-creditcard-fraud-using-dt-rm-bagging.ipynb"	[label=appearsIn];
	"print[32/0]" -> "start_mem(0)$0"	[label=print];
	"print[32/0]" -> "Memory usage of dataframe is {:.2f} MB(0)"	[label=print];
	"col(0)" -> "predicting-creditcard-fraud-using-dt-rm-bagging.ipynb"	[label=appearsIn];
	"col(0)" -> "base_dataset(0)$1"	[label=iteratorOf];
	"col_type(0)$0" -> "base_dataset(0)$1"	[label=assignedFrom];
	"col_type(0)$0" -> "col(0)"	[label=assignedFrom];
	"c_min(0)$0" -> "base_dataset(0)$1"	[label=min];
	"c_min(0)$0" -> "col(0)"	[label=min];
	"c_max(0)$0" -> "base_dataset(0)$1"	[label=max];
	"c_max(0)$0" -> "col(0)"	[label=max];
	"base_dataset(0)$2" -> "np(0)"	[label=astype];
	"base_dataset(0)$2" -> "base_dataset(0)$1"	[label=astype];
	"base_dataset(0)$2" -> "col(0)"	[label=astype];
	"base_dataset(0)$3" -> "np(0)"	[label=astype];
	"base_dataset(0)$3" -> "col(0)"	[label=astype];
	"base_dataset(0)$3" -> "base_dataset(0)$2"	[label=astype];
	"base_dataset(0)$4" -> "np(0)"	[label=astype];
	"base_dataset(0)$4" -> "col(0)"	[label=astype];
	"base_dataset(0)$4" -> "base_dataset(0)$3"	[label=astype];
	"base_dataset(0)$5" -> "np(0)"	[label=astype];
	"base_dataset(0)$5" -> "col(0)"	[label=astype];
	"base_dataset(0)$5" -> "base_dataset(0)$4"	[label=astype];
	"base_dataset(0)$6" -> "np(0)"	[label=astype];
	"base_dataset(0)$6" -> "col(0)"	[label=astype];
	"base_dataset(0)$6" -> "base_dataset(0)$5"	[label=astype];
	"base_dataset(0)$7" -> "np(0)"	[label=astype];
	"base_dataset(0)$7" -> "col(0)"	[label=astype];
	"base_dataset(0)$7" -> "base_dataset(0)$6"	[label=astype];
	"base_dataset(0)$8" -> "np(0)"	[label=astype];
	"base_dataset(0)$8" -> "col(0)"	[label=astype];
	"base_dataset(0)$8" -> "base_dataset(0)$7"	[label=astype];
	"base_dataset(0)$9" -> "col(0)"	[label=astype];
	"base_dataset(0)$9" -> "base_dataset(0)$8"	[label=astype];
	"base_dataset(0)$9" -> "category(0)"	[label=astype];
	"category(0)" -> "predicting-creditcard-fraud-using-dt-rm-bagging.ipynb"	[label=appearsIn];
	"end_mem(0)$0" -> "1024(0)"	[label=Div];
	"end_mem(0)$0" -> "2(0)"	[label=Div];
	"end_mem(0)$0" -> "base_dataset(0)$9"	[label=Div];
	"Memory usage after optimization is: {:.2f} MB(0)" -> "predicting-creditcard-fraud-using-dt-rm-bagging.ipynb"	[label=appearsIn];
	"print[60/0]" -> "end_mem(0)$0"	[label=print];
	"print[60/0]" -> "Memory usage after optimization is: {:.2f} MB(0)"	[label=print];
	"Decreased by {:.1f}\%(0)" -> "predicting-creditcard-fraud-using-dt-rm-bagging.ipynb"	[label=appearsIn];
	"print[61/0]" -> "start_mem(0)$0"	[label=print];
	"print[61/0]" -> "end_mem(0)$0"	[label=print];
	"print[61/0]" -> "Decreased by {:.1f}\%(0)"	[label=print];
	"print[61/0]" -> "100(0)"	[label=print];
	"100(0)" -> "predicting-creditcard-fraud-using-dt-rm-bagging.ipynb"	[label=appearsIn];
	"base_dataset(0)$10" -> "base_dataset(0)$9"	[label=sum];
	"i(0)" -> "predicting-creditcard-fraud-using-dt-rm-bagging.ipynb"	[label=appearsIn];
	"i(0)" -> "base_dataset(0)$10"	[label=iteratorOf];
	"i(0)" -> "base_dataset(0)$13"	[label=iteratorOf];
	"base_dataset(0)$13" -> "base_dataset(0)$12"	[label=head];
	"sns(0)$1" -> "sns(0)$0"	[label=boxplot];
	"plt(0)$0" -> "plt(0)"	[label=show];
	"IPython.display" -> "predicting-creditcard-fraud-using-dt-rm-bagging.ipynb"	[label=importedBy];
	Image -> "IPython.display"	[label=importedBy];
	"Image(0)" -> "predicting-creditcard-fraud-using-dt-rm-bagging.ipynb"	[label=appearsIn];
	"Image(0)" -> Image	[label=assignedFrom];
	"/kaggle/input/outlierimage/outlier.png(0)" -> "predicting-creditcard-fraud-using-dt-rm-bagging.ipynb"	[label=appearsIn];
	"Image[68/0]" -> "/kaggle/input/outlierimage/outlier.png(0)"	[label=Image];
	"base_dataset(1)" -> "outliers_transform[0]"	[label=_argToVar];
	"i(1)" -> "base_dataset(1)"	[label=iteratorOf];
	"i(1)" -> "False(1)"	[label=iteratorOf];
	"i(1)" -> "0(1)"	[label=iteratorOf];
	"i(1)" -> "10(1)"	[label=iteratorOf];
	"x(1)$0" -> "base_dataset(1)"	[label=array];
	"x(1)$0" -> "i(1)"	[label=array];
	"x(1)$0" -> "np(1)"	[label=array];
	"qr1(1)$0" -> "x(1)$0"	[label=quantile];
	"qr1(1)$0" -> "np(1)"	[label=quantile];
	"qr1(1)$0" -> "0.25(1)"	[label=quantile];
	"qr3(1)$0" -> "x(1)$0"	[label=quantile];
	"qr3(1)$0" -> "np(1)"	[label=quantile];
	"qr3(1)$0" -> "0.75(1)"	[label=quantile];
	"iqr(1)$0" -> "qr1(1)$0"	[label=Sub];
	"iqr(1)$0" -> "qr3(1)$0"	[label=Sub];
	"utv(1)$0" -> "qr3(1)$0"	[label=Add];
	"utv(1)$0" -> "iqr(1)$0"	[label=Add];
	"utv(1)$0" -> "1.5(1)"	[label=Add];
	"ltv(1)$0" -> "qr1(1)$0"	[label=Sub];
	"ltv(1)$0" -> "iqr(1)$0"	[label=Sub];
	"ltv(1)$0" -> "1.5(1)"	[label=Sub];
	"y(1)$0" -> "[](1)"	[label=assignedFrom];
	"p(1)" -> "x(1)$0"	[label=iteratorOf];
	"y(1)$1" -> "x(1)$0"	[label=append];
	"y(1)$1" -> "np(1)"	[label=append];
	"y(1)$1" -> "y(1)$0"	[label=append];
	"y(1)$2" -> "p(1)"	[label=append];
	"y(1)$2" -> "y(1)$1"	[label=append];
	"base_dataset(1)$0" -> "base_dataset(1)"	[label=assignedFrom];
	"base_dataset(1)$0" -> "y(1)$2"	[label=assignedFrom];
	"outliers_transform[85/0]" -> "base_dataset(0)$10"	[label=outliers_transform];
	"sns(0)$2" -> "sns(0)$1"	[label=boxplot];
	"sns(0)$3" -> "sns(0)$2"	[label=boxplot];
	"sd(0)" -> "predicting-creditcard-fraud-using-dt-rm-bagging.ipynb"	[label=appearsIn];
	"sd(0)$0" -> "pd(0)"	[label=fit_transform];
	"sd(0)$0" -> "base_dataset(0)$10"	[label=fit_transform];
	"sd(0)$0" -> "sd(0)"	[label=fit_transform];
	"sd(0)$0" -> "Amount(0)"	[label=fit_transform];
	"Amount(0)" -> "predicting-creditcard-fraud-using-dt-rm-bagging.ipynb"	[label=appearsIn];
	"z1(0)$0" -> "pd(0)"	[label=transform];
	"z1(0)$0" -> "base_dataset(0)$10"	[label=transform];
	"z1(0)$0" -> "sd(0)$0"	[label=transform];
	"z1(0)$0" -> "Amount(0)"	[label=transform];
	"base_dataset(0)$11" -> "base_dataset(0)$10"	[label=assignedFrom];
	"base_dataset(0)$11" -> "z1(0)$0"	[label=assignedFrom];
	"z2(0)$0" -> "pd(0)"	[label=fit_transform];
	"z2(0)$0" -> "sd(0)$0"	[label=fit_transform];
	"z2(0)$0" -> "base_dataset(0)$11"	[label=fit_transform];
	"z2(0)$0" -> "Time(0)"	[label=fit_transform];
	"Time(0)" -> "predicting-creditcard-fraud-using-dt-rm-bagging.ipynb"	[label=appearsIn];
	"base_dataset(0)$12" -> "base_dataset(0)$11"	[label=assignedFrom];
	"base_dataset(0)$12" -> "z2(0)$0"	[label=assignedFrom];
	"sns(0)$4" -> "i(0)"	[label=distplot];
	"sns(0)$4" -> "base_dataset(0)$13"	[label=distplot];
	"sns(0)$4" -> "sns(0)$3"	[label=distplot];
	"plt(0)$1" -> "plt(0)$0"	[label=show];
	"plt(0)$2" -> "plt(0)$1"	[label=figure];
	"sns(0)$5" -> "base_dataset(0)$13"	[label=heatmap];
	"sns(0)$5" -> "sns(0)$4"	[label=heatmap];
	"y(0)$0" -> "Class(0)"	[label=assignedFrom];
	"y(0)$0" -> "base_dataset(0)$13"	[label=assignedFrom];
	"x(0)$0" -> "Class(0)"	[label=drop];
	"x(0)$0" -> "base_dataset(0)$13"	[label=drop];
	"x(0)$0" -> "1(0)"	[label=drop];
	"1(0)" -> "predicting-creditcard-fraud-using-dt-rm-bagging.ipynb"	[label=appearsIn];
	"y(0)$1" -> "y(0)$0"	[label=head];
	"y(0)$1" -> "10(0)"	[label=head];
	"10(0)" -> "predicting-creditcard-fraud-using-dt-rm-bagging.ipynb"	[label=appearsIn];
	"x(0)$1" -> "x(0)$0"	[label=head];
	"sklearn.model_selection" -> "predicting-creditcard-fraud-using-dt-rm-bagging.ipynb"	[label=importedBy];
	train_test_split -> "sklearn.model_selection"	[label=importedBy];
	"train_test_split(0)" -> "predicting-creditcard-fraud-using-dt-rm-bagging.ipynb"	[label=appearsIn];
	"train_test_split(0)" -> train_test_split	[label=assignedFrom];
	"X_train(0)$0" -> "y(0)$1"	[label=train_test_split];
	"X_train(0)$0" -> "x(0)$1"	[label=train_test_split];
	"X_train(0)$0" -> "0.2(0)"	[label=train_test_split];
	"X_train(0)$0" -> "43(0)"	[label=train_test_split];
	"0.2(0)" -> "predicting-creditcard-fraud-using-dt-rm-bagging.ipynb"	[label=appearsIn];
	"43(0)" -> "predicting-creditcard-fraud-using-dt-rm-bagging.ipynb"	[label=appearsIn];
	"X_test(0)$0" -> "y(0)$1"	[label=train_test_split];
	"X_test(0)$0" -> "x(0)$1"	[label=train_test_split];
	"X_test(0)$0" -> "0.2(0)"	[label=train_test_split];
	"X_test(0)$0" -> "43(0)"	[label=train_test_split];
	"y_train(0)$0" -> "y(0)$1"	[label=train_test_split];
	"y_train(0)$0" -> "x(0)$1"	[label=train_test_split];
	"y_train(0)$0" -> "0.2(0)"	[label=train_test_split];
	"y_train(0)$0" -> "43(0)"	[label=train_test_split];
	"y_test(0)$0" -> "y(0)$1"	[label=train_test_split];
	"y_test(0)$0" -> "x(0)$1"	[label=train_test_split];
	"y_test(0)$0" -> "0.2(0)"	[label=train_test_split];
	"y_test(0)$0" -> "43(0)"	[label=train_test_split];
	"print[110/0]" -> "X_train(0)$0"	[label=print];
	"print[110/0]" -> "X_test(0)$0"	[label=print];
	"print[110/0]" -> "y_train(0)$0"	[label=print];
	"print[110/0]" -> "y_test(0)$0"	[label=print];
	"[](0)" -> "predicting-creditcard-fraud-using-dt-rm-bagging.ipynb"	[label=appearsIn];
	"final_accuracy_scores_decisionTree_gini(0)$0" -> "[](0)"	[label=assignedFrom];
	"gini(0)" -> "predicting-creditcard-fraud-using-dt-rm-bagging.ipynb"	[label=appearsIn];
	"dt(0)$0" -> "gini(0)"	[label=DecisionTreeClassifier];
	"dt(0)$1" -> "X_train(0)$0"	[label=fit];
	"dt(0)$1" -> "y_train(0)$0"	[label=fit];
	"dt(0)$1" -> "dt(0)$0"	[label=fit];
	"dt(0)$2" -> "X_train(0)$0"	[label=predict];
	"dt(0)$2" -> "dt(0)$1"	[label=predict];
	"dt(0)$3" -> "X_test(0)$0"	[label=predict];
	"dt(0)$3" -> "dt(0)$2"	[label=predict];
	"(0)" -> "predicting-creditcard-fraud-using-dt-rm-bagging.ipynb"	[label=appearsIn];
	"print[116/0]" -> "(0)"	[label=print];
	"---------------------------------------------------------------------------------------------------------(0)" -> "predicting-creditcard-fraud-using-dt-rm-bagging.ipynb"	[label=appearsIn];
	"print[117/0]" -> "---------------------------------------------------------------------------------------------------------(0)"	[label=print];
	"For the machine learning model : {}(0)" -> "predicting-creditcard-fraud-using-dt-rm-bagging.ipynb"	[label=appearsIn];
	"print[118/0]" -> "i(0)"	[label=print];
	"print[118/0]" -> "For the machine learning model : {}(0)"	[label=print];
	"Confusion matrix for test samples(0)" -> "predicting-creditcard-fraud-using-dt-rm-bagging.ipynb"	[label=appearsIn];
	"print[119/0]" -> "Confusion matrix for test samples(0)"	[label=print];
	"print[120/0]" -> "confusion_matrix(0)"	[label=print];
	"print[120/0]" -> "X_test(0)$0"	[label=print];
	"print[120/0]" -> "y_test(0)$0"	[label=print];
	"print[120/0]" -> "dt(0)$3"	[label=print];
	"Accuracy score for test samples(0)" -> "predicting-creditcard-fraud-using-dt-rm-bagging.ipynb"	[label=appearsIn];
	"print[121/0]" -> "accuracy_score(0)"	[label=print];
	"print[121/0]" -> "X_test(0)$0"	[label=print];
	"print[121/0]" -> "y_test(0)$0"	[label=print];
	"print[121/0]" -> "dt(0)$3"	[label=print];
	"print[121/0]" -> "Accuracy score for test samples(0)"	[label=print];
	"Confusion matrix for training samples(0)" -> "predicting-creditcard-fraud-using-dt-rm-bagging.ipynb"	[label=appearsIn];
	"print[122/0]" -> "Confusion matrix for training samples(0)"	[label=print];
	"print[123/0]" -> "confusion_matrix(0)"	[label=print];
	"print[123/0]" -> "X_train(0)$0"	[label=print];
	"print[123/0]" -> "y_train(0)$0"	[label=print];
	"print[123/0]" -> "dt(0)$3"	[label=print];
	"Accuracy score for training samples(0)" -> "predicting-creditcard-fraud-using-dt-rm-bagging.ipynb"	[label=appearsIn];
	"print[124/0]" -> "accuracy_score(0)"	[label=print];
	"print[124/0]" -> "X_train(0)$0"	[label=print];
	"print[124/0]" -> "y_train(0)$0"	[label=print];
	"print[124/0]" -> "dt(0)$3"	[label=print];
	"print[124/0]" -> "Accuracy score for training samples(0)"	[label=print];
	"final_accuracy_scores_decisionTree_gini(0)$1" -> "final_accuracy_scores_decisionTree_gini(0)$0"	[label=append];
	"final_accuracy_scores_decisionTree_gini(0)$1" -> "[<_ast.Name object at 0x7fd4c04fad60>, <_ast.Call object at 0x7fd4c04fafd0>, <_ast.Call object at 0x7fd4c04ab0a0>, <_ast.Call object \
at 0x7fd4c04ab1f0>, <_ast.Call object at 0x7fd4c04ab340>](0)"	[label=append];
	"[<_ast.Name object at 0x7fd4c04fad60>, <_ast.Call object at 0x7fd4c04fafd0>, <_ast.Call object at 0x7fd4c04ab0a0>, <_ast.Call object \
at 0x7fd4c04ab1f0>, <_ast.Call object at 0x7fd4c04ab340>](0)" -> "predicting-creditcard-fraud-using-dt-rm-bagging.ipynb"	[label=appearsIn];
	cross_val_score -> "sklearn.model_selection"	[label=importedBy];
	"cross_val_score(0)" -> "predicting-creditcard-fraud-using-dt-rm-bagging.ipynb"	[label=appearsIn];
	"cross_val_score(0)" -> cross_val_score	[label=assignedFrom];
	"K-Fold results for machine learning model : {} (0)" -> "predicting-creditcard-fraud-using-dt-rm-bagging.ipynb"	[label=appearsIn];
	"print[127/0]" -> "dt(0)$3"	[label=print];
	"print[127/0]" -> "K-Fold results for machine learning model : {} (0)"	[label=print];
	"print[128/0]" -> "10(0)"	[label=print];
	"print[128/0]" -> "X_train(0)$0"	[label=print];
	"print[128/0]" -> "y_train(0)$0"	[label=print];
	"print[128/0]" -> "dt(0)$3"	[label=print];
	"print[128/0]" -> "cross_val_score(0)"	[label=print];
	"predicted_decisionTree_gini(0)$0" -> "X_test(0)$0"	[label=predict];
	"predicted_decisionTree_gini(0)$0" -> "dt(0)$3"	[label=predict];
	"final_accuracy_scores_randomForest_gini(0)$0" -> "[](0)"	[label=assignedFrom];
	"dt(0)$4" -> "gini(0)"	[label=RandomForestClassifier];
	"dt(0)$5" -> "X_train(0)$0"	[label=fit];
	"dt(0)$5" -> "y_train(0)$0"	[label=fit];
	"dt(0)$5" -> "dt(0)$4"	[label=fit];
	"dt(0)$6" -> "X_train(0)$0"	[label=predict];
	"dt(0)$6" -> "dt(0)$5"	[label=predict];
	"dt(0)$7" -> "X_test(0)$0"	[label=predict];
	"dt(0)$7" -> "dt(0)$6"	[label=predict];
	"print[136/0]" -> "(0)"	[label=print];
	"print[137/0]" -> "---------------------------------------------------------------------------------------------------------(0)"	[label=print];
	"print[138/0]" -> "i(0)"	[label=print];
	"print[138/0]" -> "For the machine learning model : {}(0)"	[label=print];
	"print[139/0]" -> "Confusion matrix for test samples(0)"	[label=print];
	"print[140/0]" -> "confusion_matrix(0)"	[label=print];
	"print[140/0]" -> "X_test(0)$0"	[label=print];
	"print[140/0]" -> "y_test(0)$0"	[label=print];
	"print[140/0]" -> "dt(0)$7"	[label=print];
	"print[141/0]" -> "accuracy_score(0)"	[label=print];
	"print[141/0]" -> "X_test(0)$0"	[label=print];
	"print[141/0]" -> "y_test(0)$0"	[label=print];
	"print[141/0]" -> "Accuracy score for test samples(0)"	[label=print];
	"print[141/0]" -> "dt(0)$7"	[label=print];
	"print[142/0]" -> "Confusion matrix for training samples(0)"	[label=print];
	"print[143/0]" -> "confusion_matrix(0)"	[label=print];
	"print[143/0]" -> "X_train(0)$0"	[label=print];
	"print[143/0]" -> "y_train(0)$0"	[label=print];
	"print[143/0]" -> "dt(0)$7"	[label=print];
	"print[144/0]" -> "accuracy_score(0)"	[label=print];
	"print[144/0]" -> "X_train(0)$0"	[label=print];
	"print[144/0]" -> "y_train(0)$0"	[label=print];
	"print[144/0]" -> "Accuracy score for training samples(0)"	[label=print];
	"print[144/0]" -> "dt(0)$7"	[label=print];
	"final_accuracy_scores_randomForest_gini(0)$1" -> "final_accuracy_scores_randomForest_gini(0)$0"	[label=append];
	"final_accuracy_scores_randomForest_gini(0)$1" -> "[<_ast.Name object at 0x7fd4c04adf70>, <_ast.Call object at 0x7fd4c04adfa0>, <_ast.Call object at 0x7fd4c04a7130>, <_ast.Call object \
at 0x7fd4c04a7280>, <_ast.Call object at 0x7fd4c04a73d0>](0)"	[label=append];
	"[<_ast.Name object at 0x7fd4c04adf70>, <_ast.Call object at 0x7fd4c04adfa0>, <_ast.Call object at 0x7fd4c04a7130>, <_ast.Call object \
at 0x7fd4c04a7280>, <_ast.Call object at 0x7fd4c04a73d0>](0)" -> "predicting-creditcard-fraud-using-dt-rm-bagging.ipynb"	[label=appearsIn];
	"print[147/0]" -> "K-Fold results for machine learning model : {} (0)"	[label=print];
	"print[147/0]" -> "dt(0)$7"	[label=print];
	"print[148/0]" -> "10(0)"	[label=print];
	"print[148/0]" -> "X_train(0)$0"	[label=print];
	"print[148/0]" -> "y_train(0)$0"	[label=print];
	"print[148/0]" -> "cross_val_score(0)"	[label=print];
	"print[148/0]" -> "dt(0)$7"	[label=print];
	"predicted_randomForest_gini(0)$0" -> "X_test(0)$0"	[label=predict];
	"predicted_randomForest_gini(0)$0" -> "dt(0)$7"	[label=predict];
	"final_accuracy_scores_Bagging(0)$0" -> "[](0)"	[label=assignedFrom];
	"dt(0)$8" -> "X_train(0)$0"	[label=fit];
	"dt(0)$8" -> "y_train(0)$0"	[label=fit];
	"dt(0)$8" -> "dt(0)$7"	[label=fit];
	"dt(0)$9" -> "X_train(0)$0"	[label=predict];
	"dt(0)$9" -> "dt(0)$8"	[label=predict];
	"dt(0)$10" -> "X_test(0)$0"	[label=predict];
	"dt(0)$10" -> "dt(0)$9"	[label=predict];
	"print[156/0]" -> "(0)"	[label=print];
	"print[157/0]" -> "---------------------------------------------------------------------------------------------------------(0)"	[label=print];
	"print[158/0]" -> "i(0)"	[label=print];
	"print[158/0]" -> "For the machine learning model : {}(0)"	[label=print];
	"print[159/0]" -> "Confusion matrix for test samples(0)"	[label=print];
	"print[160/0]" -> "confusion_matrix(0)"	[label=print];
	"print[160/0]" -> "X_test(0)$0"	[label=print];
	"print[160/0]" -> "y_test(0)$0"	[label=print];
	"print[160/0]" -> "dt(0)$10"	[label=print];
	"print[161/0]" -> "accuracy_score(0)"	[label=print];
	"print[161/0]" -> "X_test(0)$0"	[label=print];
	"print[161/0]" -> "y_test(0)$0"	[label=print];
	"print[161/0]" -> "Accuracy score for test samples(0)"	[label=print];
	"print[161/0]" -> "dt(0)$10"	[label=print];
	"print[162/0]" -> "Confusion matrix for training samples(0)"	[label=print];
	"print[163/0]" -> "confusion_matrix(0)"	[label=print];
	"print[163/0]" -> "X_train(0)$0"	[label=print];
	"print[163/0]" -> "y_train(0)$0"	[label=print];
	"print[163/0]" -> "dt(0)$10"	[label=print];
	"print[164/0]" -> "accuracy_score(0)"	[label=print];
	"print[164/0]" -> "X_train(0)$0"	[label=print];
	"print[164/0]" -> "y_train(0)$0"	[label=print];
	"print[164/0]" -> "Accuracy score for training samples(0)"	[label=print];
	"print[164/0]" -> "dt(0)$10"	[label=print];
	"final_accuracy_scores_Bagging(0)$1" -> "final_accuracy_scores_Bagging(0)$0"	[label=append];
	"final_accuracy_scores_Bagging(0)$1" -> "[<_ast.Name object at 0x7fd50080ff10>, <_ast.Call object at 0x7fd50080fe80>, <_ast.Call object at 0x7fd500837130>, <_ast.Call object \
at 0x7fd500837280>, <_ast.Call object at 0x7fd5008373d0>](0)"	[label=append];
	"[<_ast.Name object at 0x7fd50080ff10>, <_ast.Call object at 0x7fd50080fe80>, <_ast.Call object at 0x7fd500837130>, <_ast.Call object \
at 0x7fd500837280>, <_ast.Call object at 0x7fd5008373d0>](0)" -> "predicting-creditcard-fraud-using-dt-rm-bagging.ipynb"	[label=appearsIn];
	"print[167/0]" -> "K-Fold results for machine learning model : {} (0)"	[label=print];
	"print[167/0]" -> "dt(0)$10"	[label=print];
	"print[168/0]" -> "10(0)"	[label=print];
	"print[168/0]" -> "X_train(0)$0"	[label=print];
	"print[168/0]" -> "y_train(0)$0"	[label=print];
	"print[168/0]" -> "cross_val_score(0)"	[label=print];
	"print[168/0]" -> "dt(0)$10"	[label=print];
	"predicted_bagging(0)$0" -> "X_test(0)$0"	[label=predict];
	"predicted_bagging(0)$0" -> "dt(0)$10"	[label=predict];
	"accuracy_score[172/0]" -> "X_test(0)$0"	[label=accuracy_score];
	"accuracy_score[172/0]" -> "y_test(0)$0"	[label=accuracy_score];
	"accuracy_score[172/0]" -> "dt(0)$10"	[label=accuracy_score];
	"final_accuracy_scores_DecisionTree_entropy(0)$0" -> "[](0)"	[label=assignedFrom];
	"entropy(0)" -> "predicting-creditcard-fraud-using-dt-rm-bagging.ipynb"	[label=appearsIn];
	"dt(0)$11" -> "entropy(0)"	[label=DecisionTreeClassifier];
	"dt(0)$12" -> "X_train(0)$0"	[label=fit];
	"dt(0)$12" -> "y_train(0)$0"	[label=fit];
	"dt(0)$12" -> "dt(0)$11"	[label=fit];
	"dt(0)$13" -> "X_train(0)$0"	[label=predict];
	"dt(0)$13" -> "dt(0)$12"	[label=predict];
	"dt(0)$14" -> "X_test(0)$0"	[label=predict];
	"dt(0)$14" -> "dt(0)$13"	[label=predict];
	"print[178/0]" -> "(0)"	[label=print];
	"print[179/0]" -> "---------------------------------------------------------------------------------------------------------(0)"	[label=print];
	"print[180/0]" -> "i(0)"	[label=print];
	"print[180/0]" -> "For the machine learning model : {}(0)"	[label=print];
	"print[181/0]" -> "Confusion matrix for test samples(0)"	[label=print];
	"print[182/0]" -> "confusion_matrix(0)"	[label=print];
	"print[182/0]" -> "X_test(0)$0"	[label=print];
	"print[182/0]" -> "y_test(0)$0"	[label=print];
	"print[182/0]" -> "dt(0)$14"	[label=print];
	"print[183/0]" -> "accuracy_score(0)"	[label=print];
	"print[183/0]" -> "X_test(0)$0"	[label=print];
	"print[183/0]" -> "y_test(0)$0"	[label=print];
	"print[183/0]" -> "Accuracy score for test samples(0)"	[label=print];
	"print[183/0]" -> "dt(0)$14"	[label=print];
	"print[184/0]" -> "Confusion matrix for training samples(0)"	[label=print];
	"print[185/0]" -> "confusion_matrix(0)"	[label=print];
	"print[185/0]" -> "X_train(0)$0"	[label=print];
	"print[185/0]" -> "y_train(0)$0"	[label=print];
	"print[185/0]" -> "dt(0)$14"	[label=print];
	"print[186/0]" -> "accuracy_score(0)"	[label=print];
	"print[186/0]" -> "X_train(0)$0"	[label=print];
	"print[186/0]" -> "y_train(0)$0"	[label=print];
	"print[186/0]" -> "Accuracy score for training samples(0)"	[label=print];
	"print[186/0]" -> "dt(0)$14"	[label=print];
	"final_accuracy_scores_DecisionTree_entropy(0)$1" -> "final_accuracy_scores_DecisionTree_entropy(0)$0"	[label=append];
	"final_accuracy_scores_DecisionTree_entropy(0)$1" -> "[<_ast.Name object at 0x7fd5008102b0>, <_ast.Call object at 0x7fd5008102e0>, <_ast.Call object at 0x7fd500810460>, <_ast.Call object \
at 0x7fd5008105b0>, <_ast.Call object at 0x7fd500810700>](0)"	[label=append];
	"[<_ast.Name object at 0x7fd5008102b0>, <_ast.Call object at 0x7fd5008102e0>, <_ast.Call object at 0x7fd500810460>, <_ast.Call object \
at 0x7fd5008105b0>, <_ast.Call object at 0x7fd500810700>](0)" -> "predicting-creditcard-fraud-using-dt-rm-bagging.ipynb"	[label=appearsIn];
	"print[189/0]" -> "K-Fold results for machine learning model : {} (0)"	[label=print];
	"print[189/0]" -> "dt(0)$14"	[label=print];
	"print[190/0]" -> "10(0)"	[label=print];
	"print[190/0]" -> "X_train(0)$0"	[label=print];
	"print[190/0]" -> "y_train(0)$0"	[label=print];
	"print[190/0]" -> "cross_val_score(0)"	[label=print];
	"print[190/0]" -> "dt(0)$14"	[label=print];
	"predicted_decisionTree_entropy(0)$0" -> "X_test(0)$0"	[label=predict];
	"predicted_decisionTree_entropy(0)$0" -> "dt(0)$14"	[label=predict];
	"accuracy_score[194/0]" -> "X_test(0)$0"	[label=accuracy_score];
	"accuracy_score[194/0]" -> "y_test(0)$0"	[label=accuracy_score];
	"accuracy_score[194/0]" -> "dt(0)$14"	[label=accuracy_score];
	"final_accuracy_scores_RandomForest_entropy(0)$0" -> "[](0)"	[label=assignedFrom];
	"dt(0)$15" -> "entropy(0)"	[label=RandomForestClassifier];
	"dt(0)$16" -> "X_train(0)$0"	[label=fit];
	"dt(0)$16" -> "y_train(0)$0"	[label=fit];
	"dt(0)$16" -> "dt(0)$15"	[label=fit];
	"dt(0)$17" -> "X_train(0)$0"	[label=predict];
	"dt(0)$17" -> "dt(0)$16"	[label=predict];
	"dt(0)$18" -> "X_test(0)$0"	[label=predict];
	"dt(0)$18" -> "dt(0)$17"	[label=predict];
	"print[200/0]" -> "(0)"	[label=print];
	"print[201/0]" -> "---------------------------------------------------------------------------------------------------------(0)"	[label=print];
	"print[202/0]" -> "i(0)"	[label=print];
	"print[202/0]" -> "For the machine learning model : {}(0)"	[label=print];
	"print[203/0]" -> "Confusion matrix for test samples(0)"	[label=print];
	"print[204/0]" -> "confusion_matrix(0)"	[label=print];
	"print[204/0]" -> "X_test(0)$0"	[label=print];
	"print[204/0]" -> "y_test(0)$0"	[label=print];
	"print[204/0]" -> "dt(0)$18"	[label=print];
	"print[205/0]" -> "accuracy_score(0)"	[label=print];
	"print[205/0]" -> "X_test(0)$0"	[label=print];
	"print[205/0]" -> "y_test(0)$0"	[label=print];
	"print[205/0]" -> "Accuracy score for test samples(0)"	[label=print];
	"print[205/0]" -> "dt(0)$18"	[label=print];
	"print[206/0]" -> "Confusion matrix for training samples(0)"	[label=print];
	"print[207/0]" -> "confusion_matrix(0)"	[label=print];
	"print[207/0]" -> "X_train(0)$0"	[label=print];
	"print[207/0]" -> "y_train(0)$0"	[label=print];
	"print[207/0]" -> "dt(0)$18"	[label=print];
	"print[208/0]" -> "accuracy_score(0)"	[label=print];
	"print[208/0]" -> "X_train(0)$0"	[label=print];
	"print[208/0]" -> "y_train(0)$0"	[label=print];
	"print[208/0]" -> "Accuracy score for training samples(0)"	[label=print];
	"print[208/0]" -> "dt(0)$18"	[label=print];
	"final_accuracy_scores_RandomForest_entropy(0)$1" -> "final_accuracy_scores_RandomForest_entropy(0)$0"	[label=append];
	"final_accuracy_scores_RandomForest_entropy(0)$1" -> "[<_ast.Name object at 0x7fd50082a5b0>, <_ast.Call object at 0x7fd50082a5e0>, <_ast.Call object at 0x7fd50082a700>, <_ast.Call object \
at 0x7fd50082a850>, <_ast.Call object at 0x7fd50082a9a0>](0)"	[label=append];
	"[<_ast.Name object at 0x7fd50082a5b0>, <_ast.Call object at 0x7fd50082a5e0>, <_ast.Call object at 0x7fd50082a700>, <_ast.Call object \
at 0x7fd50082a850>, <_ast.Call object at 0x7fd50082a9a0>](0)" -> "predicting-creditcard-fraud-using-dt-rm-bagging.ipynb"	[label=appearsIn];
	"print[211/0]" -> "K-Fold results for machine learning model : {} (0)"	[label=print];
	"print[211/0]" -> "dt(0)$18"	[label=print];
	"print[212/0]" -> "10(0)"	[label=print];
	"print[212/0]" -> "X_train(0)$0"	[label=print];
	"print[212/0]" -> "y_train(0)$0"	[label=print];
	"print[212/0]" -> "cross_val_score(0)"	[label=print];
	"print[212/0]" -> "dt(0)$18"	[label=print];
	"predicted_randomForest_entropy(0)$0" -> "X_test(0)$0"	[label=predict];
	"predicted_randomForest_entropy(0)$0" -> "dt(0)$18"	[label=predict];
	"accuracy_score[216/0]" -> "X_test(0)$0"	[label=accuracy_score];
	"accuracy_score[216/0]" -> "y_test(0)$0"	[label=accuracy_score];
	"accuracy_score[216/0]" -> "dt(0)$18"	[label=accuracy_score];
}
