digraph "" {
	pandas -> "pytorch-bert-baseline.ipynb"	[label=importedBy];
	"pd(0)" -> pandas	[label=assignedFrom];
	"pd(0)" -> "pytorch-bert-baseline.ipynb"	[label=appearsIn];
	numpy -> "pytorch-bert-baseline.ipynb"	[label=importedBy];
	"np(0)" -> "pytorch-bert-baseline.ipynb"	[label=appearsIn];
	"np(0)" -> numpy	[label=assignedFrom];
	os -> "pytorch-bert-baseline.ipynb"	[label=importedBy];
	"os(0)" -> "pytorch-bert-baseline.ipynb"	[label=appearsIn];
	"os(0)" -> os	[label=assignedFrom];
	"matplotlib.pyplot" -> "pytorch-bert-baseline.ipynb"	[label=importedBy];
	"plt(0)" -> "pytorch-bert-baseline.ipynb"	[label=appearsIn];
	"plt(0)" -> "matplotlib.pyplot"	[label=assignedFrom];
	"../input/google-quest-challenge(0)" -> "pytorch-bert-baseline.ipynb"	[label=appearsIn];
	"DATA_DIR(0)$0" -> "../input/google-quest-challenge(0)"	[label=assignedFrom];
	"sub(0)$0" -> "pd(0)"	[label=read_csv];
	"sub(0)$0" -> "DATA_DIR(0)$0"	[label=read_csv];
	"sub(0)$0" -> "/sample_submission.csv(0)"	[label=read_csv];
	"/sample_submission.csv(0)" -> "pytorch-bert-baseline.ipynb"	[label=appearsIn];
	"sub(0)$1" -> "sub(0)$0"	[label=head];
	"target_columns(0)$0" -> "sub(0)$1"	[label=tolist];
	"target_columns(0)$0" -> "1(0)"	[label=tolist];
	"1(0)" -> "pytorch-bert-baseline.ipynb"	[label=appearsIn];
	"train(0)$0" -> "pd(0)"	[label=read_csv];
	"train(0)$0" -> "DATA_DIR(0)$0"	[label=read_csv];
	"train(0)$0" -> "/train.csv(0)"	[label=read_csv];
	"/train.csv(0)" -> "pytorch-bert-baseline.ipynb"	[label=appearsIn];
	"train(0)$1" -> "train(0)$0"	[label=head];
	"test(0)$0" -> "pd(0)"	[label=read_csv];
	"test(0)$0" -> "DATA_DIR(0)$0"	[label=read_csv];
	"test(0)$0" -> "/test.csv(0)"	[label=read_csv];
	"/test.csv(0)" -> "pytorch-bert-baseline.ipynb"	[label=appearsIn];
	"test(0)$1" -> "test(0)$0"	[label=head];
	torch -> "pytorch-bert-baseline.ipynb"	[label=importedBy];
	"torch(0)" -> "pytorch-bert-baseline.ipynb"	[label=appearsIn];
	"torch(0)" -> torch	[label=assignedFrom];
	torchvision -> "pytorch-bert-baseline.ipynb"	[label=importedBy];
	datasets -> torchvision	[label=importedBy];
	"datasets(0)" -> "pytorch-bert-baseline.ipynb"	[label=appearsIn];
	"datasets(0)" -> datasets	[label=assignedFrom];
	models -> torchvision	[label=importedBy];
	"models(0)" -> "pytorch-bert-baseline.ipynb"	[label=appearsIn];
	"models(0)" -> models	[label=assignedFrom];
	transforms -> torchvision	[label=importedBy];
	"transforms(0)" -> "pytorch-bert-baseline.ipynb"	[label=appearsIn];
	"transforms(0)" -> transforms	[label=assignedFrom];
	transformers -> "pytorch-bert-baseline.ipynb"	[label=importedBy];
	"*" -> transformers	[label=importedBy];
	"*(0)" -> "pytorch-bert-baseline.ipynb"	[label=appearsIn];
	"*(0)" -> "*"	[label=assignedFrom];
	"sklearn.utils" -> "pytorch-bert-baseline.ipynb"	[label=importedBy];
	shuffle -> "sklearn.utils"	[label=importedBy];
	"shuffle(0)" -> "pytorch-bert-baseline.ipynb"	[label=appearsIn];
	"shuffle(0)" -> shuffle	[label=assignedFrom];
	random -> "pytorch-bert-baseline.ipynb"	[label=importedBy];
	"random(0)" -> "pytorch-bert-baseline.ipynb"	[label=appearsIn];
	"random(0)" -> random	[label=assignedFrom];
	math -> "pytorch-bert-baseline.ipynb"	[label=importedBy];
	floor -> math	[label=importedBy];
	"floor(0)" -> "pytorch-bert-baseline.ipynb"	[label=appearsIn];
	"floor(0)" -> floor	[label=assignedFrom];
	ceil -> math	[label=importedBy];
	"ceil(0)" -> "pytorch-bert-baseline.ipynb"	[label=appearsIn];
	"ceil(0)" -> ceil	[label=assignedFrom];
	"sklearn.model_selection" -> "pytorch-bert-baseline.ipynb"	[label=importedBy];
	GroupKFold -> "sklearn.model_selection"	[label=importedBy];
	"GroupKFold(0)" -> "pytorch-bert-baseline.ipynb"	[label=appearsIn];
	"GroupKFold(0)" -> GroupKFold	[label=assignedFrom];
	"512(0)" -> "pytorch-bert-baseline.ipynb"	[label=appearsIn];
	"MAX_LEN(0)$0" -> "512(0)"	[label=assignedFrom];
	"102(0)" -> "pytorch-bert-baseline.ipynb"	[label=appearsIn];
	"SEP_TOKEN_ID(0)$0" -> "102(0)"	[label=assignedFrom];
	"self(2)" -> "__init__[0]"	[label=_argToVar];
	"df(2)" -> "__init__[1]"	[label=_argToVar];
	"train_mode(2)" -> "__init__[2]"	[label=_argToVar];
	"labeled(2)" -> "__init__[3]"	[label=_argToVar];
	"self(2)$0" -> "self(2)"	[label=assignedFrom];
	"self(2)$0" -> "df(2)"	[label=assignedFrom];
	"self(2)$1" -> "train_mode(2)"	[label=assignedFrom];
	"self(2)$1" -> "self(2)$0"	[label=assignedFrom];
	"self(2)$2" -> "labeled(2)"	[label=assignedFrom];
	"self(2)$2" -> "self(2)$1"	[label=assignedFrom];
	"self(2)$3" -> "self(2)$2"	[label=from_pretrained];
	"self(2)$3" -> "BertTokenizer(2)"	[label=from_pretrained];
	"self(2)$3" -> "../input/bert-base-uncased/(2)"	[label=from_pretrained];
	"self(3)" -> "__getitem__[0]"	[label=_argToVar];
	"index(3)" -> "__getitem__[1]"	[label=_argToVar];
	"row(3)$0" -> "self(3)"	[label=assignedFrom];
	"row(3)$0" -> "index(3)"	[label=assignedFrom];
	"token_ids(3)$0" -> "self(3)"	[label=get_token_ids];
	"token_ids(3)$0" -> "row(3)$0"	[label=get_token_ids];
	"seg_ids(3)$0" -> "self(3)"	[label=get_token_ids];
	"seg_ids(3)$0" -> "row(3)$0"	[label=get_token_ids];
	"labels(3)$0" -> "self(3)"	[label=get_label];
	"labels(3)$0" -> "row(3)$0"	[label=get_label];
	"self(4)" -> "__len__[0]"	[label=_argToVar];
	"self(5)" -> "select_tokens[0]"	[label=_argToVar];
	"tokens(5)" -> "select_tokens[1]"	[label=_argToVar];
	"max_num(5)" -> "select_tokens[2]"	[label=_argToVar];
	"num_remove(5)$0" -> "tokens(5)"	[label=Sub];
	"num_remove(5)$0" -> "max_num(5)"	[label=Sub];
	"num_remove(5)$0" -> "len(5)"	[label=Sub];
	"remove_start(5)$0" -> "tokens(5)"	[label=randint];
	"remove_start(5)$0" -> "num_remove(5)$0"	[label=randint];
	"remove_start(5)$0" -> "len(5)"	[label=randint];
	"remove_start(5)$0" -> "random(5)"	[label=randint];
	"remove_start(5)$0" -> "0(5)"	[label=randint];
	"remove_start(5)$0" -> "1(5)"	[label=randint];
	"self(6)" -> "trim_input[0]"	[label=_argToVar];
	"title(6)" -> "trim_input[1]"	[label=_argToVar];
	"question(6)" -> "trim_input[2]"	[label=_argToVar];
	"answer(6)" -> "trim_input[3]"	[label=_argToVar];
	"max_sequence_length(6)" -> "trim_input[4]"	[label=_argToVar];
	"t_max_len(6)" -> "trim_input[5]"	[label=_argToVar];
	"q_max_len(6)" -> "trim_input[6]"	[label=_argToVar];
	"a_max_len(6)" -> "trim_input[7]"	[label=_argToVar];
	"t(6)$0" -> "self(6)"	[label=tokenize];
	"t(6)$0" -> "title(6)"	[label=tokenize];
	"q(6)$0" -> "self(6)"	[label=tokenize];
	"q(6)$0" -> "question(6)"	[label=tokenize];
	"a(6)$0" -> "self(6)"	[label=tokenize];
	"a(6)$0" -> "answer(6)"	[label=tokenize];
	"t_len(6)$0" -> "t(6)$0"	[label=len];
	"q_len(6)$0" -> "q(6)$0"	[label=len];
	"a_len(6)$0" -> "a(6)$0"	[label=len];
	"t_new_len(6)$0" -> "t_len(6)$0"	[label=assignedFrom];
	"a_max_len(6)$0" -> "t_max_len(6)"	[label=Add];
	"a_max_len(6)$0" -> "a_max_len(6)"	[label=Add];
	"a_max_len(6)$0" -> "t_len(6)$0"	[label=Add];
	"a_max_len(6)$0" -> "floor(6)"	[label=Add];
	"a_max_len(6)$0" -> "2(6)"	[label=Add];
	"q_max_len(6)$0" -> "t_max_len(6)"	[label=Add];
	"q_max_len(6)$0" -> "q_max_len(6)"	[label=Add];
	"q_max_len(6)$0" -> "t_len(6)$0"	[label=Add];
	"q_max_len(6)$0" -> "2(6)"	[label=Add];
	"q_max_len(6)$0" -> "ceil(6)"	[label=Add];
	"t_new_len(6)$1" -> "t_max_len(6)"	[label=assignedFrom];
	"a_new_len(6)$0" -> "a_len(6)$0"	[label=assignedFrom];
	"q_new_len(6)$0" -> "a_len(6)$0"	[label=Add];
	"q_new_len(6)$0" -> "a_max_len(6)$0"	[label=Add];
	"q_new_len(6)$0" -> "q_max_len(6)$0"	[label=Add];
	"a_new_len(6)$1" -> "q_len(6)$0"	[label=Add];
	"a_new_len(6)$1" -> "a_max_len(6)$0"	[label=Add];
	"a_new_len(6)$1" -> "q_max_len(6)$0"	[label=Add];
	"q_new_len(6)$1" -> "q_len(6)$0"	[label=assignedFrom];
	"a_new_len(6)$2" -> "a_max_len(6)$0"	[label=assignedFrom];
	"q_new_len(6)$2" -> "q_max_len(6)$0"	[label=assignedFrom];
	"t(6)$1" -> "t(6)$0"	[label=assignedFrom];
	"t(6)$1" -> "t_new_len(6)$1"	[label=assignedFrom];
	"q(6)$1" -> "q(6)$0"	[label=assignedFrom];
	"q(6)$1" -> "q_new_len(6)$2"	[label=assignedFrom];
	"a(6)$1" -> "a(6)$0"	[label=assignedFrom];
	"a(6)$1" -> "a_new_len(6)$2"	[label=assignedFrom];
	"self(7)" -> "get_token_ids[0]"	[label=_argToVar];
	"row(7)" -> "get_token_ids[1]"	[label=_argToVar];
	"t_tokens(7)$0" -> "self(7)"	[label=trim_input];
	"t_tokens(7)$0" -> "row(7)"	[label=trim_input];
	"q_tokens(7)$0" -> "self(7)"	[label=trim_input];
	"q_tokens(7)$0" -> "row(7)"	[label=trim_input];
	"a_tokens(7)$0" -> "self(7)"	[label=trim_input];
	"a_tokens(7)$0" -> "row(7)"	[label=trim_input];
	"tokens(7)$0" -> "t_tokens(7)$0"	[label=Add];
	"tokens(7)$0" -> "q_tokens(7)$0"	[label=Add];
	"tokens(7)$0" -> "a_tokens(7)$0"	[label=Add];
	"tokens(7)$0" -> "[<_ast.Constant object at 0x7fd4c04cc8b0>](7)"	[label=Add];
	"tokens(7)$0" -> "[<_ast.Constant object at 0x7fd4c04ccfd0>](7)"	[label=Add];
	"tokens(7)$0" -> "[<_ast.Constant object at 0x7fd4c04cc790>](7)"	[label=Add];
	"tokens(7)$0" -> "[<_ast.Constant object at 0x7fd4c04cc6d0>](7)"	[label=Add];
	"token_ids(7)$0" -> "self(7)"	[label=convert_tokens_to_ids];
	"token_ids(7)$0" -> "tokens(7)$0"	[label=convert_tokens_to_ids];
	"token_ids(7)$1" -> "token_ids(7)$0"	[label=Add];
	"token_ids(7)$1" -> "token_ids(7)$1"	[label=Add];
	"token_ids(7)$1" -> "[<_ast.Constant object at 0x7fd5008323d0>](7)"	[label=Add];
	"token_ids(7)$1" -> "MAX_LEN(7)"	[label=Add];
	"token_ids(7)$1" -> "len(7)"	[label=Add];
	"ids(7)$0" -> "token_ids(7)$1"	[label=tensor];
	"ids(7)$0" -> "torch(7)"	[label=tensor];
	"seg_ids(7)$0" -> "self(7)"	[label=get_seg_ids];
	"seg_ids(7)$0" -> "ids(7)$0"	[label=get_seg_ids];
	"self(8)" -> "get_seg_ids[0]"	[label=_argToVar];
	"ids(8)" -> "get_seg_ids[1]"	[label=_argToVar];
	"seg_ids(8)$0" -> "ids(8)"	[label=zeros_like];
	"seg_ids(8)$0" -> "torch(8)"	[label=zeros_like];
	"seg_idx(8)$0" -> "0(8)"	[label=assignedFrom];
	"first_sep(8)$0" -> "True(8)"	[label=assignedFrom];
	"i(8)" -> "ids(8)"	[label=iteratorOf];
	"i(8)" -> "enumerate(8)"	[label=iteratorOf];
	"e(8)" -> "ids(8)"	[label=iteratorOf];
	"e(8)" -> "enumerate(8)"	[label=iteratorOf];
	"seg_ids(8)$1" -> "seg_ids(8)$0"	[label=assignedFrom];
	"seg_ids(8)$1" -> "seg_idx(8)$0"	[label=assignedFrom];
	"first_sep(8)$1" -> "False(8)"	[label=assignedFrom];
	"seg_idx(8)$1" -> "1(8)"	[label=assignedFrom];
	"pad_idx(8)$0" -> "ids(8)"	[label=nonzero];
	"pad_idx(8)$0" -> "torch(8)"	[label=nonzero];
	"pad_idx(8)$0" -> "0(8)"	[label=nonzero];
	"seg_ids(8)$2" -> "0(8)"	[label=assignedFrom];
	"seg_ids(8)$2" -> "seg_ids(8)$1"	[label=assignedFrom];
	"self(9)" -> "get_label[0]"	[label=_argToVar];
	"row(9)" -> "get_label[1]"	[label=_argToVar];
	"self(10)" -> "collate_fn[0]"	[label=_argToVar];
	"batch(10)" -> "collate_fn[1]"	[label=_argToVar];
	"token_ids(10)$0" -> "batch(10)"	[label=stack];
	"token_ids(10)$0" -> "torch(10)"	[label=stack];
	"token_ids(10)$0" -> "x(10)"	[label=stack];
	"token_ids(10)$0" -> "0(10)"	[label=stack];
	"seg_ids(10)$0" -> "batch(10)"	[label=stack];
	"seg_ids(10)$0" -> "torch(10)"	[label=stack];
	"seg_ids(10)$0" -> "x(10)"	[label=stack];
	"seg_ids(10)$0" -> "1(10)"	[label=stack];
	"labels(10)$0" -> "batch(10)"	[label=stack];
	"labels(10)$0" -> "torch(10)"	[label=stack];
	"labels(10)$0" -> "x(10)"	[label=stack];
	"labels(10)$0" -> "2(10)"	[label=stack];
	"batch_size(11)" -> "get_test_loader[0]"	[label=_argToVar];
	"df(11)$0" -> "pd(11)"	[label=read_csv];
	"df(11)$0" -> "DATA_DIR(11)"	[label=read_csv];
	"df(11)$0" -> "/test.csv(11)"	[label=read_csv];
	"ds_test(11)$0" -> "df(11)$0"	[label=QuestDataset];
	"ds_test(11)$0" -> "False(11)"	[label=QuestDataset];
	"loader(11)$0" -> "batch_size(11)"	[label=DataLoader];
	"loader(11)$0" -> "ds_test(11)$0"	[label=DataLoader];
	"loader(11)$0" -> "False(11)"	[label=DataLoader];
	"loader(11)$0" -> "torch(11)"	[label=DataLoader];
	"loader(11)$0" -> "0(11)"	[label=DataLoader];
	"loader(11)$1" -> "df(11)$0"	[label=len];
	"loader(11)$1" -> "loader(11)$0"	[label=len];
	"batch_size(12)" -> "get_train_val_loaders[0]"	[label=_argToVar];
	"val_batch_size(12)" -> "get_train_val_loaders[1]"	[label=_argToVar];
	"ifold(12)" -> "get_train_val_loaders[2]"	[label=_argToVar];
	"df(12)$0" -> "pd(12)"	[label=read_csv];
	"df(12)$0" -> "DATA_DIR(12)"	[label=read_csv];
	"df(12)$0" -> "/train.csv(12)"	[label=read_csv];
	"df(12)$1" -> "df(12)$0"	[label=shuffle];
	"df(12)$1" -> "1234(12)"	[label=shuffle];
	"gkf(12)$0" -> "df(12)$1"	[label=split];
	"gkf(12)$0" -> "GroupKFold(12)"	[label=split];
	"gkf(12)$0" -> "5(12)"	[label=split];
	"fold(12)" -> "gkf(12)$0"	[label=iteratorOf];
	"fold(12)" -> "enumerate(12)"	[label=iteratorOf];
	"train_idx(12)" -> "gkf(12)$0"	[label=iteratorOf];
	"train_idx(12)" -> "enumerate(12)"	[label=iteratorOf];
	"valid_idx(12)" -> "gkf(12)$0"	[label=iteratorOf];
	"valid_idx(12)" -> "enumerate(12)"	[label=iteratorOf];
	"df_train(12)$0" -> "df(12)$1"	[label=assignedFrom];
	"df_train(12)$0" -> "train_idx(12)"	[label=assignedFrom];
	"df_val(12)$0" -> "df(12)$1"	[label=assignedFrom];
	"df_val(12)$0" -> "valid_idx(12)"	[label=assignedFrom];
	"print[166/4]" -> "df_train(12)$0"	[label=print];
	"print[167/4]" -> "df_val(12)$0"	[label=print];
	"ds_train(12)$0" -> "df_train(12)$0"	[label=QuestDataset];
	"train_loader(12)$0" -> "batch_size(12)"	[label=DataLoader];
	"train_loader(12)$0" -> "ds_train(12)$0"	[label=DataLoader];
	"train_loader(12)$0" -> "torch(12)"	[label=DataLoader];
	"train_loader(12)$0" -> "True(12)"	[label=DataLoader];
	"train_loader(12)$0" -> "0(12)"	[label=DataLoader];
	"train_loader(12)$1" -> "df_train(12)$0"	[label=len];
	"train_loader(12)$1" -> "train_loader(12)$0"	[label=len];
	"ds_val(12)$0" -> "df_val(12)$0"	[label=QuestDataset];
	"ds_val(12)$0" -> "False(12)"	[label=QuestDataset];
	"val_loader(12)$0" -> "val_batch_size(12)"	[label=DataLoader];
	"val_loader(12)$0" -> "torch(12)"	[label=DataLoader];
	"val_loader(12)$0" -> "0(12)"	[label=DataLoader];
	"val_loader(12)$0" -> "ds_val(12)$0"	[label=DataLoader];
	"val_loader(12)$0" -> "False(12)"	[label=DataLoader];
	"val_loader(12)$1" -> "df_val(12)$0"	[label=len];
	"val_loader(12)$1" -> "val_loader(12)$0"	[label=len];
	"val_loader(12)$2" -> "df_val(12)$0"	[label=assignedFrom];
	"val_loader(12)$2" -> "val_loader(12)$1"	[label=assignedFrom];
	"loader(13)$0" -> "4(13)"	[label=get_train_val_loaders];
	"loader(13)$0" -> "1(13)"	[label=get_train_val_loaders];
	"_(13)$0" -> "4(13)"	[label=get_train_val_loaders];
	"_(13)$0" -> "1(13)"	[label=get_train_val_loaders];
	"ids(13)" -> "loader(13)$0"	[label=iteratorOf];
	"seg_ids(13)" -> "loader(13)$0"	[label=iteratorOf];
	"labels(13)" -> "loader(13)$0"	[label=iteratorOf];
	"print[183/8]" -> "ids(13)"	[label=print];
	"print[184/8]" -> "seg_ids(13)"	[label=print];
	"print[185/8]" -> "labels(13)"	[label=print];
	"loader(14)$0" -> "4(14)"	[label=get_test_loader];
	"ids(14)" -> "loader(14)$0"	[label=iteratorOf];
	"seg_ids(14)" -> "loader(14)$0"	[label=iteratorOf];
	"print[190/8]" -> "ids(14)"	[label=print];
	"print[191/8]" -> "seg_ids(14)"	[label=print];
	"torch.nn" -> "pytorch-bert-baseline.ipynb"	[label=importedBy];
	"nn(0)" -> "pytorch-bert-baseline.ipynb"	[label=appearsIn];
	"nn(0)" -> "torch.nn"	[label=assignedFrom];
	"torch.nn.functional" -> "pytorch-bert-baseline.ipynb"	[label=importedBy];
	"F(0)" -> "pytorch-bert-baseline.ipynb"	[label=appearsIn];
	"F(0)" -> "torch.nn.functional"	[label=assignedFrom];
	"self(16)" -> "__init__[0]"	[label=_argToVar];
	"n_classes(16)" -> "__init__[1]"	[label=_argToVar];
	"super(16)$0" -> "super(16)"	[label=__init__];
	"self(16)$0" -> "self(16)"	[label=assignedFrom];
	"self(16)$0" -> "QuestModel(16)"	[label=assignedFrom];
	"self(16)$1" -> "self(16)$0"	[label=from_pretrained];
	"self(16)$1" -> "BertModel(16)"	[label=from_pretrained];
	"self(16)$1" -> "../input/bert-base-uncased/(16)"	[label=from_pretrained];
	"self(16)$2" -> "n_classes(16)"	[label=Linear];
	"self(16)$2" -> "self(16)$1"	[label=Linear];
	"self(16)$2" -> "nn(16)"	[label=Linear];
	"self(16)$2" -> "768(16)"	[label=Linear];
	"self(17)" -> "forward[0]"	[label=_argToVar];
	"ids(17)" -> "forward[1]"	[label=_argToVar];
	"seg_ids(17)" -> "forward[2]"	[label=_argToVar];
	"attention_mask(17)$0" -> "ids(17)"	[label=assignedFrom];
	"attention_mask(17)$0" -> "0(17)"	[label=assignedFrom];
	"layers(17)$0" -> "self(17)"	[label=bert_model];
	"layers(17)$0" -> "ids(17)"	[label=bert_model];
	"layers(17)$0" -> "seg_ids(17)"	[label=bert_model];
	"layers(17)$0" -> "attention_mask(17)$0"	[label=bert_model];
	"pool_out(17)$0" -> "self(17)"	[label=bert_model];
	"pool_out(17)$0" -> "ids(17)"	[label=bert_model];
	"pool_out(17)$0" -> "seg_ids(17)"	[label=bert_model];
	"pool_out(17)$0" -> "attention_mask(17)$0"	[label=bert_model];
	"out(17)$0" -> "self(17)"	[label=dropout];
	"out(17)$0" -> "pool_out(17)$0"	[label=dropout];
	"out(17)$0" -> "F(17)"	[label=dropout];
	"out(17)$0" -> "0.2(17)"	[label=dropout];
	"logit(17)$0" -> "self(17)"	[label=fc];
	"logit(17)$0" -> "out(17)$0"	[label=fc];
	"x(18)$0" -> "torch(18)"	[label=tensor];
	"x(18)$0" -> "[<_ast.List object at 0x7fd4c04ab700>, <_ast.List object at 0x7fd4c04ab880>](18)"	[label=tensor];
	"seg_ids(18)$0" -> "torch(18)"	[label=tensor];
	"seg_ids(18)$0" -> "[<_ast.List object at 0x7fd4c04abb20>, <_ast.List object at 0x7fd4c04abca0>](18)"	[label=tensor];
	"y(18)$0" -> "x(18)$0"	[label=model];
	"y(18)$0" -> "seg_ids(18)$0"	[label=model];
	"print[224/4]" -> "y(18)$0"	[label=print];
	"model_file(19)" -> "create_model[0]"	[label=_argToVar];
	"model(19)$0" -> "model_file(19)"	[label=load_state_dict];
	"model(19)$0" -> "model(19)"	[label=load_state_dict];
	"model(19)$0" -> "torch(19)"	[label=load_state_dict];
	"model(19)$1" -> "model(19)$0"	[label=cuda];
	"models(20)$0" -> "[](20)"	[label=assignedFrom];
	"i(20)" -> "range(20)"	[label=iteratorOf];
	"i(20)" -> "5(20)"	[label=iteratorOf];
	"model(20)$0" -> "i(20)"	[label=create_model];
	"model(20)$0" -> "../input/quest-models/best_(20)"	[label=create_model];
	"model(20)$0" -> ".pth(20)"	[label=create_model];
	"model(20)$1" -> "model(20)$0"	[label=eval];
	"models(20)$1" -> "models(20)$0"	[label=append];
	"models(20)$1" -> "model(20)$1"	[label=append];
	tqdm -> "pytorch-bert-baseline.ipynb"	[label=importedBy];
	tqdm -> tqdm	[label=importedBy];
	"tqdm(0)" -> "pytorch-bert-baseline.ipynb"	[label=appearsIn];
	"tqdm(0)" -> tqdm	[label=assignedFrom];
	"models(21)" -> "predict[0]"	[label=_argToVar];
	"test_loader(21)" -> "predict[1]"	[label=_argToVar];
	"all_scores(21)$0" -> "[](21)"	[label=assignedFrom];
	"ids(21)" -> "test_loader(21)"	[label=iteratorOf];
	"ids(21)" -> "tqdm(21)"	[label=iteratorOf];
	"seg_ids(21)" -> "test_loader(21)"	[label=iteratorOf];
	"seg_ids(21)" -> "tqdm(21)"	[label=iteratorOf];
	"ids(21)$0" -> "ids(21)"	[label=assignedFrom];
	"ids(21)$0" -> "seg_ids(21)$0"	[label=assignedFrom];
	"seg_ids(21)$0" -> "ids(21)"	[label=assignedFrom];
	"seg_ids(21)$0" -> "seg_ids(21)$0"	[label=assignedFrom];
	"scores(21)$0" -> "[](21)"	[label=assignedFrom];
	"model(21)" -> "models(21)"	[label=iteratorOf];
	"outputs(21)$0" -> "ids(21)$0"	[label=cpu];
	"outputs(21)$0" -> "seg_ids(21)$0"	[label=cpu];
	"outputs(21)$0" -> "model(21)"	[label=cpu];
	"outputs(21)$0" -> "torch(21)"	[label=cpu];
	"scores(21)$1" -> "scores(21)$0"	[label=append];
	"scores(21)$1" -> "outputs(21)$0"	[label=append];
	"all_scores(21)$1" -> "all_scores(21)$0"	[label=append];
	"all_scores(21)$1" -> "torch(21)"	[label=append];
	"all_scores(21)$1" -> "scores(21)$1"	[label=append];
	"all_scores(21)$1" -> "0(21)"	[label=append];
	"all_scores(21)$2" -> "torch(21)"	[label=numpy];
	"all_scores(21)$2" -> "0(21)"	[label=numpy];
	"all_scores(21)$2" -> "all_scores(21)$2"	[label=numpy];
	"32(0)" -> "pytorch-bert-baseline.ipynb"	[label=appearsIn];
	"test_loader(0)$0" -> "32(0)"	[label=get_test_loader];
	"preds(0)$0" -> "models(0)"	[label=predict];
	"preds(0)$0" -> "test_loader(0)$0"	[label=predict];
	"sub(0)$2" -> "sub(0)$1"	[label=assignedFrom];
	"sub(0)$2" -> "preds(0)$0"	[label=assignedFrom];
	"sub(0)$3" -> "sub(0)$2"	[label=to_csv];
	"sub(0)$3" -> "submission.csv(0)"	[label=to_csv];
	"submission.csv(0)" -> "pytorch-bert-baseline.ipynb"	[label=appearsIn];
	"sub(0)$4" -> "sub(0)$3"	[label=head];
}
