digraph "" {
	numpy -> "tensorflow-2-0-bert-yes-no-answers.ipynb"	[label=importedBy];
	"np(0)" -> numpy	[label=assignedFrom];
	"np(0)" -> "tensorflow-2-0-bert-yes-no-answers.ipynb"	[label=appearsIn];
	pandas -> "tensorflow-2-0-bert-yes-no-answers.ipynb"	[label=importedBy];
	"pd(0)" -> "tensorflow-2-0-bert-yes-no-answers.ipynb"	[label=appearsIn];
	"pd(0)" -> pandas	[label=assignedFrom];
	tensorflow -> "tensorflow-2-0-bert-yes-no-answers.ipynb"	[label=importedBy];
	"tf(0)" -> "tensorflow-2-0-bert-yes-no-answers.ipynb"	[label=appearsIn];
	"tf(0)" -> tensorflow	[label=assignedFrom];
	sys -> "tensorflow-2-0-bert-yes-no-answers.ipynb"	[label=importedBy];
	"sys(0)" -> "tensorflow-2-0-bert-yes-no-answers.ipynb"	[label=appearsIn];
	"sys(0)" -> sys	[label=assignedFrom];
	collections -> "tensorflow-2-0-bert-yes-no-answers.ipynb"	[label=importedBy];
	"collections(0)" -> "tensorflow-2-0-bert-yes-no-answers.ipynb"	[label=appearsIn];
	"collections(0)" -> collections	[label=assignedFrom];
	"sys(0)$0" -> "sys(0)"	[label=extend];
	"sys(0)$0" -> "[<_ast.Constant object at 0x7fd50080d8e0>](0)"	[label=extend];
	"[<_ast.Constant object at 0x7fd50080d8e0>](0)" -> "tensorflow-2-0-bert-yes-no-answers.ipynb"	[label=appearsIn];
	bert_utils -> "tensorflow-2-0-bert-yes-no-answers.ipynb"	[label=importedBy];
	"bert_utils(0)" -> "tensorflow-2-0-bert-yes-no-answers.ipynb"	[label=appearsIn];
	"bert_utils(0)" -> bert_utils	[label=assignedFrom];
	modeling -> "tensorflow-2-0-bert-yes-no-answers.ipynb"	[label=importedBy];
	"modeling(0)" -> "tensorflow-2-0-bert-yes-no-answers.ipynb"	[label=appearsIn];
	"modeling(0)" -> modeling	[label=assignedFrom];
	tokenization -> "tensorflow-2-0-bert-yes-no-answers.ipynb"	[label=importedBy];
	"tokenization(0)" -> "tensorflow-2-0-bert-yes-no-answers.ipynb"	[label=appearsIn];
	"tokenization(0)" -> tokenization	[label=assignedFrom];
	json -> "tensorflow-2-0-bert-yes-no-answers.ipynb"	[label=importedBy];
	"json(0)" -> "tensorflow-2-0-bert-yes-no-answers.ipynb"	[label=appearsIn];
	"json(0)" -> json	[label=assignedFrom];
	os -> "tensorflow-2-0-bert-yes-no-answers.ipynb"	[label=importedBy];
	"os(0)" -> "tensorflow-2-0-bert-yes-no-answers.ipynb"	[label=appearsIn];
	"os(0)" -> os	[label=assignedFrom];
	"dirname(0)" -> "tensorflow-2-0-bert-yes-no-answers.ipynb"	[label=appearsIn];
	"dirname(0)" -> "os(0)"	[label=iteratorOf];
	"dirname(0)" -> "/kaggle/input(0)"	[label=iteratorOf];
	"/kaggle/input(0)" -> "tensorflow-2-0-bert-yes-no-answers.ipynb"	[label=appearsIn];
	"_(0)" -> "tensorflow-2-0-bert-yes-no-answers.ipynb"	[label=appearsIn];
	"_(0)" -> "os(0)"	[label=iteratorOf];
	"_(0)" -> "/kaggle/input(0)"	[label=iteratorOf];
	"filenames(0)" -> "tensorflow-2-0-bert-yes-no-answers.ipynb"	[label=appearsIn];
	"filenames(0)" -> "os(0)"	[label=iteratorOf];
	"filenames(0)" -> "/kaggle/input(0)"	[label=iteratorOf];
	"filename(0)" -> "tensorflow-2-0-bert-yes-no-answers.ipynb"	[label=appearsIn];
	"filename(0)" -> "filenames(0)"	[label=iteratorOf];
	"print[18/8]" -> "os(0)"	[label=print];
	"print[18/8]" -> "dirname(0)"	[label=print];
	"print[18/8]" -> "filename(0)"	[label=print];
	"on_kaggle_server(0)$0" -> "os(0)"	[label=exists];
	"on_kaggle_server(0)$0" -> "/kaggle(0)"	[label=exists];
	"/kaggle(0)" -> "tensorflow-2-0-bert-yes-no-answers.ipynb"	[label=appearsIn];
	"../input/tensorflow2-question-answering/simplified-nq-test.jsonl(0)" -> "tensorflow-2-0-bert-yes-no-answers.ipynb"	[label=appearsIn];
	"nq_test_file(0)$0" -> "../input/tensorflow2-question-answering/simplified-nq-test.jsonl(0)"	[label=assignedFrom];
	"../input/tensorflow2-question-answering/simplified-nq-train.jsonl(0)" -> "tensorflow-2-0-bert-yes-no-answers.ipynb"	[label=appearsIn];
	"nq_train_file(0)$0" -> "../input/tensorflow2-question-answering/simplified-nq-train.jsonl(0)"	[label=assignedFrom];
	"public_dataset(0)$0" -> "os(0)"	[label=assignedFrom];
	"public_dataset(0)$0" -> "nq_test_file(0)$0"	[label=assignedFrom];
	"public_dataset(0)$0" -> "20000000(0)"	[label=assignedFrom];
	"20000000(0)" -> "tensorflow-2-0-bert-yes-no-answers.ipynb"	[label=appearsIn];
	"private_dataset(0)$0" -> "os(0)"	[label=assignedFrom];
	"private_dataset(0)$0" -> "nq_test_file(0)$0"	[label=assignedFrom];
	"private_dataset(0)$0" -> "20000000(0)"	[label=assignedFrom];
	importlib -> "tensorflow-2-0-bert-yes-no-answers.ipynb"	[label=importedBy];
	"importlib(0)" -> "tensorflow-2-0-bert-yes-no-answers.ipynb"	[label=appearsIn];
	"importlib(0)" -> importlib	[label=assignedFrom];
	"importlib(0)$0" -> "bert_utils(0)"	[label=reload];
	"importlib(0)$0" -> "importlib(0)"	[label=reload];
	"config(0)$0" -> "json(0)"	[label=load];
	"config(0)$0" -> "f(0)"	[label=load];
	"f(0)" -> "tensorflow-2-0-bert-yes-no-answers.ipynb"	[label=appearsIn];
	"print[30/0]" -> "json(0)"	[label=print];
	"print[30/0]" -> "config(0)$0"	[label=print];
	"print[30/0]" -> "4(0)"	[label=print];
	"4(0)" -> "tensorflow-2-0-bert-yes-no-answers.ipynb"	[label=appearsIn];
	"self(2)" -> "__init__[0]"	[label=_argToVar];
	"output_size(2)" -> "__init__[1]"	[label=_argToVar];
	"kernel_initializer(2)" -> "__init__[2]"	[label=_argToVar];
	"bias_initializer(2)" -> "__init__[3]"	[label=_argToVar];
	"super(2)$0" -> "super(2)"	[label=__init__];
	"self(2)$0" -> "self(2)"	[label=assignedFrom];
	"self(2)$0" -> "output_size(2)"	[label=assignedFrom];
	"self(2)$1" -> "kernel_initializer(2)"	[label=assignedFrom];
	"self(2)$1" -> "self(2)$0"	[label=assignedFrom];
	"self(2)$2" -> "bias_initializer(2)"	[label=assignedFrom];
	"self(2)$2" -> "self(2)$1"	[label=assignedFrom];
	"self(3)" -> "build[0]"	[label=_argToVar];
	"input_shape(3)" -> "build[1]"	[label=_argToVar];
	"dtype(3)$0" -> "self(3)"	[label=as_dtype];
	"dtype(3)$0" -> "tf(3)"	[label=as_dtype];
	"input_shape(3)$0" -> "tf(3)"	[label=TensorShape];
	"input_shape(3)$0" -> "input_shape(3)$0"	[label=TensorShape];
	"last_dim(3)$0" -> "tf(3)"	[label=dimension_value];
	"last_dim(3)$0" -> "input_shape(3)$0"	[label=dimension_value];
	"last_dim(3)$0" -> "1(3)"	[label=dimension_value];
	"self(3)$0" -> "self(3)"	[label=InputSpec];
	"self(3)$0" -> "tf(3)"	[label=InputSpec];
	"self(3)$0" -> "last_dim(3)$0"	[label=InputSpec];
	"self(3)$0" -> "1(3)"	[label=InputSpec];
	"self(3)$0" -> "3(3)"	[label=InputSpec];
	"self(3)$1" -> "self(3)$0"	[label=add_weight];
	"self(3)$1" -> "self(3)$1"	[label=add_weight];
	"self(3)$1" -> "kernel(3)"	[label=add_weight];
	"self(3)$1" -> "[<_ast.Attribute object at 0x7fd4c04ff6d0>, <_ast.Name object at 0x7fd4c04ffdc0>](3)"	[label=add_weight];
	"self(3)$1" -> "True(3)"	[label=add_weight];
	"self(3)$2" -> "self(3)$1"	[label=add_weight];
	"self(3)$2" -> "True(3)"	[label=add_weight];
	"self(3)$2" -> "self(3)$2"	[label=add_weight];
	"self(3)$2" -> "bias(3)"	[label=add_weight];
	"self(3)$2" -> "[<_ast.Attribute object at 0x7fd4c04ffac0>](3)"	[label=add_weight];
	"super(3)$0" -> "input_shape(3)$0"	[label=build];
	"super(3)$0" -> "super(3)"	[label=build];
	"self(4)" -> "call[0]"	[label=_argToVar];
	"x(4)" -> "call[1]"	[label=_argToVar];
	"config(5)" -> "mk_model[0]"	[label=_argToVar];
	"seq_len(5)$0" -> "config(5)"	[label=assignedFrom];
	"seq_len(5)$0" -> "max_position_embeddings(5)"	[label=assignedFrom];
	"unique_id(5)$0" -> "unique_id(5)$0"	[label=Input];
	"unique_id(5)$0" -> "tf(5)"	[label=Input];
	"unique_id(5)$0" -> "1(5)"	[label=Input];
	"input_ids(5)$0" -> "seq_len(5)$0"	[label=Input];
	"input_ids(5)$0" -> "tf(5)"	[label=Input];
	"input_ids(5)$0" -> "input_ids(5)$0"	[label=Input];
	"input_mask(5)$0" -> "seq_len(5)$0"	[label=Input];
	"input_mask(5)$0" -> "tf(5)"	[label=Input];
	"input_mask(5)$0" -> "input_mask(5)$0"	[label=Input];
	"segment_ids(5)$0" -> "seq_len(5)$0"	[label=Input];
	"segment_ids(5)$0" -> "tf(5)"	[label=Input];
	"segment_ids(5)$0" -> "segment_ids(5)$0"	[label=Input];
	"BERT(5)$0" -> "config(5)"	[label=BertModel];
	"BERT(5)$0" -> "modeling(5)"	[label=BertModel];
	"BERT(5)$0" -> "bert(5)"	[label=BertModel];
	"pooled_output(5)$0" -> "input_ids(5)$0"	[label=BERT];
	"pooled_output(5)$0" -> "input_mask(5)$0"	[label=BERT];
	"pooled_output(5)$0" -> "segment_ids(5)$0"	[label=BERT];
	"sequence_output(5)$0" -> "input_ids(5)$0"	[label=BERT];
	"sequence_output(5)$0" -> "input_mask(5)$0"	[label=BERT];
	"sequence_output(5)$0" -> "segment_ids(5)$0"	[label=BERT];
	"logits(5)$0" -> "sequence_output(5)$0"	[label=assignedFrom];
	"logits(5)$0" -> "logits(5)$0"	[label=assignedFrom];
	"logits(5)$0" -> "TDense(5)"	[label=assignedFrom];
	"logits(5)$0" -> "2(5)"	[label=assignedFrom];
	"start_logits(5)$0" -> "tf(5)"	[label=split];
	"start_logits(5)$0" -> "1(5)"	[label=split];
	"start_logits(5)$0" -> "logits(5)$0"	[label=split];
	"start_logits(5)$0" -> "2(5)"	[label=split];
	"start_logits(5)$0" -> "split(5)"	[label=split];
	"end_logits(5)$0" -> "tf(5)"	[label=split];
	"end_logits(5)$0" -> "1(5)"	[label=split];
	"end_logits(5)$0" -> "logits(5)$0"	[label=split];
	"end_logits(5)$0" -> "2(5)"	[label=split];
	"end_logits(5)$0" -> "split(5)"	[label=split];
	"start_logits(5)$1" -> "tf(5)"	[label=squeeze];
	"start_logits(5)$1" -> "1(5)"	[label=squeeze];
	"start_logits(5)$1" -> "start_logits(5)$1"	[label=squeeze];
	"start_logits(5)$1" -> "start_squeeze(5)"	[label=squeeze];
	"end_logits(5)$1" -> "tf(5)"	[label=squeeze];
	"end_logits(5)$1" -> "1(5)"	[label=squeeze];
	"end_logits(5)$1" -> "end_logits(5)$1"	[label=squeeze];
	"end_logits(5)$1" -> "end_squeeze(5)"	[label=squeeze];
	"ans_type(5)$0" -> "pooled_output(5)$0"	[label=assignedFrom];
	"ans_type(5)$0" -> "TDense(5)"	[label=assignedFrom];
	"ans_type(5)$0" -> "ans_type(5)$0"	[label=assignedFrom];
	"ans_type(5)$0" -> "5(5)"	[label=assignedFrom];
	"small_config(0)$0" -> "config(0)$0"	[label=copy];
	"16(0)" -> "tensorflow-2-0-bert-yes-no-answers.ipynb"	[label=appearsIn];
	"small_config(0)$1" -> "small_config(0)$0"	[label=assignedFrom];
	"small_config(0)$1" -> "16(0)"	[label=assignedFrom];
	"64(0)" -> "tensorflow-2-0-bert-yes-no-answers.ipynb"	[label=appearsIn];
	"small_config(0)$2" -> "small_config(0)$1"	[label=assignedFrom];
	"small_config(0)$2" -> "64(0)"	[label=assignedFrom];
	"32(0)" -> "tensorflow-2-0-bert-yes-no-answers.ipynb"	[label=appearsIn];
	"small_config(0)$3" -> "small_config(0)$2"	[label=assignedFrom];
	"small_config(0)$3" -> "32(0)"	[label=assignedFrom];
	"small_config(0)$4" -> "4(0)"	[label=assignedFrom];
	"small_config(0)$4" -> "small_config(0)$3"	[label=assignedFrom];
	"small_config(0)$5" -> "4(0)"	[label=assignedFrom];
	"small_config(0)$5" -> "small_config(0)$4"	[label=assignedFrom];
	"256(0)" -> "tensorflow-2-0-bert-yes-no-answers.ipynb"	[label=appearsIn];
	"small_config(0)$6" -> "small_config(0)$5"	[label=assignedFrom];
	"small_config(0)$6" -> "256(0)"	[label=assignedFrom];
	"model(0)$0" -> "config(0)$0"	[label=mk_model];
	"model(0)$1" -> "model(0)$0"	[label=summary];
	"cpkt(0)$0" -> "tf(0)"	[label=Checkpoint];
	"cpkt(0)$0" -> "model(0)$1"	[label=Checkpoint];
	"cpkt(0)$1" -> "cpkt(0)$0"	[label=assert_consumed];
	"self(7)" -> "__init__[0]"	[label=_argToVar];
	"self(7)$0" -> "self(7)"	[label=update];
	"self(7)$0" -> "kwargs(7)"	[label=update];
	"True(0)" -> "tensorflow-2-0-bert-yes-no-answers.ipynb"	[label=appearsIn];
	"FLAGS(0)$0" -> "64(0)"	[label=DummyObject];
	"FLAGS(0)$0" -> "True(0)"	[label=DummyObject];
	"FLAGS(0)$0" -> "50(0)"	[label=DummyObject];
	"FLAGS(0)$0" -> "48(0)"	[label=DummyObject];
	"FLAGS(0)$0" -> "512(0)"	[label=DummyObject];
	"FLAGS(0)$0" -> "128(0)"	[label=DummyObject];
	"FLAGS(0)$0" -> "1.0(0)"	[label=DummyObject];
	"FLAGS(0)$0" -> "20(0)"	[label=DummyObject];
	"FLAGS(0)$0" -> "30(0)"	[label=DummyObject];
	"50(0)" -> "tensorflow-2-0-bert-yes-no-answers.ipynb"	[label=appearsIn];
	"48(0)" -> "tensorflow-2-0-bert-yes-no-answers.ipynb"	[label=appearsIn];
	"512(0)" -> "tensorflow-2-0-bert-yes-no-answers.ipynb"	[label=appearsIn];
	"128(0)" -> "tensorflow-2-0-bert-yes-no-answers.ipynb"	[label=appearsIn];
	"1.0(0)" -> "tensorflow-2-0-bert-yes-no-answers.ipynb"	[label=appearsIn];
	"20(0)" -> "tensorflow-2-0-bert-yes-no-answers.ipynb"	[label=appearsIn];
	"30(0)" -> "tensorflow-2-0-bert-yes-no-answers.ipynb"	[label=appearsIn];
	tqdm -> "tensorflow-2-0-bert-yes-no-answers.ipynb"	[label=importedBy];
	"tqdm(0)" -> "tensorflow-2-0-bert-yes-no-answers.ipynb"	[label=appearsIn];
	"tqdm(0)" -> tqdm	[label=assignedFrom];
	"../input/bert-joint-baseline/nq-test.tfrecords(0)" -> "tensorflow-2-0-bert-yes-no-answers.ipynb"	[label=appearsIn];
	"eval_records(0)$0" -> "../input/bert-joint-baseline/nq-test.tfrecords(0)"	[label=assignedFrom];
	"nq-test.tfrecords(0)" -> "tensorflow-2-0-bert-yes-no-answers.ipynb"	[label=appearsIn];
	"eval_records(0)$1" -> "nq-test.tfrecords(0)"	[label=assignedFrom];
	"eval_writer(0)$0" -> "bert_utils(0)"	[label=FeatureWriter];
	"eval_writer(0)$0" -> "os(0)"	[label=FeatureWriter];
	"eval_writer(0)$0" -> "eval_records(0)$1"	[label=FeatureWriter];
	"eval_writer(0)$0" -> "False(0)"	[label=FeatureWriter];
	"False(0)" -> "tensorflow-2-0-bert-yes-no-answers.ipynb"	[label=appearsIn];
	"tokenizer(0)$0" -> "tokenization(0)"	[label=FullTokenizer];
	"tokenizer(0)$0" -> "True(0)"	[label=FullTokenizer];
	"tokenizer(0)$0" -> "../input/bert-joint-baseline/vocab-nq.txt(0)"	[label=FullTokenizer];
	"../input/bert-joint-baseline/vocab-nq.txt(0)" -> "tensorflow-2-0-bert-yes-no-answers.ipynb"	[label=appearsIn];
	"[](0)" -> "tensorflow-2-0-bert-yes-no-answers.ipynb"	[label=appearsIn];
	"features(0)$0" -> "[](0)"	[label=assignedFrom];
	"convert(0)$0" -> "bert_utils(0)"	[label=ConvertExamples2Features];
	"convert(0)$0" -> "eval_writer(0)$0"	[label=ConvertExamples2Features];
	"convert(0)$0" -> "False(0)"	[label=ConvertExamples2Features];
	"convert(0)$0" -> "tokenizer(0)$0"	[label=ConvertExamples2Features];
	"0(0)" -> "tensorflow-2-0-bert-yes-no-answers.ipynb"	[label=appearsIn];
	"n_examples(0)$0" -> "0(0)"	[label=assignedFrom];
	"tqdm_notebook(0)$0" -> "on_kaggle_server(0)$0"	[label=assignedFrom];
	"tqdm_notebook(0)$0" -> "tqdm(0)"	[label=assignedFrom];
	"tqdm_notebook(0)$0" -> "None(0)"	[label=assignedFrom];
	"None(0)" -> "tensorflow-2-0-bert-yes-no-answers.ipynb"	[label=appearsIn];
	"examples(0)" -> "tensorflow-2-0-bert-yes-no-answers.ipynb"	[label=appearsIn];
	"examples(0)" -> "bert_utils(0)"	[label=iteratorOf];
	"examples(0)" -> "nq_test_file(0)$0"	[label=iteratorOf];
	"examples(0)" -> "False(0)"	[label=iteratorOf];
	"examples(0)" -> "tqdm_notebook(0)$0"	[label=iteratorOf];
	"example(0)" -> "tensorflow-2-0-bert-yes-no-answers.ipynb"	[label=appearsIn];
	"example(0)" -> "examples(0)"	[label=iteratorOf];
	"n_examples(0)$1" -> "convert(0)$0"	[label=Add];
	"n_examples(0)$1" -> "n_examples(0)$0"	[label=Add];
	"n_examples(0)$1" -> "example(0)"	[label=Add];
	"eval_writer(0)$1" -> "eval_writer(0)$0"	[label=close];
	"number of test examples: \%d, written to file: \%d(0)" -> "tensorflow-2-0-bert-yes-no-answers.ipynb"	[label=appearsIn];
	"print[146/4]" -> "n_examples(0)$1"	[label=print];
	"print[146/4]" -> "eval_writer(0)$1"	[label=print];
	"print[146/4]" -> "number of test examples: \%d, written to file: \%d(0)"	[label=print];
	"seq_length(0)$0" -> "FLAGS(0)$0"	[label=assignedFrom];
	"unique_id(0)" -> "tensorflow-2-0-bert-yes-no-answers.ipynb"	[label=appearsIn];
	"name_to_features(0)$0" -> "tf(0)"	[label=assignedFrom];
	"name_to_features(0)$0" -> "[](0)"	[label=assignedFrom];
	"name_to_features(0)$0" -> "unique_id(0)"	[label=assignedFrom];
	"name_to_features(0)$0" -> "input_ids(0)"	[label=assignedFrom];
	"name_to_features(0)$0" -> "input_mask(0)"	[label=assignedFrom];
	"name_to_features(0)$0" -> "segment_ids(0)"	[label=assignedFrom];
	"name_to_features(0)$0" -> "[<_ast.Name object at 0x7fd4c04cc490>](0)"	[label=assignedFrom];
	"name_to_features(0)$0" -> "[<_ast.Name object at 0x7fd4c04cc130>](0)"	[label=assignedFrom];
	"name_to_features(0)$0" -> "[<_ast.Name object at 0x7fd4c04cc2b0>](0)"	[label=assignedFrom];
	"input_ids(0)" -> "tensorflow-2-0-bert-yes-no-answers.ipynb"	[label=appearsIn];
	"input_mask(0)" -> "tensorflow-2-0-bert-yes-no-answers.ipynb"	[label=appearsIn];
	"segment_ids(0)" -> "tensorflow-2-0-bert-yes-no-answers.ipynb"	[label=appearsIn];
	"[<_ast.Name object at 0x7fd4c04cc490>](0)" -> "tensorflow-2-0-bert-yes-no-answers.ipynb"	[label=appearsIn];
	"[<_ast.Name object at 0x7fd4c04cc130>](0)" -> "tensorflow-2-0-bert-yes-no-answers.ipynb"	[label=appearsIn];
	"[<_ast.Name object at 0x7fd4c04cc2b0>](0)" -> "tensorflow-2-0-bert-yes-no-answers.ipynb"	[label=appearsIn];
	"record(8)" -> "_decode_record[0]"	[label=_argToVar];
	"name_to_features(8)" -> "_decode_record[1]"	[label=_argToVar];
	"example(8)$0" -> "record(8)"	[label=parse_single_example];
	"example(8)$0" -> "name_to_features(8)"	[label=parse_single_example];
	"example(8)$0" -> "tf(8)"	[label=parse_single_example];
	"name(8)" -> "example(8)$0"	[label=iteratorOf];
	"name(8)" -> "list(8)"	[label=iteratorOf];
	"t(8)$0" -> "example(8)$0"	[label=assignedFrom];
	"t(8)$0" -> "name(8)"	[label=assignedFrom];
	"t(8)$1" -> "tf(8)"	[label=cast];
	"t(8)$1" -> "t(8)$1"	[label=cast];
	"example(8)$1" -> "example(8)$0"	[label=assignedFrom];
	"example(8)$1" -> "t(8)$1"	[label=assignedFrom];
	"record(9)" -> "_decode_tokens[0]"	[label=_argToVar];
	"raw_ds(0)$0" -> "tf(0)"	[label=TFRecordDataset];
	"raw_ds(0)$0" -> "eval_records(0)$1"	[label=TFRecordDataset];
	"token_map_ds(0)$0" -> "raw_ds(0)$0"	[label=map];
	"token_map_ds(0)$0" -> "_decode_tokens(0)"	[label=map];
	"_decode_tokens(0)" -> "tensorflow-2-0-bert-yes-no-answers.ipynb"	[label=appearsIn];
	"decoded_ds(0)$0" -> "raw_ds(0)$0"	[label=map];
	"decoded_ds(0)$0" -> "_decode_record(0)"	[label=map];
	"_decode_record(0)" -> "tensorflow-2-0-bert-yes-no-answers.ipynb"	[label=appearsIn];
	"ds(0)$0" -> "16(0)"	[label=batch];
	"ds(0)$0" -> "False(0)"	[label=batch];
	"ds(0)$0" -> "decoded_ds(0)$0"	[label=batch];
	"result(0)$0" -> "model(0)$1"	[label=predict_generator];
	"result(0)$0" -> "ds(0)$0"	[label=predict_generator];
	"result(0)$0" -> "1(0)"	[label=predict_generator];
	"1(0)" -> "tensorflow-2-0-bert-yes-no-answers.ipynb"	[label=appearsIn];
	"np(0)$0" -> "np(0)"	[label=savez_compressed];
	"np(0)$0" -> "bert-joint-baseline-output.npz(0)"	[label=savez_compressed];
	"bert-joint-baseline-output.npz(0)" -> "tensorflow-2-0-bert-yes-no-answers.ipynb"	[label=appearsIn];
	"Span(0)$0" -> "collections(0)"	[label=namedtuple];
	"Span(0)$0" -> "Span(0)$0"	[label=namedtuple];
	"Span(0)$0" -> "[<_ast.Constant object at 0x7fd4c05af490>, <_ast.Constant object at 0x7fd4c05af190>](0)"	[label=namedtuple];
	"[<_ast.Constant object at 0x7fd4c05af490>, <_ast.Constant object at 0x7fd4c05af190>](0)" -> "tensorflow-2-0-bert-yes-no-answers.ipynb"	[label=appearsIn];
	"self(11)" -> "__init__[0]"	[label=_argToVar];
	"self(11)$0" -> "self(11)"	[label=assignedFrom];
	"self(11)$0" -> "None(11)"	[label=assignedFrom];
	"self(11)$1" -> "self(11)$0"	[label=assignedFrom];
	"self(11)$1" -> "None(11)"	[label=assignedFrom];
	"self(11)$2" -> "None(11)"	[label=assignedFrom];
	"self(11)$2" -> "self(11)$1"	[label=assignedFrom];
	"self(11)$3" -> "None(11)"	[label=assignedFrom];
	"self(11)$3" -> "self(11)$2"	[label=assignedFrom];
	"self(13)" -> "__init__[0]"	[label=_argToVar];
	"example_id(13)" -> "__init__[1]"	[label=_argToVar];
	"candidates(13)" -> "__init__[2]"	[label=_argToVar];
	"self(13)$0" -> "self(13)"	[label=assignedFrom];
	"self(13)$0" -> "example_id(13)"	[label=assignedFrom];
	"self(13)$1" -> "candidates(13)"	[label=assignedFrom];
	"self(13)$1" -> "self(13)$0"	[label=assignedFrom];
	"logits(14)" -> "get_best_indexes[0]"	[label=_argToVar];
	"n_best_size(14)" -> "get_best_indexes[1]"	[label=_argToVar];
	"index_and_score(14)$0" -> "logits(14)"	[label=sorted];
	"index_and_score(14)$0" -> "enumerate(14)"	[label=sorted];
	"index_and_score(14)$0" -> "1(14)"	[label=sorted];
	"index_and_score(14)$0" -> "x(14)"	[label=sorted];
	"index_and_score(14)$0" -> "True(14)"	[label=sorted];
	"best_indexes(14)$0" -> "[](14)"	[label=assignedFrom];
	"i(14)" -> "index_and_score(14)$0"	[label=iteratorOf];
	"i(14)" -> "range(14)"	[label=iteratorOf];
	"i(14)" -> "len(14)"	[label=iteratorOf];
	"best_indexes(14)$1" -> "index_and_score(14)$0"	[label=append];
	"best_indexes(14)$1" -> "best_indexes(14)$0"	[label=append];
	"best_indexes(14)$1" -> "i(14)"	[label=append];
	"best_indexes(14)$1" -> "0(14)"	[label=append];
	"logits(15)" -> "top_k_indices[0]"	[label=_argToVar];
	"n_best_size(15)" -> "top_k_indices[1]"	[label=_argToVar];
	"token_map(15)" -> "top_k_indices[2]"	[label=_argToVar];
	"indices(15)$0" -> "logits(15)"	[label=Add];
	"indices(15)$0" -> "np(15)"	[label=Add];
	"indices(15)$0" -> "1(15)"	[label=Add];
	"indices(15)$1" -> "token_map(15)"	[label=assignedFrom];
	"indices(15)$1" -> "indices(15)$0"	[label=assignedFrom];
	"indices(15)$1" -> "1(15)"	[label=assignedFrom];
	"indices(15)$1" -> "indices(15)$1"	[label=assignedFrom];
	"example(16)" -> "compute_predictions[0]"	[label=_argToVar];
	"predictions(16)$0" -> "[](16)"	[label=assignedFrom];
	"n_best_size(16)$0" -> "FLAGS(16)"	[label=assignedFrom];
	"max_answer_length(16)$0" -> "FLAGS(16)"	[label=assignedFrom];
	"i(16)$0" -> "0(16)"	[label=assignedFrom];
	"unique_id(16)" -> "example(16)"	[label=iteratorOf];
	"result(16)" -> "example(16)"	[label=iteratorOf];
	"token_map(16)$0" -> "example(16)"	[label=array];
	"token_map(16)$0" -> "unique_id(16)"	[label=array];
	"token_map(16)$0" -> "token_map(16)$0"	[label=array];
	"token_map(16)$0" -> "np(16)"	[label=array];
	"start_indexes(16)$0" -> "n_best_size(16)$0"	[label=top_k_indices];
	"start_indexes(16)$0" -> "result(16)"	[label=top_k_indices];
	"start_indexes(16)$0" -> "token_map(16)$0"	[label=top_k_indices];
	"end_indexes(16)$0" -> "n_best_size(16)$0"	[label=top_k_indices];
	"end_indexes(16)$0" -> "result(16)"	[label=top_k_indices];
	"end_indexes(16)$0" -> "token_map(16)$0"	[label=top_k_indices];
	"indexes(16)$0" -> "np(16)"	[label=array];
	"indexes(16)$0" -> "start_indexes(16)$0"	[label=array];
	"indexes(16)$0" -> "end_indexes(16)$0"	[label=array];
	"indexes(16)$0" -> "list(16)"	[label=array];
	"indexes(16)$0" -> "None(16)"	[label=array];
	"indexes(16)$1" -> "max_answer_length(16)$0"	[label=assignedFrom];
	"indexes(16)$1" -> "0(16)"	[label=assignedFrom];
	"indexes(16)$1" -> "indexes(16)$0"	[label=assignedFrom];
	"indexes(16)$1" -> "indexes(16)$1"	[label=assignedFrom];
	"indexes(16)$1" -> "1(16)"	[label=assignedFrom];
	"start_index(16)" -> "indexes(16)$1"	[label=iteratorOf];
	"end_index(16)" -> "indexes(16)$1"	[label=iteratorOf];
	"summary(16)$0" -> "result(16)"	[label=Add];
	"summary(16)$0" -> "start_index(16)"	[label=Add];
	"summary(16)$0" -> "end_index(16)"	[label=Add];
	"summary(16)$0" -> "summary(16)"	[label=Add];
	"summary(16)$1" -> "0(16)"	[label=Add];
	"summary(16)$1" -> "result(16)"	[label=Add];
	"summary(16)$1" -> "summary(16)$0"	[label=Add];
	"summary(16)$2" -> "result(16)"	[label=Sub];
	"summary(16)$2" -> "summary(16)$1"	[label=Sub];
	"start_span(16)$0" -> "token_map(16)$0"	[label=assignedFrom];
	"start_span(16)$0" -> "start_index(16)"	[label=assignedFrom];
	"end_span(16)$0" -> "token_map(16)$0"	[label=Add];
	"end_span(16)$0" -> "1(16)"	[label=Add];
	"end_span(16)$0" -> "end_index(16)"	[label=Add];
	"score(16)$0" -> "summary(16)$2"	[label=Sub];
	"predictions(16)$1" -> "predictions(16)$0"	[label=append];
	"predictions(16)$1" -> "i(16)$0"	[label=append];
	"predictions(16)$1" -> "summary(16)$2"	[label=append];
	"predictions(16)$1" -> "start_span(16)$0"	[label=append];
	"predictions(16)$1" -> "end_span(16)$0"	[label=append];
	"predictions(16)$1" -> "score(16)$0"	[label=append];
	"i(16)$1" -> "i(16)$0"	[label=Add];
	"i(16)$1" -> "1(16)"	[label=Add];
	"score(16)$1" -> "10000.0(16)"	[label=assignedFrom];
	"short_span(16)$0" -> "1(16)"	[label=Span];
	"long_span(16)$0" -> "1(16)"	[label=Span];
	"score(16)$2" -> "0(16)"	[label=assignedFrom];
	"score(16)$2" -> "predictions(16)$1"	[label=assignedFrom];
	"score(16)$2" -> "sorted(16)"	[label=assignedFrom];
	"score(16)$2" -> "True(16)"	[label=assignedFrom];
	"_(16)$0" -> "0(16)"	[label=assignedFrom];
	"_(16)$0" -> "predictions(16)$1"	[label=assignedFrom];
	"_(16)$0" -> "sorted(16)"	[label=assignedFrom];
	"_(16)$0" -> "True(16)"	[label=assignedFrom];
	"summary(16)$3" -> "0(16)"	[label=assignedFrom];
	"summary(16)$3" -> "predictions(16)$1"	[label=assignedFrom];
	"summary(16)$3" -> "sorted(16)"	[label=assignedFrom];
	"summary(16)$3" -> "True(16)"	[label=assignedFrom];
	"start_span(16)$1" -> "0(16)"	[label=assignedFrom];
	"start_span(16)$1" -> "predictions(16)$1"	[label=assignedFrom];
	"start_span(16)$1" -> "sorted(16)"	[label=assignedFrom];
	"start_span(16)$1" -> "True(16)"	[label=assignedFrom];
	"end_span(16)$1" -> "0(16)"	[label=assignedFrom];
	"end_span(16)$1" -> "predictions(16)$1"	[label=assignedFrom];
	"end_span(16)$1" -> "sorted(16)"	[label=assignedFrom];
	"end_span(16)$1" -> "True(16)"	[label=assignedFrom];
	"short_span(16)$1" -> "start_span(16)$1"	[label=Span];
	"short_span(16)$1" -> "end_span(16)$1"	[label=Span];
	"c(16)" -> "example(16)"	[label=iteratorOf];
	"start(16)$0" -> "short_span(16)$1"	[label=assignedFrom];
	"end(16)$0" -> "short_span(16)$1"	[label=assignedFrom];
	"long_span(16)$1" -> "c(16)"	[label=Span];
	"long_span(16)$1" -> "start_token(16)"	[label=Span];
	"long_span(16)$1" -> "end_token(16)"	[label=Span];
	"summary(16)$4" -> "example(16)"	[label=assignedFrom];
	"summary(16)$4" -> "np(16)"	[label=assignedFrom];
	"summary(16)$4" -> "1(16)"	[label=assignedFrom];
	"summary(16)$4" -> "score(16)$2"	[label=assignedFrom];
	"summary(16)$4" -> "summary(16)$3"	[label=assignedFrom];
	"summary(16)$4" -> "long_span(16)$1"	[label=assignedFrom];
	"summary(16)$4" -> "start_token(16)"	[label=assignedFrom];
	"summary(16)$4" -> "end_token(16)"	[label=assignedFrom];
	"summary(16)$4" -> "summary(16)$4"	[label=assignedFrom];
	"summary(16)$4" -> "example_id(16)"	[label=assignedFrom];
	"summary(16)$4" -> "long_answer(16)"	[label=assignedFrom];
	"summary(16)$4" -> "long_answer_score(16)"	[label=assignedFrom];
	"summary(16)$4" -> "short_answers(16)"	[label=assignedFrom];
	"summary(16)$4" -> "short_answer_score(16)"	[label=assignedFrom];
	"summary(16)$4" -> "yes_no_answer(16)"	[label=assignedFrom];
	"summary(16)$4" -> "answer_type_logits(16)"	[label=assignedFrom];
	"summary(16)$4" -> "answer_type(16)"	[label=assignedFrom];
	"summary(16)$4" -> "int(16)"	[label=assignedFrom];
	"summary(16)$4" -> "start_byte(16)"	[label=assignedFrom];
	"summary(16)$4" -> "end_byte(16)"	[label=assignedFrom];
	"summary(16)$4" -> "float(16)"	[label=assignedFrom];
	"summary(16)$4" -> "[<_ast.Dict object at 0x7fd4c05b3790>](16)"	[label=assignedFrom];
	"summary(16)$4" -> "NONE(16)"	[label=assignedFrom];
	"candidates_dict(17)" -> "compute_pred_dict[0]"	[label=_argToVar];
	"dev_features(17)" -> "compute_pred_dict[1]"	[label=_argToVar];
	"raw_results(17)" -> "compute_pred_dict[2]"	[label=_argToVar];
	"tqdm(17)" -> "compute_pred_dict[3]"	[label=_argToVar];
	"raw_results_by_id(17)$0" -> "raw_results(17)"	[label=assignedFrom];
	"raw_results_by_id(17)$0" -> "int(17)"	[label=assignedFrom];
	"raw_results_by_id(17)$0" -> "res(17)"	[label=assignedFrom];
	"raw_results_by_id(17)$0" -> "1(17)"	[label=assignedFrom];
	"examples_by_id(17)$0" -> "candidates_dict(17)"	[label=assignedFrom];
	"examples_by_id(17)$0" -> "int(17)"	[label=assignedFrom];
	"examples_by_id(17)$0" -> "k(17)"	[label=assignedFrom];
	"examples_by_id(17)$0" -> "0(17)"	[label=assignedFrom];
	"examples_by_id(17)$0" -> "v(17)"	[label=assignedFrom];
	"features_by_id(17)$0" -> "dev_features(17)"	[label=assignedFrom];
	"features_by_id(17)$0" -> "int(17)"	[label=assignedFrom];
	"features_by_id(17)$0" -> "d(17)"	[label=assignedFrom];
	"features_by_id(17)$0" -> "unique_id(17)"	[label=assignedFrom];
	"features_by_id(17)$0" -> "2(17)"	[label=assignedFrom];
	"examples(17)$0" -> "[](17)"	[label=assignedFrom];
	"print[298/4]" -> "merging examples...(17)"	[label=print];
	"merged(17)$0" -> "raw_results_by_id(17)$0"	[label=sorted];
	"merged(17)$0" -> "examples_by_id(17)$0"	[label=sorted];
	"merged(17)$0" -> "features_by_id(17)$0"	[label=sorted];
	"print[300/4]" -> "done.(17)"	[label=print];
	"idx(17)" -> "merged(17)$0"	[label=iteratorOf];
	"type_(17)" -> "merged(17)$0"	[label=iteratorOf];
	"datum(17)" -> "merged(17)$0"	[label=iteratorOf];
	"examples(17)$1" -> "examples(17)$0"	[label=append];
	"examples(17)$1" -> "idx(17)"	[label=append];
	"examples(17)$1" -> "datum(17)"	[label=append];
	"examples(17)$1" -> "EvalExample(17)"	[label=append];
	"examples(17)$2" -> "datum(17)"	[label=assignedFrom];
	"examples(17)$2" -> "examples(17)$1"	[label=assignedFrom];
	"examples(17)$3" -> "datum(17)"	[label=assignedFrom];
	"examples(17)$3" -> "examples(17)$2"	[label=assignedFrom];
	"print[310/4]" -> "Computing predictions...(17)"	[label=print];
	"examples(17)$4" -> "examples(17)$3"	[label=tqdm];
	"e(17)" -> "examples(17)$4"	[label=iteratorOf];
	"summary(17)$0" -> "e(17)"	[label=compute_predictions];
	"nq_pred_dict(17)$0" -> "summary(17)$0"	[label=assignedFrom];
	"nq_pred_dict(17)$0" -> "nq_pred_dict(17)"	[label=assignedFrom];
	"input_path(18)" -> "read_candidates_from_one_split[0]"	[label=_argToVar];
	"print[326/2]" -> "input_path(18)"	[label=print];
	"print[326/2]" -> "Reading examples from: \%s(18)"	[label=print];
	"index(18)" -> "enumerate(18)"	[label=iteratorOf];
	"index(18)" -> "input_file(18)"	[label=iteratorOf];
	"line(18)" -> "enumerate(18)"	[label=iteratorOf];
	"line(18)" -> "input_file(18)"	[label=iteratorOf];
	"e(18)$0" -> "line(18)"	[label=loads];
	"e(18)$0" -> "json(18)"	[label=loads];
	"candidates_dict(18)$0" -> "e(18)$0"	[label=assignedFrom];
	"candidates_dict(18)$0" -> "candidates_dict(18)"	[label=assignedFrom];
	"candidates_dict(18)$0" -> "long_answer_candidates(18)"	[label=assignedFrom];
	"e(18)$1" -> "line(18)"	[label=loads];
	"e(18)$1" -> "json(18)"	[label=loads];
	"candidates_dict(18)$1" -> "candidates_dict(18)$0"	[label=assignedFrom];
	"candidates_dict(18)$1" -> "long_answer_candidates(18)"	[label=assignedFrom];
	"candidates_dict(18)$1" -> "e(18)$1"	[label=assignedFrom];
	"input_pattern(19)" -> "read_candidates[0]"	[label=_argToVar];
	"input_paths(19)$0" -> "input_pattern(19)"	[label=glob];
	"input_paths(19)$0" -> "tf(19)"	[label=glob];
	"input_path(19)" -> "input_paths(19)$0"	[label=iteratorOf];
	"final_dict(19)$0" -> "input_path(19)"	[label=update];
	"final_dict(19)$0" -> "final_dict(19)"	[label=update];
	"final_dict(19)$0" -> "read_candidates_from_one_split(19)"	[label=update];
	"all_results(0)$0" -> "bert_utils(0)"	[label=assignedFrom];
	"all_results(0)$0" -> "result(0)$0"	[label=assignedFrom];
	"all_results(0)$0" -> "x(0)"	[label=assignedFrom];
	"all_results(0)$0" -> "zip(0)"	[label=assignedFrom];
	"x(0)" -> "tensorflow-2-0-bert-yes-no-answers.ipynb"	[label=appearsIn];
	"zip(0)" -> "tensorflow-2-0-bert-yes-no-answers.ipynb"	[label=appearsIn];
	"Going to candidates file(0)" -> "tensorflow-2-0-bert-yes-no-answers.ipynb"	[label=appearsIn];
	"print[349/0]" -> "Going to candidates file(0)"	[label=print];
	"candidates_dict(0)$0" -> "../input/tensorflow2-question-answering/simplified-nq-test.jsonl(0)"	[label=read_candidates];
	"setting up eval features(0)" -> "tensorflow-2-0-bert-yes-no-answers.ipynb"	[label=appearsIn];
	"print[353/0]" -> "setting up eval features(0)"	[label=print];
	"eval_features(0)$0" -> "token_map_ds(0)$0"	[label=list];
	"compute_pred_dict(0)" -> "tensorflow-2-0-bert-yes-no-answers.ipynb"	[label=appearsIn];
	"print[357/0]" -> "compute_pred_dict(0)"	[label=print];
	"tqdm_notebook(0)$1" -> "tqdm(0)"	[label=assignedFrom];
	"nq_pred_dict(0)$0" -> "all_results(0)$0"	[label=compute_pred_dict];
	"nq_pred_dict(0)$0" -> "candidates_dict(0)$0"	[label=compute_pred_dict];
	"nq_pred_dict(0)$0" -> "eval_features(0)$0"	[label=compute_pred_dict];
	"nq_pred_dict(0)$0" -> "tqdm_notebook(0)$1"	[label=compute_pred_dict];
	"predictions(0)" -> "tensorflow-2-0-bert-yes-no-answers.ipynb"	[label=appearsIn];
	"predictions_json(0)$0" -> "nq_pred_dict(0)$0"	[label=assignedFrom];
	"predictions_json(0)$0" -> "predictions(0)"	[label=assignedFrom];
	"predictions_json(0)$0" -> "list(0)"	[label=assignedFrom];
	"list(0)" -> "tensorflow-2-0-bert-yes-no-answers.ipynb"	[label=appearsIn];
	"writing json(0)" -> "tensorflow-2-0-bert-yes-no-answers.ipynb"	[label=appearsIn];
	"print[367/0]" -> "writing json(0)"	[label=print];
	"json(0)$0" -> "json(0)"	[label=dump];
	"json(0)$0" -> "f(0)"	[label=dump];
	"json(0)$0" -> "predictions_json(0)$0"	[label=dump];
	"entry(20)" -> "create_short_answer[0]"	[label=_argToVar];
	"answer(20)$0" -> "[](20)"	[label=assignedFrom];
	"short_answer(20)" -> "entry(20)"	[label=iteratorOf];
	"short_answer(20)" -> "short_answers(20)"	[label=iteratorOf];
	"answer(20)$1" -> "answer(20)$0"	[label=append];
	"answer(20)$1" -> "short_answer(20)"	[label=append];
	"answer(20)$1" -> "str(20)"	[label=append];
	"answer(20)$1" -> "start_token(20)"	[label=append];
	"answer(20)$1" -> ":(20)"	[label=append];
	"answer(20)$1" -> "end_token(20)"	[label=append];
	"entry(21)" -> "create_long_answer[0]"	[label=_argToVar];
	"answer(21)$0" -> "[](21)"	[label=assignedFrom];
	"answer(21)$1" -> "entry(21)"	[label=append];
	"answer(21)$1" -> "answer(21)$0"	[label=append];
	"answer(21)$1" -> "str(21)"	[label=append];
	"answer(21)$1" -> "long_answer(21)"	[label=append];
	"answer(21)$1" -> "start_token(21)"	[label=append];
	"answer(21)$1" -> ":(21)"	[label=append];
	"answer(21)$1" -> "end_token(21)"	[label=append];
	"test_answers_df(0)$0" -> "pd(0)"	[label=read_json];
	"test_answers_df(0)$0" -> "../working/predictions.json(0)"	[label=read_json];
	"../working/predictions.json(0)" -> "tensorflow-2-0-bert-yes-no-answers.ipynb"	[label=appearsIn];
	"[<_ast.Constant object at 0x7fd500820a90>, <_ast.Constant object at 0x7fd500820af0>, <_ast.Constant object at 0x7fd500820b20>](0)" -> "tensorflow-2-0-bert-yes-no-answers.ipynb"	[label=appearsIn];
	"var_name(0)" -> "tensorflow-2-0-bert-yes-no-answers.ipynb"	[label=appearsIn];
	"var_name(0)" -> "[<_ast.Constant object at 0x7fd500820a90>, <_ast.Constant object at 0x7fd500820af0>, <_ast.Constant object at 0x7fd500820b20>](0)"	[label=iteratorOf];
	"test_answers_df(0)$1" -> "predictions(0)"	[label=apply];
	"test_answers_df(0)$1" -> "test_answers_df(0)$0"	[label=apply];
	"test_answers_df(0)$1" -> "var_name(0)"	[label=apply];
	"test_answers_df(0)$1" -> "q(0)"	[label=apply];
	"q(0)" -> "tensorflow-2-0-bert-yes-no-answers.ipynb"	[label=appearsIn];
	"test_answers_df(0)$2" -> "predictions(0)"	[label=apply];
	"test_answers_df(0)$2" -> "test_answers_df(0)$1"	[label=apply];
	"test_answers_df(0)$2" -> "create_long_answer(0)"	[label=apply];
	"create_long_answer(0)" -> "tensorflow-2-0-bert-yes-no-answers.ipynb"	[label=appearsIn];
	"test_answers_df(0)$3" -> "predictions(0)"	[label=apply];
	"test_answers_df(0)$3" -> "test_answers_df(0)$2"	[label=apply];
	"test_answers_df(0)$3" -> "create_short_answer(0)"	[label=apply];
	"create_short_answer(0)" -> "tensorflow-2-0-bert-yes-no-answers.ipynb"	[label=appearsIn];
	"test_answers_df(0)$4" -> "predictions(0)"	[label=apply];
	"test_answers_df(0)$4" -> "q(0)"	[label=apply];
	"test_answers_df(0)$4" -> "test_answers_df(0)$3"	[label=apply];
	"test_answers_df(0)$4" -> "str(0)"	[label=apply];
	"test_answers_df(0)$4" -> "example_id(0)"	[label=apply];
	"str(0)" -> "tensorflow-2-0-bert-yes-no-answers.ipynb"	[label=appearsIn];
	"example_id(0)" -> "tensorflow-2-0-bert-yes-no-answers.ipynb"	[label=appearsIn];
	"long_answers(0)$0" -> "zip(0)"	[label=dict];
	"long_answers(0)$0" -> "test_answers_df(0)$4"	[label=dict];
	"long_answers(0)$0" -> "example_id(0)"	[label=dict];
	"long_answers(0)$0" -> "long_answer(0)"	[label=dict];
	"long_answer(0)" -> "tensorflow-2-0-bert-yes-no-answers.ipynb"	[label=appearsIn];
	"short_answers(0)$0" -> "zip(0)"	[label=dict];
	"short_answers(0)$0" -> "test_answers_df(0)$4"	[label=dict];
	"short_answers(0)$0" -> "example_id(0)"	[label=dict];
	"short_answers(0)$0" -> "short_answer(0)"	[label=dict];
	"short_answer(0)" -> "tensorflow-2-0-bert-yes-no-answers.ipynb"	[label=appearsIn];
	"test_answers_df(0)$5" -> "test_answers_df(0)$4"	[label=head];
	"sample_submission(0)$0" -> "pd(0)"	[label=read_csv];
	"sample_submission(0)$0" -> "../input/tensorflow2-question-answering/sample_submission.csv(0)"	[label=read_csv];
	"../input/tensorflow2-question-answering/sample_submission.csv(0)" -> "tensorflow-2-0-bert-yes-no-answers.ipynb"	[label=appearsIn];
	"long_prediction_strings(0)$0" -> "1(0)"	[label=apply];
	"long_prediction_strings(0)$0" -> "q(0)"	[label=apply];
	"long_prediction_strings(0)$0" -> "example_id(0)"	[label=apply];
	"long_prediction_strings(0)$0" -> "long_answers(0)$0"	[label=apply];
	"long_prediction_strings(0)$0" -> "sample_submission(0)$0"	[label=apply];
	"long_prediction_strings(0)$0" -> "_long(0)"	[label=apply];
	"long_prediction_strings(0)$0" -> "(0)"	[label=apply];
	"_long(0)" -> "tensorflow-2-0-bert-yes-no-answers.ipynb"	[label=appearsIn];
	"(0)" -> "tensorflow-2-0-bert-yes-no-answers.ipynb"	[label=appearsIn];
	"short_prediction_strings(0)$0" -> "1(0)"	[label=apply];
	"short_prediction_strings(0)$0" -> "q(0)"	[label=apply];
	"short_prediction_strings(0)$0" -> "example_id(0)"	[label=apply];
	"short_prediction_strings(0)$0" -> "short_answers(0)$0"	[label=apply];
	"short_prediction_strings(0)$0" -> "sample_submission(0)$0"	[label=apply];
	"short_prediction_strings(0)$0" -> "(0)"	[label=apply];
	"short_prediction_strings(0)$0" -> "_short(0)"	[label=apply];
	"_short(0)" -> "tensorflow-2-0-bert-yes-no-answers.ipynb"	[label=appearsIn];
	"sample_submission(0)$1" -> "sample_submission(0)$0"	[label=assignedFrom];
	"sample_submission(0)$1" -> "long_prediction_strings(0)$0"	[label=assignedFrom];
	"sample_submission(0)$2" -> "short_prediction_strings(0)$0"	[label=assignedFrom];
	"sample_submission(0)$2" -> "sample_submission(0)$1"	[label=assignedFrom];
	"sample_submission(0)$3" -> "sample_submission(0)$2"	[label=to_csv];
	"sample_submission(0)$3" -> "submission.csv(0)"	[label=to_csv];
	"submission.csv(0)" -> "tensorflow-2-0-bert-yes-no-answers.ipynb"	[label=appearsIn];
	"sample_submission(0)$4" -> "sample_submission(0)$3"	[label=head];
	"yes_answers(0)$0" -> "sample_submission(0)$4"	[label=assignedFrom];
	"yes_answers(0)$0" -> "PredictionString(0)"	[label=assignedFrom];
	"yes_answers(0)$0" -> "YES(0)"	[label=assignedFrom];
	"PredictionString(0)" -> "tensorflow-2-0-bert-yes-no-answers.ipynb"	[label=appearsIn];
	"YES(0)" -> "tensorflow-2-0-bert-yes-no-answers.ipynb"	[label=appearsIn];
	"no_answers(0)$0" -> "sample_submission(0)$4"	[label=assignedFrom];
	"no_answers(0)$0" -> "PredictionString(0)"	[label=assignedFrom];
	"no_answers(0)$0" -> "NO(0)"	[label=assignedFrom];
	"NO(0)" -> "tensorflow-2-0-bert-yes-no-answers.ipynb"	[label=appearsIn];
	"blank_answers(0)$0" -> "(0)"	[label=assignedFrom];
	"blank_answers(0)$0" -> "sample_submission(0)$4"	[label=assignedFrom];
	"blank_answers(0)$0" -> "PredictionString(0)"	[label=assignedFrom];
	"blank_answers(0)$1" -> "blank_answers(0)$0"	[label=head];
	"blank_answers(0)$2" -> "blank_answers(0)$1"	[label=count];
}
